res length 1
ele length Program
ele length ExpressionStatement
ele length AssignmentExpression
ele length ClassExpression
ele length ClassBody
ele length FieldDefinition
ele length ArrowFunctionExpression
ele length BlockStatement
ele length ReturnStatement
ele length CallExpression
ele length ObjectExpression
Logger: /windir/c/Users/presi/Documents/workspace/cs449-projects/nodeSRT/code/uppy/packages/@uppy/dashboard/src/components/FileItem/Buttons/index.js [
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 121, column: 0 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 120, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 120, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 120, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 120, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 119, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 118, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 4299,
      end: 4305,
      loc: [SourceLocation],
      name: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 118, column: 4 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 4299,
      end: 4305,
      loc: [SourceLocation],
      name: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 118, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 4299,
      end: 4305,
      loc: [SourceLocation],
      name: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 4301,
      end: 4304,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 118, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 4299,
      end: 4305,
      loc: [SourceLocation],
      name: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 4301,
      end: 4304,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 118, column: 9 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 117, column: 15 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 117, column: 14 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 116, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 116, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 4232,
      end: 4267,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 115, column: 45 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 4232,
      end: 4267,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 115, column: 45 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 4232,
      end: 4267,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4240,
      end: 4267,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 115, column: 45 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 4232,
      end: 4267,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4240,
      end: 4267,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 115, column: 45 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 4232,
      end: 4267,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4240,
      end: 4267,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 4241,
      end: 4266,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 115, column: 44 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 4232,
      end: 4267,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4240,
      end: 4267,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 4241,
      end: 4266,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 115, column: 44 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 4232,
      end: 4267,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4240,
      end: 4267,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 4241,
      end: 4266,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 4132,
      end: 4278,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 4232,
      end: 4267,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4240,
      end: 4267,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 4241,
      end: 4266,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 4247,
      end: 4266,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'Literal',
      start: 4289,
      end: 4293,
      loc: [SourceLocation],
      value: null,
      raw: 'null'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 117, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 4102,
      end: 4294,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'ConditionalExpression',
      start: 4103,
      end: 4293,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: [Node]
    },
    Node {
      type: 'Literal',
      start: 4289,
      end: 4293,
      loc: [SourceLocation],
      value: null,
      raw: 'null'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 117, column: 14 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXText',
      start: 4294,
      end: 4299,
      loc: [SourceLocation],
      value: '\n    ',
      raw: '\n    '
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 117, column: 15 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 4312,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 3382,
      end: 4311,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 3399,
      end: 4311,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 3424,
      end: 4311,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 3627,
      end: 4309,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 3640,
      end: 4305,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXText',
      start: 4294,
      end: 4299,
      loc: [SourceLocation],
      value: '\n    ',
      raw: '\n    '
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 118, column: 4 }
  ]
]
Logger: /windir/c/Users/presi/Documents/workspace/cs449-projects/nodeSRT/code/uppy/packages/@uppy/dashboard/src/components/FileItem/index.js [
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 115, column: 0 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 114, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 114, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 114, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 114, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 113, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 113, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 113, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 112, column: 5 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 111, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 3619,
      end: 3625,
      loc: [SourceLocation],
      name: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 111, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 3619,
      end: 3625,
      loc: [SourceLocation],
      name: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 111, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 3619,
      end: 3625,
      loc: [SourceLocation],
      name: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 3621,
      end: 3624,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 111, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 3619,
      end: 3625,
      loc: [SourceLocation],
      name: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 3621,
      end: 3624,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 111, column: 11 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 110, column: 14 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 3606,
      end: 3612,
      loc: [SourceLocation],
      name: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 110, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 3606,
      end: 3612,
      loc: [SourceLocation],
      name: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 110, column: 14 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 3606,
      end: 3612,
      loc: [SourceLocation],
      name: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 3608,
      end: 3611,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 110, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 3606,
      end: 3612,
      loc: [SourceLocation],
      name: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 3608,
      end: 3611,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 110, column: 13 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 3102,
      end: 3597,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 109, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 3102,
      end: 3597,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 3102,
      end: 3597,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 109, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 3102,
      end: 3597,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 3102,
      end: 3597,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXText',
      start: 3597,
      end: 3606,
      loc: [SourceLocation],
      value: '\n        ',
      raw: '\n        '
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 109, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXElement',
      start: 2816,
      end: 3612,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXText',
      start: 3597,
      end: 3606,
      loc: [SourceLocation],
      value: '\n        ',
      raw: '\n        '
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 110, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXText',
      start: 3612,
      end: 3619,
      loc: [SourceLocation],
      value: '\n      ',
      raw: '\n      '
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 110, column: 14 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 3638,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 316,
      end: 3637,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 333,
      end: 3637,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 366,
      end: 3637,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'MethodDefinition',
      start: 743,
      end: 3635,
      loc: [SourceLocation],
      kind: 'method',
      static: false,
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'FunctionExpression',
      start: 750,
      end: 3635,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 753,
      end: 3635,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 1760,
      end: 3631,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 1775,
      end: 3625,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXText',
      start: 3612,
      end: 3619,
      loc: [SourceLocation],
      value: '\n      ',
      raw: '\n      '
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 111, column: 6 }
  ]
]
Logger: /windir/c/Users/presi/Documents/workspace/cs449-projects/nodeSRT/code/uppy/packages/@uppy/dashboard/src/components/FileList.js [
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 95, column: 0 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 94, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 94, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 94, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 94, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 936,
      end: 2004,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 64, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 936,
      end: 2004,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 942,
      end: 2004,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 64, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 936,
      end: 2004,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 942,
      end: 2004,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'ObjectExpression',
      start: 954,
      end: 2004,
      loc: [SourceLocation],
      properties: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 64, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 936,
      end: 2004,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 942,
      end: 2004,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'ObjectExpression',
      start: 954,
      end: 2004,
      loc: [SourceLocation],
      properties: [Array]
    }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 2 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 66 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 66 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'Identifier',
      start: 2014,
      end: 2018,
      loc: [SourceLocation],
      name: 'rows'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'Identifier',
      start: 2014,
      end: 2018,
      loc: [SourceLocation],
      name: 'rows'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 15 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 66 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'Identifier',
      start: 2021,
      end: 2027,
      loc: [SourceLocation],
      name: 'chunks'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 15 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'Identifier',
      start: 2021,
      end: 2027,
      loc: [SourceLocation],
      name: 'chunks'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 21 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 22 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 46 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2028,
      end: 2039,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 22 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2028,
      end: 2039,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 33 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2028,
      end: 2039,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2028,
      end: 2034,
      loc: [SourceLocation],
      name: 'Object'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 22 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2028,
      end: 2039,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2028,
      end: 2034,
      loc: [SourceLocation],
      name: 'Object'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 28 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2028,
      end: 2039,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2035,
      end: 2039,
      loc: [SourceLocation],
      name: 'keys'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 29 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2028,
      end: 2039,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2035,
      end: 2039,
      loc: [SourceLocation],
      name: 'keys'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 33 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2040,
      end: 2051,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 34 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2040,
      end: 2051,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 45 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2040,
      end: 2051,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2040,
      end: 2045,
      loc: [SourceLocation],
      name: 'props'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 34 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2040,
      end: 2051,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2040,
      end: 2045,
      loc: [SourceLocation],
      name: 'props'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 39 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2040,
      end: 2051,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2046,
      end: 2051,
      loc: [SourceLocation],
      name: 'files'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 40 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'CallExpression',
      start: 2028,
      end: 2052,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2040,
      end: 2051,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2046,
      end: 2051,
      loc: [SourceLocation],
      name: 'files'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 45 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2054,
      end: 2071,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 48 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2054,
      end: 2071,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 65 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2054,
      end: 2071,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2054,
      end: 2059,
      loc: [SourceLocation],
      name: 'props'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 48 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2054,
      end: 2071,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2054,
      end: 2059,
      loc: [SourceLocation],
      name: 'props'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 53 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2054,
      end: 2071,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2060,
      end: 2071,
      loc: [SourceLocation],
      name: 'itemsPerRow'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 54 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'VariableDeclaration',
      start: 2008,
      end: 2072,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    Node {
      type: 'VariableDeclarator',
      start: 2014,
      end: 2072,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2021,
      end: 2072,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2054,
      end: 2071,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2060,
      end: 2071,
      loc: [SourceLocation],
      name: 'itemsPerRow'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 66, column: 65 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 68, column: 2 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 83, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'Identifier',
      start: 2085,
      end: 2094,
      loc: [SourceLocation],
      name: 'renderRow'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 68, column: 11 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'Identifier',
      start: 2085,
      end: 2094,
      loc: [SourceLocation],
      name: 'renderRow'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 68, column: 20 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'Identifier',
      start: 2096,
      end: 2099,
      loc: [SourceLocation],
      name: 'row'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 68, column: 22 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'Identifier',
      start: 2096,
      end: 2099,
      loc: [SourceLocation],
      name: 'row'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 68, column: 25 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 68, column: 27 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 83, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 69, column: 4 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 82, column: 5 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 81, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 44 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2346,
      end: 2365,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 11 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2346,
      end: 2365,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 30 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2346,
      end: 2365,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 2346,
      end: 2350,
      loc: [SourceLocation],
      name: 'role'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 11 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2346,
      end: 2365,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 2346,
      end: 2350,
      loc: [SourceLocation],
      name: 'role'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 15 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2346,
      end: 2365,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'Literal',
      start: 2351,
      end: 2365,
      loc: [SourceLocation],
      value: 'presentation',
      raw: '"presentation"'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 16 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2346,
      end: 2365,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'Literal',
      start: 2351,
      end: 2365,
      loc: [SourceLocation],
      value: 'presentation',
      raw: '"presentation"'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 30 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 31 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 43 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 2366,
      end: 2369,
      loc: [SourceLocation],
      name: 'key'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 31 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 2366,
      end: 2369,
      loc: [SourceLocation],
      name: 'key'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 34 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2370,
      end: 2378,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 35 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2370,
      end: 2378,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 43 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2370,
      end: 2378,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 2371,
      end: 2377,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: true
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 36 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2370,
      end: 2378,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 2371,
      end: 2377,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: true
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 42 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2370,
      end: 2378,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 2371,
      end: 2377,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: true
    },
    Node {
      type: 'Identifier',
      start: 2371,
      end: 2374,
      loc: [SourceLocation],
      name: 'row'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 36 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2370,
      end: 2378,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 2371,
      end: 2377,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: true
    },
    Node {
      type: 'Identifier',
      start: 2371,
      end: 2374,
      loc: [SourceLocation],
      name: 'row'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 39 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2370,
      end: 2378,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 2371,
      end: 2377,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: true
    },
    Node {
      type: 'Literal',
      start: 2375,
      end: 2376,
      loc: [SourceLocation],
      value: 0,
      raw: '0'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 40 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXAttribute',
      start: 2366,
      end: 2378,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2370,
      end: 2378,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 2371,
      end: 2377,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: true
    },
    Node {
      type: 'Literal',
      start: 2375,
      end: 2376,
      loc: [SourceLocation],
      value: 0,
      raw: '0'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 41 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXIdentifier',
      start: 2342,
      end: 2345,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 7 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2341,
      end: 2379,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: false
    },
    Node {
      type: 'JSXIdentifier',
      start: 2342,
      end: 2345,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 2581,
      end: 2587,
      loc: [SourceLocation],
      name: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 81, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 2581,
      end: 2587,
      loc: [SourceLocation],
      name: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 81, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 2581,
      end: 2587,
      loc: [SourceLocation],
      name: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 2583,
      end: 2586,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 81, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXClosingElement',
      start: 2581,
      end: 2587,
      loc: [SourceLocation],
      name: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 2583,
      end: 2586,
      loc: [SourceLocation],
      name: 'div'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 81, column: 11 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXText',
      start: 2379,
      end: 2388,
      loc: [SourceLocation],
      value: '\n        ',
      raw: '\n        '
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 72, column: 44 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXText',
      start: 2379,
      end: 2388,
      loc: [SourceLocation],
      value: '\n        ',
      raw: '\n        '
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 80, column: 11 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 9 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 80, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2389,
      end: 2396,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 9 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2389,
      end: 2396,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 16 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2389,
      end: 2396,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2389,
      end: 2392,
      loc: [SourceLocation],
      name: 'row'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 9 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2389,
      end: 2396,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2389,
      end: 2392,
      loc: [SourceLocation],
      name: 'row'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2389,
      end: 2396,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2393,
      end: 2396,
      loc: [SourceLocation],
      name: 'map'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 13 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 2389,
      end: 2396,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 2393,
      end: 2396,
      loc: [SourceLocation],
      name: 'map'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 16 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 17 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 80, column: 9 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'Identifier',
      start: 2398,
      end: 2404,
      loc: [SourceLocation],
      name: 'fileID'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 18 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'Identifier',
      start: 2398,
      end: 2404,
      loc: [SourceLocation],
      name: 'fileID'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 73, column: 24 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 74, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 79, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 74, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 79, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 2443,
      end: 2455,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 75, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 2443,
      end: 2455,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 75, column: 24 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 2766,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 500,
      end: 2765,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 517,
      end: 2765,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 528,
      end: 2765,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FunctionDeclaration',
      start: 2076,
      end: 2597,
      loc: [SourceLocation],
      id: [Node],
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 2101,
      end: 2597,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 2107,
      end: 2593,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2341,
      end: 2587,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: [Node],
      children: [Array]
    },
    Node {
      type: 'JSXExpressionContainer',
      start: 2388,
      end: 2574,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 2389,
      end: 2573,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 2397,
      end: 2572,
      loc: [SourceLocation],
      id: null,
      expression: true,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'JSXElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      openingElement: [Node],
      closingElement: null,
      children: []
    },
    Node {
      type: 'JSXOpeningElement',
      start: 2421,
      end: 2562,
      loc: [SourceLocation],
      attributes: [Array],
      name: [Node],
      selfClosing: true
    },
    Node {
      type: 'JSXAttribute',
      start: 2443,
      end: 2455,
      loc: [SourceLocation],
      name: [Node],
      value: [Node]
    },
    Node {
      type: 'JSXIdentifier',
      start: 2443,
      end: 2446,
      loc: [SourceLocation],
      name: 'key'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 75, column: 12 }
  ],
  ... 81 more items
]
Logger: /windir/c/Users/presi/Documents/workspace/cs449-projects/nodeSRT/code/uppy/packages/@uppy/dashboard/src/index.js [
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 1011, column: 0 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 1010, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 1010, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 1010, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 1010, column: 1 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 25729,
      end: 30785,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 883, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 25729,
      end: 30785,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 25738,
      end: 30785,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 883, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 25729,
      end: 30785,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 25738,
      end: 30785,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 25749,
      end: 30785,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 883, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 25729,
      end: 30785,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 25738,
      end: 30785,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 25749,
      end: 30785,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 27723,
      end: 30781,
      loc: [SourceLocation],
      argument: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 882, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 25729,
      end: 30785,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 25738,
      end: 30785,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 25749,
      end: 30785,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 27723,
      end: 30781,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 27730,
      end: 30781,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 882, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 25729,
      end: 30785,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 25738,
      end: 30785,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 25749,
      end: 30785,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 27723,
      end: 30781,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 27730,
      end: 30781,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ObjectExpression',
      start: 27742,
      end: 30780,
      loc: [SourceLocation],
      properties: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 882, column: 5 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 25729,
      end: 30785,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 25738,
      end: 30785,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 25749,
      end: 30785,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ReturnStatement',
      start: 27723,
      end: 30781,
      loc: [SourceLocation],
      argument: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 27730,
      end: 30781,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ObjectExpression',
      start: 27742,
      end: 30780,
      loc: [SourceLocation],
      properties: [Array]
    }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 885, column: 2 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 891, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'Identifier',
      start: 30789,
      end: 30812,
      loc: [SourceLocation],
      name: 'discoverProviderPlugins'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 885, column: 2 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'Identifier',
      start: 30789,
      end: 30812,
      loc: [SourceLocation],
      name: 'discoverProviderPlugins'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 885, column: 25 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 885, column: 28 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 891, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 885, column: 34 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 891, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 4 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 890, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 4 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 890, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 4 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 28 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30836,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 4 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30836,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 13 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30836,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'ThisExpression',
      start: 30827,
      end: 30831,
      loc: [SourceLocation]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 4 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30836,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'ThisExpression',
      start: 30827,
      end: 30831,
      loc: [SourceLocation]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30836,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30832,
      end: 30836,
      loc: [SourceLocation],
      name: 'uppy'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 9 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30836,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30832,
      end: 30836,
      loc: [SourceLocation],
      name: 'uppy'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 13 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30837,
      end: 30851,
      loc: [SourceLocation],
      name: 'iteratePlugins'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 14 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30827,
      end: 30851,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30837,
      end: 30851,
      loc: [SourceLocation],
      name: 'iteratePlugins'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 28 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 29 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 890, column: 5 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'Identifier',
      start: 30853,
      end: 30859,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 30 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'Identifier',
      start: 30853,
      end: 30859,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 36 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 886, column: 41 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 890, column: 5 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 6 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 889, column: 7 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 92 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 49 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 34 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'Identifier',
      start: 30876,
      end: 30882,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 10 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'Identifier',
      start: 30876,
      end: 30882,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 16 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'UnaryExpression',
      start: 30886,
      end: 30900,
      loc: [SourceLocation],
      operator: '!',
      prefix: true,
      argument: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 20 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'UnaryExpression',
      start: 30886,
      end: 30900,
      loc: [SourceLocation],
      operator: '!',
      prefix: true,
      argument: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 34 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'UnaryExpression',
      start: 30886,
      end: 30900,
      loc: [SourceLocation],
      operator: '!',
      prefix: true,
      argument: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30887,
      end: 30900,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 21 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'UnaryExpression',
      start: 30886,
      end: 30900,
      loc: [SourceLocation],
      operator: '!',
      prefix: true,
      argument: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30887,
      end: 30900,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 34 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'UnaryExpression',
      start: 30886,
      end: 30900,
      loc: [SourceLocation],
      operator: '!',
      prefix: true,
      argument: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30887,
      end: 30900,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30887,
      end: 30893,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 21 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'UnaryExpression',
      start: 30886,
      end: 30900,
      loc: [SourceLocation],
      operator: '!',
      prefix: true,
      argument: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30887,
      end: 30900,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30887,
      end: 30893,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 27 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'UnaryExpression',
      start: 30886,
      end: 30900,
      loc: [SourceLocation],
      operator: '!',
      prefix: true,
      argument: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30887,
      end: 30900,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30894,
      end: 30900,
      loc: [SourceLocation],
      name: 'target'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 28 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30900,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'UnaryExpression',
      start: 30886,
      end: 30900,
      loc: [SourceLocation],
      operator: '!',
      prefix: true,
      argument: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30887,
      end: 30900,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30894,
      end: 30900,
      loc: [SourceLocation],
      name: 'target'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 34 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30904,
      end: 30915,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 38 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30904,
      end: 30915,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 49 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30904,
      end: 30915,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30904,
      end: 30910,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 38 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30904,
      end: 30915,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30904,
      end: 30910,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 44 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30904,
      end: 30915,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30911,
      end: 30915,
      loc: [SourceLocation],
      name: 'opts'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 45 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30915,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30904,
      end: 30915,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30911,
      end: 30915,
      loc: [SourceLocation],
      name: 'opts'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 49 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 53 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 92 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 53 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 71 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30930,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 53 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30930,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 64 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30930,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30919,
      end: 30925,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 53 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30930,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30919,
      end: 30925,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 59 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30930,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30926,
      end: 30930,
      loc: [SourceLocation],
      name: 'opts'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 60 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30930,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30926,
      end: 30930,
      loc: [SourceLocation],
      name: 'opts'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 64 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30931,
      end: 30937,
      loc: [SourceLocation],
      name: 'target'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 65 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30919,
      end: 30937,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30931,
      end: 30937,
      loc: [SourceLocation],
      name: 'target'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 71 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30942,
      end: 30958,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 76 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30942,
      end: 30958,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 92 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30942,
      end: 30958,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'ThisExpression',
      start: 30942,
      end: 30946,
      loc: [SourceLocation]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 76 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30942,
      end: 30958,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'ThisExpression',
      start: 30942,
      end: 30946,
      loc: [SourceLocation]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 80 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30942,
      end: 30958,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30947,
      end: 30958,
      loc: [SourceLocation],
      name: 'constructor'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 81 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'LogicalExpression',
      start: 30876,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '&&',
      right: [Node]
    },
    Node {
      type: 'BinaryExpression',
      start: 30919,
      end: 30958,
      loc: [SourceLocation],
      left: [Node],
      operator: '===',
      right: [Node]
    },
    Node {
      type: 'MemberExpression',
      start: 30942,
      end: 30958,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30947,
      end: 30958,
      loc: [SourceLocation],
      name: 'constructor'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 92 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 887, column: 94 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 889, column: 7 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 30 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 30 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30970,
      end: 30984,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30970,
      end: 30984,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 22 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30970,
      end: 30984,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'ThisExpression',
      start: 30970,
      end: 30974,
      loc: [SourceLocation]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 8 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30970,
      end: 30984,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'ThisExpression',
      start: 30970,
      end: 30974,
      loc: [SourceLocation]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 12 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30970,
      end: 30984,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30975,
      end: 30984,
      loc: [SourceLocation],
      name: 'addTarget'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 13 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'MemberExpression',
      start: 30970,
      end: 30984,
      loc: [SourceLocation],
      object: [Node],
      property: [Node],
      computed: false
    },
    Node {
      type: 'Identifier',
      start: 30975,
      end: 30984,
      loc: [SourceLocation],
      name: 'addTarget'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 22 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'Identifier',
      start: 30985,
      end: 30991,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 23 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 30789,
      end: 31011,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30815,
      end: 31011,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30821,
      end: 31011,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30827,
      end: 31007,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'ArrowFunctionExpression',
      start: 30852,
      end: 31006,
      loc: [SourceLocation],
      id: null,
      expression: false,
      generator: false,
      async: false,
      params: [Array],
      body: [Node]
    },
    Node {
      type: 'BlockStatement',
      start: 30864,
      end: 31006,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'IfStatement',
      start: 30872,
      end: 31000,
      loc: [SourceLocation],
      test: [Node],
      consequent: [Node],
      alternate: null
    },
    Node {
      type: 'BlockStatement',
      start: 30960,
      end: 31000,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'ExpressionStatement',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'CallExpression',
      start: 30970,
      end: 30992,
      loc: [SourceLocation],
      callee: [Node],
      arguments: [Array]
    },
    Node {
      type: 'Identifier',
      start: 30985,
      end: 30991,
      loc: [SourceLocation],
      name: 'plugin'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 888, column: 29 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 31015,
      end: 34076,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 893, column: 2 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 31015,
      end: 34076,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 977, column: 3 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 31015,
      end: 34076,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'Identifier',
      start: 31015,
      end: 31022,
      loc: [SourceLocation],
      name: 'install'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 893, column: 2 }
  ],
  [
    Node {
      type: 'Program',
      start: 0,
      end: 35078,
      loc: [SourceLocation],
      body: [Array],
      sourceType: 'module'
    },
    Node {
      type: 'ExpressionStatement',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      expression: [Node]
    },
    Node {
      type: 'AssignmentExpression',
      start: 1438,
      end: 35077,
      loc: [SourceLocation],
      operator: '=',
      left: [Node],
      right: [Node]
    },
    Node {
      type: 'ClassExpression',
      start: 1455,
      end: 35077,
      loc: [SourceLocation],
      id: [Node],
      superClass: [Node],
      body: [Node]
    },
    Node {
      type: 'ClassBody',
      start: 1486,
      end: 35077,
      loc: [SourceLocation],
      body: [Array]
    },
    Node {
      type: 'FieldDefinition',
      start: 31015,
      end: 34076,
      loc: [SourceLocation],
      computed: false,
      key: [Node],
      value: [Node]
    },
    Node {
      type: 'Identifier',
      start: 31015,
      end: 31022,
      loc: [SourceLocation],
      name: 'install'
    },
    SourceLocation { start: [Position], end: [Position] },
    Position { line: 893, column: 9 }
  ],
  ... 1086 more items
]
Logger: /windir/c/Users/presi/Documents/workspace/cs449-projects/nodeSRT/code/uppy/website/src/docs/dashboard.md undefined
