const SRTlib = require('SRT-util');

(function (f) {
    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"emptyKey","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

  if (typeof exports === "object" && typeof module !== "undefined") {
    module.exports = f();
  } else if (typeof define === "function" && define.amd) {
    define([], f);
  } else {
    var g;
    if (typeof window !== "undefined") {
      g = window;
    } else if (typeof global !== "undefined") {
      g = global;
    } else if (typeof self !== "undefined") {
      g = self;
    } else {
      g = this;
    }
    g.Robodog = f();
  }
    SRTlib.send('{"type":"FUNCTIONEND","function":"emptyKey"},');

})(function () {
    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"emptyKey###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

  var define, module, exports;
    SRTlib.send('{"type":"FUNCTIONEND","function":"emptyKey###3"},');

  return (function () {
        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

    function r(e, n, t) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"r","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function o(i, f) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"o","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!n[i]) {
          if (!e[i]) {
            var c = "function" == typeof require && require;
            if (!f && c) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"o"},');

              return c(i, !0);
            }
            if (u) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"o"},');

              return u(i, !0);
            }
            var a = new Error("Cannot find module '" + i + "'");
                        SRTlib.send('{"type":"FUNCTIONEND","function":"o"},');

            throw (a.code = "MODULE_NOT_FOUND", a);
          }
          var p = n[i] = {
            exports: {}
          };
          e[i][0].call(p.exports, function (r) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"e.i.call","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var n = e[i][1][r];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"e.i.call"},');

            return o(n || r);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"e.i.call"},');

          }, p, p.exports, r, e, n, t);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"o"},');

        return n[i].exports;
                SRTlib.send('{"type":"FUNCTIONEND","function":"o","paramsNumber":2},');

      }
      for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
            SRTlib.send('{"type":"FUNCTIONEND","function":"r"},');

      return o;
            SRTlib.send('{"type":"FUNCTIONEND","function":"r","paramsNumber":3},');

    }
        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement"},');

    return r;
        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement"},');

  })()({
    1: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = after;
      function after(count, callback, err_cb) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"after","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var bail = false;
        err_cb = err_cb || noop;
        proxy.count = count;
                SRTlib.send('{"type":"FUNCTIONEND","function":"after"},');

        return count === 0 ? callback() : proxy;
        function proxy(err, result) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"proxy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (proxy.count <= 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"proxy"},');

            throw new Error('after called too many times');
          }
          --proxy.count;
          if (err) {
            bail = true;
            callback(err);
            callback = err_cb;
          } else if (proxy.count === 0 && !bail) {
            callback(null, result);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"proxy","paramsNumber":2},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"after","paramsNumber":3},');

      }
      function noop() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"noop","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"noop","paramsNumber":0},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###2"},');

    }, {}],
    2: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function (arraybuffer, start, end) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var bytes = arraybuffer.byteLength;
        start = start || 0;
        end = end || bytes;
        if (arraybuffer.slice) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports"},');

          return arraybuffer.slice(start, end);
        }
        if (start < 0) {
          start += bytes;
        }
        if (end < 0) {
          end += bytes;
        }
        if (end > bytes) {
          end = bytes;
        }
        if (start >= bytes || start >= end || bytes === 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports"},');

          return new ArrayBuffer(0);
        }
        var abv = new Uint8Array(arraybuffer);
        var result = new Uint8Array(end - start);
        for (var i = start, ii = 0; i < end; (i++, ii++)) {
          result[ii] = abv[i];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports"},');

        return result.buffer;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###3"},');

    }, {}],
    3: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = Backoff;
      function Backoff(opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Backoff","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        opts = opts || ({});
        this.ms = opts.min || 100;
        this.max = opts.max || 10000;
        this.factor = opts.factor || 2;
        this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
        this.attempts = 0;
                SRTlib.send('{"type":"FUNCTIONEND","function":"Backoff","paramsNumber":1},');

      }
      Backoff.prototype.duration = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Backoff.prototype.duration","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var ms = this.ms * Math.pow(this.factor, this.attempts++);
        if (this.jitter) {
          var rand = Math.random();
          var deviation = Math.floor(rand * this.jitter * ms);
          ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Backoff.prototype.duration"},');

        return Math.min(ms, this.max) | 0;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Backoff.prototype.duration"},');

      };
      Backoff.prototype.reset = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Backoff.prototype.reset","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.attempts = 0;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Backoff.prototype.reset"},');

      };
      Backoff.prototype.setMin = function (min) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Backoff.prototype.setMin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.ms = min;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Backoff.prototype.setMin"},');

      };
      Backoff.prototype.setMax = function (max) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Backoff.prototype.setMax","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.max = max;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Backoff.prototype.setMax"},');

      };
      Backoff.prototype.setJitter = function (jitter) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Backoff.prototype.setJitter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.jitter = jitter;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Backoff.prototype.setJitter"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###4"},');

    }, {}],
    4: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        "use strict";
        var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        var lookup = new Uint8Array(256);
        for (var i = 0; i < chars.length; i++) {
          lookup[chars.charCodeAt(i)] = i;
        }
        exports.encode = function (arraybuffer) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = "";
          for (i = 0; i < len; i += 3) {
            base64 += chars[bytes[i] >> 2];
            base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];
            base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];
            base64 += chars[bytes[i + 2] & 63];
          }
          if (len % 3 === 2) {
            base64 = base64.substring(0, base64.length - 1) + "=";
          } else if (len % 3 === 1) {
            base64 = base64.substring(0, base64.length - 2) + "==";
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encode"},');

          return base64;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encode"},');

        };
        exports.decode = function (base64) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.decode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;
          if (base64[base64.length - 1] === "=") {
            bufferLength--;
            if (base64[base64.length - 2] === "=") {
              bufferLength--;
            }
          }
          var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);
          for (i = 0; i < len; i += 4) {
            encoded1 = lookup[base64.charCodeAt(i)];
            encoded2 = lookup[base64.charCodeAt(i + 1)];
            encoded3 = lookup[base64.charCodeAt(i + 2)];
            encoded4 = lookup[base64.charCodeAt(i + 3)];
            bytes[p++] = encoded1 << 2 | encoded2 >> 4;
            bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
            bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decode"},');

          return arraybuffer;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decode"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###5"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###6"},');

    }, {}],
    5: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      exports.byteLength = byteLength;
      exports.toByteArray = toByteArray;
      exports.fromByteArray = fromByteArray;
      var lookup = [];
      var revLookup = [];
      var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
      var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
      for (var i = 0, len = code.length; i < len; ++i) {
        lookup[i] = code[i];
        revLookup[code.charCodeAt(i)] = i;
      }
      revLookup[('-').charCodeAt(0)] = 62;
      revLookup[('_').charCodeAt(0)] = 63;
      function getLens(b64) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getLens","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var len = b64.length;
        if (len % 4 > 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getLens"},');

          throw new Error('Invalid string. Length must be a multiple of 4');
        }
        var validLen = b64.indexOf('=');
        if (validLen === -1) validLen = len;
        var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
                SRTlib.send('{"type":"FUNCTIONEND","function":"getLens"},');

        return [validLen, placeHoldersLen];
                SRTlib.send('{"type":"FUNCTIONEND","function":"getLens","paramsNumber":1},');

      }
      function byteLength(b64) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"byteLength","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var lens = getLens(b64);
        var validLen = lens[0];
        var placeHoldersLen = lens[1];
                SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
                SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength","paramsNumber":1},');

      }
      function _byteLength(b64, validLen, placeHoldersLen) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_byteLength","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_byteLength"},');

        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_byteLength","paramsNumber":3},');

      }
      function toByteArray(b64) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"toByteArray","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var tmp;
        var lens = getLens(b64);
        var validLen = lens[0];
        var placeHoldersLen = lens[1];
        var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
        var curByte = 0;
        var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
        var i;
        for (i = 0; i < len; i += 4) {
          tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
          arr[curByte++] = tmp >> 16 & 0xFF;
          arr[curByte++] = tmp >> 8 & 0xFF;
          arr[curByte++] = tmp & 0xFF;
        }
        if (placeHoldersLen === 2) {
          tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
          arr[curByte++] = tmp & 0xFF;
        }
        if (placeHoldersLen === 1) {
          tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
          arr[curByte++] = tmp >> 8 & 0xFF;
          arr[curByte++] = tmp & 0xFF;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"toByteArray"},');

        return arr;
                SRTlib.send('{"type":"FUNCTIONEND","function":"toByteArray","paramsNumber":1},');

      }
      function tripletToBase64(num) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"tripletToBase64","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"tripletToBase64"},');

        return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
                SRTlib.send('{"type":"FUNCTIONEND","function":"tripletToBase64","paramsNumber":1},');

      }
      function encodeChunk(uint8, start, end) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeChunk","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var tmp;
        var output = [];
        for (var i = start; i < end; i += 3) {
          tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
          output.push(tripletToBase64(tmp));
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeChunk"},');

        return output.join('');
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeChunk","paramsNumber":3},');

      }
      function fromByteArray(uint8) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fromByteArray","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var tmp;
        var len = uint8.length;
        var extraBytes = len % 3;
        var parts = [];
        var maxChunkLength = 16383;
        for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
          parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
        }
        if (extraBytes === 1) {
          tmp = uint8[len - 1];
          parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
        } else if (extraBytes === 2) {
          tmp = (uint8[len - 2] << 8) + uint8[len - 1];
          parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"fromByteArray"},');

        return parts.join('');
                SRTlib.send('{"type":"FUNCTIONEND","function":"fromByteArray","paramsNumber":1},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###7"},');

    }, {}],
    6: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;
      var blobSupported = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.blobSupported","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        try {
          var a = new Blob(['hi']);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.blobSupported"},');

          return a.size === 2;
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.blobSupported"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.blobSupported"},');

      })();
      var blobSupportsArrayBufferView = blobSupported && (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.blobSupportsArrayBufferView","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        try {
          var b = new Blob([new Uint8Array([1, 2])]);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.blobSupportsArrayBufferView"},');

          return b.size === 2;
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.blobSupportsArrayBufferView"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.blobSupportsArrayBufferView"},');

      })();
      var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;
      function mapArrayBufferViews(ary) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"mapArrayBufferViews","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"mapArrayBufferViews"},');

        return ary.map(function (chunk) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.ary.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (chunk.buffer instanceof ArrayBuffer) {
            var buf = chunk.buffer;
            if (chunk.byteLength !== buf.byteLength) {
              var copy = new Uint8Array(chunk.byteLength);
              copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
              buf = copy.buffer;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.ary.map"},');

            return buf;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.ary.map"},');

          return chunk;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.ary.map"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"mapArrayBufferViews","paramsNumber":1},');

      }
      function BlobBuilderConstructor(ary, options) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"BlobBuilderConstructor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        options = options || ({});
        var bb = new BlobBuilder();
        mapArrayBufferViews(ary).forEach(function (part) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"mapArrayBufferViews.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          bb.append(part);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"mapArrayBufferViews.forEach"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"BlobBuilderConstructor"},');

        return options.type ? bb.getBlob(options.type) : bb.getBlob();
                SRTlib.send('{"type":"FUNCTIONEND","function":"BlobBuilderConstructor","paramsNumber":2},');

      }
      ;
      function BlobConstructor(ary, options) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"BlobConstructor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"BlobConstructor"},');

        return new Blob(mapArrayBufferViews(ary), options || ({}));
                SRTlib.send('{"type":"FUNCTIONEND","function":"BlobConstructor","paramsNumber":2},');

      }
      ;
      if (typeof Blob !== 'undefined') {
        BlobBuilderConstructor.prototype = Blob.prototype;
        BlobConstructor.prototype = Blob.prototype;
      }
      module.exports = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (blobSupported) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###2"},');

          return blobSupportsArrayBufferView ? Blob : BlobConstructor;
        } else if (blobBuilderSupported) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###2"},');

          return BlobBuilderConstructor;
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###2"},');

          return undefined;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###2"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###8"},');

    }, {}],
    7: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###9"},');

    }, {}],
    8: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (Buffer) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        'use strict';
        var base64 = require('base64-js');
        var ieee754 = require('ieee754');
        exports.Buffer = Buffer;
        exports.SlowBuffer = SlowBuffer;
        exports.INSPECT_MAX_BYTES = 50;
        var K_MAX_LENGTH = 0x7fffffff;
        exports.kMaxLength = K_MAX_LENGTH;
        Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();
        if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {
          console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');
        }
        function typedArraySupport() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"typedArraySupport","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          try {
            var arr = new Uint8Array(1);
            arr.__proto__ = {
              __proto__: Uint8Array.prototype,
              foo: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"arr.__proto__.foo","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"arr.__proto__.foo"},');

                return 42;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"arr.__proto__.foo"},');

              }
            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"typedArraySupport"},');

            return arr.foo() === 42;
          } catch (e) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"typedArraySupport"},');

            return false;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"typedArraySupport","paramsNumber":0},');

        }
        Object.defineProperty(Buffer.prototype, 'parent', {
          enumerable: true,
          get: function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Object.defineProperty.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (!Buffer.isBuffer(this)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Object.defineProperty.get"},');

              return undefined;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Object.defineProperty.get"},');

            return this.buffer;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Object.defineProperty.get"},');

          }
        });
        Object.defineProperty(Buffer.prototype, 'offset', {
          enumerable: true,
          get: function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Object.defineProperty.get###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (!Buffer.isBuffer(this)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Object.defineProperty.get###2"},');

              return undefined;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Object.defineProperty.get###2"},');

            return this.byteOffset;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Object.defineProperty.get###2"},');

          }
        });
        function createBuffer(length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (length > K_MAX_LENGTH) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"createBuffer"},');

            throw new RangeError('The value "' + length + '" is invalid for option "size"');
          }
          var buf = new Uint8Array(length);
          buf.__proto__ = Buffer.prototype;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"createBuffer"},');

          return buf;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"createBuffer","paramsNumber":1},');

        }
        function Buffer(arg, encodingOrOffset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Buffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (typeof arg === 'number') {
            if (typeof encodingOrOffset === 'string') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Buffer"},');

              throw new TypeError('The "string" argument must be of type string. Received type number');
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Buffer"},');

            return allocUnsafe(arg);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Buffer"},');

          return from(arg, encodingOrOffset, length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Buffer","paramsNumber":3},');

        }
        if (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {
          Object.defineProperty(Buffer, Symbol.species, {
            value: null,
            configurable: true,
            enumerable: false,
            writable: false
          });
        }
        Buffer.poolSize = 8192;
        function from(value, encodingOrOffset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"from","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (typeof value === 'string') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"from"},');

            return fromString(value, encodingOrOffset);
          }
          if (ArrayBuffer.isView(value)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"from"},');

            return fromArrayLike(value);
          }
          if (value == null) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"from"},');

            throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);
          }
          if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"from"},');

            return fromArrayBuffer(value, encodingOrOffset, length);
          }
          if (typeof value === 'number') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"from"},');

            throw new TypeError('The "value" argument must not be of type number. Received type number');
          }
          var valueOf = value.valueOf && value.valueOf();
          if (valueOf != null && valueOf !== value) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"from"},');

            return Buffer.from(valueOf, encodingOrOffset, length);
          }
          var b = fromObject(value);
          if (b) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"from"},');

            return b;
          }
          if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"from"},');

            return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"from"},');

          throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"from","paramsNumber":3},');

        }
        Buffer.from = function (value, encodingOrOffset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.from","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.from"},');

          return from(value, encodingOrOffset, length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.from"},');

        };
        Buffer.prototype.__proto__ = Uint8Array.prototype;
        Buffer.__proto__ = Uint8Array;
        function assertSize(size) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"assertSize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (typeof size !== 'number') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"assertSize"},');

            throw new TypeError('"size" argument must be of type number');
          } else if (size < 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"assertSize"},');

            throw new RangeError('The value "' + size + '" is invalid for option "size"');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"assertSize","paramsNumber":1},');

        }
        function alloc(size, fill, encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"alloc","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          assertSize(size);
          if (size <= 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"alloc"},');

            return createBuffer(size);
          }
          if (fill !== undefined) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"alloc"},');

            return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"alloc"},');

          return createBuffer(size);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"alloc","paramsNumber":3},');

        }
        Buffer.alloc = function (size, fill, encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.alloc","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.alloc"},');

          return alloc(size, fill, encoding);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.alloc"},');

        };
        function allocUnsafe(size) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"allocUnsafe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          assertSize(size);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"allocUnsafe"},');

          return createBuffer(size < 0 ? 0 : checked(size) | 0);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"allocUnsafe","paramsNumber":1},');

        }
        Buffer.allocUnsafe = function (size) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.allocUnsafe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.allocUnsafe"},');

          return allocUnsafe(size);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.allocUnsafe"},');

        };
        Buffer.allocUnsafeSlow = function (size) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.allocUnsafeSlow","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.allocUnsafeSlow"},');

          return allocUnsafe(size);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.allocUnsafeSlow"},');

        };
        function fromString(string, encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fromString","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (typeof encoding !== 'string' || encoding === '') {
            encoding = 'utf8';
          }
          if (!Buffer.isEncoding(encoding)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"fromString"},');

            throw new TypeError('Unknown encoding: ' + encoding);
          }
          var length = byteLength(string, encoding) | 0;
          var buf = createBuffer(length);
          var actual = buf.write(string, encoding);
          if (actual !== length) {
            buf = buf.slice(0, actual);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fromString"},');

          return buf;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fromString","paramsNumber":2},');

        }
        function fromArrayLike(array) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fromArrayLike","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var length = array.length < 0 ? 0 : checked(array.length) | 0;
          var buf = createBuffer(length);
          for (var i = 0; i < length; i += 1) {
            buf[i] = array[i] & 255;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fromArrayLike"},');

          return buf;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fromArrayLike","paramsNumber":1},');

        }
        function fromArrayBuffer(array, byteOffset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fromArrayBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (byteOffset < 0 || array.byteLength < byteOffset) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"fromArrayBuffer"},');

            throw new RangeError('"offset" is outside of buffer bounds');
          }
          if (array.byteLength < byteOffset + (length || 0)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"fromArrayBuffer"},');

            throw new RangeError('"length" is outside of buffer bounds');
          }
          var buf;
          if (byteOffset === undefined && length === undefined) {
            buf = new Uint8Array(array);
          } else if (length === undefined) {
            buf = new Uint8Array(array, byteOffset);
          } else {
            buf = new Uint8Array(array, byteOffset, length);
          }
          buf.__proto__ = Buffer.prototype;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fromArrayBuffer"},');

          return buf;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fromArrayBuffer","paramsNumber":3},');

        }
        function fromObject(obj) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fromObject","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (Buffer.isBuffer(obj)) {
            var len = checked(obj.length) | 0;
            var buf = createBuffer(len);
            if (buf.length === 0) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"fromObject"},');

              return buf;
            }
            obj.copy(buf, 0, 0, len);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"fromObject"},');

            return buf;
          }
          if (obj.length !== undefined) {
            if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"fromObject"},');

              return createBuffer(0);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"fromObject"},');

            return fromArrayLike(obj);
          }
          if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"fromObject"},');

            return fromArrayLike(obj.data);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fromObject","paramsNumber":1},');

        }
        function checked(length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"checked","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (length >= K_MAX_LENGTH) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"checked"},');

            throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"checked"},');

          return length | 0;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"checked","paramsNumber":1},');

        }
        function SlowBuffer(length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"SlowBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (+length != length) {
            length = 0;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"SlowBuffer"},');

          return Buffer.alloc(+length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"SlowBuffer","paramsNumber":1},');

        }
        Buffer.isBuffer = function isBuffer(b) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.isBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.isBuffer"},');

          return b != null && b._isBuffer === true && b !== Buffer.prototype;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.isBuffer"},');

        };
        Buffer.compare = function compare(a, b) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.compare","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
          if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);
          if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.compare"},');

            throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          }
          if (a === b) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.compare"},');

            return 0;
          }
          var x = a.length;
          var y = b.length;
          for (var i = 0, len = Math.min(x, y); i < len; ++i) {
            if (a[i] !== b[i]) {
              x = a[i];
              y = b[i];
              break;
            }
          }
          if (x < y) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.compare"},');

            return -1;
          }
          if (y < x) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.compare"},');

            return 1;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.compare"},');

          return 0;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.compare"},');

        };
        Buffer.isEncoding = function isEncoding(encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.isEncoding","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          switch (String(encoding).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.isEncoding"},');

              return true;
            default:
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.isEncoding"},');

              return false;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.isEncoding"},');

        };
        Buffer.concat = function concat(list, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.concat","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!Array.isArray(list)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.concat"},');

            throw new TypeError('"list" argument must be an Array of Buffers');
          }
          if (list.length === 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.concat"},');

            return Buffer.alloc(0);
          }
          var i;
          if (length === undefined) {
            length = 0;
            for (i = 0; i < list.length; ++i) {
              length += list[i].length;
            }
          }
          var buffer = Buffer.allocUnsafe(length);
          var pos = 0;
          for (i = 0; i < list.length; ++i) {
            var buf = list[i];
            if (isInstance(buf, Uint8Array)) {
              buf = Buffer.from(buf);
            }
            if (!Buffer.isBuffer(buf)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.concat"},');

              throw new TypeError('"list" argument must be an Array of Buffers');
            }
            buf.copy(buffer, pos);
            pos += buf.length;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.concat"},');

          return buffer;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.concat"},');

        };
        function byteLength(string, encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"byteLength","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (Buffer.isBuffer(string)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

            return string.length;
          }
          if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

            return string.byteLength;
          }
          if (typeof string !== 'string') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

            throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);
          }
          var len = string.length;
          var mustMatch = arguments.length > 2 && arguments[2] === true;
          if (!mustMatch && len === 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

            return 0;
          }
          var loweredCase = false;
          for (; ; ) {
            switch (encoding) {
              case 'ascii':
              case 'latin1':
              case 'binary':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

                return len;
              case 'utf8':
              case 'utf-8':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

                return utf8ToBytes(string).length;
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

                return len * 2;
              case 'hex':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

                return len >>> 1;
              case 'base64':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

                return base64ToBytes(string).length;
              default:
                if (loweredCase) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength"},');

                  return mustMatch ? -1 : utf8ToBytes(string).length;
                }
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"byteLength","paramsNumber":2},');

        }
        Buffer.byteLength = byteLength;
        function slowToString(encoding, start, end) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"slowToString","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var loweredCase = false;
          if (start === undefined || start < 0) {
            start = 0;
          }
          if (start > this.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

            return '';
          }
          if (end === undefined || end > this.length) {
            end = this.length;
          }
          if (end <= 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

            return '';
          }
          end >>>= 0;
          start >>>= 0;
          if (end <= start) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

            return '';
          }
          if (!encoding) encoding = 'utf8';
          while (true) {
            switch (encoding) {
              case 'hex':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

                return hexSlice(this, start, end);
              case 'utf8':
              case 'utf-8':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

                return utf8Slice(this, start, end);
              case 'ascii':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

                return asciiSlice(this, start, end);
              case 'latin1':
              case 'binary':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

                return latin1Slice(this, start, end);
              case 'base64':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

                return base64Slice(this, start, end);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

                return utf16leSlice(this, start, end);
              default:
                if (loweredCase) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString"},');

                  throw new TypeError('Unknown encoding: ' + encoding);
                }
                encoding = (encoding + '').toLowerCase();
                loweredCase = true;
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"slowToString","paramsNumber":3},');

        }
        Buffer.prototype._isBuffer = true;
        function swap(b, n, m) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"swap","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var i = b[n];
          b[n] = b[m];
          b[m] = i;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"swap","paramsNumber":3},');

        }
        Buffer.prototype.swap16 = function swap16() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.swap16","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var len = this.length;
          if (len % 2 !== 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.swap16"},');

            throw new RangeError('Buffer size must be a multiple of 16-bits');
          }
          for (var i = 0; i < len; i += 2) {
            swap(this, i, i + 1);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.swap16"},');

          return this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.swap16"},');

        };
        Buffer.prototype.swap32 = function swap32() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.swap32","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var len = this.length;
          if (len % 4 !== 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.swap32"},');

            throw new RangeError('Buffer size must be a multiple of 32-bits');
          }
          for (var i = 0; i < len; i += 4) {
            swap(this, i, i + 3);
            swap(this, i + 1, i + 2);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.swap32"},');

          return this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.swap32"},');

        };
        Buffer.prototype.swap64 = function swap64() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.swap64","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var len = this.length;
          if (len % 8 !== 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.swap64"},');

            throw new RangeError('Buffer size must be a multiple of 64-bits');
          }
          for (var i = 0; i < len; i += 8) {
            swap(this, i, i + 7);
            swap(this, i + 1, i + 6);
            swap(this, i + 2, i + 5);
            swap(this, i + 3, i + 4);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.swap64"},');

          return this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.swap64"},');

        };
        Buffer.prototype.toString = function toString() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.toString","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var length = this.length;
          if (length === 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.toString"},');

            return '';
          }
          if (arguments.length === 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.toString"},');

            return utf8Slice(this, 0, length);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.toString"},');

          return slowToString.apply(this, arguments);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.toString"},');

        };
        Buffer.prototype.toLocaleString = Buffer.prototype.toString;
        Buffer.prototype.equals = function equals(b) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.equals","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (!Buffer.isBuffer(b)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.equals"},');

            throw new TypeError('Argument must be a Buffer');
          }
          if (this === b) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.equals"},');

            return true;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.equals"},');

          return Buffer.compare(this, b) === 0;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.equals"},');

        };
        Buffer.prototype.inspect = function inspect() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.inspect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var str = '';
          var max = exports.INSPECT_MAX_BYTES;
          str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
          if (this.length > max) str += ' ... ';
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.inspect"},');

          return '<Buffer ' + str + '>';
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.inspect"},');

        };
        Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.compare","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

          if (isInstance(target, Uint8Array)) {
            target = Buffer.from(target, target.offset, target.byteLength);
          }
          if (!Buffer.isBuffer(target)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

            throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);
          }
          if (start === undefined) {
            start = 0;
          }
          if (end === undefined) {
            end = target ? target.length : 0;
          }
          if (thisStart === undefined) {
            thisStart = 0;
          }
          if (thisEnd === undefined) {
            thisEnd = this.length;
          }
          if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

            throw new RangeError('out of range index');
          }
          if (thisStart >= thisEnd && start >= end) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

            return 0;
          }
          if (thisStart >= thisEnd) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

            return -1;
          }
          if (start >= end) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

            return 1;
          }
          start >>>= 0;
          end >>>= 0;
          thisStart >>>= 0;
          thisEnd >>>= 0;
          if (this === target) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

            return 0;
          }
          var x = thisEnd - thisStart;
          var y = end - start;
          var len = Math.min(x, y);
          var thisCopy = this.slice(thisStart, thisEnd);
          var targetCopy = target.slice(start, end);
          for (var i = 0; i < len; ++i) {
            if (thisCopy[i] !== targetCopy[i]) {
              x = thisCopy[i];
              y = targetCopy[i];
              break;
            }
          }
          if (x < y) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

            return -1;
          }
          if (y < x) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

            return 1;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

          return 0;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.compare"},');

        };
        function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"bidirectionalIndexOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

          if (buffer.length === 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"bidirectionalIndexOf"},');

            return -1;
          }
          if (typeof byteOffset === 'string') {
            encoding = byteOffset;
            byteOffset = 0;
          } else if (byteOffset > 0x7fffffff) {
            byteOffset = 0x7fffffff;
          } else if (byteOffset < -0x80000000) {
            byteOffset = -0x80000000;
          }
          byteOffset = +byteOffset;
          if (numberIsNaN(byteOffset)) {
            byteOffset = dir ? 0 : buffer.length - 1;
          }
          if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
          if (byteOffset >= buffer.length) {
            if (dir) return -1; else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

              return -1;
            }
          } else if (byteOffset < 0) {
            if (dir) byteOffset = 0; else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"bidirectionalIndexOf"},');

              return -1;
            }
          }
          if (typeof val === 'string') {
            val = Buffer.from(val, encoding);
          }
          if (Buffer.isBuffer(val)) {
            if (val.length === 0) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"bidirectionalIndexOf"},');

              return -1;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"bidirectionalIndexOf"},');

            return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
          } else if (typeof val === 'number') {
            val = val & 0xFF;
            if (typeof Uint8Array.prototype.indexOf === 'function') {
              if (dir) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"bidirectionalIndexOf"},');

                return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
              } else {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"bidirectionalIndexOf"},');

                return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"bidirectionalIndexOf"},');

            return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"bidirectionalIndexOf"},');

          throw new TypeError('val must be string, number or Buffer');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"bidirectionalIndexOf","paramsNumber":5},');

        }
        function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"arrayIndexOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

          var indexSize = 1;
          var arrLength = arr.length;
          var valLength = val.length;
          if (encoding !== undefined) {
            encoding = String(encoding).toLowerCase();
            if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
              if (arr.length < 2 || val.length < 2) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"arrayIndexOf"},');

                return -1;
              }
              indexSize = 2;
              arrLength /= 2;
              valLength /= 2;
              byteOffset /= 2;
            }
          }
          function read(buf, i) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"read","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (indexSize === 1) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"read"},');

              return buf[i];
            } else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"read"},');

              return buf.readUInt16BE(i * indexSize);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"read","paramsNumber":2},');

          }
          var i;
          if (dir) {
            var foundIndex = -1;
            for (i = byteOffset; i < arrLength; i++) {
              if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                if (foundIndex === -1) foundIndex = i;
                if (i - foundIndex + 1 === valLength) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"arrayIndexOf"},');

                  return foundIndex * indexSize;
                }
              } else {
                if (foundIndex !== -1) i -= i - foundIndex;
                foundIndex = -1;
              }
            }
          } else {
            if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
            for (i = byteOffset; i >= 0; i--) {
              var found = true;
              for (var j = 0; j < valLength; j++) {
                if (read(arr, i + j) !== read(val, j)) {
                  found = false;
                  break;
                }
              }
              if (found) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"arrayIndexOf"},');

                return i;
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"arrayIndexOf"},');

          return -1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"arrayIndexOf","paramsNumber":5},');

        }
        Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.includes","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.includes"},');

          return this.indexOf(val, byteOffset, encoding) !== -1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.includes"},');

        };
        Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.indexOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.indexOf"},');

          return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.indexOf"},');

        };
        Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.lastIndexOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.lastIndexOf"},');

          return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.lastIndexOf"},');

        };
        function hexWrite(buf, string, offset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"hexWrite","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          offset = Number(offset) || 0;
          var remaining = buf.length - offset;
          if (!length) {
            length = remaining;
          } else {
            length = Number(length);
            if (length > remaining) {
              length = remaining;
            }
          }
          var strLen = string.length;
          if (length > strLen / 2) {
            length = strLen / 2;
          }
          for (var i = 0; i < length; ++i) {
            var parsed = parseInt(string.substr(i * 2, 2), 16);
            if (numberIsNaN(parsed)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"hexWrite"},');

              return i;
            }
            buf[offset + i] = parsed;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"hexWrite"},');

          return i;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"hexWrite","paramsNumber":4},');

        }
        function utf8Write(buf, string, offset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"utf8Write","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf8Write"},');

          return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf8Write","paramsNumber":4},');

        }
        function asciiWrite(buf, string, offset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"asciiWrite","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"asciiWrite"},');

          return blitBuffer(asciiToBytes(string), buf, offset, length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"asciiWrite","paramsNumber":4},');

        }
        function latin1Write(buf, string, offset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"latin1Write","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"latin1Write"},');

          return asciiWrite(buf, string, offset, length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"latin1Write","paramsNumber":4},');

        }
        function base64Write(buf, string, offset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"base64Write","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"base64Write"},');

          return blitBuffer(base64ToBytes(string), buf, offset, length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"base64Write","paramsNumber":4},');

        }
        function ucs2Write(buf, string, offset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ucs2Write","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ucs2Write"},');

          return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ucs2Write","paramsNumber":4},');

        }
        Buffer.prototype.write = function write(string, offset, length, encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.write","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          if (offset === undefined) {
            encoding = 'utf8';
            length = this.length;
            offset = 0;
          } else if (length === undefined && typeof offset === 'string') {
            encoding = offset;
            length = this.length;
            offset = 0;
          } else if (isFinite(offset)) {
            offset = offset >>> 0;
            if (isFinite(length)) {
              length = length >>> 0;
              if (encoding === undefined) encoding = 'utf8';
            } else {
              encoding = length;
              length = undefined;
            }
          } else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

            throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
          }
          var remaining = this.length - offset;
          if (length === undefined || length > remaining) length = remaining;
          if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

            throw new RangeError('Attempt to write outside buffer bounds');
          }
          if (!encoding) encoding = 'utf8';
          var loweredCase = false;
          for (; ; ) {
            switch (encoding) {
              case 'hex':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

                return hexWrite(this, string, offset, length);
              case 'utf8':
              case 'utf-8':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

                return utf8Write(this, string, offset, length);
              case 'ascii':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

                return asciiWrite(this, string, offset, length);
              case 'latin1':
              case 'binary':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

                return latin1Write(this, string, offset, length);
              case 'base64':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

                return base64Write(this, string, offset, length);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

                return ucs2Write(this, string, offset, length);
              default:
                if (loweredCase) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

                  throw new TypeError('Unknown encoding: ' + encoding);
                }
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.write"},');

        };
        Buffer.prototype.toJSON = function toJSON() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.toJSON","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.toJSON"},');

          return {
            type: 'Buffer',
            data: Array.prototype.slice.call(this._arr || this, 0)
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.toJSON"},');

        };
        function base64Slice(buf, start, end) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"base64Slice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (start === 0 && end === buf.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"base64Slice"},');

            return base64.fromByteArray(buf);
          } else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"base64Slice"},');

            return base64.fromByteArray(buf.slice(start, end));
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"base64Slice","paramsNumber":3},');

        }
        function utf8Slice(buf, start, end) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"utf8Slice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          end = Math.min(buf.length, end);
          var res = [];
          var i = start;
          while (i < end) {
            var firstByte = buf[i];
            var codePoint = null;
            var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;
            if (i + bytesPerSequence <= end) {
              var secondByte, thirdByte, fourthByte, tempCodePoint;
              switch (bytesPerSequence) {
                case 1:
                  if (firstByte < 0x80) {
                    codePoint = firstByte;
                  }
                  break;
                case 2:
                  secondByte = buf[i + 1];
                  if ((secondByte & 0xC0) === 0x80) {
                    tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
                    if (tempCodePoint > 0x7F) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 3:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                    tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
                    if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 4:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  fourthByte = buf[i + 3];
                  if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                    tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
                    if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                      codePoint = tempCodePoint;
                    }
                  }
              }
            }
            if (codePoint === null) {
              codePoint = 0xFFFD;
              bytesPerSequence = 1;
            } else if (codePoint > 0xFFFF) {
              codePoint -= 0x10000;
              res.push(codePoint >>> 10 & 0x3FF | 0xD800);
              codePoint = 0xDC00 | codePoint & 0x3FF;
            }
            res.push(codePoint);
            i += bytesPerSequence;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf8Slice"},');

          return decodeCodePointsArray(res);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf8Slice","paramsNumber":3},');

        }
        var MAX_ARGUMENTS_LENGTH = 0x1000;
        function decodeCodePointsArray(codePoints) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"decodeCodePointsArray","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var len = codePoints.length;
          if (len <= MAX_ARGUMENTS_LENGTH) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"decodeCodePointsArray"},');

            return String.fromCharCode.apply(String, codePoints);
          }
          var res = '';
          var i = 0;
          while (i < len) {
            res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decodeCodePointsArray"},');

          return res;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decodeCodePointsArray","paramsNumber":1},');

        }
        function asciiSlice(buf, start, end) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"asciiSlice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var ret = '';
          end = Math.min(buf.length, end);
          for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i] & 0x7F);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"asciiSlice"},');

          return ret;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"asciiSlice","paramsNumber":3},');

        }
        function latin1Slice(buf, start, end) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"latin1Slice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var ret = '';
          end = Math.min(buf.length, end);
          for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i]);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"latin1Slice"},');

          return ret;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"latin1Slice","paramsNumber":3},');

        }
        function hexSlice(buf, start, end) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"hexSlice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var len = buf.length;
          if (!start || start < 0) start = 0;
          if (!end || end < 0 || end > len) end = len;
          var out = '';
          for (var i = start; i < end; ++i) {
            out += toHex(buf[i]);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"hexSlice"},');

          return out;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"hexSlice","paramsNumber":3},');

        }
        function utf16leSlice(buf, start, end) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"utf16leSlice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var bytes = buf.slice(start, end);
          var res = '';
          for (var i = 0; i < bytes.length; i += 2) {
            res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf16leSlice"},');

          return res;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf16leSlice","paramsNumber":3},');

        }
        Buffer.prototype.slice = function slice(start, end) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.slice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var len = this.length;
          start = ~~start;
          end = end === undefined ? len : ~~end;
          if (start < 0) {
            start += len;
            if (start < 0) start = 0;
          } else if (start > len) {
            start = len;
          }
          if (end < 0) {
            end += len;
            if (end < 0) end = 0;
          } else if (end > len) {
            end = len;
          }
          if (end < start) end = start;
          var newBuf = this.subarray(start, end);
          newBuf.__proto__ = Buffer.prototype;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.slice"},');

          return newBuf;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.slice"},');

        };
        function checkOffset(offset, ext, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"checkOffset","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (offset % 1 !== 0 || offset < 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"checkOffset"},');

            throw new RangeError('offset is not uint');
          }
          if (offset + ext > length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"checkOffset"},');

            throw new RangeError('Trying to access beyond buffer length');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"checkOffset","paramsNumber":3},');

        }
        Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readUIntLE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          offset = offset >>> 0;
          byteLength = byteLength >>> 0;
          if (!noAssert) checkOffset(offset, byteLength, this.length);
          var val = this[offset];
          var mul = 1;
          var i = 0;
          while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUIntLE"},');

          return val;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUIntLE"},');

        };
        Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readUIntBE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          offset = offset >>> 0;
          byteLength = byteLength >>> 0;
          if (!noAssert) {
            checkOffset(offset, byteLength, this.length);
          }
          var val = this[offset + --byteLength];
          var mul = 1;
          while (byteLength > 0 && (mul *= 0x100)) {
            val += this[offset + --byteLength] * mul;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUIntBE"},');

          return val;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUIntBE"},');

        };
        Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readUInt8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 1, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt8"},');

          return this[offset];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt8"},');

        };
        Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readUInt16LE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 2, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt16LE"},');

          return this[offset] | this[offset + 1] << 8;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt16LE"},');

        };
        Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readUInt16BE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 2, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt16BE"},');

          return this[offset] << 8 | this[offset + 1];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt16BE"},');

        };
        Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readUInt32LE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 4, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt32LE"},');

          return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt32LE"},');

        };
        Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readUInt32BE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 4, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt32BE"},');

          return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readUInt32BE"},');

        };
        Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readIntLE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          offset = offset >>> 0;
          byteLength = byteLength >>> 0;
          if (!noAssert) checkOffset(offset, byteLength, this.length);
          var val = this[offset];
          var mul = 1;
          var i = 0;
          while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
          }
          mul *= 0x80;
          if (val >= mul) val -= Math.pow(2, 8 * byteLength);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readIntLE"},');

          return val;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readIntLE"},');

        };
        Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readIntBE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          offset = offset >>> 0;
          byteLength = byteLength >>> 0;
          if (!noAssert) checkOffset(offset, byteLength, this.length);
          var i = byteLength;
          var mul = 1;
          var val = this[offset + --i];
          while (i > 0 && (mul *= 0x100)) {
            val += this[offset + --i] * mul;
          }
          mul *= 0x80;
          if (val >= mul) val -= Math.pow(2, 8 * byteLength);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readIntBE"},');

          return val;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readIntBE"},');

        };
        Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readInt8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 1, this.length);
          if (!(this[offset] & 0x80)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt8"},');

            return this[offset];
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt8"},');

          return (0xff - this[offset] + 1) * -1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt8"},');

        };
        Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readInt16LE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 2, this.length);
          var val = this[offset] | this[offset + 1] << 8;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt16LE"},');

          return val & 0x8000 ? val | 0xFFFF0000 : val;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt16LE"},');

        };
        Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readInt16BE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 2, this.length);
          var val = this[offset + 1] | this[offset] << 8;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt16BE"},');

          return val & 0x8000 ? val | 0xFFFF0000 : val;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt16BE"},');

        };
        Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readInt32LE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 4, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt32LE"},');

          return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt32LE"},');

        };
        Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readInt32BE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 4, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt32BE"},');

          return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readInt32BE"},');

        };
        Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readFloatLE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 4, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readFloatLE"},');

          return ieee754.read(this, offset, true, 23, 4);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readFloatLE"},');

        };
        Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readFloatBE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 4, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readFloatBE"},');

          return ieee754.read(this, offset, false, 23, 4);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readFloatBE"},');

        };
        Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readDoubleLE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 8, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readDoubleLE"},');

          return ieee754.read(this, offset, true, 52, 8);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readDoubleLE"},');

        };
        Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.readDoubleBE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          offset = offset >>> 0;
          if (!noAssert) checkOffset(offset, 8, this.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readDoubleBE"},');

          return ieee754.read(this, offset, false, 52, 8);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.readDoubleBE"},');

        };
        function checkInt(buf, value, offset, ext, max, min) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"checkInt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":6},`);

          if (!Buffer.isBuffer(buf)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"checkInt"},');

            throw new TypeError('"buffer" argument must be a Buffer instance');
          }
          if (value > max || value < min) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"checkInt"},');

            throw new RangeError('"value" argument is out of bounds');
          }
          if (offset + ext > buf.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"checkInt"},');

            throw new RangeError('Index out of range');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"checkInt","paramsNumber":6},');

        }
        Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeUIntLE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          value = +value;
          offset = offset >>> 0;
          byteLength = byteLength >>> 0;
          if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
          }
          var mul = 1;
          var i = 0;
          this[offset] = value & 0xFF;
          while (++i < byteLength && (mul *= 0x100)) {
            this[offset + i] = value / mul & 0xFF;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUIntLE"},');

          return offset + byteLength;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUIntLE"},');

        };
        Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeUIntBE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          value = +value;
          offset = offset >>> 0;
          byteLength = byteLength >>> 0;
          if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
          }
          var i = byteLength - 1;
          var mul = 1;
          this[offset + i] = value & 0xFF;
          while (--i >= 0 && (mul *= 0x100)) {
            this[offset + i] = value / mul & 0xFF;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUIntBE"},');

          return offset + byteLength;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUIntBE"},');

        };
        Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeUInt8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
          this[offset] = value & 0xff;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt8"},');

          return offset + 1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt8"},');

        };
        Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeUInt16LE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
          this[offset] = value & 0xff;
          this[offset + 1] = value >>> 8;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt16LE"},');

          return offset + 2;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt16LE"},');

        };
        Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeUInt16BE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
          this[offset] = value >>> 8;
          this[offset + 1] = value & 0xff;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt16BE"},');

          return offset + 2;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt16BE"},');

        };
        Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeUInt32LE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
          this[offset + 3] = value >>> 24;
          this[offset + 2] = value >>> 16;
          this[offset + 1] = value >>> 8;
          this[offset] = value & 0xff;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt32LE"},');

          return offset + 4;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt32LE"},');

        };
        Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeUInt32BE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = value & 0xff;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt32BE"},');

          return offset + 4;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeUInt32BE"},');

        };
        Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeIntLE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);
            checkInt(this, value, offset, byteLength, limit - 1, -limit);
          }
          var i = 0;
          var mul = 1;
          var sub = 0;
          this[offset] = value & 0xFF;
          while (++i < byteLength && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
              sub = 1;
            }
            this[offset + i] = (value / mul >> 0) - sub & 0xFF;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeIntLE"},');

          return offset + byteLength;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeIntLE"},');

        };
        Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeIntBE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);
            checkInt(this, value, offset, byteLength, limit - 1, -limit);
          }
          var i = byteLength - 1;
          var mul = 1;
          var sub = 0;
          this[offset + i] = value & 0xFF;
          while (--i >= 0 && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
              sub = 1;
            }
            this[offset + i] = (value / mul >> 0) - sub & 0xFF;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeIntBE"},');

          return offset + byteLength;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeIntBE"},');

        };
        Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeInt8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
          if (value < 0) value = 0xff + value + 1;
          this[offset] = value & 0xff;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt8"},');

          return offset + 1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt8"},');

        };
        Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeInt16LE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
          this[offset] = value & 0xff;
          this[offset + 1] = value >>> 8;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt16LE"},');

          return offset + 2;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt16LE"},');

        };
        Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeInt16BE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
          this[offset] = value >>> 8;
          this[offset + 1] = value & 0xff;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt16BE"},');

          return offset + 2;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt16BE"},');

        };
        Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeInt32LE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
          this[offset] = value & 0xff;
          this[offset + 1] = value >>> 8;
          this[offset + 2] = value >>> 16;
          this[offset + 3] = value >>> 24;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt32LE"},');

          return offset + 4;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt32LE"},');

        };
        Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeInt32BE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
          if (value < 0) value = 0xffffffff + value + 1;
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = value & 0xff;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt32BE"},');

          return offset + 4;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeInt32BE"},');

        };
        function checkIEEE754(buf, value, offset, ext, max, min) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"checkIEEE754","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":6},`);

          if (offset + ext > buf.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"checkIEEE754"},');

            throw new RangeError('Index out of range');
          }
          if (offset < 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"checkIEEE754"},');

            throw new RangeError('Index out of range');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"checkIEEE754","paramsNumber":6},');

        }
        function writeFloat(buf, value, offset, littleEndian, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"writeFloat","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) {
            checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
          }
          ieee754.write(buf, value, offset, littleEndian, 23, 4);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"writeFloat"},');

          return offset + 4;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"writeFloat","paramsNumber":5},');

        }
        Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeFloatLE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeFloatLE"},');

          return writeFloat(this, value, offset, true, noAssert);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeFloatLE"},');

        };
        Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeFloatBE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeFloatBE"},');

          return writeFloat(this, value, offset, false, noAssert);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeFloatBE"},');

        };
        function writeDouble(buf, value, offset, littleEndian, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"writeDouble","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

          value = +value;
          offset = offset >>> 0;
          if (!noAssert) {
            checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
          }
          ieee754.write(buf, value, offset, littleEndian, 52, 8);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"writeDouble"},');

          return offset + 8;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"writeDouble","paramsNumber":5},');

        }
        Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeDoubleLE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeDoubleLE"},');

          return writeDouble(this, value, offset, true, noAssert);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeDoubleLE"},');

        };
        Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.writeDoubleBE","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeDoubleBE"},');

          return writeDouble(this, value, offset, false, noAssert);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.writeDoubleBE"},');

        };
        Buffer.prototype.copy = function copy(target, targetStart, start, end) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.copy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          if (!Buffer.isBuffer(target)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.copy"},');

            throw new TypeError('argument should be a Buffer');
          }
          if (!start) start = 0;
          if (!end && end !== 0) end = this.length;
          if (targetStart >= target.length) targetStart = target.length;
          if (!targetStart) targetStart = 0;
          if (end > 0 && end < start) end = start;
          if (end === start) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.copy"},');

            return 0;
          }
          if (target.length === 0 || this.length === 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.copy"},');

            return 0;
          }
          if (targetStart < 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.copy"},');

            throw new RangeError('targetStart out of bounds');
          }
          if (start < 0 || start >= this.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.copy"},');

            throw new RangeError('Index out of range');
          }
          if (end < 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.copy"},');

            throw new RangeError('sourceEnd out of bounds');
          }
          if (end > this.length) end = this.length;
          if (target.length - targetStart < end - start) {
            end = target.length - targetStart + start;
          }
          var len = end - start;
          if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
            this.copyWithin(targetStart, start, end);
          } else if (this === target && start < targetStart && targetStart < end) {
            for (var i = len - 1; i >= 0; --i) {
              target[i + targetStart] = this[i + start];
            }
          } else {
            Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.copy"},');

          return len;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.copy"},');

        };
        Buffer.prototype.fill = function fill(val, start, end, encoding) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Buffer.prototype.fill","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          if (typeof val === 'string') {
            if (typeof start === 'string') {
              encoding = start;
              start = 0;
              end = this.length;
            } else if (typeof end === 'string') {
              encoding = end;
              end = this.length;
            }
            if (encoding !== undefined && typeof encoding !== 'string') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.fill"},');

              throw new TypeError('encoding must be a string');
            }
            if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.fill"},');

              throw new TypeError('Unknown encoding: ' + encoding);
            }
            if (val.length === 1) {
              var code = val.charCodeAt(0);
              if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
                val = code;
              }
            }
          } else if (typeof val === 'number') {
            val = val & 255;
          }
          if (start < 0 || this.length < start || this.length < end) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.fill"},');

            throw new RangeError('Out of range index');
          }
          if (end <= start) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.fill"},');

            return this;
          }
          start = start >>> 0;
          end = end === undefined ? this.length : end >>> 0;
          if (!val) val = 0;
          var i;
          if (typeof val === 'number') {
            for (i = start; i < end; ++i) {
              this[i] = val;
            }
          } else {
            var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
            var len = bytes.length;
            if (len === 0) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.fill"},');

              throw new TypeError('The value "' + val + '" is invalid for argument "value"');
            }
            for (i = 0; i < end - start; ++i) {
              this[i + start] = bytes[i % len];
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.fill"},');

          return this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Buffer.prototype.fill"},');

        };
        var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
        function base64clean(str) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"base64clean","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          str = str.split('=')[0];
          str = str.trim().replace(INVALID_BASE64_RE, '');
          if (str.length < 2) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"base64clean"},');

            return '';
          }
          while (str.length % 4 !== 0) {
            str = str + '=';
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"base64clean"},');

          return str;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"base64clean","paramsNumber":1},');

        }
        function toHex(n) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"toHex","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (n < 16) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"toHex"},');

            return '0' + n.toString(16);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"toHex"},');

          return n.toString(16);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"toHex","paramsNumber":1},');

        }
        function utf8ToBytes(string, units) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"utf8ToBytes","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          units = units || Infinity;
          var codePoint;
          var length = string.length;
          var leadSurrogate = null;
          var bytes = [];
          for (var i = 0; i < length; ++i) {
            codePoint = string.charCodeAt(i);
            if (codePoint > 0xD7FF && codePoint < 0xE000) {
              if (!leadSurrogate) {
                if (codePoint > 0xDBFF) {
                  if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                  continue;
                } else if (i + 1 === length) {
                  if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                  continue;
                }
                leadSurrogate = codePoint;
                continue;
              }
              if (codePoint < 0xDC00) {
                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                leadSurrogate = codePoint;
                continue;
              }
              codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
            } else if (leadSurrogate) {
              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            }
            leadSurrogate = null;
            if (codePoint < 0x80) {
              if ((units -= 1) < 0) break;
              bytes.push(codePoint);
            } else if (codePoint < 0x800) {
              if ((units -= 2) < 0) break;
              bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
            } else if (codePoint < 0x10000) {
              if ((units -= 3) < 0) break;
              bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
            } else if (codePoint < 0x110000) {
              if ((units -= 4) < 0) break;
              bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
            } else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"utf8ToBytes"},');

              throw new Error('Invalid code point');
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf8ToBytes"},');

          return bytes;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf8ToBytes","paramsNumber":2},');

        }
        function asciiToBytes(str) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"asciiToBytes","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var byteArray = [];
          for (var i = 0; i < str.length; ++i) {
            byteArray.push(str.charCodeAt(i) & 0xFF);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"asciiToBytes"},');

          return byteArray;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"asciiToBytes","paramsNumber":1},');

        }
        function utf16leToBytes(str, units) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"utf16leToBytes","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var c, hi, lo;
          var byteArray = [];
          for (var i = 0; i < str.length; ++i) {
            if ((units -= 2) < 0) break;
            c = str.charCodeAt(i);
            hi = c >> 8;
            lo = c % 256;
            byteArray.push(lo);
            byteArray.push(hi);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf16leToBytes"},');

          return byteArray;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"utf16leToBytes","paramsNumber":2},');

        }
        function base64ToBytes(str) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"base64ToBytes","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"base64ToBytes"},');

          return base64.toByteArray(base64clean(str));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"base64ToBytes","paramsNumber":1},');

        }
        function blitBuffer(src, dst, offset, length) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"blitBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          for (var i = 0; i < length; ++i) {
            if (i + offset >= dst.length || i >= src.length) break;
            dst[i + offset] = src[i];
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"blitBuffer"},');

          return i;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"blitBuffer","paramsNumber":4},');

        }
        function isInstance(obj, type) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isInstance","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isInstance"},');

          return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isInstance","paramsNumber":2},');

        }
        function numberIsNaN(obj) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"numberIsNaN","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"numberIsNaN"},');

          return obj !== obj;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"numberIsNaN","paramsNumber":1},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call"},');

      }).call(this, require("buffer").Buffer);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###10"},');

    }, {
      "base64-js": 5,
      "buffer": 8,
      "ieee754": 38
    }],
    9: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        'use strict';
        var hasOwn = ({}).hasOwnProperty;
        function classNames() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"classNames","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var classes = [];
          for (var i = 0; i < arguments.length; i++) {
            var arg = arguments[i];
            if (!arg) continue;
            var argType = typeof arg;
            if (argType === 'string' || argType === 'number') {
              classes.push(arg);
            } else if (Array.isArray(arg) && arg.length) {
              var inner = classNames.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            } else if (argType === 'object') {
              for (var key in arg) {
                if (hasOwn.call(arg, key) && arg[key]) {
                  classes.push(key);
                }
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"classNames"},');

          return classes.join(' ');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"classNames","paramsNumber":0},');

        }
        if (typeof module !== 'undefined' && module.exports) {
          classNames.default = classNames;
          module.exports = classNames;
        } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
          define('classnames', [], function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.define","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.define"},');

            return classNames;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.define"},');

          });
        } else {
          window.classNames = classNames;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###11"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###12"},');

    }, {}],
    10: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var slice = [].slice;
      module.exports = function (obj, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if ('string' == typeof fn) fn = obj[fn];
        if ('function' != typeof fn) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###3"},');

          throw new Error('bind() requires a function');
        }
        var args = slice.call(arguments, 2);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###3"},');

        return function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement"},');

          return fn.apply(obj, args.concat(slice.call(arguments)));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###3"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###13"},');

    }, {}],
    11: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###14","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      if (typeof module !== 'undefined') {
        module.exports = Emitter;
      }
      function Emitter(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Emitter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (obj) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Emitter"},');

          return mixin(obj);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"Emitter","paramsNumber":1},');

      }
      ;
      function mixin(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"mixin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        for (var key in Emitter.prototype) {
          obj[key] = Emitter.prototype[key];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"mixin"},');

        return obj;
                SRTlib.send('{"type":"FUNCTIONEND","function":"mixin","paramsNumber":1},');

      }
      Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.on.Emitter.prototype.addEventListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        this._callbacks = this._callbacks || ({});
        (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.on.Emitter.prototype.addEventListener"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.on.Emitter.prototype.addEventListener"},');

      };
      Emitter.prototype.once = function (event, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.once","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        function on() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.off(event, on);
          fn.apply(this, arguments);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"on","paramsNumber":0},');

        }
        on.fn = fn;
        this.on(event, on);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.once"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.once"},');

      };
      Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        this._callbacks = this._callbacks || ({});
        if (0 == arguments.length) {
          this._callbacks = {};
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener"},');

          return this;
        }
        var callbacks = this._callbacks['$' + event];
        if (!callbacks) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener"},');

          return this;
        }
        if (1 == arguments.length) {
          delete this._callbacks['$' + event];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener"},');

          return this;
        }
        var cb;
        for (var i = 0; i < callbacks.length; i++) {
          cb = callbacks[i];
          if (cb === fn || cb.fn === fn) {
            callbacks.splice(i, 1);
            break;
          }
        }
        if (callbacks.length === 0) {
          delete this._callbacks['$' + event];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener"},');

      };
      Emitter.prototype.emit = function (event) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.emit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this._callbacks = this._callbacks || ({});
        var args = new Array(arguments.length - 1), callbacks = this._callbacks['$' + event];
        for (var i = 1; i < arguments.length; i++) {
          args[i - 1] = arguments[i];
        }
        if (callbacks) {
          callbacks = callbacks.slice(0);
          for (var i = 0, len = callbacks.length; i < len; ++i) {
            callbacks[i].apply(this, args);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.emit"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.emit"},');

      };
      Emitter.prototype.listeners = function (event) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.listeners","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this._callbacks = this._callbacks || ({});
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.listeners"},');

        return this._callbacks['$' + event] || [];
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.listeners"},');

      };
      Emitter.prototype.hasListeners = function (event) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.hasListeners","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.hasListeners"},');

        return !!this.listeners(event).length;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.hasListeners"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###14"},');

    }, {}],
    12: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###15","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function (a, b) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var fn = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"fn"},');

        };
        fn.prototype = b.prototype;
        a.prototype = new fn();
        a.prototype.constructor = a;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###4"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###15"},');

    }, {}],
    13: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###16","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var fingerprint = require('./lib/fingerprint.js');
      var pad = require('./lib/pad.js');
      var getRandomValue = require('./lib/getRandomValue.js');
      var c = 0, blockSize = 4, base = 36, discreteValues = Math.pow(base, blockSize);
      function randomBlock() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"randomBlock","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"randomBlock"},');

        return pad((getRandomValue() * discreteValues << 0).toString(base), blockSize);
                SRTlib.send('{"type":"FUNCTIONEND","function":"randomBlock","paramsNumber":0},');

      }
      function safeCounter() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"safeCounter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        c = c < discreteValues ? c : 0;
        c++;
                SRTlib.send('{"type":"FUNCTIONEND","function":"safeCounter"},');

        return c - 1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"safeCounter","paramsNumber":0},');

      }
      function cuid() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cuid","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var letter = 'c', timestamp = new Date().getTime().toString(base), counter = pad(safeCounter().toString(base), blockSize), print = fingerprint(), random = randomBlock() + randomBlock();
                SRTlib.send('{"type":"FUNCTIONEND","function":"cuid"},');

        return letter + timestamp + counter + print + random;
                SRTlib.send('{"type":"FUNCTIONEND","function":"cuid","paramsNumber":0},');

      }
      cuid.slug = function slug() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.cuid.slug","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var date = new Date().getTime().toString(36), counter = safeCounter().toString(36).slice(-4), print = fingerprint().slice(0, 1) + fingerprint().slice(-1), random = randomBlock().slice(-2);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.slug"},');

        return date.slice(-2) + counter + print + random;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.slug"},');

      };
      cuid.isCuid = function isCuid(stringToCheck) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.cuid.isCuid","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (typeof stringToCheck !== 'string') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.isCuid"},');

          return false;
        }
        if (stringToCheck.startsWith('c')) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.isCuid"},');

          return true;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.isCuid"},');

        return false;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.isCuid"},');

      };
      cuid.isSlug = function isSlug(stringToCheck) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.cuid.isSlug","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (typeof stringToCheck !== 'string') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.isSlug"},');

          return false;
        }
        var stringLength = stringToCheck.length;
        if (stringLength >= 7 && stringLength <= 10) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.isSlug"},');

          return true;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.isSlug"},');

        return false;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.cuid.isSlug"},');

      };
      cuid.fingerprint = fingerprint;
      module.exports = cuid;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###16"},');

    }, {
      "./lib/fingerprint.js": 14,
      "./lib/getRandomValue.js": 15,
      "./lib/pad.js": 16
    }],
    14: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###17","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var pad = require('./pad.js');
      var env = typeof window === 'object' ? window : self;
      var globalCount = Object.keys(env).length;
      var mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;
      var clientId = pad((mimeTypesLength + navigator.userAgent.length).toString(36) + globalCount.toString(36), 4);
      module.exports = function fingerprint() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###5"},');

        return clientId;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###5"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###17"},');

    }, {
      "./pad.js": 16
    }],
    15: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###18","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var getRandomValue;
      var crypto = typeof window !== 'undefined' && (window.crypto || window.msCrypto) || typeof self !== 'undefined' && self.crypto;
      if (crypto) {
        var lim = Math.pow(2, 32) - 1;
        getRandomValue = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.getRandomValue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.getRandomValue"},');

          return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.getRandomValue"},');

        };
      } else {
        getRandomValue = Math.random;
      }
      module.exports = getRandomValue;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###18"},');

    }, {}],
    16: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###19","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function pad(num, size) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var s = '000000000' + num;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###6"},');

        return s.substr(s.length - size);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###6"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###19"},');

    }, {}],
    17: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###20","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = require('./socket');
      module.exports.parser = require('engine.io-parser');
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###20"},');

    }, {
      "./socket": 18,
      "engine.io-parser": 30
    }],
    18: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###21","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var transports = require('./transports/index');
      var Emitter = require('component-emitter');
      var debug = require('debug')('engine.io-client:socket');
      var index = require('indexof');
      var parser = require('engine.io-parser');
      var parseuri = require('parseuri');
      var parseqs = require('parseqs');
      module.exports = Socket;
      function Socket(uri, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Socket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!(this instanceof Socket)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Socket"},');

          return new Socket(uri, opts);
        }
        opts = opts || ({});
        if (uri && 'object' === typeof uri) {
          opts = uri;
          uri = null;
        }
        if (uri) {
          uri = parseuri(uri);
          opts.hostname = uri.host;
          opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';
          opts.port = uri.port;
          if (uri.query) opts.query = uri.query;
        } else if (opts.host) {
          opts.hostname = parseuri(opts.host).host;
        }
        this.secure = null != opts.secure ? opts.secure : typeof location !== 'undefined' && 'https:' === location.protocol;
        if (opts.hostname && !opts.port) {
          opts.port = this.secure ? '443' : '80';
        }
        this.agent = opts.agent || false;
        this.hostname = opts.hostname || (typeof location !== 'undefined' ? location.hostname : 'localhost');
        this.port = opts.port || (typeof location !== 'undefined' && location.port ? location.port : this.secure ? 443 : 80);
        this.query = opts.query || ({});
        if ('string' === typeof this.query) this.query = parseqs.decode(this.query);
        this.upgrade = false !== opts.upgrade;
        this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
        this.forceJSONP = !!opts.forceJSONP;
        this.jsonp = false !== opts.jsonp;
        this.forceBase64 = !!opts.forceBase64;
        this.enablesXDR = !!opts.enablesXDR;
        this.timestampParam = opts.timestampParam || 't';
        this.timestampRequests = opts.timestampRequests;
        this.transports = opts.transports || ['polling', 'websocket'];
        this.transportOptions = opts.transportOptions || ({});
        this.readyState = '';
        this.writeBuffer = [];
        this.prevBufferLen = 0;
        this.policyPort = opts.policyPort || 843;
        this.rememberUpgrade = opts.rememberUpgrade || false;
        this.binaryType = null;
        this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
        this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || ({}) : false;
        if (true === this.perMessageDeflate) this.perMessageDeflate = {};
        if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
          this.perMessageDeflate.threshold = 1024;
        }
        this.pfx = opts.pfx || null;
        this.key = opts.key || null;
        this.passphrase = opts.passphrase || null;
        this.cert = opts.cert || null;
        this.ca = opts.ca || null;
        this.ciphers = opts.ciphers || null;
        this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;
        this.forceNode = !!opts.forceNode;
        this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative';
        if (typeof self === 'undefined' || this.isReactNative) {
          if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
            this.extraHeaders = opts.extraHeaders;
          }
          if (opts.localAddress) {
            this.localAddress = opts.localAddress;
          }
        }
        this.id = null;
        this.upgrades = null;
        this.pingInterval = null;
        this.pingTimeout = null;
        this.pingIntervalTimer = null;
        this.pingTimeoutTimer = null;
        this.open();
                SRTlib.send('{"type":"FUNCTIONEND","function":"Socket","paramsNumber":2},');

      }
      Socket.priorWebsocketSuccess = false;
      Emitter(Socket.prototype);
      Socket.protocol = parser.protocol;
      Socket.Socket = Socket;
      Socket.Transport = require('./transport');
      Socket.transports = require('./transports/index');
      Socket.parser = require('engine.io-parser');
      Socket.prototype.createTransport = function (name) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.createTransport","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        debug('creating transport "%s"', name);
        var query = clone(this.query);
        query.EIO = parser.protocol;
        query.transport = name;
        var options = this.transportOptions[name] || ({});
        if (this.id) query.sid = this.id;
        var transport = new transports[name]({
          query: query,
          socket: this,
          agent: options.agent || this.agent,
          hostname: options.hostname || this.hostname,
          port: options.port || this.port,
          secure: options.secure || this.secure,
          path: options.path || this.path,
          forceJSONP: options.forceJSONP || this.forceJSONP,
          jsonp: options.jsonp || this.jsonp,
          forceBase64: options.forceBase64 || this.forceBase64,
          enablesXDR: options.enablesXDR || this.enablesXDR,
          timestampRequests: options.timestampRequests || this.timestampRequests,
          timestampParam: options.timestampParam || this.timestampParam,
          policyPort: options.policyPort || this.policyPort,
          pfx: options.pfx || this.pfx,
          key: options.key || this.key,
          passphrase: options.passphrase || this.passphrase,
          cert: options.cert || this.cert,
          ca: options.ca || this.ca,
          ciphers: options.ciphers || this.ciphers,
          rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,
          perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,
          extraHeaders: options.extraHeaders || this.extraHeaders,
          forceNode: options.forceNode || this.forceNode,
          localAddress: options.localAddress || this.localAddress,
          requestTimeout: options.requestTimeout || this.requestTimeout,
          protocols: options.protocols || void 0,
          isReactNative: this.isReactNative
        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.createTransport"},');

        return transport;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.createTransport"},');

      };
      function clone(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"clone","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var o = {};
        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            o[i] = obj[i];
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"clone"},');

        return o;
                SRTlib.send('{"type":"FUNCTIONEND","function":"clone","paramsNumber":1},');

      }
      Socket.prototype.open = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.open","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var transport;
        if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {
          transport = 'websocket';
        } else if (0 === this.transports.length) {
          var self = this;
          setTimeout(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.open.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            self.emit('error', 'No transports available');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.open.setTimeout"},');

          }, 0);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.open"},');

          return;
        } else {
          transport = this.transports[0];
        }
        this.readyState = 'opening';
        try {
          transport = this.createTransport(transport);
        } catch (e) {
          this.transports.shift();
          this.open();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.open"},');

          return;
        }
        transport.open();
        this.setTransport(transport);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.open"},');

      };
      Socket.prototype.setTransport = function (transport) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.setTransport","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        debug('setting transport %s', transport.name);
        var self = this;
        if (this.transport) {
          debug('clearing existing transport %s', this.transport.name);
          this.transport.removeAllListeners();
        }
        this.transport = transport;
        transport.on('drain', function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.setTransport.transport.on.on.on.on.transport.on.on.on.transport.on.on.transport.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          self.onDrain();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.setTransport.transport.on.on.on.on.transport.on.on.on.transport.on.on.transport.on"},');

        }).on('packet', function (packet) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.setTransport.transport.on.on.on.on.transport.on.on.on.transport.on.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          self.onPacket(packet);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.setTransport.transport.on.on.on.on.transport.on.on.on.transport.on.on"},');

        }).on('error', function (e) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.setTransport.transport.on.on.on.on.transport.on.on.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          self.onError(e);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.setTransport.transport.on.on.on.on.transport.on.on.on"},');

        }).on('close', function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.setTransport.transport.on.on.on.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          self.onClose('transport close');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.setTransport.transport.on.on.on.on"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.setTransport"},');

      };
      Socket.prototype.probe = function (name) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.probe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        debug('probing transport "%s"', name);
        var transport = this.createTransport(name, {
          probe: 1
        });
        var failed = false;
        var self = this;
        Socket.priorWebsocketSuccess = false;
        function onTransportOpen() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"onTransportOpen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (self.onlyBinaryUpgrades) {
            var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
            failed = failed || upgradeLosesBinary;
          }
          if (failed) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"onTransportOpen"},');

            return;
          }
          debug('probe transport "%s" opened', name);
          transport.send([{
            type: 'ping',
            data: 'probe'
          }]);
          transport.once('packet', function (msg) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"transport.once","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (failed) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"transport.once"},');

              return;
            }
            if ('pong' === msg.type && 'probe' === msg.data) {
              debug('probe transport "%s" pong', name);
              self.upgrading = true;
              self.emit('upgrading', transport);
              if (!transport) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"transport.once"},');

                return;
              }
              Socket.priorWebsocketSuccess = 'websocket' === transport.name;
              debug('pausing current transport "%s"', self.transport.name);
              self.transport.pause(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"transport.once.self.transport.pause","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                if (failed) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"transport.once.self.transport.pause"},');

                  return;
                }
                if ('closed' === self.readyState) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"transport.once.self.transport.pause"},');

                  return;
                }
                debug('changing transport and sending upgrade packet');
                cleanup();
                self.setTransport(transport);
                transport.send([{
                  type: 'upgrade'
                }]);
                self.emit('upgrade', transport);
                transport = null;
                self.upgrading = false;
                self.flush();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"transport.once.self.transport.pause"},');

              });
            } else {
              debug('probe transport "%s" failed', name);
              var err = new Error('probe error');
              err.transport = transport.name;
              self.emit('upgradeError', err);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"transport.once"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onTransportOpen","paramsNumber":0},');

        }
        function freezeTransport() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"freezeTransport","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (failed) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"freezeTransport"},');

            return;
          }
          failed = true;
          cleanup();
          transport.close();
          transport = null;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"freezeTransport","paramsNumber":0},');

        }
        function onerror(err) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var error = new Error('probe error: ' + err);
          error.transport = transport.name;
          freezeTransport();
          debug('probe transport "%s" failed because of error: %s', name, err);
          self.emit('upgradeError', error);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onerror","paramsNumber":1},');

        }
        function onTransportClose() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"onTransportClose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          onerror('transport closed');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onTransportClose","paramsNumber":0},');

        }
        function onclose() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"onclose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          onerror('socket closed');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onclose","paramsNumber":0},');

        }
        function onupgrade(to) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"onupgrade","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (transport && to.name !== transport.name) {
            debug('"%s" works - aborting "%s"', to.name, transport.name);
            freezeTransport();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onupgrade","paramsNumber":1},');

        }
        function cleanup() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cleanup","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          transport.removeListener('open', onTransportOpen);
          transport.removeListener('error', onerror);
          transport.removeListener('close', onTransportClose);
          self.removeListener('close', onclose);
          self.removeListener('upgrading', onupgrade);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"cleanup","paramsNumber":0},');

        }
        transport.once('open', onTransportOpen);
        transport.once('error', onerror);
        transport.once('close', onTransportClose);
        this.once('close', onclose);
        this.once('upgrading', onupgrade);
        transport.open();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.probe"},');

      };
      Socket.prototype.onOpen = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onOpen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        debug('socket open');
        this.readyState = 'open';
        Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;
        this.emit('open');
        this.flush();
        if ('open' === this.readyState && this.upgrade && this.transport.pause) {
          debug('starting upgrade probes');
          for (var i = 0, l = this.upgrades.length; i < l; i++) {
            this.probe(this.upgrades[i]);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onOpen"},');

      };
      Socket.prototype.onPacket = function (packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onPacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
          debug('socket receive: type "%s", data "%s"', packet.type, packet.data);
          this.emit('packet', packet);
          this.emit('heartbeat');
          switch (packet.type) {
            case 'open':
              this.onHandshake(JSON.parse(packet.data));
              break;
            case 'pong':
              this.setPing();
              this.emit('pong');
              break;
            case 'error':
              var err = new Error('server error');
              err.code = packet.data;
              this.onError(err);
              break;
            case 'message':
              this.emit('data', packet.data);
              this.emit('message', packet.data);
              break;
          }
        } else {
          debug('packet received with socket readyState "%s"', this.readyState);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onPacket"},');

      };
      Socket.prototype.onHandshake = function (data) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onHandshake","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.emit('handshake', data);
        this.id = data.sid;
        this.transport.query.sid = data.sid;
        this.upgrades = this.filterUpgrades(data.upgrades);
        this.pingInterval = data.pingInterval;
        this.pingTimeout = data.pingTimeout;
        this.onOpen();
        if ('closed' === this.readyState) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onHandshake"},');

          return;
        }
        this.setPing();
        this.removeListener('heartbeat', this.onHeartbeat);
        this.on('heartbeat', this.onHeartbeat);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onHandshake"},');

      };
      Socket.prototype.onHeartbeat = function (timeout) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onHeartbeat","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        clearTimeout(this.pingTimeoutTimer);
        var self = this;
        self.pingTimeoutTimer = setTimeout(function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onHeartbeat.self.pingTimeoutTimer.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if ('closed' === self.readyState) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onHeartbeat.self.pingTimeoutTimer.setTimeout"},');

            return;
          }
          self.onClose('ping timeout');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onHeartbeat.self.pingTimeoutTimer.setTimeout"},');

        }, timeout || self.pingInterval + self.pingTimeout);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onHeartbeat"},');

      };
      Socket.prototype.setPing = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.setPing","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var self = this;
        clearTimeout(self.pingIntervalTimer);
        self.pingIntervalTimer = setTimeout(function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.setPing.self.pingIntervalTimer.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
          self.ping();
          self.onHeartbeat(self.pingTimeout);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.setPing.self.pingIntervalTimer.setTimeout"},');

        }, self.pingInterval);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.setPing"},');

      };
      Socket.prototype.ping = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.ping","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var self = this;
        this.sendPacket('ping', function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.ping.sendPacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          self.emit('ping');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.ping.sendPacket"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.ping"},');

      };
      Socket.prototype.onDrain = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onDrain","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.writeBuffer.splice(0, this.prevBufferLen);
        this.prevBufferLen = 0;
        if (0 === this.writeBuffer.length) {
          this.emit('drain');
        } else {
          this.flush();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onDrain"},');

      };
      Socket.prototype.flush = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.flush","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
          debug('flushing %d packets in socket', this.writeBuffer.length);
          this.transport.send(this.writeBuffer);
          this.prevBufferLen = this.writeBuffer.length;
          this.emit('flush');
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.flush"},');

      };
      Socket.prototype.write = Socket.prototype.send = function (msg, options, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.write.Socket.prototype.send","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        this.sendPacket('message', msg, options, fn);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.write.Socket.prototype.send"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.write.Socket.prototype.send"},');

      };
      Socket.prototype.sendPacket = function (type, data, options, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.sendPacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

        if ('function' === typeof data) {
          fn = data;
          data = undefined;
        }
        if ('function' === typeof options) {
          fn = options;
          options = null;
        }
        if ('closing' === this.readyState || 'closed' === this.readyState) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.sendPacket"},');

          return;
        }
        options = options || ({});
        options.compress = false !== options.compress;
        var packet = {
          type: type,
          data: data,
          options: options
        };
        this.emit('packetCreate', packet);
        this.writeBuffer.push(packet);
        if (fn) this.once('flush', fn);
        this.flush();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.sendPacket"},');

      };
      Socket.prototype.close = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.close","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if ('opening' === this.readyState || 'open' === this.readyState) {
          this.readyState = 'closing';
          var self = this;
          if (this.writeBuffer.length) {
            this.once('drain', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.close.once","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (this.upgrading) {
                waitForUpgrade();
              } else {
                close();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.close.once"},');

            });
          } else if (this.upgrading) {
            waitForUpgrade();
          } else {
            close();
          }
        }
        function close() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"close","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          self.onClose('forced close');
          debug('socket closing - telling transport to close');
          self.transport.close();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"close","paramsNumber":0},');

        }
        function cleanupAndClose() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cleanupAndClose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          self.removeListener('upgrade', cleanupAndClose);
          self.removeListener('upgradeError', cleanupAndClose);
          close();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"cleanupAndClose","paramsNumber":0},');

        }
        function waitForUpgrade() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"waitForUpgrade","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          self.once('upgrade', cleanupAndClose);
          self.once('upgradeError', cleanupAndClose);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"waitForUpgrade","paramsNumber":0},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.close"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.close"},');

      };
      Socket.prototype.onError = function (err) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        debug('socket error %j', err);
        Socket.priorWebsocketSuccess = false;
        this.emit('error', err);
        this.onClose('transport error', err);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onError"},');

      };
      Socket.prototype.onClose = function (reason, desc) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onClose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
          debug('socket close with reason: "%s"', reason);
          var self = this;
          clearTimeout(this.pingIntervalTimer);
          clearTimeout(this.pingTimeoutTimer);
          this.transport.removeAllListeners('close');
          this.transport.close();
          this.transport.removeAllListeners();
          this.readyState = 'closed';
          this.id = null;
          this.emit('close', reason, desc);
          self.writeBuffer = [];
          self.prevBufferLen = 0;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onClose"},');

      };
      Socket.prototype.filterUpgrades = function (upgrades) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.filterUpgrades","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var filteredUpgrades = [];
        for (var i = 0, j = upgrades.length; i < j; i++) {
          if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.filterUpgrades"},');

        return filteredUpgrades;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.filterUpgrades"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###21"},');

    }, {
      "./transport": 19,
      "./transports/index": 20,
      "component-emitter": 26,
      "debug": 27,
      "engine.io-parser": 30,
      "indexof": 39,
      "parseqs": 48,
      "parseuri": 49
    }],
    19: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###22","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var parser = require('engine.io-parser');
      var Emitter = require('component-emitter');
      module.exports = Transport;
      function Transport(opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Transport","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.path = opts.path;
        this.hostname = opts.hostname;
        this.port = opts.port;
        this.secure = opts.secure;
        this.query = opts.query;
        this.timestampParam = opts.timestampParam;
        this.timestampRequests = opts.timestampRequests;
        this.readyState = '';
        this.agent = opts.agent || false;
        this.socket = opts.socket;
        this.enablesXDR = opts.enablesXDR;
        this.pfx = opts.pfx;
        this.key = opts.key;
        this.passphrase = opts.passphrase;
        this.cert = opts.cert;
        this.ca = opts.ca;
        this.ciphers = opts.ciphers;
        this.rejectUnauthorized = opts.rejectUnauthorized;
        this.forceNode = opts.forceNode;
        this.isReactNative = opts.isReactNative;
        this.extraHeaders = opts.extraHeaders;
        this.localAddress = opts.localAddress;
                SRTlib.send('{"type":"FUNCTIONEND","function":"Transport","paramsNumber":1},');

      }
      Emitter(Transport.prototype);
      Transport.prototype.onError = function (msg, desc) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Transport.prototype.onError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var err = new Error(msg);
        err.type = 'TransportError';
        err.description = desc;
        this.emit('error', err);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.onError"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.onError"},');

      };
      Transport.prototype.open = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Transport.prototype.open","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if ('closed' === this.readyState || '' === this.readyState) {
          this.readyState = 'opening';
          this.doOpen();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.open"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.open"},');

      };
      Transport.prototype.close = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Transport.prototype.close","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if ('opening' === this.readyState || 'open' === this.readyState) {
          this.doClose();
          this.onClose();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.close"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.close"},');

      };
      Transport.prototype.send = function (packets) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Transport.prototype.send","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if ('open' === this.readyState) {
          this.write(packets);
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.send"},');

          throw new Error('Transport not open');
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.send"},');

      };
      Transport.prototype.onOpen = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Transport.prototype.onOpen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.readyState = 'open';
        this.writable = true;
        this.emit('open');
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.onOpen"},');

      };
      Transport.prototype.onData = function (data) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Transport.prototype.onData","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var packet = parser.decodePacket(data, this.socket.binaryType);
        this.onPacket(packet);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.onData"},');

      };
      Transport.prototype.onPacket = function (packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Transport.prototype.onPacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.emit('packet', packet);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.onPacket"},');

      };
      Transport.prototype.onClose = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Transport.prototype.onClose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.readyState = 'closed';
        this.emit('close');
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Transport.prototype.onClose"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###22"},');

    }, {
      "component-emitter": 26,
      "engine.io-parser": 30
    }],
    20: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###23","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var XMLHttpRequest = require('xmlhttprequest-ssl');
      var XHR = require('./polling-xhr');
      var JSONP = require('./polling-jsonp');
      var websocket = require('./websocket');
      exports.polling = polling;
      exports.websocket = websocket;
      function polling(opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"polling","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var xhr;
        var xd = false;
        var xs = false;
        var jsonp = false !== opts.jsonp;
        if (typeof location !== 'undefined') {
          var isSSL = 'https:' === location.protocol;
          var port = location.port;
          if (!port) {
            port = isSSL ? 443 : 80;
          }
          xd = opts.hostname !== location.hostname || port !== opts.port;
          xs = opts.secure !== isSSL;
        }
        opts.xdomain = xd;
        opts.xscheme = xs;
        xhr = new XMLHttpRequest(opts);
        if (('open' in xhr) && !opts.forceJSONP) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"polling"},');

          return new XHR(opts);
        } else {
          if (!jsonp) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"polling"},');

            throw new Error('JSONP disabled');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"polling"},');

          return new JSONP(opts);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"polling","paramsNumber":1},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###23"},');

    }, {
      "./polling-jsonp": 21,
      "./polling-xhr": 22,
      "./websocket": 24,
      "xmlhttprequest-ssl": 25
    }],
    21: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###24","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (global) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var Polling = require('./polling');
        var inherit = require('component-inherit');
        module.exports = JSONPPolling;
        var rNewline = /\n/g;
        var rEscapedNewline = /\\n/g;
        var callbacks;
        function empty() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"empty","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"empty","paramsNumber":0},');

        }
        function glob() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"glob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"glob"},');

          return typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};
                    SRTlib.send('{"type":"FUNCTIONEND","function":"glob","paramsNumber":0},');

        }
        function JSONPPolling(opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"JSONPPolling","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          Polling.call(this, opts);
          this.query = this.query || ({});
          if (!callbacks) {
            var global = glob();
            callbacks = global.___eio = global.___eio || [];
          }
          this.index = callbacks.length;
          var self = this;
          callbacks.push(function (msg) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"callbacks.push","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            self.onData(msg);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"callbacks.push"},');

          });
          this.query.j = this.index;
          if (typeof addEventListener === 'function') {
            addEventListener('beforeunload', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"addEventListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (self.script) self.script.onerror = empty;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"addEventListener"},');

            }, false);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"JSONPPolling","paramsNumber":1},');

        }
        inherit(JSONPPolling, Polling);
        JSONPPolling.prototype.supportsBinary = false;
        JSONPPolling.prototype.doClose = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.JSONPPolling.prototype.doClose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (this.script) {
            this.script.parentNode.removeChild(this.script);
            this.script = null;
          }
          if (this.form) {
            this.form.parentNode.removeChild(this.form);
            this.form = null;
            this.iframe = null;
          }
          Polling.prototype.doClose.call(this);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.JSONPPolling.prototype.doClose"},');

        };
        JSONPPolling.prototype.doPoll = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.JSONPPolling.prototype.doPoll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var self = this;
          var script = document.createElement('script');
          if (this.script) {
            this.script.parentNode.removeChild(this.script);
            this.script = null;
          }
          script.async = true;
          script.src = this.uri();
          script.onerror = function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.JSONPPolling.prototype.doPoll.script.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            self.onError('jsonp poll error', e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.JSONPPolling.prototype.doPoll.script.onerror"},');

          };
          var insertAt = document.getElementsByTagName('script')[0];
          if (insertAt) {
            insertAt.parentNode.insertBefore(script, insertAt);
          } else {
            (document.head || document.body).appendChild(script);
          }
          this.script = script;
          var isUAgecko = 'undefined' !== typeof navigator && (/gecko/i).test(navigator.userAgent);
          if (isUAgecko) {
            setTimeout(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.JSONPPolling.prototype.doPoll.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var iframe = document.createElement('iframe');
              document.body.appendChild(iframe);
              document.body.removeChild(iframe);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.JSONPPolling.prototype.doPoll.setTimeout"},');

            }, 100);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.JSONPPolling.prototype.doPoll"},');

        };
        JSONPPolling.prototype.doWrite = function (data, fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.JSONPPolling.prototype.doWrite","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var self = this;
          if (!this.form) {
            var form = document.createElement('form');
            var area = document.createElement('textarea');
            var id = this.iframeId = 'eio_iframe_' + this.index;
            var iframe;
            form.className = 'socketio';
            form.style.position = 'absolute';
            form.style.top = '-1000px';
            form.style.left = '-1000px';
            form.target = id;
            form.method = 'POST';
            form.setAttribute('accept-charset', 'utf-8');
            area.name = 'd';
            form.appendChild(area);
            document.body.appendChild(form);
            this.form = form;
            this.area = area;
          }
          this.form.action = this.uri();
          function complete() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"complete","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            initIframe();
            fn();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"complete","paramsNumber":0},');

          }
          function initIframe() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"initIframe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (self.iframe) {
              try {
                self.form.removeChild(self.iframe);
              } catch (e) {
                self.onError('jsonp polling iframe removal error', e);
              }
            }
            try {
              var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
              iframe = document.createElement(html);
            } catch (e) {
              iframe = document.createElement('iframe');
              iframe.name = self.iframeId;
              iframe.src = 'javascript:0';
            }
            iframe.id = self.iframeId;
            self.form.appendChild(iframe);
            self.iframe = iframe;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"initIframe","paramsNumber":0},');

          }
          initIframe();
          data = data.replace(rEscapedNewline, '\\\n');
          this.area.value = data.replace(rNewline, '\\n');
          try {
            this.form.submit();
          } catch (e) {}
          if (this.iframe.attachEvent) {
            this.iframe.onreadystatechange = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.JSONPPolling.prototype.doWrite.iframe.onreadystatechange","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (self.iframe.readyState === 'complete') {
                complete();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.JSONPPolling.prototype.doWrite.iframe.onreadystatechange"},');

            };
          } else {
            this.iframe.onload = complete;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.JSONPPolling.prototype.doWrite"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###2"},');

      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###24"},');

    }, {
      "./polling": 23,
      "component-inherit": 12
    }],
    22: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###25","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var XMLHttpRequest = require('xmlhttprequest-ssl');
      var Polling = require('./polling');
      var Emitter = require('component-emitter');
      var inherit = require('component-inherit');
      var debug = require('debug')('engine.io-client:polling-xhr');
      module.exports = XHR;
      module.exports.Request = Request;
      function empty() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"empty","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"empty","paramsNumber":0},');

      }
      function XHR(opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"XHR","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        Polling.call(this, opts);
        this.requestTimeout = opts.requestTimeout;
        this.extraHeaders = opts.extraHeaders;
        if (typeof location !== 'undefined') {
          var isSSL = 'https:' === location.protocol;
          var port = location.port;
          if (!port) {
            port = isSSL ? 443 : 80;
          }
          this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;
          this.xs = opts.secure !== isSSL;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"XHR","paramsNumber":1},');

      }
      inherit(XHR, Polling);
      XHR.prototype.supportsBinary = true;
      XHR.prototype.request = function (opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.XHR.prototype.request","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        opts = opts || ({});
        opts.uri = this.uri();
        opts.xd = this.xd;
        opts.xs = this.xs;
        opts.agent = this.agent || false;
        opts.supportsBinary = this.supportsBinary;
        opts.enablesXDR = this.enablesXDR;
        opts.pfx = this.pfx;
        opts.key = this.key;
        opts.passphrase = this.passphrase;
        opts.cert = this.cert;
        opts.ca = this.ca;
        opts.ciphers = this.ciphers;
        opts.rejectUnauthorized = this.rejectUnauthorized;
        opts.requestTimeout = this.requestTimeout;
        opts.extraHeaders = this.extraHeaders;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.XHR.prototype.request"},');

        return new Request(opts);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.XHR.prototype.request"},');

      };
      XHR.prototype.doWrite = function (data, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.XHR.prototype.doWrite","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var isBinary = typeof data !== 'string' && data !== undefined;
        var req = this.request({
          method: 'POST',
          data: data,
          isBinary: isBinary
        });
        var self = this;
        req.on('success', fn);
        req.on('error', function (err) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.XHR.prototype.doWrite.req.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          self.onError('xhr post error', err);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.XHR.prototype.doWrite.req.on"},');

        });
        this.sendXhr = req;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.XHR.prototype.doWrite"},');

      };
      XHR.prototype.doPoll = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.XHR.prototype.doPoll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        debug('xhr poll');
        var req = this.request();
        var self = this;
        req.on('data', function (data) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.XHR.prototype.doPoll.req.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          self.onData(data);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.XHR.prototype.doPoll.req.on"},');

        });
        req.on('error', function (err) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.XHR.prototype.doPoll.req.on###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          self.onError('xhr poll error', err);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.XHR.prototype.doPoll.req.on###2"},');

        });
        this.pollXhr = req;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.XHR.prototype.doPoll"},');

      };
      function Request(opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Request","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.method = opts.method || 'GET';
        this.uri = opts.uri;
        this.xd = !!opts.xd;
        this.xs = !!opts.xs;
        this.async = false !== opts.async;
        this.data = undefined !== opts.data ? opts.data : null;
        this.agent = opts.agent;
        this.isBinary = opts.isBinary;
        this.supportsBinary = opts.supportsBinary;
        this.enablesXDR = opts.enablesXDR;
        this.requestTimeout = opts.requestTimeout;
        this.pfx = opts.pfx;
        this.key = opts.key;
        this.passphrase = opts.passphrase;
        this.cert = opts.cert;
        this.ca = opts.ca;
        this.ciphers = opts.ciphers;
        this.rejectUnauthorized = opts.rejectUnauthorized;
        this.extraHeaders = opts.extraHeaders;
        this.create();
                SRTlib.send('{"type":"FUNCTIONEND","function":"Request","paramsNumber":1},');

      }
      Emitter(Request.prototype);
      Request.prototype.create = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.create","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var opts = {
          agent: this.agent,
          xdomain: this.xd,
          xscheme: this.xs,
          enablesXDR: this.enablesXDR
        };
        opts.pfx = this.pfx;
        opts.key = this.key;
        opts.passphrase = this.passphrase;
        opts.cert = this.cert;
        opts.ca = this.ca;
        opts.ciphers = this.ciphers;
        opts.rejectUnauthorized = this.rejectUnauthorized;
        var xhr = this.xhr = new XMLHttpRequest(opts);
        var self = this;
        try {
          debug('xhr open %s: %s', this.method, this.uri);
          xhr.open(this.method, this.uri, this.async);
          try {
            if (this.extraHeaders) {
              xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
              for (var i in this.extraHeaders) {
                if (this.extraHeaders.hasOwnProperty(i)) {
                  xhr.setRequestHeader(i, this.extraHeaders[i]);
                }
              }
            }
          } catch (e) {}
          if ('POST' === this.method) {
            try {
              if (this.isBinary) {
                xhr.setRequestHeader('Content-type', 'application/octet-stream');
              } else {
                xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
              }
            } catch (e) {}
          }
          try {
            xhr.setRequestHeader('Accept', '*/*');
          } catch (e) {}
          if (('withCredentials' in xhr)) {
            xhr.withCredentials = true;
          }
          if (this.requestTimeout) {
            xhr.timeout = this.requestTimeout;
          }
          if (this.hasXDR()) {
            xhr.onload = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.create.xhr.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              self.onLoad();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.create.xhr.onload"},');

            };
            xhr.onerror = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.create.xhr.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              self.onError(xhr.responseText);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.create.xhr.onerror"},');

            };
          } else {
            xhr.onreadystatechange = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.create.xhr.onreadystatechange","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (xhr.readyState === 2) {
                try {
                  var contentType = xhr.getResponseHeader('Content-Type');
                  if (self.supportsBinary && contentType === 'application/octet-stream') {
                    xhr.responseType = 'arraybuffer';
                  }
                } catch (e) {}
              }
              if (4 !== xhr.readyState) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.create.xhr.onreadystatechange"},');

                return;
              }
              if (200 === xhr.status || 1223 === xhr.status) {
                self.onLoad();
              } else {
                setTimeout(function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.create.xhr.onreadystatechange.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                  self.onError(xhr.status);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.create.xhr.onreadystatechange.setTimeout"},');

                }, 0);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.create.xhr.onreadystatechange"},');

            };
          }
          debug('xhr data %s', this.data);
          xhr.send(this.data);
        } catch (e) {
          setTimeout(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.create.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            self.onError(e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.create.setTimeout"},');

          }, 0);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.create"},');

          return;
        }
        if (typeof document !== 'undefined') {
          this.index = Request.requestsCount++;
          Request.requests[this.index] = this;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.create"},');

      };
      Request.prototype.onSuccess = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.onSuccess","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.emit('success');
        this.cleanup();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.onSuccess"},');

      };
      Request.prototype.onData = function (data) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.onData","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.emit('data', data);
        this.onSuccess();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.onData"},');

      };
      Request.prototype.onError = function (err) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.onError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.emit('error', err);
        this.cleanup(true);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.onError"},');

      };
      Request.prototype.cleanup = function (fromError) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.cleanup","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if ('undefined' === typeof this.xhr || null === this.xhr) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.cleanup"},');

          return;
        }
        if (this.hasXDR()) {
          this.xhr.onload = this.xhr.onerror = empty;
        } else {
          this.xhr.onreadystatechange = empty;
        }
        if (fromError) {
          try {
            this.xhr.abort();
          } catch (e) {}
        }
        if (typeof document !== 'undefined') {
          delete Request.requests[this.index];
        }
        this.xhr = null;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.cleanup"},');

      };
      Request.prototype.onLoad = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.onLoad","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var data;
        try {
          var contentType;
          try {
            contentType = this.xhr.getResponseHeader('Content-Type');
          } catch (e) {}
          if (contentType === 'application/octet-stream') {
            data = this.xhr.response || this.xhr.responseText;
          } else {
            data = this.xhr.responseText;
          }
        } catch (e) {
          this.onError(e);
        }
        if (null != data) {
          this.onData(data);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.onLoad"},');

      };
      Request.prototype.hasXDR = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.hasXDR","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.hasXDR"},');

        return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.hasXDR"},');

      };
      Request.prototype.abort = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.abort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.cleanup();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.abort"},');

      };
      Request.requestsCount = 0;
      Request.requests = {};
      if (typeof document !== 'undefined') {
        if (typeof attachEvent === 'function') {
          attachEvent('onunload', unloadHandler);
        } else if (typeof addEventListener === 'function') {
          var terminationEvent = ('onpagehide' in self) ? 'pagehide' : 'unload';
          addEventListener(terminationEvent, unloadHandler, false);
        }
      }
      function unloadHandler() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"unloadHandler","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        for (var i in Request.requests) {
          if (Request.requests.hasOwnProperty(i)) {
            Request.requests[i].abort();
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"unloadHandler","paramsNumber":0},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###25"},');

    }, {
      "./polling": 23,
      "component-emitter": 26,
      "component-inherit": 12,
      "debug": 27,
      "xmlhttprequest-ssl": 25
    }],
    23: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###26","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var Transport = require('../transport');
      var parseqs = require('parseqs');
      var parser = require('engine.io-parser');
      var inherit = require('component-inherit');
      var yeast = require('yeast');
      var debug = require('debug')('engine.io-client:polling');
      module.exports = Polling;
      var hasXHR2 = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.hasXHR2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var XMLHttpRequest = require('xmlhttprequest-ssl');
        var xhr = new XMLHttpRequest({
          xdomain: false
        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.hasXHR2"},');

        return null != xhr.responseType;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.hasXHR2"},');

      })();
      function Polling(opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Polling","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var forceBase64 = opts && opts.forceBase64;
        if (!hasXHR2 || forceBase64) {
          this.supportsBinary = false;
        }
        Transport.call(this, opts);
                SRTlib.send('{"type":"FUNCTIONEND","function":"Polling","paramsNumber":1},');

      }
      inherit(Polling, Transport);
      Polling.prototype.name = 'polling';
      Polling.prototype.doOpen = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.doOpen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.poll();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.doOpen"},');

      };
      Polling.prototype.pause = function (onPause) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.pause","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var self = this;
        this.readyState = 'pausing';
        function pause() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"pause","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          debug('paused');
          self.readyState = 'paused';
          onPause();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"pause","paramsNumber":0},');

        }
        if (this.polling || !this.writable) {
          var total = 0;
          if (this.polling) {
            debug('we are currently polling - waiting to pause');
            total++;
            this.once('pollComplete', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.pause.once","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              debug('pre-pause polling complete');
              --total || pause();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.pause.once"},');

            });
          }
          if (!this.writable) {
            debug('we are currently writing - waiting to pause');
            total++;
            this.once('drain', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.pause.once###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              debug('pre-pause writing complete');
              --total || pause();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.pause.once###2"},');

            });
          }
        } else {
          pause();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.pause"},');

      };
      Polling.prototype.poll = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.poll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        debug('polling');
        this.polling = true;
        this.doPoll();
        this.emit('poll');
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.poll"},');

      };
      Polling.prototype.onData = function (data) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.onData","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var self = this;
        debug('polling got data %s', data);
        var callback = function (packet, index, total) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"callback","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if ('opening' === self.readyState) {
            self.onOpen();
          }
          if ('close' === packet.type) {
            self.onClose();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"callback"},');

            return false;
          }
          self.onPacket(packet);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"callback"},');

        };
        parser.decodePayload(data, this.socket.binaryType, callback);
        if ('closed' !== this.readyState) {
          this.polling = false;
          this.emit('pollComplete');
          if ('open' === this.readyState) {
            this.poll();
          } else {
            debug('ignoring poll - transport state "%s"', this.readyState);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.onData"},');

      };
      Polling.prototype.doClose = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.doClose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var self = this;
        function close() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"close","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          debug('writing close packet');
          self.write([{
            type: 'close'
          }]);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"close","paramsNumber":0},');

        }
        if ('open' === this.readyState) {
          debug('transport open - closing');
          close();
        } else {
          debug('transport not open - deferring close');
          this.once('open', close);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.doClose"},');

      };
      Polling.prototype.write = function (packets) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.write","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var self = this;
        this.writable = false;
        var callbackfn = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"callbackfn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          self.writable = true;
          self.emit('drain');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"callbackfn"},');

        };
        parser.encodePayload(packets, this.supportsBinary, function (data) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.write.parser.encodePayload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          self.doWrite(data, callbackfn);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.write.parser.encodePayload"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.write"},');

      };
      Polling.prototype.uri = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Polling.prototype.uri","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var query = this.query || ({});
        var schema = this.secure ? 'https' : 'http';
        var port = '';
        if (false !== this.timestampRequests) {
          query[this.timestampParam] = yeast();
        }
        if (!this.supportsBinary && !query.sid) {
          query.b64 = 1;
        }
        query = parseqs.encode(query);
        if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {
          port = ':' + this.port;
        }
        if (query.length) {
          query = '?' + query;
        }
        var ipv6 = this.hostname.indexOf(':') !== -1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.uri"},');

        return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Polling.prototype.uri"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###26"},');

    }, {
      "../transport": 19,
      "component-inherit": 12,
      "debug": 27,
      "engine.io-parser": 30,
      "parseqs": 48,
      "xmlhttprequest-ssl": 25,
      "yeast": 88
    }],
    24: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###27","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (Buffer) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var Transport = require('../transport');
        var parser = require('engine.io-parser');
        var parseqs = require('parseqs');
        var inherit = require('component-inherit');
        var yeast = require('yeast');
        var debug = require('debug')('engine.io-client:websocket');
        var BrowserWebSocket, NodeWebSocket;
        if (typeof WebSocket !== 'undefined') {
          BrowserWebSocket = WebSocket;
        } else if (typeof self !== 'undefined') {
          BrowserWebSocket = self.WebSocket || self.MozWebSocket;
        } else {
          try {
            NodeWebSocket = require('ws');
          } catch (e) {}
        }
        var WebSocketImpl = BrowserWebSocket || NodeWebSocket;
        module.exports = WS;
        function WS(opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"WS","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var forceBase64 = opts && opts.forceBase64;
          if (forceBase64) {
            this.supportsBinary = false;
          }
          this.perMessageDeflate = opts.perMessageDeflate;
          this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;
          this.protocols = opts.protocols;
          if (!this.usingBrowserWebSocket) {
            WebSocketImpl = NodeWebSocket;
          }
          Transport.call(this, opts);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"WS","paramsNumber":1},');

        }
        inherit(WS, Transport);
        WS.prototype.name = 'websocket';
        WS.prototype.supportsBinary = true;
        WS.prototype.doOpen = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.doOpen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (!this.check()) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.doOpen"},');

            return;
          }
          var uri = this.uri();
          var protocols = this.protocols;
          var opts = {
            agent: this.agent,
            perMessageDeflate: this.perMessageDeflate
          };
          opts.pfx = this.pfx;
          opts.key = this.key;
          opts.passphrase = this.passphrase;
          opts.cert = this.cert;
          opts.ca = this.ca;
          opts.ciphers = this.ciphers;
          opts.rejectUnauthorized = this.rejectUnauthorized;
          if (this.extraHeaders) {
            opts.headers = this.extraHeaders;
          }
          if (this.localAddress) {
            opts.localAddress = this.localAddress;
          }
          try {
            this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocketImpl(uri, protocols) : new WebSocketImpl(uri) : new WebSocketImpl(uri, protocols, opts);
          } catch (err) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.doOpen"},');

            return this.emit('error', err);
          }
          if (this.ws.binaryType === undefined) {
            this.supportsBinary = false;
          }
          if (this.ws.supports && this.ws.supports.binary) {
            this.supportsBinary = true;
            this.ws.binaryType = 'nodebuffer';
          } else {
            this.ws.binaryType = 'arraybuffer';
          }
          this.addEventListeners();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.doOpen"},');

        };
        WS.prototype.addEventListeners = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.addEventListeners","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var self = this;
          this.ws.onopen = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.addEventListeners.ws.onopen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            self.onOpen();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.addEventListeners.ws.onopen"},');

          };
          this.ws.onclose = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.addEventListeners.ws.onclose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            self.onClose();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.addEventListeners.ws.onclose"},');

          };
          this.ws.onmessage = function (ev) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.addEventListeners.ws.onmessage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            self.onData(ev.data);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.addEventListeners.ws.onmessage"},');

          };
          this.ws.onerror = function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.addEventListeners.ws.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            self.onError('websocket error', e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.addEventListeners.ws.onerror"},');

          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.addEventListeners"},');

        };
        WS.prototype.write = function (packets) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.write###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var self = this;
          this.writable = false;
          var total = packets.length;
          for (var i = 0, l = total; i < l; i++) {
            (function (packet) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.write","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              parser.encodePacket(packet, self.supportsBinary, function (data) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.write.parser.encodePacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (!self.usingBrowserWebSocket) {
                  var opts = {};
                  if (packet.options) {
                    opts.compress = packet.options.compress;
                  }
                  if (self.perMessageDeflate) {
                    var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;
                    if (len < self.perMessageDeflate.threshold) {
                      opts.compress = false;
                    }
                  }
                }
                try {
                  if (self.usingBrowserWebSocket) {
                    self.ws.send(data);
                  } else {
                    self.ws.send(data, opts);
                  }
                } catch (e) {
                  debug('websocket closed before onclose event');
                }
                --total || done();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.write.parser.encodePacket"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.write"},');

            })(packets[i]);
          }
          function done() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"done","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            self.emit('flush');
            setTimeout(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              self.writable = true;
              self.emit('drain');
                            SRTlib.send('{"type":"FUNCTIONEND","function":"setTimeout"},');

            }, 0);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"done","paramsNumber":0},');

          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.write###2"},');

        };
        WS.prototype.onClose = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.onClose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          Transport.prototype.onClose.call(this);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.onClose"},');

        };
        WS.prototype.doClose = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.doClose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (typeof this.ws !== 'undefined') {
            this.ws.close();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.doClose"},');

        };
        WS.prototype.uri = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.uri","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var query = this.query || ({});
          var schema = this.secure ? 'wss' : 'ws';
          var port = '';
          if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {
            port = ':' + this.port;
          }
          if (this.timestampRequests) {
            query[this.timestampParam] = yeast();
          }
          if (!this.supportsBinary) {
            query.b64 = 1;
          }
          query = parseqs.encode(query);
          if (query.length) {
            query = '?' + query;
          }
          var ipv6 = this.hostname.indexOf(':') !== -1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.uri"},');

          return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.uri"},');

        };
        WS.prototype.check = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.WS.prototype.check","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.check"},');

          return !!WebSocketImpl && !(('__initialize' in WebSocketImpl) && this.name === WS.prototype.name);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.WS.prototype.check"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###3"},');

      }).call(this, require("buffer").Buffer);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###27"},');

    }, {
      "../transport": 19,
      "buffer": 8,
      "component-inherit": 12,
      "debug": 27,
      "engine.io-parser": 30,
      "parseqs": 48,
      "ws": 7,
      "yeast": 88
    }],
    25: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###28","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var hasCORS = require('has-cors');
      module.exports = function (opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var xdomain = opts.xdomain;
        var xscheme = opts.xscheme;
        var enablesXDR = opts.enablesXDR;
        try {
          if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###7"},');

            return new XMLHttpRequest();
          }
        } catch (e) {}
        try {
          if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###7"},');

            return new XDomainRequest();
          }
        } catch (e) {}
        if (!xdomain) {
          try {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###7"},');

            return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');
          } catch (e) {}
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###7"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###28"},');

    }, {
      "has-cors": 37
    }],
    26: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###29","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      if (typeof module !== 'undefined') {
        module.exports = Emitter;
      }
      function Emitter(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Emitter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (obj) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Emitter"},');

          return mixin(obj);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"Emitter","paramsNumber":1},');

      }
      ;
      function mixin(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"mixin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        for (var key in Emitter.prototype) {
          obj[key] = Emitter.prototype[key];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"mixin"},');

        return obj;
                SRTlib.send('{"type":"FUNCTIONEND","function":"mixin","paramsNumber":1},');

      }
      Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.on.Emitter.prototype.addEventListener###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        this._callbacks = this._callbacks || ({});
        (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.on.Emitter.prototype.addEventListener###2"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.on.Emitter.prototype.addEventListener###2"},');

      };
      Emitter.prototype.once = function (event, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.once###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        function on() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.off(event, on);
          fn.apply(this, arguments);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"on","paramsNumber":0},');

        }
        on.fn = fn;
        this.on(event, on);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.once###2"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.once###2"},');

      };
      Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        this._callbacks = this._callbacks || ({});
        if (0 == arguments.length) {
          this._callbacks = {};
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener###2"},');

          return this;
        }
        var callbacks = this._callbacks['$' + event];
        if (!callbacks) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener###2"},');

          return this;
        }
        if (1 == arguments.length) {
          delete this._callbacks['$' + event];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener###2"},');

          return this;
        }
        var cb;
        for (var i = 0; i < callbacks.length; i++) {
          cb = callbacks[i];
          if (cb === fn || cb.fn === fn) {
            callbacks.splice(i, 1);
            break;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener###2"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener###2"},');

      };
      Emitter.prototype.emit = function (event) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.emit###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this._callbacks = this._callbacks || ({});
        var args = [].slice.call(arguments, 1), callbacks = this._callbacks['$' + event];
        if (callbacks) {
          callbacks = callbacks.slice(0);
          for (var i = 0, len = callbacks.length; i < len; ++i) {
            callbacks[i].apply(this, args);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.emit###2"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.emit###2"},');

      };
      Emitter.prototype.listeners = function (event) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.listeners###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this._callbacks = this._callbacks || ({});
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.listeners###2"},');

        return this._callbacks['$' + event] || [];
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.listeners###2"},');

      };
      Emitter.prototype.hasListeners = function (event) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Emitter.prototype.hasListeners###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.hasListeners###2"},');

        return !!this.listeners(event).length;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Emitter.prototype.hasListeners###2"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###29"},');

    }, {}],
    27: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###30","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (process) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        exports = module.exports = require('./debug');
        exports.log = log;
        exports.formatArgs = formatArgs;
        exports.save = save;
        exports.load = load;
        exports.useColors = useColors;
        exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();
        exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
        function useColors() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"useColors","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useColors"},');

            return true;
          }
          if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useColors"},');

            return false;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"useColors"},');

          return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"useColors","paramsNumber":0},');

        }
        exports.formatters.j = function (v) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.exports.formatters.j","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          try {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.exports.formatters.j"},');

            return JSON.stringify(v);
          } catch (err) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.exports.formatters.j"},');

            return '[UnexpectedJSONParseError]: ' + err.message;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.exports.formatters.j"},');

        };
        function formatArgs(args) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"formatArgs","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var useColors = this.useColors;
          args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);
          if (!useColors) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"formatArgs"},');

            return;
          }
          var c = 'color: ' + this.color;
          args.splice(1, 0, c, 'color: inherit');
          var index = 0;
          var lastC = 0;
          args[0].replace(/%[a-zA-Z%]/g, function (match) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"args.replace","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if ('%%' === match) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"args.replace"},');

              return;
            }
            index++;
            if ('%c' === match) {
              lastC = index;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"args.replace"},');

          });
          args.splice(lastC, 0, c);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"formatArgs","paramsNumber":1},');

        }
        function log() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"log","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"log"},');

          return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"log","paramsNumber":0},');

        }
        function save(namespaces) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"save","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          try {
            if (null == namespaces) {
              exports.storage.removeItem('debug');
            } else {
              exports.storage.debug = namespaces;
            }
          } catch (e) {}
                    SRTlib.send('{"type":"FUNCTIONEND","function":"save","paramsNumber":1},');

        }
        function load() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"load","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var r;
          try {
            r = exports.storage.debug;
          } catch (e) {}
          if (!r && typeof process !== 'undefined' && ('env' in process)) {
            r = process.env.DEBUG;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"load"},');

          return r;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"load","paramsNumber":0},');

        }
        exports.enable(load());
        function localstorage() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"localstorage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          try {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"localstorage"},');

            return window.localStorage;
          } catch (e) {}
                    SRTlib.send('{"type":"FUNCTIONEND","function":"localstorage","paramsNumber":0},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###4"},');

      }).call(this, require('_process'));
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###30"},');

    }, {
      "./debug": 28,
      "_process": 52
    }],
    28: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###31","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
      exports.coerce = coerce;
      exports.disable = disable;
      exports.enable = enable;
      exports.enabled = enabled;
      exports.humanize = require('ms');
      exports.instances = [];
      exports.names = [];
      exports.skips = [];
      exports.formatters = {};
      function selectColor(namespace) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"selectColor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var hash = 0, i;
        for (i in namespace) {
          hash = (hash << 5) - hash + namespace.charCodeAt(i);
          hash |= 0;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"selectColor"},');

        return exports.colors[Math.abs(hash) % exports.colors.length];
                SRTlib.send('{"type":"FUNCTIONEND","function":"selectColor","paramsNumber":1},');

      }
      function createDebug(namespace) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createDebug","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var prevTime;
        function debug() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"debug","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (!debug.enabled) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"debug"},');

            return;
          }
          var self = debug;
          var curr = +new Date();
          var ms = curr - (prevTime || curr);
          self.diff = ms;
          self.prev = prevTime;
          self.curr = curr;
          prevTime = curr;
          var args = new Array(arguments.length);
          for (var i = 0; i < args.length; i++) {
            args[i] = arguments[i];
          }
          args[0] = exports.coerce(args[0]);
          if ('string' !== typeof args[0]) {
            args.unshift('%O');
          }
          var index = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"args.args.replace","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (match === '%%') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"args.args.replace"},');

              return match;
            }
            index++;
            var formatter = exports.formatters[format];
            if ('function' === typeof formatter) {
              var val = args[index];
              match = formatter.call(self, val);
              args.splice(index, 1);
              index--;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"args.args.replace"},');

            return match;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"args.args.replace"},');

          });
          exports.formatArgs.call(self, args);
          var logFn = debug.log || exports.log || console.log.bind(console);
          logFn.apply(self, args);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"debug","paramsNumber":0},');

        }
        debug.namespace = namespace;
        debug.enabled = exports.enabled(namespace);
        debug.useColors = exports.useColors();
        debug.color = selectColor(namespace);
        debug.destroy = destroy;
        if ('function' === typeof exports.init) {
          exports.init(debug);
        }
        exports.instances.push(debug);
                SRTlib.send('{"type":"FUNCTIONEND","function":"createDebug"},');

        return debug;
                SRTlib.send('{"type":"FUNCTIONEND","function":"createDebug","paramsNumber":1},');

      }
      function destroy() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"destroy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var index = exports.instances.indexOf(this);
        if (index !== -1) {
          exports.instances.splice(index, 1);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"destroy"},');

          return true;
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"destroy"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"destroy","paramsNumber":0},');

      }
      function enable(namespaces) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"enable","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        exports.save(namespaces);
        exports.names = [];
        exports.skips = [];
        var i;
        var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
        var len = split.length;
        for (i = 0; i < len; i++) {
          if (!split[i]) continue;
          namespaces = split[i].replace(/\*/g, '.*?');
          if (namespaces[0] === '-') {
            exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
          } else {
            exports.names.push(new RegExp('^' + namespaces + '$'));
          }
        }
        for (i = 0; i < exports.instances.length; i++) {
          var instance = exports.instances[i];
          instance.enabled = exports.enabled(instance.namespace);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"enable","paramsNumber":1},');

      }
      function disable() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"disable","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        exports.enable('');
                SRTlib.send('{"type":"FUNCTIONEND","function":"disable","paramsNumber":0},');

      }
      function enabled(name) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"enabled","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (name[name.length - 1] === '*') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"enabled"},');

          return true;
        }
        var i, len;
        for ((i = 0, len = exports.skips.length); i < len; i++) {
          if (exports.skips[i].test(name)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"enabled"},');

            return false;
          }
        }
        for ((i = 0, len = exports.names.length); i < len; i++) {
          if (exports.names[i].test(name)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"enabled"},');

            return true;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"enabled"},');

        return false;
                SRTlib.send('{"type":"FUNCTIONEND","function":"enabled","paramsNumber":1},');

      }
      function coerce(val) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"coerce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (val instanceof Error) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"coerce"},');

          return val.stack || val.message;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"coerce"},');

        return val;
                SRTlib.send('{"type":"FUNCTIONEND","function":"coerce","paramsNumber":1},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###31"},');

    }, {
      "ms": 29
    }],
    29: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###32","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var s = 1000;
      var m = s * 60;
      var h = m * 60;
      var d = h * 24;
      var y = d * 365.25;
      module.exports = function (val, options) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        options = options || ({});
        var type = typeof val;
        if (type === 'string' && val.length > 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###8"},');

          return parse(val);
        } else if (type === 'number' && isNaN(val) === false) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###8"},');

          return options.long ? fmtLong(val) : fmtShort(val);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###8"},');

        throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###8"},');

      };
      function parse(str) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"parse","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        str = String(str);
        if (str.length > 100) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"parse"},');

          return;
        }
        var match = (/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i).exec(str);
        if (!match) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"parse"},');

          return;
        }
        var n = parseFloat(match[1]);
        var type = (match[2] || 'ms').toLowerCase();
        switch (type) {
          case 'years':
          case 'year':
          case 'yrs':
          case 'yr':
          case 'y':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###32"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"parse"},');

            return n * y;
          case 'days':
          case 'day':
          case 'd':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###32"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"parse"},');

            return n * d;
          case 'hours':
          case 'hour':
          case 'hrs':
          case 'hr':
          case 'h':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###32"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"parse"},');

            return n * h;
          case 'minutes':
          case 'minute':
          case 'mins':
          case 'min':
          case 'm':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###32"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"parse"},');

            return n * m;
          case 'seconds':
          case 'second':
          case 'secs':
          case 'sec':
          case 's':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###32"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"parse"},');

            return n * s;
          case 'milliseconds':
          case 'millisecond':
          case 'msecs':
          case 'msec':
          case 'ms':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###32"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"parse"},');

            return n;
          default:
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###32"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"parse"},');

            return undefined;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"parse","paramsNumber":1},');

      }
      function fmtShort(ms) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fmtShort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (ms >= d) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fmtShort"},');

          return Math.round(ms / d) + 'd';
        }
        if (ms >= h) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fmtShort"},');

          return Math.round(ms / h) + 'h';
        }
        if (ms >= m) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fmtShort"},');

          return Math.round(ms / m) + 'm';
        }
        if (ms >= s) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fmtShort"},');

          return Math.round(ms / s) + 's';
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"fmtShort"},');

        return ms + 'ms';
                SRTlib.send('{"type":"FUNCTIONEND","function":"fmtShort","paramsNumber":1},');

      }
      function fmtLong(ms) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fmtLong","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"fmtLong"},');

        return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';
                SRTlib.send('{"type":"FUNCTIONEND","function":"fmtLong","paramsNumber":1},');

      }
      function plural(ms, n, name) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"plural","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (ms < n) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"plural"},');

          return;
        }
        if (ms < n * 1.5) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"plural"},');

          return Math.floor(ms / n) + ' ' + name;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"plural"},');

        return Math.ceil(ms / n) + ' ' + name + 's';
                SRTlib.send('{"type":"FUNCTIONEND","function":"plural","paramsNumber":3},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###32"},');

    }, {}],
    30: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###33","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var keys = require('./keys');
      var hasBinary = require('has-binary2');
      var sliceBuffer = require('arraybuffer.slice');
      var after = require('after');
      var utf8 = require('./utf8');
      var base64encoder;
      if (typeof ArrayBuffer !== 'undefined') {
        base64encoder = require('base64-arraybuffer');
      }
      var isAndroid = typeof navigator !== 'undefined' && (/Android/i).test(navigator.userAgent);
      var isPhantomJS = typeof navigator !== 'undefined' && (/PhantomJS/i).test(navigator.userAgent);
      var dontSendBlobs = isAndroid || isPhantomJS;
      exports.protocol = 3;
      var packets = exports.packets = {
        open: 0,
        close: 1,
        ping: 2,
        pong: 3,
        message: 4,
        upgrade: 5,
        noop: 6
      };
      var packetslist = keys(packets);
      var err = {
        type: 'error',
        data: 'parser error'
      };
      var Blob = require('blob');
      exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodePacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

        if (typeof supportsBinary === 'function') {
          callback = supportsBinary;
          supportsBinary = false;
        }
        if (typeof utf8encode === 'function') {
          callback = utf8encode;
          utf8encode = null;
        }
        var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;
        if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePacket"},');

          return encodeArrayBuffer(packet, supportsBinary, callback);
        } else if (typeof Blob !== 'undefined' && data instanceof Blob) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePacket"},');

          return encodeBlob(packet, supportsBinary, callback);
        }
        if (data && data.base64) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePacket"},');

          return encodeBase64Object(packet, callback);
        }
        var encoded = packets[packet.type];
        if (undefined !== packet.data) {
          encoded += utf8encode ? utf8.encode(String(packet.data), {
            strict: false
          }) : String(packet.data);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePacket"},');

        return callback('' + encoded);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePacket"},');

      };
      function encodeBase64Object(packet, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeBase64Object","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var message = 'b' + exports.packets[packet.type] + packet.data.data;
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeBase64Object"},');

        return callback(message);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeBase64Object","paramsNumber":2},');

      }
      function encodeArrayBuffer(packet, supportsBinary, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeArrayBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (!supportsBinary) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encodeArrayBuffer"},');

          return exports.encodeBase64Packet(packet, callback);
        }
        var data = packet.data;
        var contentArray = new Uint8Array(data);
        var resultBuffer = new Uint8Array(1 + data.byteLength);
        resultBuffer[0] = packets[packet.type];
        for (var i = 0; i < contentArray.length; i++) {
          resultBuffer[i + 1] = contentArray[i];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeArrayBuffer"},');

        return callback(resultBuffer.buffer);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeArrayBuffer","paramsNumber":3},');

      }
      function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeBlobAsArrayBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (!supportsBinary) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encodeBlobAsArrayBuffer"},');

          return exports.encodeBase64Packet(packet, callback);
        }
        var fr = new FileReader();
        fr.onload = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"fr.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          exports.encodePacket({
            type: packet.type,
            data: fr.result
          }, supportsBinary, true, callback);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fr.onload"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeBlobAsArrayBuffer"},');

        return fr.readAsArrayBuffer(packet.data);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeBlobAsArrayBuffer","paramsNumber":3},');

      }
      function encodeBlob(packet, supportsBinary, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeBlob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (!supportsBinary) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encodeBlob"},');

          return exports.encodeBase64Packet(packet, callback);
        }
        if (dontSendBlobs) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encodeBlob"},');

          return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
        }
        var length = new Uint8Array(1);
        length[0] = packets[packet.type];
        var blob = new Blob([length.buffer, packet.data]);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeBlob"},');

        return callback(blob);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeBlob","paramsNumber":3},');

      }
      exports.encodeBase64Packet = function (packet, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodeBase64Packet","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var message = 'b' + exports.packets[packet.type];
        if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {
          var fr = new FileReader();
          fr.onload = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodeBase64Packet.fr.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var b64 = fr.result.split(',')[1];
            callback(message + b64);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodeBase64Packet.fr.onload"},');

          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodeBase64Packet"},');

          return fr.readAsDataURL(packet.data);
        }
        var b64data;
        try {
          b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
        } catch (e) {
          var typed = new Uint8Array(packet.data);
          var basic = new Array(typed.length);
          for (var i = 0; i < typed.length; i++) {
            basic[i] = typed[i];
          }
          b64data = String.fromCharCode.apply(null, basic);
        }
        message += btoa(b64data);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodeBase64Packet"},');

        return callback(message);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodeBase64Packet"},');

      };
      exports.decodePacket = function (data, binaryType, utf8decode) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.decodePacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (data === undefined) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePacket"},');

          return err;
        }
        if (typeof data === 'string') {
          if (data.charAt(0) === 'b') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePacket"},');

            return exports.decodeBase64Packet(data.substr(1), binaryType);
          }
          if (utf8decode) {
            data = tryDecode(data);
            if (data === false) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePacket"},');

              return err;
            }
          }
          var type = data.charAt(0);
          if (Number(type) != type || !packetslist[type]) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePacket"},');

            return err;
          }
          if (data.length > 1) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePacket"},');

            return {
              type: packetslist[type],
              data: data.substring(1)
            };
          } else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePacket"},');

            return {
              type: packetslist[type]
            };
          }
        }
        var asArray = new Uint8Array(data);
        var type = asArray[0];
        var rest = sliceBuffer(data, 1);
        if (Blob && binaryType === 'blob') {
          rest = new Blob([rest]);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePacket"},');

        return {
          type: packetslist[type],
          data: rest
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePacket"},');

      };
      function tryDecode(data) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"tryDecode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        try {
          data = utf8.decode(data, {
            strict: false
          });
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"tryDecode"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"tryDecode"},');

        return data;
                SRTlib.send('{"type":"FUNCTIONEND","function":"tryDecode","paramsNumber":1},');

      }
      exports.decodeBase64Packet = function (msg, binaryType) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.decodeBase64Packet","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var type = packetslist[msg.charAt(0)];
        if (!base64encoder) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodeBase64Packet"},');

          return {
            type: type,
            data: {
              base64: true,
              data: msg.substr(1)
            }
          };
        }
        var data = base64encoder.decode(msg.substr(1));
        if (binaryType === 'blob' && Blob) {
          data = new Blob([data]);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodeBase64Packet"},');

        return {
          type: type,
          data: data
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodeBase64Packet"},');

      };
      exports.encodePayload = function (packets, supportsBinary, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodePayload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (typeof supportsBinary === 'function') {
          callback = supportsBinary;
          supportsBinary = null;
        }
        var isBinary = hasBinary(packets);
        if (supportsBinary && isBinary) {
          if (Blob && !dontSendBlobs) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayload"},');

            return exports.encodePayloadAsBlob(packets, callback);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayload"},');

          return exports.encodePayloadAsArrayBuffer(packets, callback);
        }
        if (!packets.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayload"},');

          return callback('0:');
        }
        function setLengthHeader(message) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"setLengthHeader","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"setLengthHeader"},');

          return message.length + ':' + message;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"setLengthHeader","paramsNumber":1},');

        }
        function encodeOne(packet, doneCallback) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeOne","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"exports.encodePacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            doneCallback(null, setLengthHeader(message));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"exports.encodePacket"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encodeOne","paramsNumber":2},');

        }
        map(packets, encodeOne, function (err, results) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodePayload.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayload.map"},');

          return callback(results.join(''));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayload.map"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayload"},');

      };
      function map(ary, each, done) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var result = new Array(ary.length);
        var next = after(ary.length, done);
        var eachWithIndex = function (i, el, cb) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"eachWithIndex","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          each(el, function (error, msg) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"eachWithIndex.each","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            result[i] = msg;
            cb(error, result);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"eachWithIndex.each"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"eachWithIndex"},');

        };
        for (var i = 0; i < ary.length; i++) {
          eachWithIndex(i, ary[i], next);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"map","paramsNumber":3},');

      }
      exports.decodePayload = function (data, binaryType, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.decodePayload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (typeof data !== 'string') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayload"},');

          return exports.decodePayloadAsBinary(data, binaryType, callback);
        }
        if (typeof binaryType === 'function') {
          callback = binaryType;
          binaryType = null;
        }
        var packet;
        if (data === '') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayload"},');

          return callback(err, 0, 1);
        }
        var length = '', n, msg;
        for (var i = 0, l = data.length; i < l; i++) {
          var chr = data.charAt(i);
          if (chr !== ':') {
            length += chr;
            continue;
          }
          if (length === '' || length != (n = Number(length))) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayload"},');

            return callback(err, 0, 1);
          }
          msg = data.substr(i + 1, n);
          if (length != msg.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayload"},');

            return callback(err, 0, 1);
          }
          if (msg.length) {
            packet = exports.decodePacket(msg, binaryType, false);
            if (err.type === packet.type && err.data === packet.data) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayload"},');

              return callback(err, 0, 1);
            }
            var ret = callback(packet, i + n, l);
            if (false === ret) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayload"},');

              return;
            }
          }
          i += n;
          length = '';
        }
        if (length !== '') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayload"},');

          return callback(err, 0, 1);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayload"},');

      };
      exports.encodePayloadAsArrayBuffer = function (packets, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodePayloadAsArrayBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!packets.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsArrayBuffer"},');

          return callback(new ArrayBuffer(0));
        }
        function encodeOne(packet, doneCallback) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeOne","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          exports.encodePacket(packet, true, true, function (data) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"exports.encodePacket###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"exports.encodePacket###2"},');

            return doneCallback(null, data);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"exports.encodePacket###2"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encodeOne","paramsNumber":2},');

        }
        map(packets, encodeOne, function (err, encodedPackets) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodePayloadAsArrayBuffer.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var totalLength = encodedPackets.reduce(function (acc, p) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodePayloadAsArrayBuffer.map.totalLength.encodedPackets.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var len;
            if (typeof p === 'string') {
              len = p.length;
            } else {
              len = p.byteLength;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsArrayBuffer.map.totalLength.encodedPackets.reduce"},');

            return acc + len.toString().length + len + 2;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsArrayBuffer.map.totalLength.encodedPackets.reduce"},');

          }, 0);
          var resultArray = new Uint8Array(totalLength);
          var bufferIndex = 0;
          encodedPackets.forEach(function (p) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodePayloadAsArrayBuffer.map.encodedPackets.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var isString = typeof p === 'string';
            var ab = p;
            if (isString) {
              var view = new Uint8Array(p.length);
              for (var i = 0; i < p.length; i++) {
                view[i] = p.charCodeAt(i);
              }
              ab = view.buffer;
            }
            if (isString) {
              resultArray[bufferIndex++] = 0;
            } else {
              resultArray[bufferIndex++] = 1;
            }
            var lenStr = ab.byteLength.toString();
            for (var i = 0; i < lenStr.length; i++) {
              resultArray[bufferIndex++] = parseInt(lenStr[i]);
            }
            resultArray[bufferIndex++] = 255;
            var view = new Uint8Array(ab);
            for (var i = 0; i < view.length; i++) {
              resultArray[bufferIndex++] = view[i];
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsArrayBuffer.map.encodedPackets.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsArrayBuffer.map"},');

          return callback(resultArray.buffer);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsArrayBuffer.map"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsArrayBuffer"},');

      };
      exports.encodePayloadAsBlob = function (packets, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodePayloadAsBlob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        function encodeOne(packet, doneCallback) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeOne","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          exports.encodePacket(packet, true, true, function (encoded) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"exports.encodePacket###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var binaryIdentifier = new Uint8Array(1);
            binaryIdentifier[0] = 1;
            if (typeof encoded === 'string') {
              var view = new Uint8Array(encoded.length);
              for (var i = 0; i < encoded.length; i++) {
                view[i] = encoded.charCodeAt(i);
              }
              encoded = view.buffer;
              binaryIdentifier[0] = 0;
            }
            var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;
            var lenStr = len.toString();
            var lengthAry = new Uint8Array(lenStr.length + 1);
            for (var i = 0; i < lenStr.length; i++) {
              lengthAry[i] = parseInt(lenStr[i]);
            }
            lengthAry[lenStr.length] = 255;
            if (Blob) {
              var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
              doneCallback(null, blob);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"exports.encodePacket###3"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encodeOne","paramsNumber":2},');

        }
        map(packets, encodeOne, function (err, results) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encodePayloadAsBlob.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsBlob.map"},');

          return callback(new Blob(results));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsBlob.map"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encodePayloadAsBlob"},');

      };
      exports.decodePayloadAsBinary = function (data, binaryType, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.decodePayloadAsBinary","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (typeof binaryType === 'function') {
          callback = binaryType;
          binaryType = null;
        }
        var bufferTail = data;
        var buffers = [];
        while (bufferTail.byteLength > 0) {
          var tailArray = new Uint8Array(bufferTail);
          var isString = tailArray[0] === 0;
          var msgLength = '';
          for (var i = 1; ; i++) {
            if (tailArray[i] === 255) break;
            if (msgLength.length > 310) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayloadAsBinary"},');

              return callback(err, 0, 1);
            }
            msgLength += tailArray[i];
          }
          bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
          msgLength = parseInt(msgLength);
          var msg = sliceBuffer(bufferTail, 0, msgLength);
          if (isString) {
            try {
              msg = String.fromCharCode.apply(null, new Uint8Array(msg));
            } catch (e) {
              var typed = new Uint8Array(msg);
              msg = '';
              for (var i = 0; i < typed.length; i++) {
                msg += String.fromCharCode(typed[i]);
              }
            }
          }
          buffers.push(msg);
          bufferTail = sliceBuffer(bufferTail, msgLength);
        }
        var total = buffers.length;
        buffers.forEach(function (buffer, i) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.decodePayloadAsBinary.buffers.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          callback(exports.decodePacket(buffer, binaryType, true), i, total);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayloadAsBinary.buffers.forEach"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decodePayloadAsBinary"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###33"},');

    }, {
      "./keys": 31,
      "./utf8": 32,
      "after": 1,
      "arraybuffer.slice": 2,
      "base64-arraybuffer": 4,
      "blob": 6,
      "has-binary2": 35
    }],
    31: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###34","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = Object.keys || (function keys(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var arr = [];
        var has = Object.prototype.hasOwnProperty;
        for (var i in obj) {
          if (has.call(obj, i)) {
            arr.push(i);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###9"},');

        return arr;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###9"},');

      });
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###34"},');

    }, {}],
    32: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###35","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var stringFromCharCode = String.fromCharCode;
      function ucs2decode(string) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ucs2decode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var output = [];
        var counter = 0;
        var length = string.length;
        var value;
        var extra;
        while (counter < length) {
          value = string.charCodeAt(counter++);
          if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
            extra = string.charCodeAt(counter++);
            if ((extra & 0xFC00) == 0xDC00) {
              output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
            } else {
              output.push(value);
              counter--;
            }
          } else {
            output.push(value);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ucs2decode"},');

        return output;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ucs2decode","paramsNumber":1},');

      }
      function ucs2encode(array) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ucs2encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var length = array.length;
        var index = -1;
        var value;
        var output = '';
        while (++index < length) {
          value = array[index];
          if (value > 0xFFFF) {
            value -= 0x10000;
            output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
            value = 0xDC00 | value & 0x3FF;
          }
          output += stringFromCharCode(value);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ucs2encode"},');

        return output;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ucs2encode","paramsNumber":1},');

      }
      function checkScalarValue(codePoint, strict) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"checkScalarValue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
          if (strict) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"checkScalarValue"},');

            throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"checkScalarValue"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"checkScalarValue"},');

        return true;
                SRTlib.send('{"type":"FUNCTIONEND","function":"checkScalarValue","paramsNumber":2},');

      }
      function createByte(codePoint, shift) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createByte","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"createByte"},');

        return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);
                SRTlib.send('{"type":"FUNCTIONEND","function":"createByte","paramsNumber":2},');

      }
      function encodeCodePoint(codePoint, strict) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeCodePoint","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if ((codePoint & 0xFFFFFF80) == 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encodeCodePoint"},');

          return stringFromCharCode(codePoint);
        }
        var symbol = '';
        if ((codePoint & 0xFFFFF800) == 0) {
          symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);
        } else if ((codePoint & 0xFFFF0000) == 0) {
          if (!checkScalarValue(codePoint, strict)) {
            codePoint = 0xFFFD;
          }
          symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);
          symbol += createByte(codePoint, 6);
        } else if ((codePoint & 0xFFE00000) == 0) {
          symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);
          symbol += createByte(codePoint, 12);
          symbol += createByte(codePoint, 6);
        }
        symbol += stringFromCharCode(codePoint & 0x3F | 0x80);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeCodePoint"},');

        return symbol;
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeCodePoint","paramsNumber":2},');

      }
      function utf8encode(string, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"utf8encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        opts = opts || ({});
        var strict = false !== opts.strict;
        var codePoints = ucs2decode(string);
        var length = codePoints.length;
        var index = -1;
        var codePoint;
        var byteString = '';
        while (++index < length) {
          codePoint = codePoints[index];
          byteString += encodeCodePoint(codePoint, strict);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"utf8encode"},');

        return byteString;
                SRTlib.send('{"type":"FUNCTIONEND","function":"utf8encode","paramsNumber":2},');

      }
      function readContinuationByte() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"readContinuationByte","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (byteIndex >= byteCount) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"readContinuationByte"},');

          throw Error('Invalid byte index');
        }
        var continuationByte = byteArray[byteIndex] & 0xFF;
        byteIndex++;
        if ((continuationByte & 0xC0) == 0x80) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"readContinuationByte"},');

          return continuationByte & 0x3F;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"readContinuationByte"},');

        throw Error('Invalid continuation byte');
                SRTlib.send('{"type":"FUNCTIONEND","function":"readContinuationByte","paramsNumber":0},');

      }
      function decodeSymbol(strict) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"decodeSymbol","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var byte1;
        var byte2;
        var byte3;
        var byte4;
        var codePoint;
        if (byteIndex > byteCount) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol"},');

          throw Error('Invalid byte index');
        }
        if (byteIndex == byteCount) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol"},');

          return false;
        }
        byte1 = byteArray[byteIndex] & 0xFF;
        byteIndex++;
        if ((byte1 & 0x80) == 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol"},');

          return byte1;
        }
        if ((byte1 & 0xE0) == 0xC0) {
          byte2 = readContinuationByte();
          codePoint = (byte1 & 0x1F) << 6 | byte2;
          if (codePoint >= 0x80) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol"},');

            return codePoint;
          } else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol"},');

            throw Error('Invalid continuation byte');
          }
        }
        if ((byte1 & 0xF0) == 0xE0) {
          byte2 = readContinuationByte();
          byte3 = readContinuationByte();
          codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;
          if (codePoint >= 0x0800) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol"},');

            return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;
          } else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol"},');

            throw Error('Invalid continuation byte');
          }
        }
        if ((byte1 & 0xF8) == 0xF0) {
          byte2 = readContinuationByte();
          byte3 = readContinuationByte();
          byte4 = readContinuationByte();
          codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;
          if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol"},');

            return codePoint;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol"},');

        throw Error('Invalid UTF-8 detected');
                SRTlib.send('{"type":"FUNCTIONEND","function":"decodeSymbol","paramsNumber":1},');

      }
      var byteArray;
      var byteCount;
      var byteIndex;
      function utf8decode(byteString, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"utf8decode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        opts = opts || ({});
        var strict = false !== opts.strict;
        byteArray = ucs2decode(byteString);
        byteCount = byteArray.length;
        byteIndex = 0;
        var codePoints = [];
        var tmp;
        while ((tmp = decodeSymbol(strict)) !== false) {
          codePoints.push(tmp);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"utf8decode"},');

        return ucs2encode(codePoints);
                SRTlib.send('{"type":"FUNCTIONEND","function":"utf8decode","paramsNumber":2},');

      }
      module.exports = {
        version: '2.1.2',
        encode: utf8encode,
        decode: utf8decode
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###35"},');

    }, {}],
    33: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###36","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      var hasOwn = Object.prototype.hasOwnProperty;
      var toStr = Object.prototype.toString;
      var defineProperty = Object.defineProperty;
      var gOPD = Object.getOwnPropertyDescriptor;
      var isArray = function isArray(arr) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isArray","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (typeof Array.isArray === 'function') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isArray"},');

          return Array.isArray(arr);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"isArray"},');

        return toStr.call(arr) === '[object Array]';
                SRTlib.send('{"type":"FUNCTIONEND","function":"isArray"},');

      };
      var isPlainObject = function isPlainObject(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isPlainObject","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!obj || toStr.call(obj) !== '[object Object]') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isPlainObject"},');

          return false;
        }
        var hasOwnConstructor = hasOwn.call(obj, 'constructor');
        var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isPlainObject"},');

          return false;
        }
        var key;
        for (key in obj) {}
                SRTlib.send('{"type":"FUNCTIONEND","function":"isPlainObject"},');

        return typeof key === 'undefined' || hasOwn.call(obj, key);
                SRTlib.send('{"type":"FUNCTIONEND","function":"isPlainObject"},');

      };
      var setProperty = function setProperty(target, options) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"setProperty","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (defineProperty && options.name === '__proto__') {
          defineProperty(target, options.name, {
            enumerable: true,
            configurable: true,
            value: options.newValue,
            writable: true
          });
        } else {
          target[options.name] = options.newValue;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"setProperty"},');

      };
      var getProperty = function getProperty(obj, name) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getProperty","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (name === '__proto__') {
          if (!hasOwn.call(obj, name)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getProperty"},');

            return void 0;
          } else if (gOPD) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getProperty"},');

            return gOPD(obj, name).value;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"getProperty"},');

        return obj[name];
                SRTlib.send('{"type":"FUNCTIONEND","function":"getProperty"},');

      };
      module.exports = function extend() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var options, name, src, copy, copyIsArray, clone;
        var target = arguments[0];
        var i = 1;
        var length = arguments.length;
        var deep = false;
        if (typeof target === 'boolean') {
          deep = target;
          target = arguments[1] || ({});
          i = 2;
        }
        if (target == null || typeof target !== 'object' && typeof target !== 'function') {
          target = {};
        }
        for (; i < length; ++i) {
          options = arguments[i];
          if (options != null) {
            for (name in options) {
              src = getProperty(target, name);
              copy = getProperty(options, name);
              if (target !== copy) {
                if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
                  if (copyIsArray) {
                    copyIsArray = false;
                    clone = src && isArray(src) ? src : [];
                  } else {
                    clone = src && isPlainObject(src) ? src : {};
                  }
                  setProperty(target, {
                    name: name,
                    newValue: extend(deep, clone, copy)
                  });
                } else if (typeof copy !== 'undefined') {
                  setProperty(target, {
                    name: name,
                    newValue: copy
                  });
                }
              }
            }
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###10"},');

        return target;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###10"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###36"},');

    }, {}],
    34: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###37","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      exports.__esModule = true;
      exports.default = getFormData;
      exports.getFieldData = getFieldData;
      var NODE_LIST_CLASSES = {
        '[object HTMLCollection]': true,
        '[object NodeList]': true,
        '[object RadioNodeList]': true
      };
      var IGNORED_ELEMENT_TYPES = {
        'button': true,
        'fieldset': true,
        'reset': true,
        'submit': true
      };
      var CHECKED_INPUT_TYPES = {
        'checkbox': true,
        'radio': true
      };
      var TRIM_RE = /^\s+|\s+$/g;
      var slice = Array.prototype.slice;
      var toString = Object.prototype.toString;
      function getFormData(form) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getFormData","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
          trim: false
        };
        if (!form) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getFormData"},');

          throw new Error('A form is required by getFormData, was given form=' + form);
        }
        var data = {};
        var elementName = void 0;
        var elementNames = [];
        var elementNameLookup = {};
        for (var i = 0, l = form.elements.length; i < l; i++) {
          var element = form.elements[i];
          if (IGNORED_ELEMENT_TYPES[element.type] || element.disabled) {
            continue;
          }
          elementName = element.name || element.id;
          if (elementName && !elementNameLookup[elementName]) {
            elementNames.push(elementName);
            elementNameLookup[elementName] = true;
          }
        }
        for (var _i = 0, _l = elementNames.length; _i < _l; _i++) {
          elementName = elementNames[_i];
          var value = getFieldData(form, elementName, options);
          if (value != null) {
            data[elementName] = value;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"getFormData"},');

        return data;
                SRTlib.send('{"type":"FUNCTIONEND","function":"getFormData","paramsNumber":1},');

      }
      function getFieldData(form, fieldName) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getFieldData","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
          trim: false
        };
        if (!form) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getFieldData"},');

          throw new Error('A form is required by getFieldData, was given form=' + form);
        }
        if (!fieldName && toString.call(fieldName) !== '[object String]') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getFieldData"},');

          throw new Error('A field name is required by getFieldData, was given fieldName=' + fieldName);
        }
        var element = form.elements[fieldName];
        if (!element || element.disabled) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getFieldData"},');

          return null;
        }
        if (!NODE_LIST_CLASSES[toString.call(element)]) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getFieldData"},');

          return getFormElementValue(element, options.trim);
        }
        var data = [];
        var allRadios = true;
        for (var i = 0, l = element.length; i < l; i++) {
          if (element[i].disabled) {
            continue;
          }
          if (allRadios && element[i].type !== 'radio') {
            allRadios = false;
          }
          var value = getFormElementValue(element[i], options.trim);
          if (value != null) {
            data = data.concat(value);
          }
        }
        if (allRadios && data.length === 1) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getFieldData"},');

          return data[0];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"getFieldData"},');

        return data.length > 0 ? data : null;
                SRTlib.send('{"type":"FUNCTIONEND","function":"getFieldData","paramsNumber":2},');

      }
      function getFormElementValue(element, trim) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getFormElementValue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var value = null;
        var type = element.type;
        if (type === 'select-one') {
          if (element.options.length) {
            value = element.options[element.selectedIndex].value;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getFormElementValue"},');

          return value;
        }
        if (type === 'select-multiple') {
          value = [];
          for (var i = 0, l = element.options.length; i < l; i++) {
            if (element.options[i].selected) {
              value.push(element.options[i].value);
            }
          }
          if (value.length === 0) {
            value = null;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getFormElementValue"},');

          return value;
        }
        if (type === 'file' && ('files' in element)) {
          if (element.multiple) {
            value = slice.call(element.files);
            if (value.length === 0) {
              value = null;
            }
          } else {
            value = element.files[0];
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getFormElementValue"},');

          return value;
        }
        if (!CHECKED_INPUT_TYPES[type]) {
          value = trim ? element.value.replace(TRIM_RE, '') : element.value;
        } else if (element.checked) {
          value = element.value;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"getFormElementValue"},');

        return value;
                SRTlib.send('{"type":"FUNCTIONEND","function":"getFormElementValue","paramsNumber":2},');

      }
      getFormData.getFieldData = getFieldData;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###37"},');

    }, {}],
    35: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###38","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (Buffer) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var isArray = require('isarray');
        var toString = Object.prototype.toString;
        var withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
        var withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';
        module.exports = hasBinary;
        function hasBinary(obj) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"hasBinary","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (!obj || typeof obj !== 'object') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"hasBinary"},');

            return false;
          }
          if (isArray(obj)) {
            for (var i = 0, l = obj.length; i < l; i++) {
              if (hasBinary(obj[i])) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"hasBinary"},');

                return true;
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"hasBinary"},');

            return false;
          }
          if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) || typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"hasBinary"},');

            return true;
          }
          if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"hasBinary"},');

            return hasBinary(obj.toJSON(), true);
          }
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"hasBinary"},');

              return true;
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"hasBinary"},');

          return false;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"hasBinary","paramsNumber":1},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###5"},');

      }).call(this, require("buffer").Buffer);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###38"},');

    }, {
      "buffer": 8,
      "isarray": 36
    }],
    36: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###39","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var toString = ({}).toString;
      module.exports = Array.isArray || (function (arr) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###11"},');

        return toString.call(arr) == '[object Array]';
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###11"},');

      });
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###39"},');

    }, {}],
    37: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###40","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      try {
        module.exports = typeof XMLHttpRequest !== 'undefined' && ('withCredentials' in new XMLHttpRequest());
      } catch (err) {
        module.exports = false;
      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###40"},');

    }, {}],
    38: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###41","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      exports.read = function (buffer, offset, isLE, mLen, nBytes) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.read","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

        var e, m;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var nBits = -7;
        var i = isLE ? nBytes - 1 : 0;
        var d = isLE ? -1 : 1;
        var s = buffer[offset + i];
        i += d;
        e = s & (1 << -nBits) - 1;
        s >>= -nBits;
        nBits += eLen;
        for (; nBits > 0; (e = e * 256 + buffer[offset + i], i += d, nBits -= 8)) {}
        m = e & (1 << -nBits) - 1;
        e >>= -nBits;
        nBits += mLen;
        for (; nBits > 0; (m = m * 256 + buffer[offset + i], i += d, nBits -= 8)) {}
        if (e === 0) {
          e = 1 - eBias;
        } else if (e === eMax) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.read"},');

          return m ? NaN : (s ? -1 : 1) * Infinity;
        } else {
          m = m + Math.pow(2, mLen);
          e = e - eBias;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.read"},');

        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.read"},');

      };
      exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.write","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":6},`);

        var e, m, c;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
        var i = isLE ? 0 : nBytes - 1;
        var d = isLE ? 1 : -1;
        var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
        value = Math.abs(value);
        if (isNaN(value) || value === Infinity) {
          m = isNaN(value) ? 1 : 0;
          e = eMax;
        } else {
          e = Math.floor(Math.log(value) / Math.LN2);
          if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
          }
          if (e + eBias >= 1) {
            value += rt / c;
          } else {
            value += rt * Math.pow(2, 1 - eBias);
          }
          if (value * c >= 2) {
            e++;
            c /= 2;
          }
          if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
          } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
          } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
          }
        }
        for (; mLen >= 8; (buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8)) {}
        e = e << mLen | m;
        eLen += mLen;
        for (; eLen > 0; (buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8)) {}
        buffer[offset + i - d] |= s * 128;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.write"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###41"},');

    }, {}],
    39: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###42","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var indexOf = [].indexOf;
      module.exports = function (arr, obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (indexOf) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###12"},');

          return arr.indexOf(obj);
        }
        for (var i = 0; i < arr.length; ++i) {
          if (arr[i] === obj) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###12"},');

            return i;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###12"},');

        return -1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###12"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###42"},');

    }, {}],
    40: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###43","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function isShallowEqual(a, b) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (a === b) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###13"},');

          return true;
        }
        for (var i in a) if (!((i in b))) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###13"},');

          return false;
        }
        for (var i in b) if (a[i] !== b[i]) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###13"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###13"},');

        return true;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###13"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###43"},');

    }, {}],
    41: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###44","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (global) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        ;
        (function (global, factory) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(global) : typeof define === 'function' && define.amd ? define(factory) : factory(global);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###6"},');

        })(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this, function (global) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          'use strict';
          global = global || ({});
          var _Base64 = global.Base64;
          var version = "2.5.2";
          var buffer;
          if (typeof module !== 'undefined' && module.exports) {
            try {
              buffer = eval("require('buffer').Buffer");
            } catch (err) {
              buffer = undefined;
            }
          }
          var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
          var b64tab = (function (bin) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.b64tab","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = {};
            for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.b64tab"},');

            return t;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.b64tab"},');

          })(b64chars);
          var fromCharCode = String.fromCharCode;
          var cb_utob = function (c) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cb_utob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (c.length < 2) {
              var cc = c.charCodeAt(0);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"cb_utob"},');

              return cc < 0x80 ? c : cc < 0x800 ? fromCharCode(0xc0 | cc >>> 6) + fromCharCode(0x80 | cc & 0x3f) : fromCharCode(0xe0 | cc >>> 12 & 0x0f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);
            } else {
              var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"cb_utob"},');

              return fromCharCode(0xf0 | cc >>> 18 & 0x07) + fromCharCode(0x80 | cc >>> 12 & 0x3f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"cb_utob"},');

          };
          var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
          var utob = function (u) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"utob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"utob"},');

            return u.replace(re_utob, cb_utob);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"utob"},');

          };
          var cb_encode = function (ccc) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cb_encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var padlen = [0, 2, 1][ccc.length % 3], ord = ccc.charCodeAt(0) << 16 | (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (ccc.length > 2 ? ccc.charCodeAt(2) : 0), chars = [b64chars.charAt(ord >>> 18), b64chars.charAt(ord >>> 12 & 63), padlen >= 2 ? '=' : b64chars.charAt(ord >>> 6 & 63), padlen >= 1 ? '=' : b64chars.charAt(ord & 63)];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"cb_encode"},');

            return chars.join('');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"cb_encode"},');

          };
          var btoa = global.btoa ? function (b) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.btoa","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.btoa"},');

            return global.btoa(b);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.btoa"},');

          } : function (b) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.btoa###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.btoa###2"},');

            return b.replace(/[\s\S]{1,3}/g, cb_encode);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.btoa###2"},');

          };
          var _encode = function (u) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var isUint8Array = Object.prototype.toString.call(u) === '[object Uint8Array]';
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_encode"},');

            return isUint8Array ? u.toString('base64') : btoa(utob(String(u)));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_encode"},');

          };
          var encode = function (u, urisafe) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"encode"},');

            return !urisafe ? _encode(u) : _encode(String(u)).replace(/[+\/]/g, function (m0) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.encode.ReturnStatement._encode.replace.replace._encode.replace","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.encode.ReturnStatement._encode.replace.replace._encode.replace"},');

              return m0 == '+' ? '-' : '_';
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.encode.ReturnStatement._encode.replace.replace._encode.replace"},');

            }).replace(/=/g, '');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"encode"},');

          };
          var encodeURI = function (u) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeURI","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"encodeURI"},');

            return encode(u, true);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"encodeURI"},');

          };
          var re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
          var cb_btou = function (cccc) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cb_btou","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            switch (cccc.length) {
              case 4:
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###44"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###8"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###7"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"cb_btou"},');

                var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3), offset = cp - 0x10000;
                return fromCharCode((offset >>> 10) + 0xD800) + fromCharCode((offset & 0x3FF) + 0xDC00);
              case 3:
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###44"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###8"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###7"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"cb_btou"},');

                return fromCharCode((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));
              default:
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###44"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###8"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###7"},');

                                SRTlib.send('{"type":"FUNCTIONEND","function":"cb_btou"},');

                return fromCharCode((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"cb_btou"},');

          };
          var btou = function (b) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"btou","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"btou"},');

            return b.replace(re_btou, cb_btou);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"btou"},');

          };
          var cb_decode = function (cccc) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cb_decode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var len = cccc.length, padlen = len % 4, n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? b64tab[cccc.charAt(3)] : 0), chars = [fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 0xff), fromCharCode(n & 0xff)];
            chars.length -= [0, 0, 2, 1][padlen];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"cb_decode"},');

            return chars.join('');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"cb_decode"},');

          };
          var _atob = global.atob ? function (a) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call._atob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._atob"},');

            return global.atob(a);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._atob"},');

          } : function (a) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call._atob###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._atob###2"},');

            return a.replace(/\S{1,4}/g, cb_decode);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._atob###2"},');

          };
          var atob = function (a) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"atob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"atob"},');

            return _atob(String(a).replace(/[^A-Za-z0-9\+\/]/g, ''));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"atob"},');

          };
          var _decode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function (a) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call._decode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._decode"},');

            return (a.constructor === buffer.constructor ? a : buffer.from(a, 'base64')).toString();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._decode"},');

          } : function (a) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call._decode###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._decode###2"},');

            return (a.constructor === buffer.constructor ? a : new buffer(a, 'base64')).toString();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._decode###2"},');

          } : function (a) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call._decode###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._decode###3"},');

            return btou(_atob(a));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._decode###3"},');

          };
          var decode = function (a) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"decode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"decode"},');

            return _decode(String(a).replace(/[-_]/g, function (m0) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.decode.ReturnStatement._decode.String.replace.replace.String.replace","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.decode.ReturnStatement._decode.String.replace.replace.String.replace"},');

              return m0 == '-' ? '+' : '/';
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.decode.ReturnStatement._decode.String.replace.replace.String.replace"},');

            }).replace(/[^A-Za-z0-9\+\/]/g, ''));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"decode"},');

          };
          var noConflict = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"noConflict","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var Base64 = global.Base64;
            global.Base64 = _Base64;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"noConflict"},');

            return Base64;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"noConflict"},');

          };
          global.Base64 = {
            VERSION: version,
            atob: atob,
            btoa: btoa,
            fromBase64: decode,
            toBase64: encode,
            utob: utob,
            encode: encode,
            encodeURI: encodeURI,
            btou: btou,
            decode: decode,
            noConflict: noConflict,
            __buffer__: buffer
          };
          if (typeof Object.defineProperty === 'function') {
            var noEnum = function (v) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"noEnum","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"noEnum"},');

              return {
                value: v,
                enumerable: false,
                writable: true,
                configurable: true
              };
                            SRTlib.send('{"type":"FUNCTIONEND","function":"noEnum"},');

            };
            global.Base64.extendString = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.global.Base64.extendString","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              Object.defineProperty(String.prototype, 'fromBase64', noEnum(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.global.Base64.extendString.Object.defineProperty.noEnum","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global.Base64.extendString.Object.defineProperty.noEnum"},');

                return decode(this);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global.Base64.extendString.Object.defineProperty.noEnum"},');

              }));
              Object.defineProperty(String.prototype, 'toBase64', noEnum(function (urisafe) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.global.Base64.extendString.Object.defineProperty.noEnum###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global.Base64.extendString.Object.defineProperty.noEnum###2"},');

                return encode(this, urisafe);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global.Base64.extendString.Object.defineProperty.noEnum###2"},');

              }));
              Object.defineProperty(String.prototype, 'toBase64URI', noEnum(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.global.Base64.extendString.Object.defineProperty.noEnum###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global.Base64.extendString.Object.defineProperty.noEnum###3"},');

                return encode(this, true);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global.Base64.extendString.Object.defineProperty.noEnum###3"},');

              }));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global.Base64.extendString"},');

            };
          }
          if (global['Meteor']) {
            Base64 = global.Base64;
          }
          if (typeof module !== 'undefined' && module.exports) {
            module.exports.Base64 = global.Base64;
          } else if (typeof define === 'function' && define.amd) {
            define([], function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.define","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.define"},');

              return global.Base64;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.define"},');

            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###7"},');

          return {
            Base64: global.Base64
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###7"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###8"},');

      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###44"},');

    }, {}],
    42: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###45","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (global) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var FUNC_ERROR_TEXT = 'Expected a function';
        var NAN = 0 / 0;
        var symbolTag = '[object Symbol]';
        var reTrim = /^\s+|\s+$/g;
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
        var reIsBinary = /^0b[01]+$/i;
        var reIsOctal = /^0o[0-7]+$/i;
        var freeParseInt = parseInt;
        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
        var root = freeGlobal || freeSelf || Function('return this')();
        var objectProto = Object.prototype;
        var objectToString = objectProto.toString;
        var nativeMax = Math.max, nativeMin = Math.min;
        var now = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"now","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"now"},');

          return root.Date.now();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"now"},');

        };
        function debounce(func, wait, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"debounce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != 'function') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"debounce"},');

            throw new TypeError(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = ('maxWait' in options);
            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
            trailing = ('trailing' in options) ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"invokeFunc","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined;
            lastInvokeTime = time;
            result = func.apply(thisArg, args);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"invokeFunc"},');

            return result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"invokeFunc","paramsNumber":1},');

          }
          function leadingEdge(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"leadingEdge","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            lastInvokeTime = time;
            timerId = setTimeout(timerExpired, wait);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"leadingEdge"},');

            return leading ? invokeFunc(time) : result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"leadingEdge","paramsNumber":1},');

          }
          function remainingWait(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"remainingWait","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result = wait - timeSinceLastCall;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"remainingWait"},');

            return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"remainingWait","paramsNumber":1},');

          }
          function shouldInvoke(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"shouldInvoke","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"shouldInvoke"},');

            return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"shouldInvoke","paramsNumber":1},');

          }
          function timerExpired() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"timerExpired","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var time = now();
            if (shouldInvoke(time)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"timerExpired"},');

              return trailingEdge(time);
            }
            timerId = setTimeout(timerExpired, remainingWait(time));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"timerExpired","paramsNumber":0},');

          }
          function trailingEdge(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"trailingEdge","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            timerId = undefined;
            if (trailing && lastArgs) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"trailingEdge"},');

              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"trailingEdge"},');

            return result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"trailingEdge","paramsNumber":1},');

          }
          function cancel() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cancel","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (timerId !== undefined) {
              clearTimeout(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"cancel","paramsNumber":0},');

          }
          function flush() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"flush","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"flush"},');

            return timerId === undefined ? result : trailingEdge(now());
                        SRTlib.send('{"type":"FUNCTIONEND","function":"flush","paramsNumber":0},');

          }
          function debounced() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"debounced","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var time = now(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"debounced"},');

                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                timerId = setTimeout(timerExpired, wait);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"debounced"},');

                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined) {
              timerId = setTimeout(timerExpired, wait);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"debounced"},');

            return result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"debounced","paramsNumber":0},');

          }
          debounced.cancel = cancel;
          debounced.flush = flush;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"debounce"},');

          return debounced;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"debounce","paramsNumber":3},');

        }
        function isObject(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isObject","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var type = typeof value;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isObject"},');

          return !!value && (type == 'object' || type == 'function');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isObject","paramsNumber":1},');

        }
        function isObjectLike(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isObjectLike","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isObjectLike"},');

          return !!value && typeof value == 'object';
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isObjectLike","paramsNumber":1},');

        }
        function isSymbol(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isSymbol","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isSymbol"},');

          return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isSymbol","paramsNumber":1},');

        }
        function toNumber(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"toNumber","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (typeof value == 'number') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber"},');

            return value;
          }
          if (isSymbol(value)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber"},');

            return NAN;
          }
          if (isObject(value)) {
            var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
            value = isObject(other) ? other + '' : other;
          }
          if (typeof value != 'string') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber"},');

            return value === 0 ? value : +value;
          }
          value = value.replace(reTrim, '');
          var isBinary = reIsBinary.test(value);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber"},');

          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber","paramsNumber":1},');

        }
        module.exports = debounce;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###9"},');

      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###45"},');

    }, {}],
    43: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###46","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (global) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var FUNC_ERROR_TEXT = 'Expected a function';
        var NAN = 0 / 0;
        var symbolTag = '[object Symbol]';
        var reTrim = /^\s+|\s+$/g;
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
        var reIsBinary = /^0b[01]+$/i;
        var reIsOctal = /^0o[0-7]+$/i;
        var freeParseInt = parseInt;
        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
        var root = freeGlobal || freeSelf || Function('return this')();
        var objectProto = Object.prototype;
        var objectToString = objectProto.toString;
        var nativeMax = Math.max, nativeMin = Math.min;
        var now = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"now","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"now"},');

          return root.Date.now();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"now"},');

        };
        function debounce(func, wait, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"debounce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != 'function') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"debounce"},');

            throw new TypeError(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = ('maxWait' in options);
            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
            trailing = ('trailing' in options) ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"invokeFunc","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined;
            lastInvokeTime = time;
            result = func.apply(thisArg, args);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"invokeFunc"},');

            return result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"invokeFunc","paramsNumber":1},');

          }
          function leadingEdge(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"leadingEdge","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            lastInvokeTime = time;
            timerId = setTimeout(timerExpired, wait);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"leadingEdge"},');

            return leading ? invokeFunc(time) : result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"leadingEdge","paramsNumber":1},');

          }
          function remainingWait(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"remainingWait","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result = wait - timeSinceLastCall;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"remainingWait"},');

            return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"remainingWait","paramsNumber":1},');

          }
          function shouldInvoke(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"shouldInvoke","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"shouldInvoke"},');

            return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"shouldInvoke","paramsNumber":1},');

          }
          function timerExpired() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"timerExpired","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var time = now();
            if (shouldInvoke(time)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"timerExpired"},');

              return trailingEdge(time);
            }
            timerId = setTimeout(timerExpired, remainingWait(time));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"timerExpired","paramsNumber":0},');

          }
          function trailingEdge(time) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"trailingEdge","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            timerId = undefined;
            if (trailing && lastArgs) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"trailingEdge"},');

              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"trailingEdge"},');

            return result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"trailingEdge","paramsNumber":1},');

          }
          function cancel() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cancel","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (timerId !== undefined) {
              clearTimeout(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"cancel","paramsNumber":0},');

          }
          function flush() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"flush","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"flush"},');

            return timerId === undefined ? result : trailingEdge(now());
                        SRTlib.send('{"type":"FUNCTIONEND","function":"flush","paramsNumber":0},');

          }
          function debounced() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"debounced","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var time = now(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"debounced"},');

                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                timerId = setTimeout(timerExpired, wait);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"debounced"},');

                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined) {
              timerId = setTimeout(timerExpired, wait);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"debounced"},');

            return result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"debounced","paramsNumber":0},');

          }
          debounced.cancel = cancel;
          debounced.flush = flush;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"debounce"},');

          return debounced;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"debounce","paramsNumber":3},');

        }
        function throttle(func, wait, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"throttle","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var leading = true, trailing = true;
          if (typeof func != 'function') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"throttle"},');

            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (isObject(options)) {
            leading = ('leading' in options) ? !!options.leading : leading;
            trailing = ('trailing' in options) ? !!options.trailing : trailing;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"throttle"},');

          return debounce(func, wait, {
            'leading': leading,
            'maxWait': wait,
            'trailing': trailing
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"throttle","paramsNumber":3},');

        }
        function isObject(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isObject","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var type = typeof value;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isObject"},');

          return !!value && (type == 'object' || type == 'function');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isObject","paramsNumber":1},');

        }
        function isObjectLike(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isObjectLike","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isObjectLike"},');

          return !!value && typeof value == 'object';
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isObjectLike","paramsNumber":1},');

        }
        function isSymbol(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isSymbol","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isSymbol"},');

          return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isSymbol","paramsNumber":1},');

        }
        function toNumber(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"toNumber","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (typeof value == 'number') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber"},');

            return value;
          }
          if (isSymbol(value)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber"},');

            return NAN;
          }
          if (isObject(value)) {
            var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
            value = isObject(other) ? other + '' : other;
          }
          if (typeof value != 'string') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber"},');

            return value === 0 ? value : +value;
          }
          value = value.replace(reTrim, '');
          var isBinary = reIsBinary.test(value);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber"},');

          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"toNumber","paramsNumber":1},');

        }
        module.exports = throttle;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###10"},');

      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###46"},');

    }, {}],
    44: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###47","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      module.exports = Math.log2 || (function (x) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###14","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###14"},');

        return Math.log(x) * Math.LOG2E;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###14"},');

      });
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###47"},');

    }, {}],
    45: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###48","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      function areInputsEqual(newInputs, lastInputs) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"areInputsEqual","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (newInputs.length !== lastInputs.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"areInputsEqual"},');

          return false;
        }
        for (var i = 0; i < newInputs.length; i++) {
          if (newInputs[i] !== lastInputs[i]) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"areInputsEqual"},');

            return false;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"areInputsEqual"},');

        return true;
                SRTlib.send('{"type":"FUNCTIONEND","function":"areInputsEqual","paramsNumber":2},');

      }
      function memoizeOne(resultFn, isEqual) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"memoizeOne","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (isEqual === void 0) {
          isEqual = areInputsEqual;
        }
        var lastThis;
        var lastArgs = [];
        var lastResult;
        var calledOnce = false;
        function memoized() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"memoized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var newArgs = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            newArgs[_i] = arguments[_i];
          }
          if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"memoized"},');

            return lastResult;
          }
          lastResult = resultFn.apply(this, newArgs);
          calledOnce = true;
          lastThis = this;
          lastArgs = newArgs;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"memoized"},');

          return lastResult;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"memoized","paramsNumber":0},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"memoizeOne"},');

        return memoized;
                SRTlib.send('{"type":"FUNCTIONEND","function":"memoizeOne","paramsNumber":2},');

      }
      module.exports = memoizeOne;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###48"},');

    }, {}],
    46: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###49","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var wildcard = require('wildcard');
      var reMimePartSplit = /[\/\+\.]/;
      module.exports = function (target, pattern) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###15","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        function test(pattern) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"test","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var result = wildcard(pattern, target, reMimePartSplit);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"test"},');

          return result && result.length >= 2;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"test","paramsNumber":1},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###15"},');

        return pattern ? test(pattern.split(';')[0]) : test;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###15"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###49"},');

    }, {
      "wildcard": 87
    }],
    47: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###50","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function createNamespaceEmitter() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###16","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var emitter = {};
        var _fns = emitter._fns = {};
        emitter.emit = function emit(event, arg1, arg2, arg3, arg4, arg5, arg6) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.createNamespaceEmitter.emitter.emit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":7},`);

          var toEmit = getListeners(event);
          if (toEmit.length) {
            emitAll(event, toEmit, [arg1, arg2, arg3, arg4, arg5, arg6]);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.createNamespaceEmitter.emitter.emit"},');

        };
        emitter.on = function on(event, fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.createNamespaceEmitter.emitter.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!_fns[event]) {
            _fns[event] = [];
          }
          _fns[event].push(fn);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.createNamespaceEmitter.emitter.on"},');

        };
        emitter.once = function once(event, fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.createNamespaceEmitter.emitter.once","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          function one() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"one","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            fn.apply(this, arguments);
            emitter.off(event, one);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"one","paramsNumber":0},');

          }
          this.on(event, one);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.createNamespaceEmitter.emitter.once"},');

        };
        emitter.off = function off(event, fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.createNamespaceEmitter.emitter.off","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var keep = [];
          if (event && fn) {
            var fns = this._fns[event];
            var i = 0;
            var l = fns ? fns.length : 0;
            for (i; i < l; i++) {
              if (fns[i] !== fn) {
                keep.push(fns[i]);
              }
            }
          }
          keep.length ? this._fns[event] = keep : delete this._fns[event];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.createNamespaceEmitter.emitter.off"},');

        };
        function getListeners(e) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getListeners","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var out = _fns[e] ? _fns[e] : [];
          var idx = e.indexOf(':');
          var args = idx === -1 ? [e] : [e.substring(0, idx), e.substring(idx + 1)];
          var keys = Object.keys(_fns);
          var i = 0;
          var l = keys.length;
          for (i; i < l; i++) {
            var key = keys[i];
            if (key === '*') {
              out = out.concat(_fns[key]);
            }
            if (args.length === 2 && args[0] === key) {
              out = out.concat(_fns[key]);
              break;
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getListeners"},');

          return out;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getListeners","paramsNumber":1},');

        }
        function emitAll(e, fns, args) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"emitAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var i = 0;
          var l = fns.length;
          for (i; i < l; i++) {
            if (!fns[i]) break;
            fns[i].event = e;
            fns[i].apply(fns[i], args);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"emitAll","paramsNumber":3},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###16"},');

        return emitter;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###16"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###50"},');

    }, {}],
    48: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###51","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      exports.encode = function (obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.encode###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var str = '';
        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            if (str.length) str += '&';
            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encode###2"},');

        return str;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.encode###2"},');

      };
      exports.decode = function (qs) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.decode###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var qry = {};
        var pairs = qs.split('&');
        for (var i = 0, l = pairs.length; i < l; i++) {
          var pair = pairs[i].split('=');
          qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decode###2"},');

        return qry;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.decode###2"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###51"},');

    }, {}],
    49: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###52","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
      var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];
      module.exports = function parseuri(str) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###17","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var src = str, b = str.indexOf('['), e = str.indexOf(']');
        if (b != -1 && e != -1) {
          str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
        }
        var m = re.exec(str || ''), uri = {}, i = 14;
        while (i--) {
          uri[parts[i]] = m[i] || '';
        }
        if (b != -1 && e != -1) {
          uri.source = src;
          uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
          uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
          uri.ipv6uri = true;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###17"},');

        return uri;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###17"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###52"},');

    }, {}],
    50: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###55","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (global, factory) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###53","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('preact')) : typeof define === 'function' && define.amd ? define(['preact'], factory) : global.PreactCSSTransitionGroup = factory(global.preact);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###53"},');

      })(this, function (preact) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###54","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        'use strict';
        function getKey(vnode) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getKey","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"getKey"},');

          return vnode.attributes && vnode.attributes.key;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getKey","paramsNumber":1},');

        }
        function getComponentBase(component) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getComponentBase","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"getComponentBase"},');

          return component.base;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getComponentBase","paramsNumber":1},');

        }
        function onlyChild(children) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"onlyChild","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"onlyChild"},');

          return children && children[0];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onlyChild","paramsNumber":1},');

        }
        function filterNullChildren(children) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"filterNullChildren","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"filterNullChildren"},');

          return children && children.filter(function (i) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.children.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.children.filter"},');

            return i !== null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.children.filter"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"filterNullChildren","paramsNumber":1},');

        }
        function find(arr, iter) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"find","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          for (var i = arr.length; i--; ) {
            if (iter(arr[i])) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"find"},');

              return true;
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"find"},');

          return false;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"find","paramsNumber":2},');

        }
        function inChildrenByKey(children, key) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"inChildrenByKey","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"inChildrenByKey"},');

          return find(children, function (c) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.find","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.find"},');

            return getKey(c) === key;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.find"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"inChildrenByKey","paramsNumber":2},');

        }
        function inChildren(children, child) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"inChildren","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"inChildren"},');

          return inChildrenByKey(children, getKey(child));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"inChildren","paramsNumber":2},');

        }
        function isShownInChildrenByKey(children, key, showProp) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isShownInChildrenByKey","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isShownInChildrenByKey"},');

          return find(children, function (c) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.find###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.find###2"},');

            return getKey(c) === key && c.props[showProp];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.find###2"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isShownInChildrenByKey","paramsNumber":3},');

        }
        function isShownInChildren(children, child, showProp) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isShownInChildren","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isShownInChildren"},');

          return isShownInChildrenByKey(children, getKey(child), showProp);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isShownInChildren","paramsNumber":3},');

        }
        function mergeChildMappings(prev, next) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"mergeChildMappings","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var ret = [];
          var nextChildrenPending = {}, pendingChildren = [];
          prev.forEach(function (c) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"prev.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var key = getKey(c);
            if (inChildrenByKey(next, key)) {
              if (pendingChildren.length) {
                nextChildrenPending[key] = pendingChildren;
                pendingChildren = [];
              }
            } else {
              pendingChildren.push(c);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"prev.forEach"},');

          });
          next.forEach(function (c) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"next.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var key = getKey(c);
            if (nextChildrenPending.hasOwnProperty(key)) {
              ret = ret.concat(nextChildrenPending[key]);
            }
            ret.push(c);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"next.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"mergeChildMappings"},');

          return ret.concat(pendingChildren);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"mergeChildMappings","paramsNumber":2},');

        }
        var SPACE = ' ';
        var RE_CLASS = /[\n\t\r]+/g;
        var norm = function (elemClass) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"norm","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"norm"},');

          return (SPACE + elemClass + SPACE).replace(RE_CLASS, SPACE);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"norm"},');

        };
        function addClass(elem, className) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"addClass","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (elem.classList) {
            var _elem$classList;
            (_elem$classList = elem.classList).add.apply(_elem$classList, className.split(' '));
          } else {
            elem.className += ' ' + className;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"addClass","paramsNumber":2},');

        }
        function removeClass(elem, needle) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"removeClass","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          needle = needle.trim();
          if (elem.classList) {
            var _elem$classList2;
            (_elem$classList2 = elem.classList).remove.apply(_elem$classList2, needle.split(' '));
          } else {
            var elemClass = elem.className.trim();
            var className = norm(elemClass);
            needle = SPACE + needle + SPACE;
            while (className.indexOf(needle) >= 0) {
              className = className.replace(needle, SPACE);
            }
            elem.className = className.trim();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"removeClass","paramsNumber":2},');

        }
        var EVENT_NAME_MAP = {
          transitionend: {
            transition: 'transitionend',
            WebkitTransition: 'webkitTransitionEnd',
            MozTransition: 'mozTransitionEnd',
            OTransition: 'oTransitionEnd',
            msTransition: 'MSTransitionEnd'
          },
          animationend: {
            animation: 'animationend',
            WebkitAnimation: 'webkitAnimationEnd',
            MozAnimation: 'mozAnimationEnd',
            OAnimation: 'oAnimationEnd',
            msAnimation: 'MSAnimationEnd'
          }
        };
        var endEvents = [];
        function detectEvents() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"detectEvents","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var testEl = document.createElement('div'), style = testEl.style;
          if (!(('AnimationEvent' in window))) {
            delete EVENT_NAME_MAP.animationend.animation;
          }
          if (!(('TransitionEvent' in window))) {
            delete EVENT_NAME_MAP.transitionend.transition;
          }
          for (var baseEventName in EVENT_NAME_MAP) {
            var baseEvents = EVENT_NAME_MAP[baseEventName];
            for (var styleName in baseEvents) {
              if ((styleName in style)) {
                endEvents.push(baseEvents[styleName]);
                break;
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"detectEvents","paramsNumber":0},');

        }
        if (typeof window !== 'undefined') {
          detectEvents();
        }
        function addEndEventListener(node, eventListener) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"addEndEventListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!endEvents.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"addEndEventListener"},');

            return window.setTimeout(eventListener, 0);
          }
          endEvents.forEach(function (endEvent) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"endEvents.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            node.addEventListener(endEvent, eventListener, false);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"endEvents.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"addEndEventListener","paramsNumber":2},');

        }
        function removeEndEventListener(node, eventListener) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"removeEndEventListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!endEvents.length) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"removeEndEventListener"},');

            return;
          }
          endEvents.forEach(function (endEvent) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"endEvents.forEach###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            node.removeEventListener(endEvent, eventListener, false);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"endEvents.forEach###2"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"removeEndEventListener","paramsNumber":2},');

        }
        var classCallCheck = function (instance, Constructor) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"classCallCheck","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!(instance instanceof Constructor)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"classCallCheck"},');

            throw new TypeError("Cannot call a class as a function");
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"classCallCheck"},');

        };
        var inherits = function (subClass, superClass) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"inherits","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (typeof superClass !== "function" && superClass !== null) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"inherits"},');

            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }
          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"inherits"},');

        };
        var objectWithoutProperties = function (obj, keys) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"objectWithoutProperties","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"objectWithoutProperties"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"objectWithoutProperties"},');

        };
        var possibleConstructorReturn = function (self, call) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"possibleConstructorReturn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!self) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"possibleConstructorReturn"},');

            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"possibleConstructorReturn"},');

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"possibleConstructorReturn"},');

        };
        var TICK = 17;
        var CSSTransitionGroupChild = (function (_Component) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          inherits(CSSTransitionGroupChild, _Component);
          function CSSTransitionGroupChild() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"CSSTransitionGroupChild","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _temp, _this, _ret;
            classCallCheck(this, CSSTransitionGroupChild);
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"CSSTransitionGroupChild"},');

            return (_ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.flushClassNameQueue = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement._ret._this.flushClassNameQueue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (getComponentBase(_this)) {
                addClass(getComponentBase(_this), _this.classNameQueue.join(' '));
              }
              _this.classNameQueue.length = 0;
              _this.timeout = null;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._ret._this.flushClassNameQueue"},');

            }, _temp), possibleConstructorReturn(_this, _ret));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"CSSTransitionGroupChild","paramsNumber":0},');

          }
          CSSTransitionGroupChild.prototype.transition = function transition(animationType, finishCallback, timeout) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.transition","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var _this2 = this;
            var node = getComponentBase(this);
            var className = this.props.name[animationType] || this.props.name + '-' + animationType;
            var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
            var timer = null;
            if (this.endListener) {
              this.endListener();
            }
            this.endListener = function (e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.transition.transition.endListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (e && e.target !== node) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.transition.transition.endListener"},');

                return;
              }
              clearTimeout(timer);
              removeClass(node, className);
              removeClass(node, activeClassName);
              removeEndEventListener(node, _this2.endListener);
              _this2.endListener = null;
              if (finishCallback) {
                finishCallback();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.transition.transition.endListener"},');

            };
            if (timeout) {
              timer = setTimeout(this.endListener, timeout);
              this.transitionTimeouts.push(timer);
            } else {
              addEndEventListener(node, this.endListener);
            }
            addClass(node, className);
            this.queueClass(activeClassName);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.transition"},');

          };
          CSSTransitionGroupChild.prototype.queueClass = function queueClass(className) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.queueClass","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            this.classNameQueue.push(className);
            if (!this.timeout) {
              this.timeout = setTimeout(this.flushClassNameQueue, TICK);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.queueClass"},');

          };
          CSSTransitionGroupChild.prototype.stop = function stop() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.stop","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (this.timeout) {
              clearTimeout(this.timeout);
              this.classNameQueue.length = 0;
              this.timeout = null;
            }
            if (this.endListener) {
              this.endListener();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.stop"},');

          };
          CSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillMount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            this.classNameQueue = [];
            this.transitionTimeouts = [];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillMount"},');

          };
          CSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillUnmount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (this.timeout) {
              clearTimeout(this.timeout);
            }
            this.transitionTimeouts.forEach(function (timeout) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillUnmount.componentWillUnmount.transitionTimeouts.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              clearTimeout(timeout);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillUnmount.componentWillUnmount.transitionTimeouts.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillUnmount"},');

          };
          CSSTransitionGroupChild.prototype.componentWillEnter = function componentWillEnter(done) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillEnter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (this.props.enter) {
              this.transition('enter', done, this.props.enterTimeout);
            } else {
              done();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillEnter"},');

          };
          CSSTransitionGroupChild.prototype.componentWillLeave = function componentWillLeave(done) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillLeave","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (this.props.leave) {
              this.transition('leave', done, this.props.leaveTimeout);
            } else {
              done();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.componentWillLeave"},');

          };
          CSSTransitionGroupChild.prototype.render = function render() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.render"},');

            return onlyChild(this.props.children);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild.CSSTransitionGroupChild.prototype.render"},');

          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild"},');

          return CSSTransitionGroupChild;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroupChild"},');

        })(preact.Component);
        var CSSTransitionGroup = (function (_Component) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          inherits(CSSTransitionGroup, _Component);
          function CSSTransitionGroup(props) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"CSSTransitionGroup","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            classCallCheck(this, CSSTransitionGroup);
            var _this = possibleConstructorReturn(this, _Component.call(this));
            _this.renderChild = function (child) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderChild","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var _this$props = _this.props;
              var transitionName = _this$props.transitionName;
              var transitionEnter = _this$props.transitionEnter;
              var transitionLeave = _this$props.transitionLeave;
              var transitionEnterTimeout = _this$props.transitionEnterTimeout;
              var transitionLeaveTimeout = _this$props.transitionLeaveTimeout;
              var key = getKey(child);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderChild"},');

              return preact.h(CSSTransitionGroupChild, {
                key: key,
                ref: function (c) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderChild.ReturnStatement.preact.h.ref","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  if (!(_this.refs[key] = c)) child = null;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderChild.ReturnStatement.preact.h.ref"},');

                },
                name: transitionName,
                enter: transitionEnter,
                leave: transitionLeave,
                enterTimeout: transitionEnterTimeout,
                leaveTimeout: transitionLeaveTimeout
              }, child);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderChild"},');

            };
            _this.refs = {};
            _this.state = {
              children: (props.children || []).slice()
            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"CSSTransitionGroup"},');

            return _this;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"CSSTransitionGroup","paramsNumber":1},');

          }
          CSSTransitionGroup.prototype.shouldComponentUpdate = function shouldComponentUpdate(_, _ref) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.shouldComponentUpdate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var children = _ref.children;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.shouldComponentUpdate"},');

            return children !== this.state.children;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.shouldComponentUpdate"},');

          };
          CSSTransitionGroup.prototype.componentWillMount = function componentWillMount() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillMount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            this.currentlyTransitioningKeys = {};
            this.keysToEnter = [];
            this.keysToLeave = [];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillMount"},');

          };
          CSSTransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(_ref2) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _this2 = this;
            var children = _ref2.children;
            var exclusive = _ref2.exclusive;
            var showProp = _ref2.showProp;
            var nextChildMapping = filterNullChildren(children || []).slice();
            var prevChildMapping = filterNullChildren(exclusive ? this.props.children : this.state.children);
            var newChildren = mergeChildMappings(prevChildMapping, nextChildMapping);
            if (showProp) {
              newChildren = newChildren.map(function (c) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.newChildren.newChildren.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (!c.props[showProp] && isShownInChildren(prevChildMapping, c, showProp)) {
                  var _cloneElement;
                  c = preact.cloneElement(c, (_cloneElement = {}, _cloneElement[showProp] = true, _cloneElement));
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.newChildren.newChildren.map"},');

                return c;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.newChildren.newChildren.map"},');

              });
            }
            if (exclusive) {
              newChildren.forEach(function (c) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.newChildren.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.newChildren.forEach"},');

                return _this2.stop(getKey(c));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.newChildren.forEach"},');

              });
            }
            this.setState({
              children: newChildren
            });
            this.forceUpdate();
            nextChildMapping.forEach(function (c) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.nextChildMapping.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var key = c.key;
              var hasPrev = prevChildMapping && inChildren(prevChildMapping, c);
              if (showProp) {
                if (hasPrev) {
                  var showInPrev = isShownInChildren(prevChildMapping, c, showProp), showInNow = c.props[showProp];
                  if (!showInPrev && showInNow && !_this2.currentlyTransitioningKeys[key]) {
                    _this2.keysToEnter.push(key);
                  }
                }
              } else if (!hasPrev && !_this2.currentlyTransitioningKeys[key]) {
                _this2.keysToEnter.push(key);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.nextChildMapping.forEach"},');

            });
            prevChildMapping.forEach(function (c) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.prevChildMapping.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var key = c.key;
              var hasNext = nextChildMapping && inChildren(nextChildMapping, c);
              if (showProp) {
                if (hasNext) {
                  var showInNext = isShownInChildren(nextChildMapping, c, showProp);
                  var showInNow = c.props[showProp];
                  if (!showInNext && showInNow && !_this2.currentlyTransitioningKeys[key]) {
                    _this2.keysToLeave.push(key);
                  }
                }
              } else if (!hasNext && !_this2.currentlyTransitioningKeys[key]) {
                _this2.keysToLeave.push(key);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps.componentWillReceiveProps.prevChildMapping.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentWillReceiveProps"},');

          };
          CSSTransitionGroup.prototype.performEnter = function performEnter(key) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performEnter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _this3 = this;
            this.currentlyTransitioningKeys[key] = true;
            var component = this.refs[key];
            if (component.componentWillEnter) {
              component.componentWillEnter(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performEnter.performEnter.component.componentWillEnter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performEnter.performEnter.component.componentWillEnter"},');

                return _this3._handleDoneEntering(key);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performEnter.performEnter.component.componentWillEnter"},');

              });
            } else {
              this._handleDoneEntering(key);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performEnter"},');

          };
          CSSTransitionGroup.prototype._handleDoneEntering = function _handleDoneEntering(key) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype._handleDoneEntering","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            delete this.currentlyTransitioningKeys[key];
            var currentChildMapping = filterNullChildren(this.props.children), showProp = this.props.showProp;
            if (!currentChildMapping || !showProp && !inChildrenByKey(currentChildMapping, key) || showProp && !isShownInChildrenByKey(currentChildMapping, key, showProp)) {
              this.performLeave(key);
            } else {
              this.setState({
                children: currentChildMapping
              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype._handleDoneEntering"},');

          };
          CSSTransitionGroup.prototype.stop = function stop(key) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.stop","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            delete this.currentlyTransitioningKeys[key];
            var component = this.refs[key];
            if (component) component.stop();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.stop"},');

          };
          CSSTransitionGroup.prototype.performLeave = function performLeave(key) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performLeave","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _this4 = this;
            this.currentlyTransitioningKeys[key] = true;
            var component = this.refs[key];
            if (component && component.componentWillLeave) {
              component.componentWillLeave(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performLeave.performLeave.component.componentWillLeave","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performLeave.performLeave.component.componentWillLeave"},');

                return _this4._handleDoneLeaving(key);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performLeave.performLeave.component.componentWillLeave"},');

              });
            } else {
              this._handleDoneLeaving(key);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.performLeave"},');

          };
          CSSTransitionGroup.prototype._handleDoneLeaving = function _handleDoneLeaving(key) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype._handleDoneLeaving","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            delete this.currentlyTransitioningKeys[key];
            var showProp = this.props.showProp, currentChildMapping = filterNullChildren(this.props.children);
            if (showProp && currentChildMapping && isShownInChildrenByKey(currentChildMapping, key, showProp)) {
              this.performEnter(key);
            } else if (!showProp && currentChildMapping && inChildrenByKey(currentChildMapping, key)) {
              this.performEnter(key);
            } else {
              this.setState({
                children: currentChildMapping
              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype._handleDoneLeaving"},');

          };
          CSSTransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentDidUpdate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this5 = this;
            var keysToEnter = this.keysToEnter;
            var keysToLeave = this.keysToLeave;
            this.keysToEnter = [];
            keysToEnter.forEach(function (k) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentDidUpdate.componentDidUpdate.keysToEnter.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentDidUpdate.componentDidUpdate.keysToEnter.forEach"},');

              return _this5.performEnter(k);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentDidUpdate.componentDidUpdate.keysToEnter.forEach"},');

            });
            this.keysToLeave = [];
            keysToLeave.forEach(function (k) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentDidUpdate.componentDidUpdate.keysToLeave.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentDidUpdate.componentDidUpdate.keysToLeave.forEach"},');

              return _this5.performLeave(k);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentDidUpdate.componentDidUpdate.keysToLeave.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.componentDidUpdate"},');

          };
          CSSTransitionGroup.prototype.render = function render(_ref3, _ref4) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var Component = _ref3.component;
            var transitionName = _ref3.transitionName;
            var transitionEnter = _ref3.transitionEnter;
            var transitionLeave = _ref3.transitionLeave;
            var transitionEnterTimeout = _ref3.transitionEnterTimeout;
            var transitionLeaveTimeout = _ref3.transitionLeaveTimeout;
            var c = _ref3.children;
            var props = objectWithoutProperties(_ref3, ['component', 'transitionName', 'transitionEnter', 'transitionLeave', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'children']);
            var children = _ref4.children;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.render"},');

            return preact.h(Component, props, filterNullChildren(children).map(this.renderChild));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup.CSSTransitionGroup.prototype.render"},');

          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup"},');

          return CSSTransitionGroup;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CSSTransitionGroup"},');

        })(preact.Component);
        CSSTransitionGroup.defaultProps = {
          component: 'span',
          transitionEnter: true,
          transitionLeave: true
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###54"},');

        return CSSTransitionGroup;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###54"},');

      });
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###55"},');

    }, {
      "preact": 51
    }],
    51: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###57","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      !(function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###56","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        'use strict';
        function VNode() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"VNode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"VNode","paramsNumber":0},');

        }
        function h(nodeName, attributes) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"h","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var lastSimple, child, simple, i, children = EMPTY_CHILDREN;
          for (i = arguments.length; i-- > 2; ) stack.push(arguments[i]);
          if (attributes && null != attributes.children) {
            if (!stack.length) stack.push(attributes.children);
            delete attributes.children;
          }
          while (stack.length) if ((child = stack.pop()) && void 0 !== child.pop) for (i = child.length; i--; ) stack.push(child[i]); else {
            if ('boolean' == typeof child) child = null;
            if (simple = 'function' != typeof nodeName) if (null == child) child = ''; else if ('number' == typeof child) child = String(child); else if ('string' != typeof child) simple = !1;
            if (simple && lastSimple) children[children.length - 1] += child; else if (children === EMPTY_CHILDREN) children = [child]; else children.push(child);
            lastSimple = simple;
          }
          var p = new VNode();
          p.nodeName = nodeName;
          p.children = children;
          p.attributes = null == attributes ? void 0 : attributes;
          p.key = null == attributes ? void 0 : attributes.key;
          if (void 0 !== options.vnode) options.vnode(p);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"h"},');

          return p;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"h","paramsNumber":2},');

        }
        function extend(obj, props) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"extend","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          for (var i in props) obj[i] = props[i];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"extend"},');

          return obj;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"extend","paramsNumber":2},');

        }
        function cloneElement(vnode, props) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cloneElement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"cloneElement"},');

          return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"cloneElement","paramsNumber":2},');

        }
        function enqueueRender(component) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"enqueueRender","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (!component.__d && (component.__d = !0) && 1 == items.push(component)) (options.debounceRendering || defer)(rerender);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"enqueueRender","paramsNumber":1},');

        }
        function rerender() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"rerender","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var p, list = items;
          items = [];
          while (p = list.pop()) if (p.__d) renderComponent(p);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"rerender","paramsNumber":0},');

        }
        function isSameNodeType(node, vnode, hydrating) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isSameNodeType","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if ('string' == typeof vnode || 'number' == typeof vnode) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"isSameNodeType"},');

            return void 0 !== node.splitText;
          }
          if ('string' == typeof vnode.nodeName) return !node._componentConstructor && isNamedNode(node, vnode.nodeName); else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###57"},');

            return !node._componentConstructor && isNamedNode(node, vnode.nodeName);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isSameNodeType","paramsNumber":3},');

        }
        function isNamedNode(node, nodeName) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isNamedNode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isNamedNode"},');

          return node.__n === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isNamedNode","paramsNumber":2},');

        }
        function getNodeProps(vnode) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getNodeProps","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var props = extend({}, vnode.attributes);
          props.children = vnode.children;
          var defaultProps = vnode.nodeName.defaultProps;
          if (void 0 !== defaultProps) for (var i in defaultProps) if (void 0 === props[i]) props[i] = defaultProps[i];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getNodeProps"},');

          return props;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getNodeProps","paramsNumber":1},');

        }
        function createNode(nodeName, isSvg) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createNode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);
          node.__n = nodeName;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"createNode"},');

          return node;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"createNode","paramsNumber":2},');

        }
        function removeNode(node) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"removeNode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var parentNode = node.parentNode;
          if (parentNode) parentNode.removeChild(node);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"removeNode","paramsNumber":1},');

        }
        function setAccessor(node, name, old, value, isSvg) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"setAccessor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

          if ('className' === name) name = 'class';
          if ('key' === name) ; else if ('ref' === name) {
            if (old) old(null);
            if (value) value(node);
          } else if ('class' === name && !isSvg) node.className = value || ''; else if ('style' === name) {
            if (!value || 'string' == typeof value || 'string' == typeof old) node.style.cssText = value || '';
            if (value && 'object' == typeof value) {
              if ('string' != typeof old) for (var i in old) if (!((i in value))) node.style[i] = '';
              for (var i in value) node.style[i] = 'number' == typeof value[i] && !1 === IS_NON_DIMENSIONAL.test(i) ? value[i] + 'px' : value[i];
            }
          } else if ('dangerouslySetInnerHTML' === name) {
            if (value) node.innerHTML = value.__html || '';
          } else if ('o' == name[0] && 'n' == name[1]) {
            var useCapture = name !== (name = name.replace(/Capture$/, ''));
            name = name.toLowerCase().substring(2);
            if (value) {
              if (!old) node.addEventListener(name, eventProxy, useCapture);
            } else node.removeEventListener(name, eventProxy, useCapture);
            (node.__l || (node.__l = {}))[name] = value;
          } else if ('list' !== name && 'type' !== name && !isSvg && (name in node)) {
            setProperty(node, name, null == value ? '' : value);
            if (null == value || !1 === value) node.removeAttribute(name);
          } else {
            var ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''));
            if (null == value || !1 === value) if (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase()); else node.removeAttribute(name); else if ('function' != typeof value) if (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value); else node.setAttribute(name, value);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"setAccessor","paramsNumber":5},');

        }
        function setProperty(node, name, value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"setProperty","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          try {
            node[name] = value;
          } catch (e) {}
                    SRTlib.send('{"type":"FUNCTIONEND","function":"setProperty","paramsNumber":3},');

        }
        function eventProxy(e) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"eventProxy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"eventProxy"},');

          return this.__l[e.type](options.event && options.event(e) || e);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"eventProxy","paramsNumber":1},');

        }
        function flushMounts() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"flushMounts","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var c;
          while (c = mounts.pop()) {
            if (options.afterMount) options.afterMount(c);
            if (c.componentDidMount) c.componentDidMount();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"flushMounts","paramsNumber":0},');

        }
        function diff(dom, vnode, context, mountAll, parent, componentRoot) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"diff","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":6},`);

          if (!diffLevel++) {
            isSvgMode = null != parent && void 0 !== parent.ownerSVGElement;
            hydrating = null != dom && !(('__preactattr_' in dom));
          }
          var ret = idiff(dom, vnode, context, mountAll, componentRoot);
          if (parent && ret.parentNode !== parent) parent.appendChild(ret);
          if (!--diffLevel) {
            hydrating = !1;
            if (!componentRoot) flushMounts();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"diff"},');

          return ret;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"diff","paramsNumber":6},');

        }
        function idiff(dom, vnode, context, mountAll, componentRoot) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"idiff","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

          var out = dom, prevSvgMode = isSvgMode;
          if (null == vnode || 'boolean' == typeof vnode) vnode = '';
          if ('string' == typeof vnode || 'number' == typeof vnode) {
            if (dom && void 0 !== dom.splitText && dom.parentNode && (!dom._component || componentRoot)) {
              if (dom.nodeValue != vnode) dom.nodeValue = vnode;
            } else {
              out = document.createTextNode(vnode);
              if (dom) {
                if (dom.parentNode) dom.parentNode.replaceChild(out, dom);
                recollectNodeTree(dom, !0);
              }
            }
            out.__preactattr_ = !0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"idiff"},');

            return out;
          }
          var vnodeName = vnode.nodeName;
          if ('function' == typeof vnodeName) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"idiff"},');

            return buildComponentFromVNode(dom, vnode, context, mountAll);
          }
          isSvgMode = 'svg' === vnodeName ? !0 : 'foreignObject' === vnodeName ? !1 : isSvgMode;
          vnodeName = String(vnodeName);
          if (!dom || !isNamedNode(dom, vnodeName)) {
            out = createNode(vnodeName, isSvgMode);
            if (dom) {
              while (dom.firstChild) out.appendChild(dom.firstChild);
              if (dom.parentNode) dom.parentNode.replaceChild(out, dom);
              recollectNodeTree(dom, !0);
            }
          }
          var fc = out.firstChild, props = out.__preactattr_, vchildren = vnode.children;
          if (null == props) {
            props = out.__preactattr_ = {};
            for (var a = out.attributes, i = a.length; i--; ) props[a[i].name] = a[i].value;
          }
          if (!hydrating && vchildren && 1 === vchildren.length && 'string' == typeof vchildren[0] && null != fc && void 0 !== fc.splitText && null == fc.nextSibling) {
            if (fc.nodeValue != vchildren[0]) fc.nodeValue = vchildren[0];
          } else if (vchildren && vchildren.length || null != fc) innerDiffNode(out, vchildren, context, mountAll, hydrating || null != props.dangerouslySetInnerHTML);
          diffAttributes(out, vnode.attributes, props);
          isSvgMode = prevSvgMode;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"idiff"},');

          return out;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"idiff","paramsNumber":5},');

        }
        function innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"innerDiffNode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

          var j, c, f, vchild, child, originalChildren = dom.childNodes, children = [], keyed = {}, keyedLen = 0, min = 0, len = originalChildren.length, childrenLen = 0, vlen = vchildren ? vchildren.length : 0;
          if (0 !== len) for (var i = 0; i < len; i++) {
            var _child = originalChildren[i], props = _child.__preactattr_, key = vlen && props ? _child._component ? _child._component.__k : props.key : null;
            if (null != key) {
              keyedLen++;
              keyed[key] = _child;
            } else if (props || (void 0 !== _child.splitText ? isHydrating ? _child.nodeValue.trim() : !0 : isHydrating)) children[childrenLen++] = _child;
          }
          if (0 !== vlen) for (var i = 0; i < vlen; i++) {
            vchild = vchildren[i];
            child = null;
            var key = vchild.key;
            if (null != key) {
              if (keyedLen && void 0 !== keyed[key]) {
                child = keyed[key];
                keyed[key] = void 0;
                keyedLen--;
              }
            } else if (!child && min < childrenLen) for (j = min; j < childrenLen; j++) if (void 0 !== children[j] && isSameNodeType(c = children[j], vchild, isHydrating)) {
              child = c;
              children[j] = void 0;
              if (j === childrenLen - 1) childrenLen--;
              if (j === min) min++;
              break;
            }
            child = idiff(child, vchild, context, mountAll);
            f = originalChildren[i];
            if (child && child !== dom && child !== f) if (null == f) dom.appendChild(child); else if (child === f.nextSibling) removeNode(f); else dom.insertBefore(child, f);
          }
          if (keyedLen) for (var i in keyed) if (void 0 !== keyed[i]) recollectNodeTree(keyed[i], !1);
          while (min <= childrenLen) if (void 0 !== (child = children[childrenLen--])) recollectNodeTree(child, !1);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"innerDiffNode","paramsNumber":5},');

        }
        function recollectNodeTree(node, unmountOnly) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"recollectNodeTree","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var component = node._component;
          if (component) unmountComponent(component); else {
            if (null != node.__preactattr_ && node.__preactattr_.ref) node.__preactattr_.ref(null);
            if (!1 === unmountOnly || null == node.__preactattr_) removeNode(node);
            removeChildren(node);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"recollectNodeTree","paramsNumber":2},');

        }
        function removeChildren(node) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"removeChildren","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          node = node.lastChild;
          while (node) {
            var next = node.previousSibling;
            recollectNodeTree(node, !0);
            node = next;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"removeChildren","paramsNumber":1},');

        }
        function diffAttributes(dom, attrs, old) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"diffAttributes","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var name;
          for (name in old) if ((!attrs || null == attrs[name]) && null != old[name]) setAccessor(dom, name, old[name], old[name] = void 0, isSvgMode);
          for (name in attrs) if (!('children' === name || 'innerHTML' === name || (name in old) && attrs[name] === ('value' === name || 'checked' === name ? dom[name] : old[name]))) setAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"diffAttributes","paramsNumber":3},');

        }
        function collectComponent(component) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"collectComponent","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var name = component.constructor.name;
          (components[name] || (components[name] = [])).push(component);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"collectComponent","paramsNumber":1},');

        }
        function createComponent(Ctor, props, context) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createComponent","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var inst, list = components[Ctor.name];
          if (Ctor.prototype && Ctor.prototype.render) {
            inst = new Ctor(props, context);
            Component.call(inst, props, context);
          } else {
            inst = new Component(props, context);
            inst.constructor = Ctor;
            inst.render = doRender;
          }
          if (list) for (var i = list.length; i--; ) if (list[i].constructor === Ctor) {
            inst.__b = list[i].__b;
            list.splice(i, 1);
            break;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"createComponent"},');

          return inst;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"createComponent","paramsNumber":3},');

        }
        function doRender(props, state, context) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"doRender","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"doRender"},');

          return this.constructor(props, context);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"doRender","paramsNumber":3},');

        }
        function setComponentProps(component, props, opts, context, mountAll) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"setComponentProps","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":5},`);

          if (!component.__x) {
            component.__x = !0;
            if (component.__r = props.ref) delete props.ref;
            if (component.__k = props.key) delete props.key;
            if (!component.base || mountAll) {
              if (component.componentWillMount) component.componentWillMount();
            } else if (component.componentWillReceiveProps) component.componentWillReceiveProps(props, context);
            if (context && context !== component.context) {
              if (!component.__c) component.__c = component.context;
              component.context = context;
            }
            if (!component.__p) component.__p = component.props;
            component.props = props;
            component.__x = !1;
            if (0 !== opts) if (1 === opts || !1 !== options.syncComponentUpdates || !component.base) renderComponent(component, 1, mountAll); else enqueueRender(component);
            if (component.__r) component.__r(component);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"setComponentProps","paramsNumber":5},');

        }
        function renderComponent(component, opts, mountAll, isChild) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"renderComponent","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          if (!component.__x) {
            var rendered, inst, cbase, props = component.props, state = component.state, context = component.context, previousProps = component.__p || props, previousState = component.__s || state, previousContext = component.__c || context, isUpdate = component.base, nextBase = component.__b, initialBase = isUpdate || nextBase, initialChildComponent = component._component, skip = !1;
            if (isUpdate) {
              component.props = previousProps;
              component.state = previousState;
              component.context = previousContext;
              if (2 !== opts && component.shouldComponentUpdate && !1 === component.shouldComponentUpdate(props, state, context)) skip = !0; else if (component.componentWillUpdate) component.componentWillUpdate(props, state, context);
              component.props = props;
              component.state = state;
              component.context = context;
            }
            component.__p = component.__s = component.__c = component.__b = null;
            component.__d = !1;
            if (!skip) {
              rendered = component.render(props, state, context);
              if (component.getChildContext) context = extend(extend({}, context), component.getChildContext());
              var toUnmount, base, childComponent = rendered && rendered.nodeName;
              if ('function' == typeof childComponent) {
                var childProps = getNodeProps(rendered);
                inst = initialChildComponent;
                if (inst && inst.constructor === childComponent && childProps.key == inst.__k) setComponentProps(inst, childProps, 1, context, !1); else {
                  toUnmount = inst;
                  component._component = inst = createComponent(childComponent, childProps, context);
                  inst.__b = inst.__b || nextBase;
                  inst.__u = component;
                  setComponentProps(inst, childProps, 0, context, !1);
                  renderComponent(inst, 1, mountAll, !0);
                }
                base = inst.base;
              } else {
                cbase = initialBase;
                toUnmount = initialChildComponent;
                if (toUnmount) cbase = component._component = null;
                if (initialBase || 1 === opts) {
                  if (cbase) cbase._component = null;
                  base = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, !0);
                }
              }
              if (initialBase && base !== initialBase && inst !== initialChildComponent) {
                var baseParent = initialBase.parentNode;
                if (baseParent && base !== baseParent) {
                  baseParent.replaceChild(base, initialBase);
                  if (!toUnmount) {
                    initialBase._component = null;
                    recollectNodeTree(initialBase, !1);
                  }
                }
              }
              if (toUnmount) unmountComponent(toUnmount);
              component.base = base;
              if (base && !isChild) {
                var componentRef = component, t = component;
                while (t = t.__u) (componentRef = t).base = base;
                base._component = componentRef;
                base._componentConstructor = componentRef.constructor;
              }
            }
            if (!isUpdate || mountAll) mounts.unshift(component); else if (!skip) {
              if (component.componentDidUpdate) component.componentDidUpdate(previousProps, previousState, previousContext);
              if (options.afterUpdate) options.afterUpdate(component);
            }
            if (null != component.__h) while (component.__h.length) component.__h.pop().call(component);
            if (!diffLevel && !isChild) flushMounts();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"renderComponent","paramsNumber":4},');

        }
        function buildComponentFromVNode(dom, vnode, context, mountAll) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"buildComponentFromVNode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          var c = dom && dom._component, originalComponent = c, oldDom = dom, isDirectOwner = c && dom._componentConstructor === vnode.nodeName, isOwner = isDirectOwner, props = getNodeProps(vnode);
          while (c && !isOwner && (c = c.__u)) isOwner = c.constructor === vnode.nodeName;
          if (c && isOwner && (!mountAll || c._component)) {
            setComponentProps(c, props, 3, context, mountAll);
            dom = c.base;
          } else {
            if (originalComponent && !isDirectOwner) {
              unmountComponent(originalComponent);
              dom = oldDom = null;
            }
            c = createComponent(vnode.nodeName, props, context);
            if (dom && !c.__b) {
              c.__b = dom;
              oldDom = null;
            }
            setComponentProps(c, props, 1, context, mountAll);
            dom = c.base;
            if (oldDom && dom !== oldDom) {
              oldDom._component = null;
              recollectNodeTree(oldDom, !1);
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"buildComponentFromVNode"},');

          return dom;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"buildComponentFromVNode","paramsNumber":4},');

        }
        function unmountComponent(component) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"unmountComponent","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (options.beforeUnmount) options.beforeUnmount(component);
          var base = component.base;
          component.__x = !0;
          if (component.componentWillUnmount) component.componentWillUnmount();
          component.base = null;
          var inner = component._component;
          if (inner) unmountComponent(inner); else if (base) {
            if (base.__preactattr_ && base.__preactattr_.ref) base.__preactattr_.ref(null);
            component.__b = base;
            removeNode(base);
            collectComponent(component);
            removeChildren(base);
          }
          if (component.__r) component.__r(null);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"unmountComponent","paramsNumber":1},');

        }
        function Component(props, context) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Component","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.__d = !0;
          this.context = context;
          this.props = props;
          this.state = this.state || ({});
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Component","paramsNumber":2},');

        }
        function render(vnode, parent, merge) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"render"},');

          return diff(merge, vnode, {}, !1, parent, !1);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"render","paramsNumber":3},');

        }
        var options = {};
        var stack = [];
        var EMPTY_CHILDREN = [];
        var defer = 'function' == typeof Promise ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;
        var IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;
        var items = [];
        var mounts = [];
        var diffLevel = 0;
        var isSvgMode = !1;
        var hydrating = !1;
        var components = {};
        extend(Component.prototype, {
          setState: function (state, callback) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.extend.setState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var s = this.state;
            if (!this.__s) this.__s = extend({}, s);
            extend(s, 'function' == typeof state ? state(s, this.props) : state);
            if (callback) (this.__h = this.__h || []).push(callback);
            enqueueRender(this);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.extend.setState"},');

          },
          forceUpdate: function (callback) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.extend.forceUpdate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (callback) (this.__h = this.__h || []).push(callback);
            renderComponent(this, 2);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.extend.forceUpdate"},');

          },
          render: function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.extend.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.extend.render"},');

          }
        });
        var preact = {
          h: h,
          createElement: h,
          cloneElement: cloneElement,
          Component: Component,
          render: render,
          rerender: rerender,
          options: options
        };
        if ('undefined' != typeof module) module.exports = preact; else self.preact = preact;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###56"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###57"},');

    }, {}],
    52: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###59","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var process = module.exports = {};
      var cachedSetTimeout;
      var cachedClearTimeout;
      function defaultSetTimout() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"defaultSetTimout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"defaultSetTimout"},');

        throw new Error('setTimeout has not been defined');
                SRTlib.send('{"type":"FUNCTIONEND","function":"defaultSetTimout","paramsNumber":0},');

      }
      function defaultClearTimeout() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"defaultClearTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"defaultClearTimeout"},');

        throw new Error('clearTimeout has not been defined');
                SRTlib.send('{"type":"FUNCTIONEND","function":"defaultClearTimeout","paramsNumber":0},');

      }
      (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###58","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        try {
          if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
          } else {
            cachedSetTimeout = defaultSetTimout;
          }
        } catch (e) {
          cachedSetTimeout = defaultSetTimout;
        }
        try {
          if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
          } else {
            cachedClearTimeout = defaultClearTimeout;
          }
        } catch (e) {
          cachedClearTimeout = defaultClearTimeout;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###58"},');

      })();
      function runTimeout(fun) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"runTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (cachedSetTimeout === setTimeout) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"runTimeout"},');

          return setTimeout(fun, 0);
        }
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"runTimeout"},');

          return setTimeout(fun, 0);
        }
        try {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"runTimeout"},');

          return cachedSetTimeout(fun, 0);
        } catch (e) {
          try {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"runTimeout"},');

            return cachedSetTimeout.call(null, fun, 0);
          } catch (e) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"runTimeout"},');

            return cachedSetTimeout.call(this, fun, 0);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"runTimeout","paramsNumber":1},');

      }
      function runClearTimeout(marker) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"runClearTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (cachedClearTimeout === clearTimeout) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"runClearTimeout"},');

          return clearTimeout(marker);
        }
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"runClearTimeout"},');

          return clearTimeout(marker);
        }
        try {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"runClearTimeout"},');

          return cachedClearTimeout(marker);
        } catch (e) {
          try {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"runClearTimeout"},');

            return cachedClearTimeout.call(null, marker);
          } catch (e) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"runClearTimeout"},');

            return cachedClearTimeout.call(this, marker);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"runClearTimeout","paramsNumber":1},');

      }
      var queue = [];
      var draining = false;
      var currentQueue;
      var queueIndex = -1;
      function cleanUpNextTick() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cleanUpNextTick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (!draining || !currentQueue) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"cleanUpNextTick"},');

          return;
        }
        draining = false;
        if (currentQueue.length) {
          queue = currentQueue.concat(queue);
        } else {
          queueIndex = -1;
        }
        if (queue.length) {
          drainQueue();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"cleanUpNextTick","paramsNumber":0},');

      }
      function drainQueue() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"drainQueue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (draining) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"drainQueue"},');

          return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;
        var len = queue.length;
        while (len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
            if (currentQueue) {
              currentQueue[queueIndex].run();
            }
          }
          queueIndex = -1;
          len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
                SRTlib.send('{"type":"FUNCTIONEND","function":"drainQueue","paramsNumber":0},');

      }
      process.nextTick = function (fun) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.process.nextTick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
          }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.nextTick"},');

      };
      function Item(fun, array) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Item","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        this.fun = fun;
        this.array = array;
                SRTlib.send('{"type":"FUNCTIONEND","function":"Item","paramsNumber":2},');

      }
      Item.prototype.run = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Item.prototype.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.fun.apply(null, this.array);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Item.prototype.run"},');

      };
      process.title = 'browser';
      process.browser = true;
      process.env = {};
      process.argv = [];
      process.version = '';
      process.versions = {};
      function noop() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"noop","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"noop","paramsNumber":0},');

      }
      process.on = noop;
      process.addListener = noop;
      process.once = noop;
      process.off = noop;
      process.removeListener = noop;
      process.removeAllListeners = noop;
      process.emit = noop;
      process.prependListener = noop;
      process.prependOnceListener = noop;
      process.listeners = function (name) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.process.listeners","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.listeners"},');

        return [];
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.listeners"},');

      };
      process.binding = function (name) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.process.binding","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.binding"},');

        throw new Error('process.binding is not supported');
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.binding"},');

      };
      process.cwd = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.process.cwd","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.cwd"},');

        return '/';
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.cwd"},');

      };
      process.chdir = function (dir) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.process.chdir","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.chdir"},');

        throw new Error('process.chdir is not supported');
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.chdir"},');

      };
      process.umask = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.process.umask","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.umask"},');

        return 0;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.process.umask"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###59"},');

    }, {}],
    53: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###60","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      var has = Object.prototype.hasOwnProperty, undef;
      function decode(input) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"decode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        try {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decode"},');

          return decodeURIComponent(input.replace(/\+/g, ' '));
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decode"},');

          return null;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"decode","paramsNumber":1},');

      }
      function encode(input) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        try {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encode"},');

          return encodeURIComponent(input);
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"encode"},');

          return null;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"encode","paramsNumber":1},');

      }
      function querystring(query) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"querystring","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var parser = /([^=?&]+)=?([^&]*)/g, result = {}, part;
        while (part = parser.exec(query)) {
          var key = decode(part[1]), value = decode(part[2]);
          if (key === null || value === null || (key in result)) continue;
          result[key] = value;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"querystring"},');

        return result;
                SRTlib.send('{"type":"FUNCTIONEND","function":"querystring","paramsNumber":1},');

      }
      function querystringify(obj, prefix) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"querystringify","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        prefix = prefix || '';
        var pairs = [], value, key;
        if ('string' !== typeof prefix) prefix = '?';
        for (key in obj) {
          if (has.call(obj, key)) {
            value = obj[key];
            if (!value && (value === null || value === undef || isNaN(value))) {
              value = '';
            }
            key = encodeURIComponent(key);
            value = encodeURIComponent(value);
            if (key === null || value === null) continue;
            pairs.push(key + '=' + value);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"querystringify"},');

        return pairs.length ? prefix + pairs.join('&') : '';
                SRTlib.send('{"type":"FUNCTIONEND","function":"querystringify","paramsNumber":2},');

      }
      exports.stringify = querystringify;
      exports.parse = querystring;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###60"},');

    }, {}],
    54: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###61","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      module.exports = function required(port, protocol) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###18","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        protocol = protocol.split(':')[0];
        port = +port;
        if (!port) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###18"},');

          return false;
        }
        switch (protocol) {
          case 'http':
          case 'ws':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###61"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###18"},');

            return port !== 80;
          case 'https':
          case 'wss':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###61"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###18"},');

            return port !== 443;
          case 'ftp':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###61"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###18"},');

            return port !== 21;
          case 'gopher':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###61"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###18"},');

            return port !== 70;
          case 'file':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###61"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###18"},');

            return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###18"},');

        return port !== 0;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###18"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###61"},');

    }, {}],
    55: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###62","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (global) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        (function (global, factory) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.ResizeObserver = factory();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###11"},');

        })(this, function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          'use strict';
          var MapShim = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.MapShim","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (typeof Map !== 'undefined') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim"},');

              return Map;
            }
            function getIndex(arr, key) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getIndex","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var result = -1;
              arr.some(function (entry, index) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"arr.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                if (entry[0] === key) {
                  result = index;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"arr.some"},');

                  return true;
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"arr.some"},');

                return false;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"arr.some"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"getIndex"},');

              return result;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"getIndex","paramsNumber":2},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim"},');

            return (function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.MapShim.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              function class_1() {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"class_1","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                this.__entries__ = [];
                                SRTlib.send('{"type":"FUNCTIONEND","function":"class_1","paramsNumber":0},');

              }
              Object.defineProperty(class_1.prototype, "size", {
                get: function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.MapShim.ReturnStatement.Object.defineProperty.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.Object.defineProperty.get"},');

                  return this.__entries__.length;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.Object.defineProperty.get"},');

                },
                enumerable: true,
                configurable: true
              });
              class_1.prototype.get = function (key) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var index = getIndex(this.__entries__, key);
                var entry = this.__entries__[index];
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.get"},');

                return entry && entry[1];
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.get"},');

              };
              class_1.prototype.set = function (key, value) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.set","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var index = getIndex(this.__entries__, key);
                if (~index) {
                  this.__entries__[index][1] = value;
                } else {
                  this.__entries__.push([key, value]);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.set"},');

              };
              class_1.prototype.delete = function (key) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.delete","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var entries = this.__entries__;
                var index = getIndex(entries, key);
                if (~index) {
                  entries.splice(index, 1);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.delete"},');

              };
              class_1.prototype.has = function (key) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.has","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.has"},');

                return !!~getIndex(this.__entries__, key);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.has"},');

              };
              class_1.prototype.clear = function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.clear","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                this.__entries__.splice(0);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.clear"},');

              };
              class_1.prototype.forEach = function (callback, ctx) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                if (ctx === void 0) {
                  ctx = null;
                }
                for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                  var entry = _a[_i];
                  callback.call(ctx, entry[1], entry[0]);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement.class_1.prototype.forEach"},');

              };
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement"},');

              return class_1;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim.ReturnStatement"},');

            })();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.MapShim"},');

          })();
          var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;
          var global$1 = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.global$1","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (typeof global !== 'undefined' && global.Math === Math) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global$1"},');

              return global;
            }
            if (typeof self !== 'undefined' && self.Math === Math) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global$1"},');

              return self;
            }
            if (typeof window !== 'undefined' && window.Math === Math) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global$1"},');

              return window;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global$1"},');

            return Function('return this')();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.global$1"},');

          })();
          var requestAnimationFrame$1 = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.requestAnimationFrame$1","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (typeof requestAnimationFrame === 'function') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.requestAnimationFrame$1"},');

              return requestAnimationFrame.bind(global$1);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.requestAnimationFrame$1"},');

            return function (callback) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.requestAnimationFrame$1.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.requestAnimationFrame$1.ReturnStatement"},');

              return setTimeout(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.requestAnimationFrame$1.ReturnStatement.ReturnStatement.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.requestAnimationFrame$1.ReturnStatement.ReturnStatement.setTimeout"},');

                return callback(Date.now());
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.requestAnimationFrame$1.ReturnStatement.ReturnStatement.setTimeout"},');

              }, 1000 / 60);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.requestAnimationFrame$1.ReturnStatement"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.requestAnimationFrame$1"},');

          })();
          var trailingTimeout = 2;
          function throttle(callback, delay) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"throttle","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var leadingCall = false, trailingCall = false, lastCallTime = 0;
            function resolvePending() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"resolvePending","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (leadingCall) {
                leadingCall = false;
                callback();
              }
              if (trailingCall) {
                proxy();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"resolvePending","paramsNumber":0},');

            }
            function timeoutCallback() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"timeoutCallback","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              requestAnimationFrame$1(resolvePending);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"timeoutCallback","paramsNumber":0},');

            }
            function proxy() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"proxy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var timeStamp = Date.now();
              if (leadingCall) {
                if (timeStamp - lastCallTime < trailingTimeout) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"proxy"},');

                  return;
                }
                trailingCall = true;
              } else {
                leadingCall = true;
                trailingCall = false;
                setTimeout(timeoutCallback, delay);
              }
              lastCallTime = timeStamp;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"proxy","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"throttle"},');

            return proxy;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"throttle","paramsNumber":2},');

          }
          var REFRESH_DELAY = 20;
          var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
          var mutationObserverSupported = typeof MutationObserver !== 'undefined';
          var ResizeObserverController = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function ResizeObserverController() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ResizeObserverController","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              this.connected_ = false;
              this.mutationEventsAdded_ = false;
              this.mutationsObserver_ = null;
              this.observers_ = [];
              this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
              this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ResizeObserverController","paramsNumber":0},');

            }
            ResizeObserverController.prototype.addObserver = function (observer) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.addObserver","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (!~this.observers_.indexOf(observer)) {
                this.observers_.push(observer);
              }
              if (!this.connected_) {
                this.connect_();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.addObserver"},');

            };
            ResizeObserverController.prototype.removeObserver = function (observer) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.removeObserver","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var observers = this.observers_;
              var index = observers.indexOf(observer);
              if (~index) {
                observers.splice(index, 1);
              }
              if (!observers.length && this.connected_) {
                this.disconnect_();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.removeObserver"},');

            };
            ResizeObserverController.prototype.refresh = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.refresh","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var changesDetected = this.updateObservers_();
              if (changesDetected) {
                this.refresh();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.refresh"},');

            };
            ResizeObserverController.prototype.updateObservers_ = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.updateObservers_","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var activeObservers = this.observers_.filter(function (observer) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.updateObservers_.activeObservers.observers_.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.updateObservers_.activeObservers.observers_.filter"},');

                return (observer.gatherActive(), observer.hasActive());
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.updateObservers_.activeObservers.observers_.filter"},');

              });
              activeObservers.forEach(function (observer) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.updateObservers_.activeObservers.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.updateObservers_.activeObservers.forEach"},');

                return observer.broadcastActive();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.updateObservers_.activeObservers.forEach"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.updateObservers_"},');

              return activeObservers.length > 0;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.updateObservers_"},');

            };
            ResizeObserverController.prototype.connect_ = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.connect_","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (!isBrowser || this.connected_) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.connect_"},');

                return;
              }
              document.addEventListener('transitionend', this.onTransitionEnd_);
              window.addEventListener('resize', this.refresh);
              if (mutationObserverSupported) {
                this.mutationsObserver_ = new MutationObserver(this.refresh);
                this.mutationsObserver_.observe(document, {
                  attributes: true,
                  childList: true,
                  characterData: true,
                  subtree: true
                });
              } else {
                document.addEventListener('DOMSubtreeModified', this.refresh);
                this.mutationEventsAdded_ = true;
              }
              this.connected_ = true;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.connect_"},');

            };
            ResizeObserverController.prototype.disconnect_ = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.disconnect_","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (!isBrowser || !this.connected_) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.disconnect_"},');

                return;
              }
              document.removeEventListener('transitionend', this.onTransitionEnd_);
              window.removeEventListener('resize', this.refresh);
              if (this.mutationsObserver_) {
                this.mutationsObserver_.disconnect();
              }
              if (this.mutationEventsAdded_) {
                document.removeEventListener('DOMSubtreeModified', this.refresh);
              }
              this.mutationsObserver_ = null;
              this.mutationEventsAdded_ = false;
              this.connected_ = false;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.disconnect_"},');

            };
            ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.onTransitionEnd_","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
              var isReflowProperty = transitionKeys.some(function (key) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.onTransitionEnd_.isReflowProperty.transitionKeys.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.onTransitionEnd_.isReflowProperty.transitionKeys.some"},');

                return !!~propertyName.indexOf(key);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.onTransitionEnd_.isReflowProperty.transitionKeys.some"},');

              });
              if (isReflowProperty) {
                this.refresh();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.prototype.onTransitionEnd_"},');

            };
            ResizeObserverController.getInstance = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.getInstance","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (!this.instance_) {
                this.instance_ = new ResizeObserverController();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.getInstance"},');

              return this.instance_;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController.ResizeObserverController.getInstance"},');

            };
            ResizeObserverController.instance_ = null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController"},');

            return ResizeObserverController;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverController"},');

          })();
          var defineConfigurable = function (target, props) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"defineConfigurable","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
              var key = _a[_i];
              Object.defineProperty(target, key, {
                value: props[key],
                enumerable: false,
                writable: false,
                configurable: true
              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"defineConfigurable"},');

            return target;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"defineConfigurable"},');

          };
          var getWindowOf = function (target) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getWindowOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getWindowOf"},');

            return ownerGlobal || global$1;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getWindowOf"},');

          };
          var emptyRect = createRectInit(0, 0, 0, 0);
          function toFloat(value) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"toFloat","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"toFloat"},');

            return parseFloat(value) || 0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"toFloat","paramsNumber":1},');

          }
          function getBordersSize(styles) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getBordersSize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var positions = [];
            for (var _i = 1; _i < arguments.length; _i++) {
              positions[_i - 1] = arguments[_i];
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getBordersSize"},');

            return positions.reduce(function (size, position) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.positions.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var value = styles['border-' + position + '-width'];
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.positions.reduce"},');

              return size + toFloat(value);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.positions.reduce"},');

            }, 0);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getBordersSize","paramsNumber":1},');

          }
          function getPaddings(styles) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getPaddings","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var positions = ['top', 'right', 'bottom', 'left'];
            var paddings = {};
            for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
              var position = positions_1[_i];
              var value = styles['padding-' + position];
              paddings[position] = toFloat(value);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getPaddings"},');

            return paddings;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getPaddings","paramsNumber":1},');

          }
          function getSVGContentRect(target) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getSVGContentRect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var bbox = target.getBBox();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getSVGContentRect"},');

            return createRectInit(0, 0, bbox.width, bbox.height);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getSVGContentRect","paramsNumber":1},');

          }
          function getHTMLElementContentRect(target) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getHTMLElementContentRect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
            if (!clientWidth && !clientHeight) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"getHTMLElementContentRect"},');

              return emptyRect;
            }
            var styles = getWindowOf(target).getComputedStyle(target);
            var paddings = getPaddings(styles);
            var horizPad = paddings.left + paddings.right;
            var vertPad = paddings.top + paddings.bottom;
            var width = toFloat(styles.width), height = toFloat(styles.height);
            if (styles.boxSizing === 'border-box') {
              if (Math.round(width + horizPad) !== clientWidth) {
                width -= getBordersSize(styles, 'left', 'right') + horizPad;
              }
              if (Math.round(height + vertPad) !== clientHeight) {
                height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
              }
            }
            if (!isDocumentElement(target)) {
              var vertScrollbar = Math.round(width + horizPad) - clientWidth;
              var horizScrollbar = Math.round(height + vertPad) - clientHeight;
              if (Math.abs(vertScrollbar) !== 1) {
                width -= vertScrollbar;
              }
              if (Math.abs(horizScrollbar) !== 1) {
                height -= horizScrollbar;
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getHTMLElementContentRect"},');

            return createRectInit(paddings.left, paddings.top, width, height);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getHTMLElementContentRect","paramsNumber":1},');

          }
          var isSVGGraphicsElement = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.isSVGGraphicsElement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (typeof SVGGraphicsElement !== 'undefined') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.isSVGGraphicsElement"},');

              return function (target) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.isSVGGraphicsElement.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.isSVGGraphicsElement.ReturnStatement"},');

                return target instanceof getWindowOf(target).SVGGraphicsElement;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.isSVGGraphicsElement.ReturnStatement"},');

              };
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.isSVGGraphicsElement"},');

            return function (target) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.isSVGGraphicsElement.ReturnStatement###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.isSVGGraphicsElement.ReturnStatement###2"},');

              return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.isSVGGraphicsElement.ReturnStatement###2"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.isSVGGraphicsElement"},');

          })();
          function isDocumentElement(target) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isDocumentElement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"isDocumentElement"},');

            return target === getWindowOf(target).document.documentElement;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"isDocumentElement","paramsNumber":1},');

          }
          function getContentRect(target) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getContentRect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (!isBrowser) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"getContentRect"},');

              return emptyRect;
            }
            if (isSVGGraphicsElement(target)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"getContentRect"},');

              return getSVGContentRect(target);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getContentRect"},');

            return getHTMLElementContentRect(target);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getContentRect","paramsNumber":1},');

          }
          function createReadOnlyRect(_a) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createReadOnlyRect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
            var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
            var rect = Object.create(Constr.prototype);
            defineConfigurable(rect, {
              x: x,
              y: y,
              width: width,
              height: height,
              top: y,
              right: x + width,
              bottom: height + y,
              left: x
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"createReadOnlyRect"},');

            return rect;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"createReadOnlyRect","paramsNumber":1},');

          }
          function createRectInit(x, y, width, height) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createRectInit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"createRectInit"},');

            return {
              x: x,
              y: y,
              width: width,
              height: height
            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"createRectInit","paramsNumber":4},');

          }
          var ResizeObservation = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObservation","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function ResizeObservation(target) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ResizeObservation","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              this.broadcastWidth = 0;
              this.broadcastHeight = 0;
              this.contentRect_ = createRectInit(0, 0, 0, 0);
              this.target = target;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ResizeObservation","paramsNumber":1},');

            }
            ResizeObservation.prototype.isActive = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObservation.ResizeObservation.prototype.isActive","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var rect = getContentRect(this.target);
              this.contentRect_ = rect;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObservation.ResizeObservation.prototype.isActive"},');

              return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObservation.ResizeObservation.prototype.isActive"},');

            };
            ResizeObservation.prototype.broadcastRect = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObservation.ResizeObservation.prototype.broadcastRect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var rect = this.contentRect_;
              this.broadcastWidth = rect.width;
              this.broadcastHeight = rect.height;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObservation.ResizeObservation.prototype.broadcastRect"},');

              return rect;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObservation.ResizeObservation.prototype.broadcastRect"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObservation"},');

            return ResizeObservation;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObservation"},');

          })();
          var ResizeObserverEntry = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverEntry","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function ResizeObserverEntry(target, rectInit) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ResizeObserverEntry","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var contentRect = createReadOnlyRect(rectInit);
              defineConfigurable(this, {
                target: target,
                contentRect: contentRect
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ResizeObserverEntry","paramsNumber":2},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverEntry"},');

            return ResizeObserverEntry;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverEntry"},');

          })();
          var ResizeObserverSPI = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function ResizeObserverSPI(callback, controller, callbackCtx) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ResizeObserverSPI","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

              this.activeObservations_ = [];
              this.observations_ = new MapShim();
              if (typeof callback !== 'function') {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ResizeObserverSPI"},');

                throw new TypeError('The callback provided as parameter 1 is not a function.');
              }
              this.callback_ = callback;
              this.controller_ = controller;
              this.callbackCtx_ = callbackCtx;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ResizeObserverSPI","paramsNumber":3},');

            }
            ResizeObserverSPI.prototype.observe = function (target) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.observe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (!arguments.length) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.observe"},');

                throw new TypeError('1 argument required, but only 0 present.');
              }
              if (typeof Element === 'undefined' || !(Element instanceof Object)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.observe"},');

                return;
              }
              if (!(target instanceof getWindowOf(target).Element)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.observe"},');

                throw new TypeError('parameter 1 is not of type "Element".');
              }
              var observations = this.observations_;
              if (observations.has(target)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.observe"},');

                return;
              }
              observations.set(target, new ResizeObservation(target));
              this.controller_.addObserver(this);
              this.controller_.refresh();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.observe"},');

            };
            ResizeObserverSPI.prototype.unobserve = function (target) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.unobserve","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (!arguments.length) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.unobserve"},');

                throw new TypeError('1 argument required, but only 0 present.');
              }
              if (typeof Element === 'undefined' || !(Element instanceof Object)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.unobserve"},');

                return;
              }
              if (!(target instanceof getWindowOf(target).Element)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.unobserve"},');

                throw new TypeError('parameter 1 is not of type "Element".');
              }
              var observations = this.observations_;
              if (!observations.has(target)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.unobserve"},');

                return;
              }
              observations.delete(target);
              if (!observations.size) {
                this.controller_.removeObserver(this);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.unobserve"},');

            };
            ResizeObserverSPI.prototype.disconnect = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.disconnect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              this.clearActive();
              this.observations_.clear();
              this.controller_.removeObserver(this);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.disconnect"},');

            };
            ResizeObserverSPI.prototype.gatherActive = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.gatherActive","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var _this = this;
              this.clearActive();
              this.observations_.forEach(function (observation) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.gatherActive.observations_.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (observation.isActive()) {
                  _this.activeObservations_.push(observation);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.gatherActive.observations_.forEach"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.gatherActive"},');

            };
            ResizeObserverSPI.prototype.broadcastActive = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.broadcastActive","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (!this.hasActive()) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.broadcastActive"},');

                return;
              }
              var ctx = this.callbackCtx_;
              var entries = this.activeObservations_.map(function (observation) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.broadcastActive.entries.activeObservations_.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.broadcastActive.entries.activeObservations_.map"},');

                return new ResizeObserverEntry(observation.target, observation.broadcastRect());
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.broadcastActive.entries.activeObservations_.map"},');

              });
              this.callback_.call(ctx, entries, ctx);
              this.clearActive();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.broadcastActive"},');

            };
            ResizeObserverSPI.prototype.clearActive = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.clearActive","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              this.activeObservations_.splice(0);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.clearActive"},');

            };
            ResizeObserverSPI.prototype.hasActive = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.hasActive","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.hasActive"},');

              return this.activeObservations_.length > 0;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI.ResizeObserverSPI.prototype.hasActive"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI"},');

            return ResizeObserverSPI;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserverSPI"},');

          })();
          var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
          var ResizeObserver = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ResizeObserver","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function ResizeObserver(callback) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ResizeObserver","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (!(this instanceof ResizeObserver)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ResizeObserver"},');

                throw new TypeError('Cannot call a class as a function.');
              }
              if (!arguments.length) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ResizeObserver"},');

                throw new TypeError('1 argument required, but only 0 present.');
              }
              var controller = ResizeObserverController.getInstance();
              var observer = new ResizeObserverSPI(callback, controller, this);
              observers.set(this, observer);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ResizeObserver","paramsNumber":1},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserver"},');

            return ResizeObserver;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ResizeObserver"},');

          })();
          ['observe', 'unobserve', 'disconnect'].forEach(function (method) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            ResizeObserver.prototype[method] = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.forEach.ResizeObserver.prototype.method","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var _a;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.forEach.ResizeObserver.prototype.method"},');

              return (_a = observers.get(this))[method].apply(_a, arguments);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.forEach.ResizeObserver.prototype.method"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.forEach"},');

          });
          var index = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.index","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (typeof global$1.ResizeObserver !== 'undefined') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.index"},');

              return global$1.ResizeObserver;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.index"},');

            return ResizeObserver;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.index"},');

          })();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###12"},');

          return index;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###12"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###13"},');

      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###62"},');

    }, {}],
    56: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###63","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var url = require('./url');
      var parser = require('socket.io-parser');
      var Manager = require('./manager');
      var debug = require('debug')('socket.io-client');
      module.exports = exports = lookup;
      var cache = exports.managers = {};
      function lookup(uri, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"lookup","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (typeof uri === 'object') {
          opts = uri;
          uri = undefined;
        }
        opts = opts || ({});
        var parsed = url(uri);
        var source = parsed.source;
        var id = parsed.id;
        var path = parsed.path;
        var sameNamespace = cache[id] && (path in cache[id].nsps);
        var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;
        var io;
        if (newConnection) {
          debug('ignoring socket cache for %s', source);
          io = Manager(source, opts);
        } else {
          if (!cache[id]) {
            debug('new io instance for %s', source);
            cache[id] = Manager(source, opts);
          }
          io = cache[id];
        }
        if (parsed.query && !opts.query) {
          opts.query = parsed.query;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"lookup"},');

        return io.socket(parsed.path, opts);
                SRTlib.send('{"type":"FUNCTIONEND","function":"lookup","paramsNumber":2},');

      }
      exports.protocol = parser.protocol;
      exports.connect = lookup;
      exports.Manager = require('./manager');
      exports.Socket = require('./socket');
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###63"},');

    }, {
      "./manager": 57,
      "./socket": 59,
      "./url": 60,
      "debug": 62,
      "socket.io-parser": 66
    }],
    57: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###64","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var eio = require('engine.io-client');
      var Socket = require('./socket');
      var Emitter = require('component-emitter');
      var parser = require('socket.io-parser');
      var on = require('./on');
      var bind = require('component-bind');
      var debug = require('debug')('socket.io-client:manager');
      var indexOf = require('indexof');
      var Backoff = require('backo2');
      var has = Object.prototype.hasOwnProperty;
      module.exports = Manager;
      function Manager(uri, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Manager","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!(this instanceof Manager)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Manager"},');

          return new Manager(uri, opts);
        }
        if (uri && 'object' === typeof uri) {
          opts = uri;
          uri = undefined;
        }
        opts = opts || ({});
        opts.path = opts.path || '/socket.io';
        this.nsps = {};
        this.subs = [];
        this.opts = opts;
        this.reconnection(opts.reconnection !== false);
        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
        this.reconnectionDelay(opts.reconnectionDelay || 1000);
        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
        this.randomizationFactor(opts.randomizationFactor || 0.5);
        this.backoff = new Backoff({
          min: this.reconnectionDelay(),
          max: this.reconnectionDelayMax(),
          jitter: this.randomizationFactor()
        });
        this.timeout(null == opts.timeout ? 20000 : opts.timeout);
        this.readyState = 'closed';
        this.uri = uri;
        this.connecting = [];
        this.lastPing = null;
        this.encoding = false;
        this.packetBuffer = [];
        var _parser = opts.parser || parser;
        this.encoder = new _parser.Encoder();
        this.decoder = new _parser.Decoder();
        this.autoConnect = opts.autoConnect !== false;
        if (this.autoConnect) this.open();
                SRTlib.send('{"type":"FUNCTIONEND","function":"Manager","paramsNumber":2},');

      }
      Manager.prototype.emitAll = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.emitAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.emit.apply(this, arguments);
        for (var nsp in this.nsps) {
          if (has.call(this.nsps, nsp)) {
            this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.emitAll"},');

      };
      Manager.prototype.updateSocketIds = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.updateSocketIds","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        for (var nsp in this.nsps) {
          if (has.call(this.nsps, nsp)) {
            this.nsps[nsp].id = this.generateId(nsp);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.updateSocketIds"},');

      };
      Manager.prototype.generateId = function (nsp) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.generateId","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.generateId"},');

        return (nsp === '/' ? '' : nsp + '#') + this.engine.id;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.generateId"},');

      };
      Emitter(Manager.prototype);
      Manager.prototype.reconnection = function (v) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.reconnection","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!arguments.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnection"},');

          return this._reconnection;
        }
        this._reconnection = !!v;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnection"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnection"},');

      };
      Manager.prototype.reconnectionAttempts = function (v) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.reconnectionAttempts","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!arguments.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnectionAttempts"},');

          return this._reconnectionAttempts;
        }
        this._reconnectionAttempts = v;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnectionAttempts"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnectionAttempts"},');

      };
      Manager.prototype.reconnectionDelay = function (v) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.reconnectionDelay","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!arguments.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnectionDelay"},');

          return this._reconnectionDelay;
        }
        this._reconnectionDelay = v;
        this.backoff && this.backoff.setMin(v);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnectionDelay"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnectionDelay"},');

      };
      Manager.prototype.randomizationFactor = function (v) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.randomizationFactor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!arguments.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.randomizationFactor"},');

          return this._randomizationFactor;
        }
        this._randomizationFactor = v;
        this.backoff && this.backoff.setJitter(v);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.randomizationFactor"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.randomizationFactor"},');

      };
      Manager.prototype.reconnectionDelayMax = function (v) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.reconnectionDelayMax","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!arguments.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnectionDelayMax"},');

          return this._reconnectionDelayMax;
        }
        this._reconnectionDelayMax = v;
        this.backoff && this.backoff.setMax(v);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnectionDelayMax"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnectionDelayMax"},');

      };
      Manager.prototype.timeout = function (v) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.timeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!arguments.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.timeout"},');

          return this._timeout;
        }
        this._timeout = v;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.timeout"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.timeout"},');

      };
      Manager.prototype.maybeReconnectOnOpen = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.maybeReconnectOnOpen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
          this.reconnect();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.maybeReconnectOnOpen"},');

      };
      Manager.prototype.open = Manager.prototype.connect = function (fn, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        debug('readyState %s', this.readyState);
        if (~this.readyState.indexOf('open')) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect"},');

          return this;
        }
        debug('opening %s', this.uri);
        this.engine = eio(this.uri, this.opts);
        var socket = this.engine;
        var self = this;
        this.readyState = 'opening';
        this.skipReconnect = false;
        var openSub = on(socket, 'open', function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect.openSub.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          self.onopen();
          fn && fn();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect.openSub.on"},');

        });
        var errorSub = on(socket, 'error', function (data) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect.errorSub.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          debug('connect_error');
          self.cleanup();
          self.readyState = 'closed';
          self.emitAll('connect_error', data);
          if (fn) {
            var err = new Error('Connection error');
            err.data = data;
            fn(err);
          } else {
            self.maybeReconnectOnOpen();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect.errorSub.on"},');

        });
        if (false !== this._timeout) {
          var timeout = this._timeout;
          debug('connect attempt will timeout after %d', timeout);
          var timer = setTimeout(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect.timer.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            debug('connect attempt timed out after %d', timeout);
            openSub.destroy();
            socket.close();
            socket.emit('error', 'timeout');
            self.emitAll('connect_timeout', timeout);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect.timer.setTimeout"},');

          }, timeout);
          this.subs.push({
            destroy: function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect.subs.push.destroy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              clearTimeout(timer);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect.subs.push.destroy"},');

            }
          });
        }
        this.subs.push(openSub);
        this.subs.push(errorSub);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.open.Manager.prototype.connect"},');

      };
      Manager.prototype.onopen = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.onopen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        debug('open');
        this.cleanup();
        this.readyState = 'open';
        this.emit('open');
        var socket = this.engine;
        this.subs.push(on(socket, 'data', bind(this, 'ondata')));
        this.subs.push(on(socket, 'ping', bind(this, 'onping')));
        this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
        this.subs.push(on(socket, 'error', bind(this, 'onerror')));
        this.subs.push(on(socket, 'close', bind(this, 'onclose')));
        this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.onopen"},');

      };
      Manager.prototype.onping = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.onping","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.lastPing = new Date();
        this.emitAll('ping');
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.onping"},');

      };
      Manager.prototype.onpong = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.onpong","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.emitAll('pong', new Date() - this.lastPing);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.onpong"},');

      };
      Manager.prototype.ondata = function (data) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.ondata","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.decoder.add(data);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.ondata"},');

      };
      Manager.prototype.ondecoded = function (packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.ondecoded","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.emit('packet', packet);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.ondecoded"},');

      };
      Manager.prototype.onerror = function (err) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        debug('error', err);
        this.emitAll('error', err);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.onerror"},');

      };
      Manager.prototype.socket = function (nsp, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.socket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var socket = this.nsps[nsp];
        if (!socket) {
          socket = new Socket(this, nsp, opts);
          this.nsps[nsp] = socket;
          var self = this;
          socket.on('connecting', onConnecting);
          socket.on('connect', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.socket.socket.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            socket.id = self.generateId(nsp);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.socket.socket.on"},');

          });
          if (this.autoConnect) {
            onConnecting();
          }
        }
        function onConnecting() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"onConnecting","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (!~indexOf(self.connecting, socket)) {
            self.connecting.push(socket);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onConnecting","paramsNumber":0},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.socket"},');

        return socket;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.socket"},');

      };
      Manager.prototype.destroy = function (socket) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.destroy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var index = indexOf(this.connecting, socket);
        if (~index) this.connecting.splice(index, 1);
        if (this.connecting.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.destroy"},');

          return;
        }
        this.close();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.destroy"},');

      };
      Manager.prototype.packet = function (packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.packet","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        debug('writing packet %j', packet);
        var self = this;
        if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;
        if (!self.encoding) {
          self.encoding = true;
          this.encoder.encode(packet, function (encodedPackets) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.packet.encoder.encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            for (var i = 0; i < encodedPackets.length; i++) {
              self.engine.write(encodedPackets[i], packet.options);
            }
            self.encoding = false;
            self.processPacketQueue();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.packet.encoder.encode"},');

          });
        } else {
          self.packetBuffer.push(packet);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.packet"},');

      };
      Manager.prototype.processPacketQueue = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.processPacketQueue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (this.packetBuffer.length > 0 && !this.encoding) {
          var pack = this.packetBuffer.shift();
          this.packet(pack);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.processPacketQueue"},');

      };
      Manager.prototype.cleanup = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.cleanup","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        debug('cleanup');
        var subsLength = this.subs.length;
        for (var i = 0; i < subsLength; i++) {
          var sub = this.subs.shift();
          sub.destroy();
        }
        this.packetBuffer = [];
        this.encoding = false;
        this.lastPing = null;
        this.decoder.destroy();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.cleanup"},');

      };
      Manager.prototype.close = Manager.prototype.disconnect = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.close.Manager.prototype.disconnect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        debug('disconnect');
        this.skipReconnect = true;
        this.reconnecting = false;
        if ('opening' === this.readyState) {
          this.cleanup();
        }
        this.backoff.reset();
        this.readyState = 'closed';
        if (this.engine) this.engine.close();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.close.Manager.prototype.disconnect"},');

      };
      Manager.prototype.onclose = function (reason) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.onclose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        debug('onclose');
        this.cleanup();
        this.backoff.reset();
        this.readyState = 'closed';
        this.emit('close', reason);
        if (this._reconnection && !this.skipReconnect) {
          this.reconnect();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.onclose"},');

      };
      Manager.prototype.reconnect = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.reconnect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (this.reconnecting || this.skipReconnect) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnect"},');

          return this;
        }
        var self = this;
        if (this.backoff.attempts >= this._reconnectionAttempts) {
          debug('reconnect failed');
          this.backoff.reset();
          this.emitAll('reconnect_failed');
          this.reconnecting = false;
        } else {
          var delay = this.backoff.duration();
          debug('will wait %dms before reconnect attempt', delay);
          this.reconnecting = true;
          var timer = setTimeout(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.reconnect.timer.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (self.skipReconnect) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnect.timer.setTimeout"},');

              return;
            }
            debug('attempting reconnect');
            self.emitAll('reconnect_attempt', self.backoff.attempts);
            self.emitAll('reconnecting', self.backoff.attempts);
            if (self.skipReconnect) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnect.timer.setTimeout"},');

              return;
            }
            self.open(function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.reconnect.timer.setTimeout.self.open","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (err) {
                debug('reconnect attempt error');
                self.reconnecting = false;
                self.reconnect();
                self.emitAll('reconnect_error', err.data);
              } else {
                debug('reconnect success');
                self.onreconnect();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnect.timer.setTimeout.self.open"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnect.timer.setTimeout"},');

          }, delay);
          this.subs.push({
            destroy: function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.reconnect.subs.push.destroy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              clearTimeout(timer);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnect.subs.push.destroy"},');

            }
          });
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.reconnect"},');

      };
      Manager.prototype.onreconnect = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Manager.prototype.onreconnect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var attempt = this.backoff.attempts;
        this.reconnecting = false;
        this.backoff.reset();
        this.updateSocketIds();
        this.emitAll('reconnect', attempt);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Manager.prototype.onreconnect"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###64"},');

    }, {
      "./on": 58,
      "./socket": 59,
      "backo2": 3,
      "component-bind": 10,
      "component-emitter": 61,
      "debug": 62,
      "engine.io-client": 17,
      "indexof": 39,
      "socket.io-parser": 66
    }],
    58: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###65","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = on;
      function on(obj, ev, fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        obj.on(ev, fn);
                SRTlib.send('{"type":"FUNCTIONEND","function":"on"},');

        return {
          destroy: function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.destroy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            obj.removeListener(ev, fn);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.destroy"},');

          }
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"on","paramsNumber":3},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###65"},');

    }, {}],
    59: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###66","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var parser = require('socket.io-parser');
      var Emitter = require('component-emitter');
      var toArray = require('to-array');
      var on = require('./on');
      var bind = require('component-bind');
      var debug = require('debug')('socket.io-client:socket');
      var parseqs = require('parseqs');
      var hasBin = require('has-binary2');
      module.exports = exports = Socket;
      var events = {
        connect: 1,
        connect_error: 1,
        connect_timeout: 1,
        connecting: 1,
        disconnect: 1,
        error: 1,
        reconnect: 1,
        reconnect_attempt: 1,
        reconnect_failed: 1,
        reconnect_error: 1,
        reconnecting: 1,
        ping: 1,
        pong: 1
      };
      var emit = Emitter.prototype.emit;
      function Socket(io, nsp, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Socket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        this.io = io;
        this.nsp = nsp;
        this.json = this;
        this.ids = 0;
        this.acks = {};
        this.receiveBuffer = [];
        this.sendBuffer = [];
        this.connected = false;
        this.disconnected = true;
        this.flags = {};
        if (opts && opts.query) {
          this.query = opts.query;
        }
        if (this.io.autoConnect) this.open();
                SRTlib.send('{"type":"FUNCTIONEND","function":"Socket","paramsNumber":3},');

      }
      Emitter(Socket.prototype);
      Socket.prototype.subEvents = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.subEvents","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (this.subs) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.subEvents"},');

          return;
        }
        var io = this.io;
        this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.subEvents"},');

      };
      Socket.prototype.open = Socket.prototype.connect = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.open.Socket.prototype.connect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (this.connected) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.open.Socket.prototype.connect"},');

          return this;
        }
        this.subEvents();
        this.io.open();
        if ('open' === this.io.readyState) this.onopen();
        this.emit('connecting');
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.open.Socket.prototype.connect"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.open.Socket.prototype.connect"},');

      };
      Socket.prototype.send = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.send","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var args = toArray(arguments);
        args.unshift('message');
        this.emit.apply(this, args);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.send"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.send"},');

      };
      Socket.prototype.emit = function (ev) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.emit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (events.hasOwnProperty(ev)) {
          emit.apply(this, arguments);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.emit"},');

          return this;
        }
        var args = toArray(arguments);
        var packet = {
          type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,
          data: args
        };
        packet.options = {};
        packet.options.compress = !this.flags || false !== this.flags.compress;
        if ('function' === typeof args[args.length - 1]) {
          debug('emitting packet with ack id %d', this.ids);
          this.acks[this.ids] = args.pop();
          packet.id = this.ids++;
        }
        if (this.connected) {
          this.packet(packet);
        } else {
          this.sendBuffer.push(packet);
        }
        this.flags = {};
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.emit"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.emit"},');

      };
      Socket.prototype.packet = function (packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.packet","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        packet.nsp = this.nsp;
        this.io.packet(packet);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.packet"},');

      };
      Socket.prototype.onopen = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onopen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        debug('transport is open - connecting');
        if ('/' !== this.nsp) {
          if (this.query) {
            var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;
            debug('sending connect packet with query %s', query);
            this.packet({
              type: parser.CONNECT,
              query: query
            });
          } else {
            this.packet({
              type: parser.CONNECT
            });
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onopen"},');

      };
      Socket.prototype.onclose = function (reason) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onclose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        debug('close (%s)', reason);
        this.connected = false;
        this.disconnected = true;
        delete this.id;
        this.emit('disconnect', reason);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onclose"},');

      };
      Socket.prototype.onpacket = function (packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onpacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var sameNamespace = packet.nsp === this.nsp;
        var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';
        if (!sameNamespace && !rootNamespaceError) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onpacket"},');

          return;
        }
        switch (packet.type) {
          case parser.CONNECT:
            this.onconnect();
            break;
          case parser.EVENT:
            this.onevent(packet);
            break;
          case parser.BINARY_EVENT:
            this.onevent(packet);
            break;
          case parser.ACK:
            this.onack(packet);
            break;
          case parser.BINARY_ACK:
            this.onack(packet);
            break;
          case parser.DISCONNECT:
            this.ondisconnect();
            break;
          case parser.ERROR:
            this.emit('error', packet.data);
            break;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onpacket"},');

      };
      Socket.prototype.onevent = function (packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onevent","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var args = packet.data || [];
        debug('emitting event %j', args);
        if (null != packet.id) {
          debug('attaching ack callback to event');
          args.push(this.ack(packet.id));
        }
        if (this.connected) {
          emit.apply(this, args);
        } else {
          this.receiveBuffer.push(args);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onevent"},');

      };
      Socket.prototype.ack = function (id) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.ack","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var self = this;
        var sent = false;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.ack"},');

        return function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.ack.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (sent) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.ack.ReturnStatement"},');

            return;
          }
          sent = true;
          var args = toArray(arguments);
          debug('sending ack %j', args);
          self.packet({
            type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,
            id: id,
            data: args
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.ack.ReturnStatement"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.ack"},');

      };
      Socket.prototype.onack = function (packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onack","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var ack = this.acks[packet.id];
        if ('function' === typeof ack) {
          debug('calling ack %s with %j', packet.id, packet.data);
          ack.apply(this, packet.data);
          delete this.acks[packet.id];
        } else {
          debug('bad ack %s', packet.id);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onack"},');

      };
      Socket.prototype.onconnect = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.onconnect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.connected = true;
        this.disconnected = false;
        this.emit('connect');
        this.emitBuffered();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.onconnect"},');

      };
      Socket.prototype.emitBuffered = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.emitBuffered","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var i;
        for (i = 0; i < this.receiveBuffer.length; i++) {
          emit.apply(this, this.receiveBuffer[i]);
        }
        this.receiveBuffer = [];
        for (i = 0; i < this.sendBuffer.length; i++) {
          this.packet(this.sendBuffer[i]);
        }
        this.sendBuffer = [];
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.emitBuffered"},');

      };
      Socket.prototype.ondisconnect = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.ondisconnect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        debug('server disconnect (%s)', this.nsp);
        this.destroy();
        this.onclose('io server disconnect');
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.ondisconnect"},');

      };
      Socket.prototype.destroy = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.destroy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (this.subs) {
          for (var i = 0; i < this.subs.length; i++) {
            this.subs[i].destroy();
          }
          this.subs = null;
        }
        this.io.destroy(this);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.destroy"},');

      };
      Socket.prototype.close = Socket.prototype.disconnect = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.close.Socket.prototype.disconnect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (this.connected) {
          debug('performing disconnect (%s)', this.nsp);
          this.packet({
            type: parser.DISCONNECT
          });
        }
        this.destroy();
        if (this.connected) {
          this.onclose('io client disconnect');
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.close.Socket.prototype.disconnect"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.close.Socket.prototype.disconnect"},');

      };
      Socket.prototype.compress = function (compress) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.compress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.flags.compress = compress;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.compress"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.compress"},');

      };
      Socket.prototype.binary = function (binary) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Socket.prototype.binary","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.flags.binary = binary;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.binary"},');

        return this;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Socket.prototype.binary"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###66"},');

    }, {
      "./on": 58,
      "component-bind": 10,
      "component-emitter": 61,
      "debug": 62,
      "has-binary2": 35,
      "parseqs": 48,
      "socket.io-parser": 66,
      "to-array": 73
    }],
    60: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###67","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var parseuri = require('parseuri');
      var debug = require('debug')('socket.io-client:url');
      module.exports = url;
      function url(uri, loc) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"url","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var obj = uri;
        loc = loc || typeof location !== 'undefined' && location;
        if (null == uri) uri = loc.protocol + '//' + loc.host;
        if ('string' === typeof uri) {
          if ('/' === uri.charAt(0)) {
            if ('/' === uri.charAt(1)) {
              uri = loc.protocol + uri;
            } else {
              uri = loc.host + uri;
            }
          }
          if (!(/^(https?|wss?):\/\//).test(uri)) {
            debug('protocol-less url %s', uri);
            if ('undefined' !== typeof loc) {
              uri = loc.protocol + '//' + uri;
            } else {
              uri = 'https://' + uri;
            }
          }
          debug('parse %s', uri);
          obj = parseuri(uri);
        }
        if (!obj.port) {
          if ((/^(http|ws)$/).test(obj.protocol)) {
            obj.port = '80';
          } else if ((/^(http|ws)s$/).test(obj.protocol)) {
            obj.port = '443';
          }
        }
        obj.path = obj.path || '/';
        var ipv6 = obj.host.indexOf(':') !== -1;
        var host = ipv6 ? '[' + obj.host + ']' : obj.host;
        obj.id = obj.protocol + '://' + host + ':' + obj.port;
        obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);
                SRTlib.send('{"type":"FUNCTIONEND","function":"url"},');

        return obj;
                SRTlib.send('{"type":"FUNCTIONEND","function":"url","paramsNumber":2},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###67"},');

    }, {
      "debug": 62,
      "parseuri": 49
    }],
    61: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###68","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      arguments[4][26][0].apply(exports, arguments);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###68"},');

    }, {
      "dup": 26
    }],
    62: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###69","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (process) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###14","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        exports = module.exports = require('./debug');
        exports.log = log;
        exports.formatArgs = formatArgs;
        exports.save = save;
        exports.load = load;
        exports.useColors = useColors;
        exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();
        exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
        function useColors() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"useColors","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useColors"},');

            return true;
          }
          if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useColors"},');

            return false;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"useColors"},');

          return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"useColors","paramsNumber":0},');

        }
        exports.formatters.j = function (v) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.exports.formatters.j###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          try {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.exports.formatters.j###2"},');

            return JSON.stringify(v);
          } catch (err) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.exports.formatters.j###2"},');

            return '[UnexpectedJSONParseError]: ' + err.message;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.exports.formatters.j###2"},');

        };
        function formatArgs(args) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"formatArgs","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var useColors = this.useColors;
          args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);
          if (!useColors) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"formatArgs"},');

            return;
          }
          var c = 'color: ' + this.color;
          args.splice(1, 0, c, 'color: inherit');
          var index = 0;
          var lastC = 0;
          args[0].replace(/%[a-zA-Z%]/g, function (match) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"args.replace###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if ('%%' === match) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"args.replace###2"},');

              return;
            }
            index++;
            if ('%c' === match) {
              lastC = index;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"args.replace###2"},');

          });
          args.splice(lastC, 0, c);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"formatArgs","paramsNumber":1},');

        }
        function log() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"log","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"log"},');

          return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"log","paramsNumber":0},');

        }
        function save(namespaces) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"save","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          try {
            if (null == namespaces) {
              exports.storage.removeItem('debug');
            } else {
              exports.storage.debug = namespaces;
            }
          } catch (e) {}
                    SRTlib.send('{"type":"FUNCTIONEND","function":"save","paramsNumber":1},');

        }
        function load() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"load","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var r;
          try {
            r = exports.storage.debug;
          } catch (e) {}
          if (!r && typeof process !== 'undefined' && ('env' in process)) {
            r = process.env.DEBUG;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"load"},');

          return r;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"load","paramsNumber":0},');

        }
        exports.enable(load());
        function localstorage() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"localstorage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          try {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"localstorage"},');

            return window.localStorage;
          } catch (e) {}
                    SRTlib.send('{"type":"FUNCTIONEND","function":"localstorage","paramsNumber":0},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###14"},');

      }).call(this, require('_process'));
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###69"},');

    }, {
      "./debug": 63,
      "_process": 52
    }],
    63: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###70","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      arguments[4][28][0].apply(exports, arguments);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###70"},');

    }, {
      "dup": 28,
      "ms": 64
    }],
    64: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###71","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      arguments[4][29][0].apply(exports, arguments);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###71"},');

    }, {
      "dup": 29
    }],
    65: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###72","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var isArray = require('isarray');
      var isBuf = require('./is-buffer');
      var toString = Object.prototype.toString;
      var withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
      var withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';
      exports.deconstructPacket = function (packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.deconstructPacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var buffers = [];
        var packetData = packet.data;
        var pack = packet;
        pack.data = _deconstructPacket(packetData, buffers);
        pack.attachments = buffers.length;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.deconstructPacket"},');

        return {
          packet: pack,
          buffers: buffers
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.deconstructPacket"},');

      };
      function _deconstructPacket(data, buffers) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_deconstructPacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!data) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_deconstructPacket"},');

          return data;
        }
        if (isBuf(data)) {
          var placeholder = {
            _placeholder: true,
            num: buffers.length
          };
          buffers.push(data);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_deconstructPacket"},');

          return placeholder;
        } else if (isArray(data)) {
          var newData = new Array(data.length);
          for (var i = 0; i < data.length; i++) {
            newData[i] = _deconstructPacket(data[i], buffers);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_deconstructPacket"},');

          return newData;
        } else if (typeof data === 'object' && !(data instanceof Date)) {
          var newData = {};
          for (var key in data) {
            newData[key] = _deconstructPacket(data[key], buffers);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_deconstructPacket"},');

          return newData;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_deconstructPacket"},');

        return data;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_deconstructPacket","paramsNumber":2},');

      }
      exports.reconstructPacket = function (packet, buffers) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.reconstructPacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        packet.data = _reconstructPacket(packet.data, buffers);
        packet.attachments = undefined;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.reconstructPacket"},');

        return packet;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.reconstructPacket"},');

      };
      function _reconstructPacket(data, buffers) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_reconstructPacket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!data) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_reconstructPacket"},');

          return data;
        }
        if (data && data._placeholder) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_reconstructPacket"},');

          return buffers[data.num];
        } else if (isArray(data)) {
          for (var i = 0; i < data.length; i++) {
            data[i] = _reconstructPacket(data[i], buffers);
          }
        } else if (typeof data === 'object') {
          for (var key in data) {
            data[key] = _reconstructPacket(data[key], buffers);
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_reconstructPacket"},');

        return data;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_reconstructPacket","paramsNumber":2},');

      }
      exports.removeBlobs = function (data, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.removeBlobs","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        function _removeBlobs(obj, curKey, containingObject) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_removeBlobs","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (!obj) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_removeBlobs"},');

            return obj;
          }
          if (withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {
            pendingBlobs++;
            var fileReader = new FileReader();
            fileReader.onload = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"fileReader.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (containingObject) {
                containingObject[curKey] = this.result;
              } else {
                bloblessData = this.result;
              }
              if (!--pendingBlobs) {
                callback(bloblessData);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"fileReader.onload"},');

            };
            fileReader.readAsArrayBuffer(obj);
          } else if (isArray(obj)) {
            for (var i = 0; i < obj.length; i++) {
              _removeBlobs(obj[i], i, obj);
            }
          } else if (typeof obj === 'object' && !isBuf(obj)) {
            for (var key in obj) {
              _removeBlobs(obj[key], key, obj);
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_removeBlobs","paramsNumber":3},');

        }
        var pendingBlobs = 0;
        var bloblessData = data;
        _removeBlobs(bloblessData);
        if (!pendingBlobs) {
          callback(bloblessData);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.removeBlobs"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###72"},');

    }, {
      "./is-buffer": 67,
      "isarray": 71
    }],
    66: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###73","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var debug = require('debug')('socket.io-parser');
      var Emitter = require('component-emitter');
      var binary = require('./binary');
      var isArray = require('isarray');
      var isBuf = require('./is-buffer');
      exports.protocol = 4;
      exports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];
      exports.CONNECT = 0;
      exports.DISCONNECT = 1;
      exports.EVENT = 2;
      exports.ACK = 3;
      exports.ERROR = 4;
      exports.BINARY_EVENT = 5;
      exports.BINARY_ACK = 6;
      exports.Encoder = Encoder;
      exports.Decoder = Decoder;
      function Encoder() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Encoder","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"Encoder","paramsNumber":0},');

      }
      var ERROR_PACKET = exports.ERROR + '"encode error"';
      Encoder.prototype.encode = function (obj, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Encoder.prototype.encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        debug('encoding packet %j', obj);
        if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
          encodeAsBinary(obj, callback);
        } else {
          var encoding = encodeAsString(obj);
          callback([encoding]);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Encoder.prototype.encode"},');

      };
      function encodeAsString(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeAsString","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var str = '' + obj.type;
        if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
          str += obj.attachments + '-';
        }
        if (obj.nsp && '/' !== obj.nsp) {
          str += obj.nsp + ',';
        }
        if (null != obj.id) {
          str += obj.id;
        }
        if (null != obj.data) {
          var payload = tryStringify(obj.data);
          if (payload !== false) {
            str += payload;
          } else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"encodeAsString"},');

            return ERROR_PACKET;
          }
        }
        debug('encoded %j as %s', obj, str);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeAsString"},');

        return str;
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeAsString","paramsNumber":1},');

      }
      function tryStringify(str) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"tryStringify","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        try {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"tryStringify"},');

          return JSON.stringify(str);
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"tryStringify"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"tryStringify","paramsNumber":1},');

      }
      function encodeAsBinary(obj, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeAsBinary","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        function writeEncoding(bloblessData) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"writeEncoding","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var deconstruction = binary.deconstructPacket(bloblessData);
          var pack = encodeAsString(deconstruction.packet);
          var buffers = deconstruction.buffers;
          buffers.unshift(pack);
          callback(buffers);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"writeEncoding","paramsNumber":1},');

        }
        binary.removeBlobs(obj, writeEncoding);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeAsBinary","paramsNumber":2},');

      }
      function Decoder() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Decoder","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.reconstructor = null;
                SRTlib.send('{"type":"FUNCTIONEND","function":"Decoder","paramsNumber":0},');

      }
      Emitter(Decoder.prototype);
      Decoder.prototype.add = function (obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Decoder.prototype.add","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var packet;
        if (typeof obj === 'string') {
          packet = decodeString(obj);
          if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {
            this.reconstructor = new BinaryReconstructor(packet);
            if (this.reconstructor.reconPack.attachments === 0) {
              this.emit('decoded', packet);
            }
          } else {
            this.emit('decoded', packet);
          }
        } else if (isBuf(obj) || obj.base64) {
          if (!this.reconstructor) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Decoder.prototype.add"},');

            throw new Error('got binary data when not reconstructing a packet');
          } else {
            packet = this.reconstructor.takeBinaryData(obj);
            if (packet) {
              this.reconstructor = null;
              this.emit('decoded', packet);
            }
          }
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Decoder.prototype.add"},');

          throw new Error('Unknown type: ' + obj);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Decoder.prototype.add"},');

      };
      function decodeString(str) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"decodeString","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var i = 0;
        var p = {
          type: Number(str.charAt(0))
        };
        if (null == exports.types[p.type]) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decodeString"},');

          return error('unknown packet type ' + p.type);
        }
        if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {
          var buf = '';
          while (str.charAt(++i) !== '-') {
            buf += str.charAt(i);
            if (i == str.length) break;
          }
          if (buf != Number(buf) || str.charAt(i) !== '-') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"decodeString"},');

            throw new Error('Illegal attachments');
          }
          p.attachments = Number(buf);
        }
        if ('/' === str.charAt(i + 1)) {
          p.nsp = '';
          while (++i) {
            var c = str.charAt(i);
            if (',' === c) break;
            p.nsp += c;
            if (i === str.length) break;
          }
        } else {
          p.nsp = '/';
        }
        var next = str.charAt(i + 1);
        if ('' !== next && Number(next) == next) {
          p.id = '';
          while (++i) {
            var c = str.charAt(i);
            if (null == c || Number(c) != c) {
              --i;
              break;
            }
            p.id += str.charAt(i);
            if (i === str.length) break;
          }
          p.id = Number(p.id);
        }
        if (str.charAt(++i)) {
          var payload = tryParse(str.substr(i));
          var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));
          if (isPayloadValid) {
            p.data = payload;
          } else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"decodeString"},');

            return error('invalid payload');
          }
        }
        debug('decoded %s as %j', str, p);
                SRTlib.send('{"type":"FUNCTIONEND","function":"decodeString"},');

        return p;
                SRTlib.send('{"type":"FUNCTIONEND","function":"decodeString","paramsNumber":1},');

      }
      function tryParse(str) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"tryParse","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        try {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"tryParse"},');

          return JSON.parse(str);
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"tryParse"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"tryParse","paramsNumber":1},');

      }
      Decoder.prototype.destroy = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Decoder.prototype.destroy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (this.reconstructor) {
          this.reconstructor.finishedReconstruction();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Decoder.prototype.destroy"},');

      };
      function BinaryReconstructor(packet) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"BinaryReconstructor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.reconPack = packet;
        this.buffers = [];
                SRTlib.send('{"type":"FUNCTIONEND","function":"BinaryReconstructor","paramsNumber":1},');

      }
      BinaryReconstructor.prototype.takeBinaryData = function (binData) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.BinaryReconstructor.prototype.takeBinaryData","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        this.buffers.push(binData);
        if (this.buffers.length === this.reconPack.attachments) {
          var packet = binary.reconstructPacket(this.reconPack, this.buffers);
          this.finishedReconstruction();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.BinaryReconstructor.prototype.takeBinaryData"},');

          return packet;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.BinaryReconstructor.prototype.takeBinaryData"},');

        return null;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.BinaryReconstructor.prototype.takeBinaryData"},');

      };
      BinaryReconstructor.prototype.finishedReconstruction = function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.BinaryReconstructor.prototype.finishedReconstruction","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        this.reconPack = null;
        this.buffers = [];
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.BinaryReconstructor.prototype.finishedReconstruction"},');

      };
      function error(msg) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"error","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"error"},');

        return {
          type: exports.ERROR,
          data: 'parser error: ' + msg
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"error","paramsNumber":1},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###73"},');

    }, {
      "./binary": 65,
      "./is-buffer": 67,
      "component-emitter": 68,
      "debug": 69,
      "isarray": 71
    }],
    67: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###74","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (Buffer) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###15","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        module.exports = isBuf;
        var withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';
        var withNativeArrayBuffer = typeof ArrayBuffer === 'function';
        var isView = function (obj) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isView","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isView"},');

          return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isView"},');

        };
        function isBuf(obj) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isBuf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isBuf"},');

          return withNativeBuffer && Buffer.isBuffer(obj) || withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isBuf","paramsNumber":1},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###15"},');

      }).call(this, require("buffer").Buffer);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###74"},');

    }, {
      "buffer": 8
    }],
    68: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###75","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      arguments[4][26][0].apply(exports, arguments);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###75"},');

    }, {
      "dup": 26
    }],
    69: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###76","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (process) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###16","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        exports = module.exports = require('./debug');
        exports.log = log;
        exports.formatArgs = formatArgs;
        exports.save = save;
        exports.load = load;
        exports.useColors = useColors;
        exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();
        exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
        function useColors() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"useColors","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useColors"},');

            return true;
          }
          if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useColors"},');

            return false;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"useColors"},');

          return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"useColors","paramsNumber":0},');

        }
        exports.formatters.j = function (v) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.exports.formatters.j###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          try {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.exports.formatters.j###3"},');

            return JSON.stringify(v);
          } catch (err) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.exports.formatters.j###3"},');

            return '[UnexpectedJSONParseError]: ' + err.message;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.exports.formatters.j###3"},');

        };
        function formatArgs(args) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"formatArgs","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var useColors = this.useColors;
          args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);
          if (!useColors) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"formatArgs"},');

            return;
          }
          var c = 'color: ' + this.color;
          args.splice(1, 0, c, 'color: inherit');
          var index = 0;
          var lastC = 0;
          args[0].replace(/%[a-zA-Z%]/g, function (match) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"args.replace###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if ('%%' === match) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"args.replace###3"},');

              return;
            }
            index++;
            if ('%c' === match) {
              lastC = index;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"args.replace###3"},');

          });
          args.splice(lastC, 0, c);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"formatArgs","paramsNumber":1},');

        }
        function log() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"log","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"log"},');

          return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"log","paramsNumber":0},');

        }
        function save(namespaces) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"save","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          try {
            if (null == namespaces) {
              exports.storage.removeItem('debug');
            } else {
              exports.storage.debug = namespaces;
            }
          } catch (e) {}
                    SRTlib.send('{"type":"FUNCTIONEND","function":"save","paramsNumber":1},');

        }
        function load() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"load","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var r;
          try {
            r = exports.storage.debug;
          } catch (e) {}
          if (!r && typeof process !== 'undefined' && ('env' in process)) {
            r = process.env.DEBUG;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"load"},');

          return r;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"load","paramsNumber":0},');

        }
        exports.enable(load());
        function localstorage() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"localstorage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          try {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"localstorage"},');

            return window.localStorage;
          } catch (e) {}
                    SRTlib.send('{"type":"FUNCTIONEND","function":"localstorage","paramsNumber":0},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###16"},');

      }).call(this, require('_process'));
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###76"},');

    }, {
      "./debug": 70,
      "_process": 52
    }],
    70: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###77","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      arguments[4][28][0].apply(exports, arguments);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###77"},');

    }, {
      "dup": 28,
      "ms": 72
    }],
    71: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###78","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      arguments[4][36][0].apply(exports, arguments);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###78"},');

    }, {
      "dup": 36
    }],
    72: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###79","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      arguments[4][29][0].apply(exports, arguments);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###79"},');

    }, {
      "dup": 29
    }],
    73: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###80","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = toArray;
      function toArray(list, index) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"toArray","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var array = [];
        index = index || 0;
        for (var i = index || 0; i < list.length; i++) {
          array[i - index] = list[i];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"toArray"},');

        return array;
                SRTlib.send('{"type":"FUNCTIONEND","function":"toArray","paramsNumber":2},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###80"},');

    }, {}],
    74: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###81","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = fingerprint;
      var _isReactNative = require("./isReactNative");
      var _isReactNative2 = _interopRequireDefault(_isReactNative);
      function _interopRequireDefault(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_interopRequireDefault","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault"},');

        return obj && obj.__esModule ? obj : {
          default: obj
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault","paramsNumber":1},');

      }
      function fingerprint(file, options, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fingerprint","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if ((0, _isReactNative2.default)()) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fingerprint"},');

          return callback(null, reactNativeFingerprint(file, options));
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"fingerprint"},');

        return callback(null, ["tus-br", file.name, file.type, file.size, file.lastModified, options.endpoint].join("-"));
                SRTlib.send('{"type":"FUNCTIONEND","function":"fingerprint","paramsNumber":3},');

      }
      function reactNativeFingerprint(file, options) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"reactNativeFingerprint","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var exifHash = file.exif ? hashCode(JSON.stringify(file.exif)) : "noexif";
                SRTlib.send('{"type":"FUNCTIONEND","function":"reactNativeFingerprint"},');

        return ["tus-rn", file.name || "noname", file.size || "nosize", exifHash, options.endpoint].join("/");
                SRTlib.send('{"type":"FUNCTIONEND","function":"reactNativeFingerprint","paramsNumber":2},');

      }
      function hashCode(str) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"hashCode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var hash = 0;
        if (str.length === 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"hashCode"},');

          return hash;
        }
        for (var i = 0; i < str.length; i++) {
          var char = str.charCodeAt(i);
          hash = (hash << 5) - hash + char;
          hash = hash & hash;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"hashCode"},');

        return hash;
                SRTlib.send('{"type":"FUNCTIONEND","function":"hashCode","paramsNumber":1},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###81"},');

    }, {
      "./isReactNative": 76
    }],
    75: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###82","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var isCordova = function isCordova() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isCordova","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"isCordova"},');

        return typeof window != "undefined" && (typeof window.PhoneGap != "undefined" || typeof window.Cordova != "undefined" || typeof window.cordova != "undefined");
                SRTlib.send('{"type":"FUNCTIONEND","function":"isCordova"},');

      };
      exports.default = isCordova;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###82"},');

    }, {}],
    76: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###83","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var isReactNative = function isReactNative() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isReactNative","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"isReactNative"},');

        return typeof navigator !== "undefined" && typeof navigator.product === "string" && navigator.product.toLowerCase() === "reactnative";
                SRTlib.send('{"type":"FUNCTIONEND","function":"isReactNative"},');

      };
      exports.default = isReactNative;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###83"},');

    }, {}],
    77: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###84","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      function readAsByteArray(chunk, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"readAsByteArray","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var reader = new FileReader();
        reader.onload = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"reader.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          callback(null, new Uint8Array(reader.result));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"reader.onload"},');

        };
        reader.onerror = function (err) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"reader.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          callback(err);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"reader.onerror"},');

        };
        reader.readAsArrayBuffer(chunk);
                SRTlib.send('{"type":"FUNCTIONEND","function":"readAsByteArray","paramsNumber":2},');

      }
      exports.default = readAsByteArray;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###84"},');

    }, {}],
    78: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###85","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.newRequest = newRequest;
      exports.resolveUrl = resolveUrl;
      var _urlParse = require("url-parse");
      var _urlParse2 = _interopRequireDefault(_urlParse);
      function _interopRequireDefault(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_interopRequireDefault","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault"},');

        return obj && obj.__esModule ? obj : {
          default: obj
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault","paramsNumber":1},');

      }
      function newRequest() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"newRequest","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"newRequest"},');

        return new window.XMLHttpRequest();
                SRTlib.send('{"type":"FUNCTIONEND","function":"newRequest","paramsNumber":0},');

      }
      function resolveUrl(origin, link) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"resolveUrl","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"resolveUrl"},');

        return new _urlParse2.default(link, origin).toString();
                SRTlib.send('{"type":"FUNCTIONEND","function":"resolveUrl","paramsNumber":2},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###85"},');

    }, {
      "url-parse": 85
    }],
    79: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###86","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _createClass = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement._createClass","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function defineProperties(target, props) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"defineProperties","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if (("value" in descriptor)) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"defineProperties","paramsNumber":2},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass"},');

        return function (Constructor, protoProps, staticProps) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement._createClass.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass.ReturnStatement"},');

          return Constructor;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass.ReturnStatement"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass"},');

      })();
      exports.getSource = getSource;
      var _isReactNative = require("./isReactNative");
      var _isReactNative2 = _interopRequireDefault(_isReactNative);
      var _uriToBlob = require("./uriToBlob");
      var _uriToBlob2 = _interopRequireDefault(_uriToBlob);
      var _isCordova = require("./isCordova");
      var _isCordova2 = _interopRequireDefault(_isCordova);
      var _readAsByteArray = require("./readAsByteArray");
      var _readAsByteArray2 = _interopRequireDefault(_readAsByteArray);
      function _interopRequireDefault(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_interopRequireDefault","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault"},');

        return obj && obj.__esModule ? obj : {
          default: obj
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault","paramsNumber":1},');

      }
      function _classCallCheck(instance, Constructor) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_classCallCheck","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!(instance instanceof Constructor)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_classCallCheck"},');

          throw new TypeError("Cannot call a class as a function");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_classCallCheck","paramsNumber":2},');

      }
      var FileSource = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.FileSource","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function FileSource(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"FileSource","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          _classCallCheck(this, FileSource);
          this._file = file;
          this.size = file.size;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"FileSource","paramsNumber":1},');

        }
        _createClass(FileSource, [{
          key: "slice",
          value: function slice(start, end, callback) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.FileSource._createClass.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            if ((0, _isCordova2.default)()) {
              (0, _readAsByteArray2.default)(this._file.slice(start, end), function (err, chunk) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.FileSource._createClass.value.slice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                if (err) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileSource._createClass.value.slice"},');

                  return callback(err);
                }
                callback(null, chunk);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileSource._createClass.value.slice"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileSource._createClass.value"},');

              return;
            }
            callback(null, this._file.slice(start, end));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileSource._createClass.value"},');

          }
        }, {
          key: "close",
          value: function close() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.FileSource._createClass.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileSource._createClass.value###2"},');

          }
        }]);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileSource"},');

        return FileSource;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileSource"},');

      })();
      var StreamSource = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.StreamSource","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function StreamSource(reader, chunkSize) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"StreamSource","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          _classCallCheck(this, StreamSource);
          this._chunkSize = chunkSize;
          this._buffer = undefined;
          this._bufferOffset = 0;
          this._reader = reader;
          this._done = false;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"StreamSource","paramsNumber":2},');

        }
        _createClass(StreamSource, [{
          key: "slice",
          value: function slice(start, end, callback) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.StreamSource._createClass.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            if (start < this._bufferOffset) {
              callback(new Error("Requested data is before the reader's current offset"));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value"},');

              return;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value"},');

            return this._readUntilEnoughDataOrDone(start, end, callback);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value"},');

          }
        }, {
          key: "_readUntilEnoughDataOrDone",
          value: function _readUntilEnoughDataOrDone(start, end, callback) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.StreamSource._createClass.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var _this = this;
            var hasEnoughData = end <= this._bufferOffset + len(this._buffer);
            if (this._done || hasEnoughData) {
              var value = this._getDataFromBuffer(start, end);
              callback(null, value, value == null ? this._done : false);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value###2"},');

              return;
            }
            this._reader.read().then(function (_ref) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.StreamSource._createClass.value._readUntilEnoughDataOrDone._reader.read.then.catch._reader.read.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var value = _ref.value, done = _ref.done;
              if (done) {
                _this._done = true;
              } else if (_this._buffer === undefined) {
                _this._buffer = value;
              } else {
                _this._buffer = concat(_this._buffer, value);
              }
              _this._readUntilEnoughDataOrDone(start, end, callback);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value._readUntilEnoughDataOrDone._reader.read.then.catch._reader.read.then"},');

            }).catch(function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.StreamSource._createClass.value._readUntilEnoughDataOrDone._reader.read.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              callback(new Error("Error during read: " + err));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value._readUntilEnoughDataOrDone._reader.read.then.catch"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value###2"},');

          }
        }, {
          key: "_getDataFromBuffer",
          value: function _getDataFromBuffer(start, end) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.StreamSource._createClass.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (start > this._bufferOffset) {
              this._buffer = this._buffer.slice(start - this._bufferOffset);
              this._bufferOffset = start;
            }
            var hasAllDataBeenRead = len(this._buffer) === 0;
            if (this._done && hasAllDataBeenRead) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value###3"},');

              return null;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value###3"},');

            return this._buffer.slice(0, end - start);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value###3"},');

          }
        }, {
          key: "close",
          value: function close() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.StreamSource._createClass.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (this._reader.cancel) {
              this._reader.cancel();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource._createClass.value###4"},');

          }
        }]);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource"},');

        return StreamSource;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.StreamSource"},');

      })();
      function len(blobOrArray) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"len","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (blobOrArray === undefined) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"len"},');

          return 0;
        }
        if (blobOrArray.size !== undefined) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"len"},');

          return blobOrArray.size;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"len"},');

        return blobOrArray.length;
                SRTlib.send('{"type":"FUNCTIONEND","function":"len","paramsNumber":1},');

      }
      function concat(a, b) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"concat","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (a.concat) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"concat"},');

          return a.concat(b);
        }
        if (a instanceof Blob) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"concat"},');

          return new Blob([a, b], {
            type: a.type
          });
        }
        if (a.set) {
          var c = new a.constructor(a.length + b.length);
          c.set(a);
          c.set(b, a.length);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"concat"},');

          return c;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"concat"},');

        throw new Error("Unknown data type");
                SRTlib.send('{"type":"FUNCTIONEND","function":"concat","paramsNumber":2},');

      }
      function getSource(input, chunkSize, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getSource","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if ((0, _isReactNative2.default)() && input && typeof input.uri !== "undefined") {
          (0, _uriToBlob2.default)(input.uri, function (err, blob) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"emptyKey###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (err) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"emptyKey###2"},');

              return callback(new Error("tus: cannot fetch `file.uri` as Blob, make sure the uri is correct and accessible. " + err));
            }
            callback(null, new FileSource(blob));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"emptyKey###2"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getSource"},');

          return;
        }
        if (typeof input.slice === "function" && typeof input.size !== "undefined") {
          callback(null, new FileSource(input));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getSource"},');

          return;
        }
        if (typeof input.read === "function") {
          chunkSize = +chunkSize;
          if (!isFinite(chunkSize)) {
            callback(new Error("cannot create source for stream without a finite value for the `chunkSize` option"));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getSource"},');

            return;
          }
          callback(null, new StreamSource(input, chunkSize));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getSource"},');

          return;
        }
        callback(new Error("source object may only be an instance of File, Blob, or Reader in this environment"));
                SRTlib.send('{"type":"FUNCTIONEND","function":"getSource","paramsNumber":3},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###86"},');

    }, {
      "./isCordova": 75,
      "./isReactNative": 76,
      "./readAsByteArray": 77,
      "./uriToBlob": 81
    }],
    80: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###87","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _createClass = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement._createClass###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function defineProperties(target, props) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"defineProperties","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if (("value" in descriptor)) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"defineProperties","paramsNumber":2},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass###2"},');

        return function (Constructor, protoProps, staticProps) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement._createClass.ReturnStatement###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass.ReturnStatement###2"},');

          return Constructor;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass.ReturnStatement###2"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass###2"},');

      })();
      exports.getStorage = getStorage;
      function _classCallCheck(instance, Constructor) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_classCallCheck","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!(instance instanceof Constructor)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_classCallCheck"},');

          throw new TypeError("Cannot call a class as a function");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_classCallCheck","paramsNumber":2},');

      }
      var hasStorage = false;
      try {
        hasStorage = ("localStorage" in window);
        var key = "tusSupport";
        localStorage.setItem(key, localStorage.getItem(key));
      } catch (e) {
        if (e.code === e.SECURITY_ERR || e.code === e.QUOTA_EXCEEDED_ERR) {
          hasStorage = false;
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###87"},');

          throw e;
        }
      }
      var canStoreURLs = exports.canStoreURLs = hasStorage;
      var LocalStorage = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.LocalStorage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function LocalStorage() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"LocalStorage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          _classCallCheck(this, LocalStorage);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"LocalStorage","paramsNumber":0},');

        }
        _createClass(LocalStorage, [{
          key: "setItem",
          value: function setItem(key, value, cb) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.LocalStorage._createClass.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            cb(null, localStorage.setItem(key, value));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.LocalStorage._createClass.value"},');

          }
        }, {
          key: "getItem",
          value: function getItem(key, cb) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.LocalStorage._createClass.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            cb(null, localStorage.getItem(key));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.LocalStorage._createClass.value###2"},');

          }
        }, {
          key: "removeItem",
          value: function removeItem(key, cb) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.LocalStorage._createClass.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            cb(null, localStorage.removeItem(key));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.LocalStorage._createClass.value###3"},');

          }
        }]);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.LocalStorage"},');

        return LocalStorage;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.LocalStorage"},');

      })();
      function getStorage() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getStorage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"getStorage"},');

        return hasStorage ? new LocalStorage() : null;
                SRTlib.send('{"type":"FUNCTIONEND","function":"getStorage","paramsNumber":0},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###87"},');

    }, {}],
    81: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###88","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      function uriToBlob(uri, done) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"uriToBlob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var xhr = new XMLHttpRequest();
        xhr.responseType = "blob";
        xhr.onload = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"xhr.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var blob = xhr.response;
          done(null, blob);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"xhr.onload"},');

        };
        xhr.onerror = function (err) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"xhr.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          done(err);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"xhr.onerror"},');

        };
        xhr.open("GET", uri);
        xhr.send();
                SRTlib.send('{"type":"FUNCTIONEND","function":"uriToBlob","paramsNumber":2},');

      }
      exports.default = uriToBlob;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###88"},');

    }, {}],
    82: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###89","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      function _classCallCheck(instance, Constructor) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_classCallCheck","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!(instance instanceof Constructor)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_classCallCheck"},');

          throw new TypeError("Cannot call a class as a function");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_classCallCheck","paramsNumber":2},');

      }
      function _possibleConstructorReturn(self, call) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_possibleConstructorReturn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!self) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_possibleConstructorReturn"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_possibleConstructorReturn"},');

        return call && (typeof call === "object" || typeof call === "function") ? call : self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_possibleConstructorReturn","paramsNumber":2},');

      }
      function _inherits(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inherits","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (typeof superClass !== "function" && superClass !== null) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_inherits"},');

          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inherits","paramsNumber":2},');

      }
      var DetailedError = (function (_Error) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.DetailedError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inherits(DetailedError, _Error);
        function DetailedError(error) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"DetailedError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var causingErr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          var xhr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
          _classCallCheck(this, DetailedError);
          var _this = _possibleConstructorReturn(this, (DetailedError.__proto__ || Object.getPrototypeOf(DetailedError)).call(this, error.message));
          _this.originalRequest = xhr;
          _this.causingError = causingErr;
          var message = error.message;
          if (causingErr != null) {
            message += ", caused by " + causingErr.toString();
          }
          if (xhr != null) {
            message += ", originated from request (response code: " + xhr.status + ", response text: " + xhr.responseText + ")";
          }
          _this.message = message;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"DetailedError"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"DetailedError","paramsNumber":1},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DetailedError"},');

        return DetailedError;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DetailedError"},');

      })(Error);
      exports.default = DetailedError;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###89"},');

    }, {}],
    83: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###90","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      var _upload = require("./upload");
      var _upload2 = _interopRequireDefault(_upload);
      var _storage = require("./node/storage");
      var storage = _interopRequireWildcard(_storage);
      function _interopRequireWildcard(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_interopRequireWildcard","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (obj && obj.__esModule) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireWildcard"},');

          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireWildcard"},');

          return newObj;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireWildcard","paramsNumber":1},');

      }
      function _interopRequireDefault(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_interopRequireDefault","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault"},');

        return obj && obj.__esModule ? obj : {
          default: obj
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault","paramsNumber":1},');

      }
      var defaultOptions = _upload2.default.defaultOptions;
      var moduleExport = {
        Upload: _upload2.default,
        canStoreURLs: storage.canStoreURLs,
        defaultOptions: defaultOptions
      };
      if (typeof window !== "undefined") {
        var _window = window, XMLHttpRequest = _window.XMLHttpRequest, Blob = _window.Blob;
        moduleExport.isSupported = XMLHttpRequest && Blob && typeof Blob.prototype.slice === "function";
      } else {
        moduleExport.isSupported = true;
        moduleExport.FileStorage = storage.FileStorage;
      }
      module.exports = moduleExport;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###90"},');

    }, {
      "./node/storage": 80,
      "./upload": 84
    }],
    84: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###91","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _createClass = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement._createClass###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function defineProperties(target, props) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"defineProperties","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if (("value" in descriptor)) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"defineProperties","paramsNumber":2},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass###3"},');

        return function (Constructor, protoProps, staticProps) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement._createClass.ReturnStatement###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass.ReturnStatement###3"},');

          return Constructor;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass.ReturnStatement###3"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._createClass###3"},');

      })();
      var _error = require("./error");
      var _error2 = _interopRequireDefault(_error);
      var _extend = require("extend");
      var _extend2 = _interopRequireDefault(_extend);
      var _jsBase = require("js-base64");
      var _request = require("./node/request");
      var _source = require("./node/source");
      var _storage = require("./node/storage");
      var _fingerprint = require("./node/fingerprint");
      var _fingerprint2 = _interopRequireDefault(_fingerprint);
      function _interopRequireDefault(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_interopRequireDefault","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault"},');

        return obj && obj.__esModule ? obj : {
          default: obj
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_interopRequireDefault","paramsNumber":1},');

      }
      function _classCallCheck(instance, Constructor) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_classCallCheck","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!(instance instanceof Constructor)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_classCallCheck"},');

          throw new TypeError("Cannot call a class as a function");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_classCallCheck","paramsNumber":2},');

      }
      var defaultOptions = {
        endpoint: null,
        fingerprint: _fingerprint2.default,
        resume: true,
        onProgress: null,
        onChunkComplete: null,
        onSuccess: null,
        onError: null,
        headers: {},
        chunkSize: Infinity,
        withCredentials: false,
        uploadUrl: null,
        uploadSize: null,
        overridePatchMethod: false,
        retryDelays: null,
        removeFingerprintOnSuccess: false,
        uploadLengthDeferred: false,
        urlStorage: null,
        fileReader: null,
        uploadDataDuringCreation: false
      };
      var Upload = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function Upload(file, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Upload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          _classCallCheck(this, Upload);
          this.options = (0, _extend2.default)(true, {}, defaultOptions, options);
          this._storage = this.options.urlStorage;
          this.file = file;
          this.url = null;
          this._xhr = null;
          this._fingerprint = null;
          this._offset = null;
          this._aborted = false;
          this._size = null;
          this._source = null;
          this._retryAttempt = 0;
          this._retryTimeout = null;
          this._offsetBeforeRetry = 0;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Upload","paramsNumber":2},');

        }
        _createClass(Upload, [{
          key: "start",
          value: function start() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this = this;
            var file = this.file;
            if (!file) {
              this._emitError(new Error("tus: no file or stream to upload provided"));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value"},');

              return;
            }
            if (!this.options.endpoint && !this.options.uploadUrl) {
              this._emitError(new Error("tus: neither an endpoint or an upload URL is provided"));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value"},');

              return;
            }
            if (this.options.resume && this._storage == null) {
              this._storage = (0, _storage.getStorage)();
            }
            if (this._source) {
              this._start(this._source);
            } else {
              var fileReader = this.options.fileReader || _source.getSource;
              fileReader(file, this.options.chunkSize, function (err, source) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value.start.fileReader","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                if (err) {
                  _this._emitError(err);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value.start.fileReader"},');

                  return;
                }
                _this._source = source;
                _this._start(source);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value.start.fileReader"},');

              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value"},');

          }
        }, {
          key: "_start",
          value: function _start(source) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _this2 = this;
            var file = this.file;
            if (this.options.uploadLengthDeferred) {
              this._size = null;
            } else if (this.options.uploadSize != null) {
              this._size = +this.options.uploadSize;
              if (isNaN(this._size)) {
                this._emitError(new Error("tus: cannot convert `uploadSize` option into a number"));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###2"},');

                return;
              }
            } else {
              this._size = source.size;
              if (this._size == null) {
                this._emitError(new Error("tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option"));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###2"},');

                return;
              }
            }
            var retryDelays = this.options.retryDelays;
            if (retryDelays != null) {
              if (Object.prototype.toString.call(retryDelays) !== "[object Array]") {
                this._emitError(new Error("tus: the `retryDelays` option must either be an array or null"));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###2"},');

                return;
              } else {
                var errorCallback = this.options.onError;
                this.options.onError = function (err) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._start.options.onError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  _this2.options.onError = errorCallback;
                  var shouldResetDelays = _this2._offset != null && _this2._offset > _this2._offsetBeforeRetry;
                  if (shouldResetDelays) {
                    _this2._retryAttempt = 0;
                  }
                  var isOnline = true;
                  if (typeof window !== "undefined" && ("navigator" in window) && window.navigator.onLine === false) {
                    isOnline = false;
                  }
                  var status = err.originalRequest ? err.originalRequest.status : 0;
                  var isServerError = !inStatusCategory(status, 400) || status === 409 || status === 423;
                  var shouldRetry = _this2._retryAttempt < retryDelays.length && err.originalRequest != null && isServerError && isOnline;
                  if (!shouldRetry) {
                    _this2._emitError(err);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._start.options.onError"},');

                    return;
                  }
                  var delay = retryDelays[_this2._retryAttempt++];
                  _this2._offsetBeforeRetry = _this2._offset;
                  _this2.options.uploadUrl = _this2.url;
                  _this2._retryTimeout = setTimeout(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._start.options.onError._this2._retryTimeout.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    _this2.start();
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._start.options.onError._this2._retryTimeout.setTimeout"},');

                  }, delay);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._start.options.onError"},');

                };
              }
            }
            this._aborted = false;
            if (this.url != null) {
              this._resumeUpload();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###2"},');

              return;
            }
            if (this.options.uploadUrl != null) {
              this.url = this.options.uploadUrl;
              this._resumeUpload();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###2"},');

              return;
            }
            if (this._hasStorage()) {
              this.options.fingerprint(file, this.options, function (err, fingerprintValue) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._start.options.fingerprint","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                if (err) {
                  _this2._emitError(err);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._start.options.fingerprint"},');

                  return;
                }
                _this2._fingerprint = fingerprintValue;
                _this2._storage.getItem(_this2._fingerprint, function (err, resumedUrl) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._start.options.fingerprint._this2._storage.getItem","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                  if (err) {
                    _this2._emitError(err);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._start.options.fingerprint._this2._storage.getItem"},');

                    return;
                  }
                  if (resumedUrl != null) {
                    _this2.url = resumedUrl;
                    _this2._resumeUpload();
                  } else {
                    _this2._createUpload();
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._start.options.fingerprint._this2._storage.getItem"},');

                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._start.options.fingerprint"},');

              });
            } else {
              this._createUpload();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###2"},');

          }
        }, {
          key: "abort",
          value: function abort(shouldTerminate, cb) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var _this3 = this;
            if (this._xhr !== null) {
              this._xhr.abort();
              this._source.close();
            }
            this._aborted = true;
            if (this._retryTimeout != null) {
              clearTimeout(this._retryTimeout);
              this._retryTimeout = null;
            }
            cb = cb || (function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value.abort.cb","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value.abort.cb"},');

            });
            if (shouldTerminate) {
              Upload.terminate(this.url, this.options, function (err, xhr) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value.abort.Upload.terminate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                if (err) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value.abort.Upload.terminate"},');

                  return cb(err, xhr);
                }
                _this3._hasStorage() ? _this3._storage.removeItem(_this3._fingerprint, cb) : cb();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value.abort.Upload.terminate"},');

              });
            } else {
              cb();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###3"},');

          }
        }, {
          key: "_hasStorage",
          value: function _hasStorage() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###4"},');

            return this.options.resume && this._storage;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###4"},');

          }
        }, {
          key: "_emitXhrError",
          value: function _emitXhrError(xhr, err, causingErr) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            this._emitError(new _error2.default(err, causingErr, xhr));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###5"},');

          }
        }, {
          key: "_emitError",
          value: function _emitError(err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (typeof this.options.onError === "function") {
              this.options.onError(err);
            } else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###6"},');

              throw err;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###6"},');

          }
        }, {
          key: "_emitSuccess",
          value: function _emitSuccess() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (typeof this.options.onSuccess === "function") {
              this.options.onSuccess();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###7"},');

          }
        }, {
          key: "_emitProgress",
          value: function _emitProgress(bytesSent, bytesTotal) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (typeof this.options.onProgress === "function") {
              this.options.onProgress(bytesSent, bytesTotal);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###8"},');

          }
        }, {
          key: "_emitChunkComplete",
          value: function _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            if (typeof this.options.onChunkComplete === "function") {
              this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###9"},');

          }
        }, {
          key: "_setupXHR",
          value: function _setupXHR(xhr) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            this._xhr = xhr;
            setupXHR(xhr, this.options);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###10"},');

          }
        }, {
          key: "_createUpload",
          value: function _createUpload() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this4 = this;
            if (!this.options.endpoint) {
              this._emitError(new Error("tus: unable to create upload because no endpoint is provided"));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###11"},');

              return;
            }
            var xhr = (0, _request.newRequest)();
            xhr.open("POST", this.options.endpoint, true);
            xhr.onload = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._createUpload.xhr.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (!inStatusCategory(xhr.status, 200)) {
                _this4._emitXhrError(xhr, new Error("tus: unexpected response while creating upload"));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._createUpload.xhr.onload"},');

                return;
              }
              var location = xhr.getResponseHeader("Location");
              if (location == null) {
                _this4._emitXhrError(xhr, new Error("tus: invalid or missing Location header"));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._createUpload.xhr.onload"},');

                return;
              }
              _this4.url = (0, _request.resolveUrl)(_this4.options.endpoint, location);
              if (_this4._size === 0) {
                _this4._emitSuccess();
                _this4._source.close();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._createUpload.xhr.onload"},');

                return;
              }
              if (_this4._hasStorage()) {
                _this4._storage.setItem(_this4._fingerprint, _this4.url, function (err) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._createUpload.xhr.onload._this4._storage.setItem","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  if (err) {
                    _this4._emitError(err);
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._createUpload.xhr.onload._this4._storage.setItem"},');

                });
              }
              if (_this4.options.uploadDataDuringCreation) {
                _this4._handleUploadResponse(xhr);
              } else {
                _this4._offset = 0;
                _this4._startUpload();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._createUpload.xhr.onload"},');

            };
            xhr.onerror = function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._createUpload.xhr.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this4._emitXhrError(xhr, new Error("tus: failed to create upload"), err);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._createUpload.xhr.onerror"},');

            };
            this._setupXHR(xhr);
            if (this.options.uploadLengthDeferred) {
              xhr.setRequestHeader("Upload-Defer-Length", 1);
            } else {
              xhr.setRequestHeader("Upload-Length", this._size);
            }
            var metadata = encodeMetadata(this.options.metadata);
            if (metadata !== "") {
              xhr.setRequestHeader("Upload-Metadata", metadata);
            }
            if (this.options.uploadDataDuringCreation && !this.options.uploadLengthDeferred) {
              this._offset = 0;
              this._addChunkToRequest(xhr);
            } else {
              xhr.send(null);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###11"},');

          }
        }, {
          key: "_resumeUpload",
          value: function _resumeUpload() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this5 = this;
            var xhr = (0, _request.newRequest)();
            xhr.open("HEAD", this.url, true);
            xhr.onload = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (!inStatusCategory(xhr.status, 200)) {
                if (_this5._hasStorage() && inStatusCategory(xhr.status, 400)) {
                  _this5._storage.removeItem(_this5._fingerprint, function (err) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload._this5._storage.removeItem","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    if (err) {
                      _this5._emitError(err);
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload._this5._storage.removeItem"},');

                  });
                }
                if (xhr.status === 423) {
                  _this5._emitXhrError(xhr, new Error("tus: upload is currently locked; retry later"));
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload"},');

                  return;
                }
                if (!_this5.options.endpoint) {
                  _this5._emitXhrError(xhr, new Error("tus: unable to resume upload (new upload cannot be created without an endpoint)"));
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload"},');

                  return;
                }
                _this5.url = null;
                _this5._createUpload();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload"},');

                return;
              }
              var offset = parseInt(xhr.getResponseHeader("Upload-Offset"), 10);
              if (isNaN(offset)) {
                _this5._emitXhrError(xhr, new Error("tus: invalid or missing offset value"));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload"},');

                return;
              }
              var length = parseInt(xhr.getResponseHeader("Upload-Length"), 10);
              if (isNaN(length) && !_this5.options.uploadLengthDeferred) {
                _this5._emitXhrError(xhr, new Error("tus: invalid or missing length value"));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload"},');

                return;
              }
              if (offset === length) {
                _this5._emitProgress(length, length);
                _this5._emitSuccess();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload"},');

                return;
              }
              _this5._offset = offset;
              _this5._startUpload();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onload"},');

            };
            xhr.onerror = function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this5._emitXhrError(xhr, new Error("tus: failed to resume upload"), err);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._resumeUpload.xhr.onerror"},');

            };
            this._setupXHR(xhr);
            xhr.send(null);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###12"},');

          }
        }, {
          key: "_startUpload",
          value: function _startUpload() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this6 = this;
            if (this._aborted) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###13"},');

              return;
            }
            var xhr = (0, _request.newRequest)();
            if (this.options.overridePatchMethod) {
              xhr.open("POST", this.url, true);
              xhr.setRequestHeader("X-HTTP-Method-Override", "PATCH");
            } else {
              xhr.open("PATCH", this.url, true);
            }
            xhr.onload = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._startUpload.xhr.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (!inStatusCategory(xhr.status, 200)) {
                _this6._emitXhrError(xhr, new Error("tus: unexpected response while uploading chunk"));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._startUpload.xhr.onload"},');

                return;
              }
              _this6._handleUploadResponse(xhr);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._startUpload.xhr.onload"},');

            };
            xhr.onerror = function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._startUpload.xhr.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (_this6._aborted) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._startUpload.xhr.onerror"},');

                return;
              }
              _this6._emitXhrError(xhr, new Error("tus: failed to upload chunk at offset " + _this6._offset), err);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._startUpload.xhr.onerror"},');

            };
            this._setupXHR(xhr);
            xhr.setRequestHeader("Upload-Offset", this._offset);
            this._addChunkToRequest(xhr);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###13"},');

          }
        }, {
          key: "_addChunkToRequest",
          value: function _addChunkToRequest(xhr) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###14","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _this7 = this;
            if (("upload" in xhr)) {
              xhr.upload.onprogress = function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._addChunkToRequest.xhr.upload.onprogress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (!e.lengthComputable) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._addChunkToRequest.xhr.upload.onprogress"},');

                  return;
                }
                _this7._emitProgress(start + e.loaded, _this7._size);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._addChunkToRequest.xhr.upload.onprogress"},');

              };
            }
            xhr.setRequestHeader("Content-Type", "application/offset+octet-stream");
            var start = this._offset;
            var end = this._offset + this.options.chunkSize;
            if ((end === Infinity || end > this._size) && !this.options.uploadLengthDeferred) {
              end = this._size;
            }
            this._source.slice(start, end, function (err, value, complete) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._addChunkToRequest._source.slice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

              if (err) {
                _this7._emitError(err);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._addChunkToRequest._source.slice"},');

                return;
              }
              if (_this7.options.uploadLengthDeferred) {
                if (complete) {
                  _this7._size = _this7._offset + (value && value.size ? value.size : 0);
                  xhr.setRequestHeader("Upload-Length", _this7._size);
                }
              }
              if (value === null) {
                xhr.send();
              } else {
                xhr.send(value);
                _this7._emitProgress(_this7._offset, _this7._size);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._addChunkToRequest._source.slice"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###14"},');

          }
        }, {
          key: "_handleUploadResponse",
          value: function _handleUploadResponse(xhr) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###15","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _this8 = this;
            var offset = parseInt(xhr.getResponseHeader("Upload-Offset"), 10);
            if (isNaN(offset)) {
              this._emitXhrError(xhr, new Error("tus: invalid or missing offset value"));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###15"},');

              return;
            }
            this._emitProgress(offset, this._size);
            this._emitChunkComplete(offset - this._offset, offset, this._size);
            this._offset = offset;
            if (offset == this._size) {
              if (this.options.removeFingerprintOnSuccess && this.options.resume) {
                this._storage.removeItem(this._fingerprint, function (err) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value._handleUploadResponse._storage.removeItem","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  if (err) {
                    _this8._emitError(err);
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value._handleUploadResponse._storage.removeItem"},');

                });
              }
              this._emitSuccess();
              this._source.close();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###15"},');

              return;
            }
            this._startUpload();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###15"},');

          }
        }], [{
          key: "terminate",
          value: function terminate(url, options, cb) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value###16","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            if (typeof options !== "function" && typeof cb !== "function") {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###16"},');

              throw new Error("tus: a callback function must be specified");
            }
            if (typeof options === "function") {
              cb = options;
              options = {};
            }
            var xhr = (0, _request.newRequest)();
            xhr.open("DELETE", url, true);
            xhr.onload = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value.terminate.xhr.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (xhr.status !== 204) {
                cb(new _error2.default(new Error("tus: unexpected response while terminating upload"), null, xhr));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value.terminate.xhr.onload"},');

                return;
              }
              cb();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value.terminate.xhr.onload"},');

            };
            xhr.onerror = function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Upload._createClass.value.terminate.xhr.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              cb(new _error2.default(err, new Error("tus: failed to terminate upload"), xhr));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value.terminate.xhr.onerror"},');

            };
            setupXHR(xhr, options);
            xhr.send(null);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload._createClass.value###16"},');

          }
        }]);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload"},');

        return Upload;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Upload"},');

      })();
      function encodeMetadata(metadata) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeMetadata","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var encoded = [];
        for (var key in metadata) {
          encoded.push(key + " " + _jsBase.Base64.encode(metadata[key]));
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeMetadata"},');

        return encoded.join(",");
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeMetadata","paramsNumber":1},');

      }
      function inStatusCategory(status, category) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"inStatusCategory","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"inStatusCategory"},');

        return status >= category && status < category + 100;
                SRTlib.send('{"type":"FUNCTIONEND","function":"inStatusCategory","paramsNumber":2},');

      }
      function setupXHR(xhr, options) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"setupXHR","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        xhr.setRequestHeader("Tus-Resumable", "1.0.0");
        var headers = options.headers || ({});
        for (var name in headers) {
          xhr.setRequestHeader(name, headers[name]);
        }
        xhr.withCredentials = options.withCredentials;
                SRTlib.send('{"type":"FUNCTIONEND","function":"setupXHR","paramsNumber":2},');

      }
      Upload.defaultOptions = defaultOptions;
      exports.default = Upload;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###91"},');

    }, {
      "./error": 82,
      "./node/fingerprint": 74,
      "./node/request": 78,
      "./node/source": 79,
      "./node/storage": 80,
      "extend": 33,
      "js-base64": 41
    }],
    85: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###92","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (global) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###17","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        'use strict';
        var required = require('requires-port'), qs = require('querystringify'), slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//, protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i, whitespace = '[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]', left = new RegExp('^' + whitespace + '+');
        function trimLeft(str) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"trimLeft","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"trimLeft"},');

          return (str ? str : '').toString().replace(left, '');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"trimLeft","paramsNumber":1},');

        }
        var rules = [['#', 'hash'], ['?', 'query'], function sanitize(address) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.rules","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.rules"},');

          return address.replace('\\', '/');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.rules"},');

        }, ['/', 'pathname'], ['@', 'auth', 1], [NaN, 'host', undefined, 1, 1], [/:(\d+)$/, 'port', undefined, 1], [NaN, 'hostname', undefined, 1, 1]];
        var ignore = {
          hash: 1,
          query: 1
        };
        function lolcation(loc) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"lolcation","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var globalVar;
          if (typeof window !== 'undefined') globalVar = window; else if (typeof global !== 'undefined') globalVar = global; else if (typeof self !== 'undefined') globalVar = self; else globalVar = {};
          var location = globalVar.location || ({});
          loc = loc || location;
          var finaldestination = {}, type = typeof loc, key;
          if ('blob:' === loc.protocol) {
            finaldestination = new Url(unescape(loc.pathname), {});
          } else if ('string' === type) {
            finaldestination = new Url(loc, {});
            for (key in ignore) delete finaldestination[key];
          } else if ('object' === type) {
            for (key in loc) {
              if ((key in ignore)) continue;
              finaldestination[key] = loc[key];
            }
            if (finaldestination.slashes === undefined) {
              finaldestination.slashes = slashes.test(loc.href);
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"lolcation"},');

          return finaldestination;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"lolcation","paramsNumber":1},');

        }
        function extractProtocol(address) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"extractProtocol","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          address = trimLeft(address);
          var match = protocolre.exec(address);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"extractProtocol"},');

          return {
            protocol: match[1] ? match[1].toLowerCase() : '',
            slashes: !!match[2],
            rest: match[3]
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"extractProtocol","paramsNumber":1},');

        }
        function resolve(relative, base) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"resolve","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (relative === '') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"resolve"},');

            return base;
          }
          var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/')), i = path.length, last = path[i - 1], unshift = false, up = 0;
          while (i--) {
            if (path[i] === '.') {
              path.splice(i, 1);
            } else if (path[i] === '..') {
              path.splice(i, 1);
              up++;
            } else if (up) {
              if (i === 0) unshift = true;
              path.splice(i, 1);
              up--;
            }
          }
          if (unshift) path.unshift('');
          if (last === '.' || last === '..') path.push('');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"resolve"},');

          return path.join('/');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"resolve","paramsNumber":2},');

        }
        function Url(address, location, parser) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Url","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          address = trimLeft(address);
          if (!(this instanceof Url)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Url"},');

            return new Url(address, location, parser);
          }
          var relative, extracted, parse, instruction, index, key, instructions = rules.slice(), type = typeof location, url = this, i = 0;
          if ('object' !== type && 'string' !== type) {
            parser = location;
            location = null;
          }
          if (parser && 'function' !== typeof parser) parser = qs.parse;
          location = lolcation(location);
          extracted = extractProtocol(address || '');
          relative = !extracted.protocol && !extracted.slashes;
          url.slashes = extracted.slashes || relative && location.slashes;
          url.protocol = extracted.protocol || location.protocol || '';
          address = extracted.rest;
          if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];
          for (; i < instructions.length; i++) {
            instruction = instructions[i];
            if (typeof instruction === 'function') {
              address = instruction(address);
              continue;
            }
            parse = instruction[0];
            key = instruction[1];
            if (parse !== parse) {
              url[key] = address;
            } else if ('string' === typeof parse) {
              if (~(index = address.indexOf(parse))) {
                if ('number' === typeof instruction[2]) {
                  url[key] = address.slice(0, index);
                  address = address.slice(index + instruction[2]);
                } else {
                  url[key] = address.slice(index);
                  address = address.slice(0, index);
                }
              }
            } else if (index = parse.exec(address)) {
              url[key] = index[1];
              address = address.slice(0, index.index);
            }
            url[key] = url[key] || (relative && instruction[3] ? location[key] || '' : '');
            if (instruction[4]) url[key] = url[key].toLowerCase();
          }
          if (parser) url.query = parser(url.query);
          if (relative && location.slashes && url.pathname.charAt(0) !== '/' && (url.pathname !== '' || location.pathname !== '')) {
            url.pathname = resolve(url.pathname, location.pathname);
          }
          if (!required(url.port, url.protocol)) {
            url.host = url.hostname;
            url.port = '';
          }
          url.username = url.password = '';
          if (url.auth) {
            instruction = url.auth.split(':');
            url.username = instruction[0] || '';
            url.password = instruction[1] || '';
          }
          url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';
          url.href = url.toString();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Url","paramsNumber":3},');

        }
        function set(part, value, fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"set","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var url = this;
          switch (part) {
            case 'query':
              if ('string' === typeof value && value.length) {
                value = (fn || qs.parse)(value);
              }
              url[part] = value;
              break;
            case 'port':
              url[part] = value;
              if (!required(value, url.protocol)) {
                url.host = url.hostname;
                url[part] = '';
              } else if (value) {
                url.host = url.hostname + ':' + value;
              }
              break;
            case 'hostname':
              url[part] = value;
              if (url.port) value += ':' + url.port;
              url.host = value;
              break;
            case 'host':
              url[part] = value;
              if ((/:\d+$/).test(value)) {
                value = value.split(':');
                url.port = value.pop();
                url.hostname = value.join(':');
              } else {
                url.hostname = value;
                url.port = '';
              }
              break;
            case 'protocol':
              url.protocol = value.toLowerCase();
              url.slashes = !fn;
              break;
            case 'pathname':
            case 'hash':
              if (value) {
                var char = part === 'pathname' ? '/' : '#';
                url[part] = value.charAt(0) !== char ? char + value : value;
              } else {
                url[part] = value;
              }
              break;
            default:
              url[part] = value;
          }
          for (var i = 0; i < rules.length; i++) {
            var ins = rules[i];
            if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
          }
          url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';
          url.href = url.toString();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"set"},');

          return url;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"set","paramsNumber":3},');

        }
        function toString(stringify) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"toString","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;
          var query, url = this, protocol = url.protocol;
          if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';
          var result = protocol + (url.slashes ? '//' : '');
          if (url.username) {
            result += url.username;
            if (url.password) result += ':' + url.password;
            result += '@';
          }
          result += url.host + url.pathname;
          query = 'object' === typeof url.query ? stringify(url.query) : url.query;
          if (query) result += '?' !== query.charAt(0) ? '?' + query : query;
          if (url.hash) result += url.hash;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"toString"},');

          return result;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"toString","paramsNumber":1},');

        }
        Url.prototype = {
          set: set,
          toString: toString
        };
        Url.extractProtocol = extractProtocol;
        Url.location = lolcation;
        Url.trimLeft = trimLeft;
        Url.qs = qs;
        module.exports = Url;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###17"},');

      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###92"},');

    }, {
      "querystringify": 53,
      "requires-port": 54
    }],
    86: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###95","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (global, factory) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###93","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.WHATWGFetch = {});
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###93"},');

      })(this, function (exports) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###94","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        'use strict';
        var support = {
          searchParams: ('URLSearchParams' in self),
          iterable: ('Symbol' in self) && ('iterator' in Symbol),
          blob: ('FileReader' in self) && ('Blob' in self) && (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.support.blob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            try {
              new Blob();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.support.blob"},');

              return true;
            } catch (e) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.support.blob"},');

              return false;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.support.blob"},');

          })(),
          formData: ('FormData' in self),
          arrayBuffer: ('ArrayBuffer' in self)
        };
        function isDataView(obj) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isDataView","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isDataView"},');

          return obj && DataView.prototype.isPrototypeOf(obj);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isDataView","paramsNumber":1},');

        }
        if (support.arrayBuffer) {
          var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];
          var isArrayBufferView = ArrayBuffer.isView || (function (obj) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.isArrayBufferView","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.isArrayBufferView"},');

            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.isArrayBufferView"},');

          });
        }
        function normalizeName(name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"normalizeName","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (typeof name !== 'string') {
            name = String(name);
          }
          if ((/[^a-z0-9\-#$%&'*+.^_`|~]/i).test(name)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"normalizeName"},');

            throw new TypeError('Invalid character in header field name');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"normalizeName"},');

          return name.toLowerCase();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"normalizeName","paramsNumber":1},');

        }
        function normalizeValue(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"normalizeValue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (typeof value !== 'string') {
            value = String(value);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"normalizeValue"},');

          return value;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"normalizeValue","paramsNumber":1},');

        }
        function iteratorFor(items) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iteratorFor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var iterator = {
            next: function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"iterator.next","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var value = items.shift();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"iterator.next"},');

              return {
                done: value === undefined,
                value: value
              };
                            SRTlib.send('{"type":"FUNCTIONEND","function":"iterator.next"},');

            }
          };
          if (support.iterable) {
            iterator[Symbol.iterator] = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"iterator","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"iterator"},');

              return iterator;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"iterator"},');

            };
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"iteratorFor"},');

          return iterator;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"iteratorFor","paramsNumber":1},');

        }
        function Headers(headers) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Headers","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.map = {};
          if (headers instanceof Headers) {
            headers.forEach(function (value, name) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"headers.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              this.append(name, value);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"headers.forEach"},');

            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function (header) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"headers.forEach###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              this.append(header[0], header[1]);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"headers.forEach###2"},');

            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function (name) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"Object.getOwnPropertyNames.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              this.append(name, headers[name]);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Object.getOwnPropertyNames.forEach"},');

            }, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Headers","paramsNumber":1},');

        }
        Headers.prototype.append = function (name, value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.append","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          name = normalizeName(name);
          value = normalizeValue(value);
          var oldValue = this.map[name];
          this.map[name] = oldValue ? oldValue + ', ' + value : value;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.append"},');

        };
        Headers.prototype['delete'] = function (name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          delete this.map[normalizeName(name)];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype"},');

        };
        Headers.prototype.get = function (name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          name = normalizeName(name);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.get"},');

          return this.has(name) ? this.map[name] : null;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.get"},');

        };
        Headers.prototype.has = function (name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.has","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.has"},');

          return this.map.hasOwnProperty(normalizeName(name));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.has"},');

        };
        Headers.prototype.set = function (name, value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.set","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.map[normalizeName(name)] = normalizeValue(value);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.set"},');

        };
        Headers.prototype.forEach = function (callback, thisArg) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          for (var name in this.map) {
            if (this.map.hasOwnProperty(name)) {
              callback.call(thisArg, this.map[name], name, this);
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.forEach"},');

        };
        Headers.prototype.keys = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.keys","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var items = [];
          this.forEach(function (value, name) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            items.push(name);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.keys.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.keys"},');

          return iteratorFor(items);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.keys"},');

        };
        Headers.prototype.values = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.values","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var items = [];
          this.forEach(function (value) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.values.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            items.push(value);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.values.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.values"},');

          return iteratorFor(items);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.values"},');

        };
        Headers.prototype.entries = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.entries","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var items = [];
          this.forEach(function (value, name) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Headers.prototype.entries.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            items.push([name, value]);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.entries.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.entries"},');

          return iteratorFor(items);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Headers.prototype.entries"},');

        };
        if (support.iterable) {
          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        }
        function consumed(body) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"consumed","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (body.bodyUsed) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"consumed"},');

            return Promise.reject(new TypeError('Already read'));
          }
          body.bodyUsed = true;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"consumed","paramsNumber":1},');

        }
        function fileReaderReady(reader) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fileReaderReady","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"fileReaderReady"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            reader.onload = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression.reader.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              resolve(reader.result);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression.reader.onload"},');

            };
            reader.onerror = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression.reader.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              reject(reader.error);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression.reader.onerror"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fileReaderReady","paramsNumber":1},');

        }
        function readBlobAsArrayBuffer(blob) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"readBlobAsArrayBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"readBlobAsArrayBuffer"},');

          return promise;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"readBlobAsArrayBuffer","paramsNumber":1},');

        }
        function readBlobAsText(blob) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"readBlobAsText","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsText(blob);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"readBlobAsText"},');

          return promise;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"readBlobAsText","paramsNumber":1},');

        }
        function readArrayBufferAsText(buf) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"readArrayBufferAsText","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var view = new Uint8Array(buf);
          var chars = new Array(view.length);
          for (var i = 0; i < view.length; i++) {
            chars[i] = String.fromCharCode(view[i]);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"readArrayBufferAsText"},');

          return chars.join('');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"readArrayBufferAsText","paramsNumber":1},');

        }
        function bufferClone(buf) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"bufferClone","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (buf.slice) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"bufferClone"},');

            return buf.slice(0);
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"bufferClone"},');

            return view.buffer;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"bufferClone","paramsNumber":1},');

        }
        function Body() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Body","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.bodyUsed = false;
          this._initBody = function (body) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_initBody","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            this._bodyInit = body;
            if (!body) {
              this._bodyText = '';
            } else if (typeof body === 'string') {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer);
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }
            if (!this.headers.get('content-type')) {
              if (typeof body === 'string') {
                this.headers.set('content-type', 'text/plain;charset=UTF-8');
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set('content-type', this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_initBody"},');

          };
          if (support.blob) {
            this.blob = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"blob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var rejected = consumed(this);
              if (rejected) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"blob"},');

                return rejected;
              }
              if (this._bodyBlob) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"blob"},');

                return Promise.resolve(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"blob"},');

                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              } else if (this._bodyFormData) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"blob"},');

                throw new Error('could not read FormData body as blob');
              } else {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"blob"},');

                return Promise.resolve(new Blob([this._bodyText]));
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"blob"},');

            };
            this.arrayBuffer = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"arrayBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (this._bodyArrayBuffer) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"arrayBuffer"},');

                return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
              } else {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"arrayBuffer"},');

                return this.blob().then(readBlobAsArrayBuffer);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"arrayBuffer"},');

            };
          }
          this.text = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"text","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var rejected = consumed(this);
            if (rejected) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"text"},');

              return rejected;
            }
            if (this._bodyBlob) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"text"},');

              return readBlobAsText(this._bodyBlob);
            } else if (this._bodyArrayBuffer) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"text"},');

              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
            } else if (this._bodyFormData) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"text"},');

              throw new Error('could not read FormData body as text');
            } else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"text"},');

              return Promise.resolve(this._bodyText);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"text"},');

          };
          if (support.formData) {
            this.formData = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"formData","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"formData"},');

              return this.text().then(decode);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"formData"},');

            };
          }
          this.json = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"json","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"json"},');

            return this.text().then(JSON.parse);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"json"},');

          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Body"},');

          return this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Body","paramsNumber":0},');

        }
        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];
        function normalizeMethod(method) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"normalizeMethod","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var upcased = method.toUpperCase();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"normalizeMethod"},');

          return methods.indexOf(upcased) > -1 ? upcased : method;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"normalizeMethod","paramsNumber":1},');

        }
        function Request(input, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Request","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          options = options || ({});
          var body = options.body;
          if (input instanceof Request) {
            if (input.bodyUsed) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Request"},');

              throw new TypeError('Already read');
            }
            this.url = input.url;
            this.credentials = input.credentials;
            if (!options.headers) {
              this.headers = new Headers(input.headers);
            }
            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;
            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }
          this.credentials = options.credentials || this.credentials || 'same-origin';
          if (options.headers || !this.headers) {
            this.headers = new Headers(options.headers);
          }
          this.method = normalizeMethod(options.method || this.method || 'GET');
          this.mode = options.mode || this.mode || null;
          this.signal = options.signal || this.signal;
          this.referrer = null;
          if ((this.method === 'GET' || this.method === 'HEAD') && body) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Request"},');

            throw new TypeError('Body not allowed for GET or HEAD requests');
          }
          this._initBody(body);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Request","paramsNumber":2},');

        }
        Request.prototype.clone = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Request.prototype.clone","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.clone"},');

          return new Request(this, {
            body: this._bodyInit
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Request.prototype.clone"},');

        };
        function decode(body) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"decode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var form = new FormData();
          body.trim().split('&').forEach(function (bytes) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"body.trim.split.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (bytes) {
              var split = bytes.split('=');
              var name = split.shift().replace(/\+/g, ' ');
              var value = split.join('=').replace(/\+/g, ' ');
              form.append(decodeURIComponent(name), decodeURIComponent(value));
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"body.trim.split.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decode"},');

          return form;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"decode","paramsNumber":1},');

        }
        function parseHeaders(rawHeaders) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"parseHeaders","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var headers = new Headers();
          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
          preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"preProcessedHeaders.split.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var parts = line.split(':');
            var key = parts.shift().trim();
            if (key) {
              var value = parts.join(':').trim();
              headers.append(key, value);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"preProcessedHeaders.split.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"parseHeaders"},');

          return headers;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"parseHeaders","paramsNumber":1},');

        }
        Body.call(Request.prototype);
        function Response(bodyInit, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Response","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!options) {
            options = {};
          }
          this.type = 'default';
          this.status = options.status === undefined ? 200 : options.status;
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = ('statusText' in options) ? options.statusText : 'OK';
          this.headers = new Headers(options.headers);
          this.url = options.url || '';
          this._initBody(bodyInit);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Response","paramsNumber":2},');

        }
        Body.call(Response.prototype);
        Response.prototype.clone = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Response.prototype.clone","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Response.prototype.clone"},');

          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers(this.headers),
            url: this.url
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Response.prototype.clone"},');

        };
        Response.error = function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Response.error","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var response = new Response(null, {
            status: 0,
            statusText: ''
          });
          response.type = 'error';
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Response.error"},');

          return response;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Response.error"},');

        };
        var redirectStatuses = [301, 302, 303, 307, 308];
        Response.redirect = function (url, status) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Response.redirect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (redirectStatuses.indexOf(status) === -1) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Response.redirect"},');

            throw new RangeError('Invalid status code');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Response.redirect"},');

          return new Response(null, {
            status: status,
            headers: {
              location: url
            }
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Response.redirect"},');

        };
        exports.DOMException = self.DOMException;
        try {
          new exports.DOMException();
        } catch (err) {
          exports.DOMException = function (message, name) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.exports.DOMException","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            this.message = message;
            this.name = name;
            var error = Error(message);
            this.stack = error.stack;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.exports.DOMException"},');

          };
          exports.DOMException.prototype = Object.create(Error.prototype);
          exports.DOMException.prototype.constructor = exports.DOMException;
        }
        function fetch(input, init) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fetch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"fetch"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var request = new Request(input, init);
            if (request.signal && request.signal.aborted) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression###2"},');

              return reject(new exports.DOMException('Aborted', 'AbortError'));
            }
            var xhr = new XMLHttpRequest();
            function abortXhr() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"abortXhr","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              xhr.abort();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"abortXhr","paramsNumber":0},');

            }
            xhr.onload = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression.xhr.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var options = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || '')
              };
              options.url = ('responseURL' in xhr) ? xhr.responseURL : options.headers.get('X-Request-URL');
              var body = ('response' in xhr) ? xhr.response : xhr.responseText;
              resolve(new Response(body, options));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression.xhr.onload"},');

            };
            xhr.onerror = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression.xhr.onerror","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              reject(new TypeError('Network request failed'));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression.xhr.onerror"},');

            };
            xhr.ontimeout = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression.xhr.ontimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              reject(new TypeError('Network request failed'));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression.xhr.ontimeout"},');

            };
            xhr.onabort = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression.xhr.onabort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              reject(new exports.DOMException('Aborted', 'AbortError'));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression.xhr.onabort"},');

            };
            xhr.open(request.method, request.url, true);
            if (request.credentials === 'include') {
              xhr.withCredentials = true;
            } else if (request.credentials === 'omit') {
              xhr.withCredentials = false;
            }
            if (('responseType' in xhr) && support.blob) {
              xhr.responseType = 'blob';
            }
            request.headers.forEach(function (value, name) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression.request.headers.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              xhr.setRequestHeader(name, value);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression.request.headers.forEach"},');

            });
            if (request.signal) {
              request.signal.addEventListener('abort', abortXhr);
              xhr.onreadystatechange = function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression.xhr.onreadystatechange","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                if (xhr.readyState === 4) {
                  request.signal.removeEventListener('abort', abortXhr);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression.xhr.onreadystatechange"},');

              };
            }
            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression###2"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"fetch","paramsNumber":2},');

        }
        fetch.polyfill = true;
        if (!self.fetch) {
          self.fetch = fetch;
          self.Headers = Headers;
          self.Request = Request;
          self.Response = Response;
        }
        exports.Headers = Headers;
        exports.Request = Request;
        exports.Response = Response;
        exports.fetch = fetch;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###94"},');

      });
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###95"},');

    }, {}],
    87: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###96","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      function WildcardMatcher(text, separator) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"WildcardMatcher","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        this.text = text = text || '';
        this.hasWild = ~text.indexOf('*');
        this.separator = separator;
        this.parts = text.split(separator);
                SRTlib.send('{"type":"FUNCTIONEND","function":"WildcardMatcher","paramsNumber":2},');

      }
      WildcardMatcher.prototype.match = function (input) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.WildcardMatcher.prototype.match","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var matches = true;
        var parts = this.parts;
        var ii;
        var partsCount = parts.length;
        var testParts;
        if (typeof input == 'string' || input instanceof String) {
          if (!this.hasWild && this.text != input) {
            matches = false;
          } else {
            testParts = (input || '').split(this.separator);
            for (ii = 0; matches && ii < partsCount; ii++) {
              if (parts[ii] === '*') {
                continue;
              } else if (ii < testParts.length) {
                matches = parts[ii] === testParts[ii];
              } else {
                matches = false;
              }
            }
            matches = matches && testParts;
          }
        } else if (typeof input.splice == 'function') {
          matches = [];
          for (ii = input.length; ii--; ) {
            if (this.match(input[ii])) {
              matches[matches.length] = input[ii];
            }
          }
        } else if (typeof input == 'object') {
          matches = {};
          for (var key in input) {
            if (this.match(key)) {
              matches[key] = input[key];
            }
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.WildcardMatcher.prototype.match"},');

        return matches;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.WildcardMatcher.prototype.match"},');

      };
      module.exports = function (text, test, separator) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###19","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var matcher = new WildcardMatcher(text, separator || /[\/\.]/);
        if (typeof test != 'undefined') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###19"},');

          return matcher.match(test);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###19"},');

        return matcher;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###19"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###96"},');

    }, {}],
    88: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###97","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      var alphabet = ('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_').split(''), length = 64, map = {}, seed = 0, i = 0, prev;
      function encode(num) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var encoded = '';
        do {
          encoded = alphabet[num % length] + encoded;
          num = Math.floor(num / length);
        } while (num > 0);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encode"},');

        return encoded;
                SRTlib.send('{"type":"FUNCTIONEND","function":"encode","paramsNumber":1},');

      }
      function decode(str) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"decode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var decoded = 0;
        for (i = 0; i < str.length; i++) {
          decoded = decoded * length + map[str.charAt(i)];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"decode"},');

        return decoded;
                SRTlib.send('{"type":"FUNCTIONEND","function":"decode","paramsNumber":1},');

      }
      function yeast() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"yeast","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var now = encode(+new Date());
        if (now !== prev) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"yeast"},');

          return (seed = 0, prev = now);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"yeast"},');

        return now + '.' + encode(seed++);
                SRTlib.send('{"type":"FUNCTIONEND","function":"yeast","paramsNumber":0},');

      }
      for (; i < length; i++) map[alphabet[i]] = i;
      yeast.encode = encode;
      yeast.decode = decode;
      module.exports = yeast;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###97"},');

    }, {}],
    89: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###98","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      function _wrapNativeSuper(Class) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_wrapNativeSuper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var _cache = typeof Map === "function" ? new Map() : undefined;
        _wrapNativeSuper = function _wrapNativeSuper(Class) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_wrapNativeSuper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (Class === null || !_isNativeFunction(Class)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper"},');

            return Class;
          }
          if (typeof Class !== "function") {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper"},');

            throw new TypeError("Super expression must either be null or a function");
          }
          if (typeof _cache !== "undefined") {
            if (_cache.has(Class)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper"},');

              return _cache.get(Class);
            }
            _cache.set(Class, Wrapper);
          }
          function Wrapper() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Wrapper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Wrapper"},');

            return _construct(Class, arguments, _getPrototypeOf(this).constructor);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Wrapper","paramsNumber":0},');

          }
          Wrapper.prototype = Object.create(Class.prototype, {
            constructor: {
              value: Wrapper,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper"},');

          return _setPrototypeOf(Wrapper, Class);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper"},');

        return _wrapNativeSuper(Class);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper","paramsNumber":1},');

      }
      function _construct(Parent, args, Class) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_construct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (_isNativeReflectConstruct()) {
          _construct = Reflect.construct;
        } else {
          _construct = function _construct(Parent, args, Class) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_construct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var a = [null];
            a.push.apply(a, args);
            var Constructor = Function.bind.apply(Parent, a);
            var instance = new Constructor();
            if (Class) _setPrototypeOf(instance, Class.prototype);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_construct"},');

            return instance;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_construct"},');

          };
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_construct"},');

        return _construct.apply(null, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_construct","paramsNumber":3},');

      }
      function _isNativeReflectConstruct() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_isNativeReflectConstruct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (typeof Reflect === "undefined" || !Reflect.construct) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return false;
        }
        if (Reflect.construct.sham) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return false;
        }
        if (typeof Proxy === "function") {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return true;
        }
        try {
          Date.prototype.toString.call(Reflect.construct(Date, [], function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"Date.prototype.toString.call.Reflect.construct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Date.prototype.toString.call.Reflect.construct"},');

          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return true;
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct","paramsNumber":0},');

      }
      function _isNativeFunction(fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_isNativeFunction","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeFunction"},');

        return Function.toString.call(fn).indexOf("[native code]") !== -1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeFunction","paramsNumber":1},');

      }
      function _setPrototypeOf(o, p) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_setPrototypeOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        _setPrototypeOf = Object.setPrototypeOf || (function _setPrototypeOf(o, p) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_setPrototypeOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          o.__proto__ = p;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf"},');

          return o;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf"},');

        return _setPrototypeOf(o, p);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf","paramsNumber":2},');

      }
      function _getPrototypeOf(o) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_getPrototypeOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_getPrototypeOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf"},');

          return o.__proto__ || Object.getPrototypeOf(o);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf"},');

        return _getPrototypeOf(o);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf","paramsNumber":1},');

      }
      var AuthError = (function (_Error) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AuthError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(AuthError, _Error);
        function AuthError() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"AuthError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this;
          _this = _Error.call(this, 'Authorization required') || this;
          _this.name = 'AuthError';
          _this.isAuthError = true;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"AuthError"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"AuthError","paramsNumber":0},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AuthError"},');

        return AuthError;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AuthError"},');

      })(_wrapNativeSuper(Error));
      module.exports = AuthError;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###98"},');

    }, {}],
    90: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###99","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var RequestClient = require('./RequestClient');
      var tokenStorage = require('./tokenStorage');
      var _getName = function _getName(id) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_getName","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_getName"},');

        return id.split('-').map(function (s) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement._getName._getName.ReturnStatement.id.split.map.join.id.split.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._getName._getName.ReturnStatement.id.split.map.join.id.split.map"},');

          return s.charAt(0).toUpperCase() + s.slice(1);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement._getName._getName.ReturnStatement.id.split.map.join.id.split.map"},');

        }).join(' ');
                SRTlib.send('{"type":"FUNCTIONEND","function":"_getName"},');

      };
      module.exports = (function (_RequestClient) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###20","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Provider, _RequestClient);
        function Provider(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Provider","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _RequestClient.call(this, uppy, opts) || this;
          _this.provider = opts.provider;
          _this.id = _this.provider;
          _this.authProvider = opts.authProvider || _this.provider;
          _this.name = _this.opts.name || _getName(_this.id);
          _this.pluginId = _this.opts.pluginId;
          _this.tokenKey = "companion-" + _this.pluginId + "-auth-token";
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Provider"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Provider","paramsNumber":2},');

        }
        var _proto = Provider.prototype;
        _proto.headers = function headers() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.headers","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this2 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.headers"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.headers.headers.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _RequestClient.prototype.headers.call(_this2).then(function (headers) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.headers.headers.ReturnStatement.NewExpression._RequestClient.prototype.headers.call.then.catch._RequestClient.prototype.headers.call.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this2.getAuthToken().then(function (token) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.headers.headers.ReturnStatement.NewExpression._RequestClient.prototype.headers.call.then.catch._RequestClient.prototype.headers.call.then._this2.getAuthToken.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                resolve(_extends({}, headers, {
                  'uppy-auth-token': token
                }));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.headers.headers.ReturnStatement.NewExpression._RequestClient.prototype.headers.call.then.catch._RequestClient.prototype.headers.call.then._this2.getAuthToken.then"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.headers.headers.ReturnStatement.NewExpression._RequestClient.prototype.headers.call.then.catch._RequestClient.prototype.headers.call.then"},');

            }).catch(reject);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.headers.headers.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.headers"},');

        };
        _proto.onReceiveResponse = function onReceiveResponse(response) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.onReceiveResponse","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          response = _RequestClient.prototype.onReceiveResponse.call(this, response);
          var plugin = this.uppy.getPlugin(this.pluginId);
          var oldAuthenticated = plugin.getPluginState().authenticated;
          var authenticated = oldAuthenticated ? response.status !== 401 : response.status < 400;
          plugin.setPluginState({
            authenticated: authenticated
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.onReceiveResponse"},');

          return response;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.onReceiveResponse"},');

        };
        _proto.setAuthToken = function setAuthToken(token) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.setAuthToken","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.setAuthToken"},');

          return this.uppy.getPlugin(this.pluginId).storage.setItem(this.tokenKey, token);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.setAuthToken"},');

        };
        _proto.getAuthToken = function getAuthToken() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.getAuthToken","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getAuthToken"},');

          return this.uppy.getPlugin(this.pluginId).storage.getItem(this.tokenKey);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getAuthToken"},');

        };
        _proto.authUrl = function authUrl() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.authUrl","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.authUrl"},');

          return this.hostname + "/" + this.id + "/connect";
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.authUrl"},');

        };
        _proto.fileUrl = function fileUrl(id) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.fileUrl","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.fileUrl"},');

          return this.hostname + "/" + this.id + "/get/" + id;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.fileUrl"},');

        };
        _proto.list = function list(directory) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.list","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.list"},');

          return this.get(this.id + "/list/" + (directory || ''));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.list"},');

        };
        _proto.logout = function logout() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.logout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this3 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.logout"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.logout.logout.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this3.get(_this3.id + "/logout").then(function (res) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.logout.logout.ReturnStatement.NewExpression._this3.get.then.catch._this3.get.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this3.uppy.getPlugin(_this3.pluginId).storage.removeItem(_this3.tokenKey).then(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.logout.logout.ReturnStatement.NewExpression._this3.get.then.catch._this3.get.then.storage.removeItem.then.catch.storage.removeItem.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.logout.logout.ReturnStatement.NewExpression._this3.get.then.catch._this3.get.then.storage.removeItem.then.catch.storage.removeItem.then"},');

                return resolve(res);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.logout.logout.ReturnStatement.NewExpression._this3.get.then.catch._this3.get.then.storage.removeItem.then.catch.storage.removeItem.then"},');

              }).catch(reject);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.logout.logout.ReturnStatement.NewExpression._this3.get.then.catch._this3.get.then"},');

            }).catch(reject);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.logout.logout.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.logout"},');

        };
        Provider.initPlugin = function initPlugin(plugin, opts, defaultOpts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.Provider.initPlugin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          plugin.type = 'acquirer';
          plugin.files = [];
          if (defaultOpts) {
            plugin.opts = _extends({}, defaultOpts, opts);
          }
          if (opts.serverUrl || opts.serverPattern) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.Provider.initPlugin"},');

            throw new Error('`serverUrl` and `serverPattern` have been renamed to `companionUrl` and `companionAllowedHosts` respectively in the 0.30.5 release. Please consult the docs (for example, https://uppy.io/docs/instagram/ for the Instagram plugin) and use the updated options.`');
          }
          if (opts.companionAllowedHosts) {
            var pattern = opts.companionAllowedHosts;
            if (typeof pattern !== 'string' && !Array.isArray(pattern) && !(pattern instanceof RegExp)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.Provider.initPlugin"},');

              throw new TypeError(plugin.id + ": the option \"companionAllowedHosts\" must be one of string, Array, RegExp");
            }
            plugin.opts.companionAllowedHosts = pattern;
          } else {
            if ((/^(?!https?:\/\/).*$/i).test(opts.companionUrl)) {
              plugin.opts.companionAllowedHosts = "https://" + opts.companionUrl.replace(/^\/\//, '');
            } else {
              plugin.opts.companionAllowedHosts = opts.companionUrl;
            }
          }
          plugin.storage = plugin.opts.storage || tokenStorage;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.Provider.initPlugin"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###20"},');

        return Provider;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###20"},');

      })(RequestClient);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###99"},');

    }, {
      "./RequestClient": 91,
      "./tokenStorage": 94
    }],
    91: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###100","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###2"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###2"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _defineProperties(target, props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_defineProperties","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if (("value" in descriptor)) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_defineProperties","paramsNumber":2},');

      }
      function _createClass(Constructor, protoProps, staticProps) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_createClass","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_createClass"},');

        return Constructor;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_createClass","paramsNumber":3},');

      }
      var AuthError = require('./AuthError');
      var NetworkError = require('@uppy/utils/lib/NetworkError');
      function stripSlash(url) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"stripSlash","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"stripSlash"},');

        return url.replace(/\/$/, '');
                SRTlib.send('{"type":"FUNCTIONEND","function":"stripSlash","paramsNumber":1},');

      }
      module.exports = (_temp = _class = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function RequestClient(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"RequestClient","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.uppy = uppy;
          this.opts = opts;
          this.onReceiveResponse = this.onReceiveResponse.bind(this);
          this.allowedHeaders = ['accept', 'content-type', 'uppy-auth-token'];
          this.preflightDone = false;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"RequestClient","paramsNumber":2},');

        }
        var _proto = RequestClient.prototype;
        _proto.headers = function headers() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.headers","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var userHeaders = this.opts.companionHeaders || this.opts.serverHeaders || ({});
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.headers"},');

          return Promise.resolve(_extends({}, this.defaultHeaders, {}, userHeaders));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.headers"},');

        };
        _proto._getPostResponseFunc = function _getPostResponseFunc(skip) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getPostResponseFunc","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getPostResponseFunc"},');

          return function (response) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getPostResponseFunc._getPostResponseFunc.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (!skip) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getPostResponseFunc._getPostResponseFunc.ReturnStatement"},');

              return _this.onReceiveResponse(response);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getPostResponseFunc._getPostResponseFunc.ReturnStatement"},');

            return response;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getPostResponseFunc._getPostResponseFunc.ReturnStatement"},');

          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getPostResponseFunc"},');

        };
        _proto.onReceiveResponse = function onReceiveResponse(response) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onReceiveResponse","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var state = this.uppy.getState();
          var companion = state.companion || ({});
          var host = this.opts.companionUrl;
          var headers = response.headers;
          if (headers.has('i-am') && headers.get('i-am') !== companion[host]) {
            var _extends2;
            this.uppy.setState({
              companion: _extends({}, companion, (_extends2 = {}, _extends2[host] = headers.get('i-am'), _extends2))
            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onReceiveResponse"},');

          return response;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onReceiveResponse"},');

        };
        _proto._getUrl = function _getUrl(url) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getUrl","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if ((/^(https?:|)\/\//).test(url)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getUrl"},');

            return url;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getUrl"},');

          return this.hostname + "/" + url;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getUrl"},');

        };
        _proto._json = function _json(res) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._json","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (res.status === 401) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._json"},');

            throw new AuthError();
          }
          if (res.status < 200 || res.status > 300) {
            var errMsg = "Failed request with status: " + res.status + ". " + res.statusText;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._json"},');

            return res.json().then(function (errData) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._json._json.ReturnStatement.res.json.then.catch.res.json.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              errMsg = errData.message ? errMsg + " message: " + errData.message : errMsg;
              errMsg = errData.requestId ? errMsg + " request-Id: " + errData.requestId : errMsg;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._json._json.ReturnStatement.res.json.then.catch.res.json.then"},');

              throw new Error(errMsg);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._json._json.ReturnStatement.res.json.then.catch.res.json.then"},');

            }).catch(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._json._json.ReturnStatement.res.json.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._json._json.ReturnStatement.res.json.then.catch"},');

              throw new Error(errMsg);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._json._json.ReturnStatement.res.json.then.catch"},');

            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._json"},');

          return res.json();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._json"},');

        };
        _proto.preflight = function preflight(path) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.preflight","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this2 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflight"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (_this2.preflightDone) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression"},');

              return resolve(_this2.allowedHeaders.slice());
            }
            fetch(_this2._getUrl(path), {
              method: 'OPTIONS'
            }).then(function (response) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression.fetch.then.catch.fetch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (response.headers.has('access-control-allow-headers')) {
                _this2.allowedHeaders = response.headers.get('access-control-allow-headers').split(',').map(function (headerName) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression.fetch.then.catch.fetch.then._this2.allowedHeaders.response.headers.get.split.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression.fetch.then.catch.fetch.then._this2.allowedHeaders.response.headers.get.split.map"},');

                  return headerName.trim().toLowerCase();
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression.fetch.then.catch.fetch.then._this2.allowedHeaders.response.headers.get.split.map"},');

                });
              }
              _this2.preflightDone = true;
              resolve(_this2.allowedHeaders.slice());
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression.fetch.then.catch.fetch.then"},');

            }).catch(function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression.fetch.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this2.uppy.log("[CompanionClient] unable to make preflight request " + err, 'warning');
              _this2.preflightDone = true;
              resolve(_this2.allowedHeaders.slice());
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression.fetch.then.catch"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflight.preflight.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflight"},');

        };
        _proto.preflightAndHeaders = function preflightAndHeaders(path) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.preflightAndHeaders","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this3 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflightAndHeaders"},');

          return Promise.all([this.preflight(path), this.headers()]).then(function (_ref) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.preflightAndHeaders.preflightAndHeaders.ReturnStatement.Promise.all.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var allowedHeaders = _ref[0], headers = _ref[1];
            Object.keys(headers).forEach(function (header) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.preflightAndHeaders.preflightAndHeaders.ReturnStatement.Promise.all.then.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (allowedHeaders.indexOf(header.toLowerCase()) === -1) {
                _this3.uppy.log("[CompanionClient] excluding unallowed header " + header);
                delete headers[header];
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflightAndHeaders.preflightAndHeaders.ReturnStatement.Promise.all.then.Object.keys.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflightAndHeaders.preflightAndHeaders.ReturnStatement.Promise.all.then"},');

            return headers;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflightAndHeaders.preflightAndHeaders.ReturnStatement.Promise.all.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.preflightAndHeaders"},');

        };
        _proto.get = function get(path, skipPostResponse) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this4 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this4.preflightAndHeaders(path).then(function (headers) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              fetch(_this4._getUrl(path), {
                method: 'get',
                headers: headers,
                credentials: 'same-origin'
              }).catch(function (err) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (err.name === 'AbortError') {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch"},');

                  throw err;
                } else {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch"},');

                  throw new NetworkError(err);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch"},');

              }).then(_this4._getPostResponseFunc(skipPostResponse)).then(function (res) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then"},');

                return _this4._json(res).then(resolve);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then"},');

              }).catch(function (err) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then.fetch.catch.then.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                err = err.isAuthError ? err : new Error("Could not get " + _this4._getUrl(path) + ". " + err);
                reject(err);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then.fetch.catch.then.then.catch"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression._this4.preflightAndHeaders.then.catch._this4.preflightAndHeaders.then"},');

            }).catch(reject);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get.get.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.get"},');

        };
        _proto.post = function post(path, data, skipPostResponse) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.post","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var _this5 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this5.preflightAndHeaders(path).then(function (headers) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              fetch(_this5._getUrl(path), {
                method: 'post',
                headers: headers,
                credentials: 'same-origin',
                body: JSON.stringify(data)
              }).catch(function (err) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (err.name === 'AbortError') {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch"},');

                  throw err;
                } else {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch"},');

                  throw new NetworkError(err);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch"},');

              }).then(_this5._getPostResponseFunc(skipPostResponse)).then(function (res) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then"},');

                return _this5._json(res).then(resolve);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then"},');

              }).catch(function (err) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then.fetch.catch.then.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                err = err.isAuthError ? err : new Error("Could not post " + _this5._getUrl(path) + ". " + err);
                reject(err);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then.fetch.catch.then.then.catch"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression._this5.preflightAndHeaders.then.catch._this5.preflightAndHeaders.then"},');

            }).catch(reject);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post.post.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.post"},');

        };
        _proto.delete = function _delete(path, data, skipPostResponse) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.delete","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var _this6 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this6.preflightAndHeaders(path).then(function (headers) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              fetch(_this6.hostname + "/" + path, {
                method: 'delete',
                headers: headers,
                credentials: 'same-origin',
                body: data ? JSON.stringify(data) : null
              }).catch(function (err) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (err.name === 'AbortError') {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch"},');

                  throw err;
                } else {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch"},');

                  throw new NetworkError(err);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then.fetch.catch.then.fetch.catch"},');

              }).then(_this6._getPostResponseFunc(skipPostResponse)).then(function (res) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then"},');

                return _this6._json(res).then(resolve);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then.fetch.catch.then.then.catch.fetch.catch.then.then"},');

              }).catch(function (err) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then.fetch.catch.then.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                err = err.isAuthError ? err : new Error("Could not delete " + _this6._getUrl(path) + ". " + err);
                reject(err);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then.fetch.catch.then.then.catch"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression._this6.preflightAndHeaders.then.catch._this6.preflightAndHeaders.then"},');

            }).catch(reject);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete._delete.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.delete"},');

        };
        _createClass(RequestClient, [{
          key: "hostname",
          get: function get() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._createClass.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this$uppy$getState = this.uppy.getState(), companion = _this$uppy$getState.companion;
            var host = this.opts.companionUrl;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._createClass.get"},');

            return stripSlash(companion && companion[host] ? companion[host] : host);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._createClass.get"},');

          }
        }, {
          key: "defaultHeaders",
          get: function get() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._createClass.get###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._createClass.get###2"},');

            return {
              Accept: 'application/json',
              'Content-Type': 'application/json',
              'Uppy-Versions': "@uppy/companion-client=" + RequestClient.VERSION
            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._createClass.get###2"},');

          }
        }]);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class"},');

        return RequestClient;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class"},');

      })(), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###100"},');

    }, {
      "../package.json": 95,
      "./AuthError": 89,
      "@uppy/utils/lib/NetworkError": 198
    }],
    92: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###101","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var ee = require('namespace-emitter');
      module.exports = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###21","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function UppySocket(opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"UppySocket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.opts = opts;
          this._queued = [];
          this.isOpen = false;
          this.emitter = ee();
          this._handleMessage = this._handleMessage.bind(this);
          this.close = this.close.bind(this);
          this.emit = this.emit.bind(this);
          this.on = this.on.bind(this);
          this.once = this.once.bind(this);
          this.send = this.send.bind(this);
          if (!opts || opts.autoOpen !== false) {
            this.open();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"UppySocket","paramsNumber":1},');

        }
        var _proto = UppySocket.prototype;
        _proto.open = function open() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.open","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this = this;
          this.socket = new WebSocket(this.opts.target);
          this.socket.onopen = function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.open.open.socket.onopen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this.isOpen = true;
            while (_this._queued.length > 0 && _this.isOpen) {
              var first = _this._queued[0];
              _this.send(first.action, first.payload);
              _this._queued = _this._queued.slice(1);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.open.open.socket.onopen"},');

          };
          this.socket.onclose = function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.open.open.socket.onclose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this.isOpen = false;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.open.open.socket.onclose"},');

          };
          this.socket.onmessage = this._handleMessage;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.open"},');

        };
        _proto.close = function close() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.close","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (this.socket) {
            this.socket.close();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.close"},');

        };
        _proto.send = function send(action, payload) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.send","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!this.isOpen) {
            this._queued.push({
              action: action,
              payload: payload
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.send"},');

            return;
          }
          this.socket.send(JSON.stringify({
            action: action,
            payload: payload
          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.send"},');

        };
        _proto.on = function on(action, handler) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.emitter.on(action, handler);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.on"},');

        };
        _proto.emit = function emit(action, payload) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.emit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.emitter.emit(action, payload);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.emit"},');

        };
        _proto.once = function once(action, handler) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.once","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.emitter.once(action, handler);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.once"},');

        };
        _proto._handleMessage = function _handleMessage(e) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._handleMessage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          try {
            var message = JSON.parse(e.data);
            this.emit(message.action, message.payload);
          } catch (err) {
            console.log(err);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._handleMessage"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###21"},');

        return UppySocket;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###21"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###101"},');

    }, {
      "namespace-emitter": 47
    }],
    93: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###102","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      var RequestClient = require('./RequestClient');
      var Provider = require('./Provider');
      var Socket = require('./Socket');
      module.exports = {
        RequestClient: RequestClient,
        Provider: Provider,
        Socket: Socket
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###102"},');

    }, {
      "./Provider": 90,
      "./RequestClient": 91,
      "./Socket": 92
    }],
    94: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###103","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      module.exports.setItem = function (key, value) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.setItem","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.setItem"},');

        return new Promise(function (resolve) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.setItem.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          localStorage.setItem(key, value);
          resolve();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.setItem.ReturnStatement.NewExpression"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.setItem"},');

      };
      module.exports.getItem = function (key) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.getItem","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.getItem"},');

        return Promise.resolve(localStorage.getItem(key));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.getItem"},');

      };
      module.exports.removeItem = function (key) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.removeItem","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.removeItem"},');

        return new Promise(function (resolve) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.removeItem.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          localStorage.removeItem(key);
          resolve();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.removeItem.ReturnStatement.NewExpression"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.removeItem"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###103"},');

    }, {}],
    95: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###104","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/companion-client",
        "description": "Client library for communication with Companion. Intended for use in Uppy plugins.",
        "version": "1.4.5",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "companion", "provider"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/utils": "file:../utils",
          "namespace-emitter": "^2.0.1"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###104"},');

    }, {}],
    96: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###106","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###3"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###3"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var preact = require('preact');
      var findDOMElement = require('@uppy/utils/lib/findDOMElement');
      function debounce(fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"debounce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var calling = null;
        var latestArgs = null;
                SRTlib.send('{"type":"FUNCTIONEND","function":"debounce"},');

        return function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###105","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          latestArgs = args;
          if (!calling) {
            calling = Promise.resolve().then(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.calling.Promise.resolve.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              calling = null;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.calling.Promise.resolve.then"},');

              return fn.apply(void 0, latestArgs);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.calling.Promise.resolve.then"},');

            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###105"},');

          return calling;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###105"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"debounce","paramsNumber":1},');

      }
      module.exports = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###22","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function Plugin(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Plugin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.uppy = uppy;
          this.opts = opts || ({});
          this.update = this.update.bind(this);
          this.mount = this.mount.bind(this);
          this.install = this.install.bind(this);
          this.uninstall = this.uninstall.bind(this);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Plugin","paramsNumber":2},');

        }
        var _proto = Plugin.prototype;
        _proto.getPluginState = function getPluginState() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.getPluginState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this$uppy$getState = this.uppy.getState(), plugins = _this$uppy$getState.plugins;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getPluginState"},');

          return plugins[this.id] || ({});
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getPluginState"},');

        };
        _proto.setPluginState = function setPluginState(update) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.setPluginState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _extends2;
          var _this$uppy$getState2 = this.uppy.getState(), plugins = _this$uppy$getState2.plugins;
          this.uppy.setState({
            plugins: _extends({}, plugins, (_extends2 = {}, _extends2[this.id] = _extends({}, plugins[this.id], {}, update), _extends2))
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.setPluginState"},');

        };
        _proto.setOptions = function setOptions(newOpts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.setOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.opts = _extends({}, this.opts, {}, newOpts);
          this.setPluginState();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.setOptions"},');

        };
        _proto.update = function update(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.update","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (typeof this.el === 'undefined') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.update"},');

            return;
          }
          if (this._updateUI) {
            this._updateUI(state);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.update"},');

        };
        _proto.afterUpdate = function afterUpdate() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.afterUpdate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.afterUpdate"},');

        };
        _proto.onMount = function onMount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.onMount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.onMount"},');

        };
        _proto.mount = function mount(target, plugin) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.mount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this = this;
          var callerPluginName = plugin.id;
          var targetElement = findDOMElement(target);
          if (targetElement) {
            this.isTargetDOMEl = true;
            this.rerender = function (state) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.mount.mount.rerender","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (!_this.uppy.getPlugin(_this.id)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.mount.mount.rerender"},');

                return;
              }
              _this.el = preact.render(_this.render(state), targetElement, _this.el);
              _this.afterUpdate();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.mount.mount.rerender"},');

            };
            this._updateUI = debounce(this.rerender);
            this.uppy.log("Installing " + callerPluginName + " to a DOM element '" + target + "'");
            if (this.opts.replaceTargetContent) {
              targetElement.innerHTML = '';
            }
            this.el = preact.render(this.render(this.uppy.getState()), targetElement);
            this.onMount();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.mount"},');

            return this.el;
          }
          var targetPlugin;
          if (typeof target === 'object' && target instanceof Plugin) {
            targetPlugin = target;
          } else if (typeof target === 'function') {
            var Target = target;
            this.uppy.iteratePlugins(function (plugin) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.mount.mount.uppy.iteratePlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (plugin instanceof Target) {
                targetPlugin = plugin;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.mount.mount.uppy.iteratePlugins"},');

                return false;
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.mount.mount.uppy.iteratePlugins"},');

            });
          }
          if (targetPlugin) {
            this.uppy.log("Installing " + callerPluginName + " to " + targetPlugin.id);
            this.parent = targetPlugin;
            this.el = targetPlugin.addTarget(plugin);
            this.onMount();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.mount"},');

            return this.el;
          }
          this.uppy.log("Not installing " + callerPluginName);
          var message = "Invalid target option given to " + callerPluginName + ".";
          if (typeof target === 'function') {
            message += ' The given target is not a Plugin class. ' + 'Please check that you\'re not specifying a React Component instead of a plugin. ' + 'If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: ' + 'run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly.';
          } else {
            message += 'If you meant to target an HTML element, please make sure that the element exists. ' + 'Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. ' + '(see https://github.com/transloadit/uppy/issues/1042)\n\n' + 'If you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.';
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.mount"},');

          throw new Error(message);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.mount"},');

        };
        _proto.render = function render(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.render"},');

          throw new Error('Extend the render method to add your plugin to a DOM element');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.render"},');

        };
        _proto.addTarget = function addTarget(plugin) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.addTarget","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.addTarget"},');

          throw new Error('Extend the addTarget method to add your plugin to another plugin\'s target');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.addTarget"},');

        };
        _proto.unmount = function unmount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.unmount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (this.isTargetDOMEl && this.el && this.el.parentNode) {
            this.el.parentNode.removeChild(this.el);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.unmount"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.install","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.install"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.uninstall","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.unmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.uninstall"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###22"},');

        return Plugin;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###22"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###106"},');

    }, {
      "@uppy/utils/lib/findDOMElement": 205,
      "preact": 51
    }],
    97: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###107","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###4"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###4"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _defineProperties(target, props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_defineProperties","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if (("value" in descriptor)) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_defineProperties","paramsNumber":2},');

      }
      function _createClass(Constructor, protoProps, staticProps) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_createClass","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_createClass"},');

        return Constructor;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_createClass","paramsNumber":3},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      function _wrapNativeSuper(Class) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_wrapNativeSuper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var _cache = typeof Map === "function" ? new Map() : undefined;
        _wrapNativeSuper = function _wrapNativeSuper(Class) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_wrapNativeSuper###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (Class === null || !_isNativeFunction(Class)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###2"},');

            return Class;
          }
          if (typeof Class !== "function") {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###2"},');

            throw new TypeError("Super expression must either be null or a function");
          }
          if (typeof _cache !== "undefined") {
            if (_cache.has(Class)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###2"},');

              return _cache.get(Class);
            }
            _cache.set(Class, Wrapper);
          }
          function Wrapper() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Wrapper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Wrapper"},');

            return _construct(Class, arguments, _getPrototypeOf(this).constructor);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Wrapper","paramsNumber":0},');

          }
          Wrapper.prototype = Object.create(Class.prototype, {
            constructor: {
              value: Wrapper,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###2"},');

          return _setPrototypeOf(Wrapper, Class);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###2"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper"},');

        return _wrapNativeSuper(Class);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper","paramsNumber":1},');

      }
      function _construct(Parent, args, Class) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_construct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (_isNativeReflectConstruct()) {
          _construct = Reflect.construct;
        } else {
          _construct = function _construct(Parent, args, Class) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_construct###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var a = [null];
            a.push.apply(a, args);
            var Constructor = Function.bind.apply(Parent, a);
            var instance = new Constructor();
            if (Class) _setPrototypeOf(instance, Class.prototype);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_construct###2"},');

            return instance;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_construct###2"},');

          };
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_construct"},');

        return _construct.apply(null, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_construct","paramsNumber":3},');

      }
      function _isNativeReflectConstruct() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_isNativeReflectConstruct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (typeof Reflect === "undefined" || !Reflect.construct) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return false;
        }
        if (Reflect.construct.sham) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return false;
        }
        if (typeof Proxy === "function") {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return true;
        }
        try {
          Date.prototype.toString.call(Reflect.construct(Date, [], function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"Date.prototype.toString.call.Reflect.construct###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Date.prototype.toString.call.Reflect.construct###2"},');

          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return true;
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct","paramsNumber":0},');

      }
      function _isNativeFunction(fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_isNativeFunction","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeFunction"},');

        return Function.toString.call(fn).indexOf("[native code]") !== -1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeFunction","paramsNumber":1},');

      }
      function _setPrototypeOf(o, p) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_setPrototypeOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        _setPrototypeOf = Object.setPrototypeOf || (function _setPrototypeOf(o, p) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_setPrototypeOf###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          o.__proto__ = p;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf###2"},');

          return o;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf###2"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf"},');

        return _setPrototypeOf(o, p);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf","paramsNumber":2},');

      }
      function _getPrototypeOf(o) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_getPrototypeOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_getPrototypeOf###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf###2"},');

          return o.__proto__ || Object.getPrototypeOf(o);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf###2"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf"},');

        return _getPrototypeOf(o);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf","paramsNumber":1},');

      }
      var Translator = require('@uppy/utils/lib/Translator');
      var ee = require('namespace-emitter');
      var cuid = require('cuid');
      var throttle = require('lodash.throttle');
      var prettierBytes = require('@transloadit/prettier-bytes');
      var match = require('mime-match');
      var DefaultStore = require('@uppy/store-default');
      var getFileType = require('@uppy/utils/lib/getFileType');
      var getFileNameAndExtension = require('@uppy/utils/lib/getFileNameAndExtension');
      var generateFileID = require('@uppy/utils/lib/generateFileID');
      var supportsUploadProgress = require('./supportsUploadProgress');
      var _require = require('./loggers'), justErrorsLogger = _require.justErrorsLogger, debugLogger = _require.debugLogger;
      var Plugin = require('./Plugin');
      var RestrictionError = (function (_Error) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.RestrictionError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(RestrictionError, _Error);
        function RestrictionError() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"RestrictionError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Error.call.apply(_Error, [this].concat(args)) || this;
          _this.isRestriction = true;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"RestrictionError"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"RestrictionError","paramsNumber":0},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.RestrictionError"},');

        return RestrictionError;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.RestrictionError"},');

      })(_wrapNativeSuper(Error));
      var Uppy = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function Uppy(opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Uppy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this2 = this;
          this.defaultLocale = {
            strings: {
              addBulkFilesFailed: {
                0: 'Failed to add %{smart_count} file due to an internal error',
                1: 'Failed to add %{smart_count} files due to internal errors'
              },
              youCanOnlyUploadX: {
                0: 'You can only upload %{smart_count} file',
                1: 'You can only upload %{smart_count} files'
              },
              youHaveToAtLeastSelectX: {
                0: 'You have to select at least %{smart_count} file',
                1: 'You have to select at least %{smart_count} files'
              },
              exceedsSize2: '%{backwardsCompat} %{size}',
              exceedsSize: 'This file exceeds maximum allowed size of',
              youCanOnlyUploadFileTypes: 'You can only upload: %{types}',
              noNewAlreadyUploading: 'Cannot add new files: already uploading',
              noDuplicates: 'Cannot add the duplicate file \'%{fileName}\', it already exists',
              companionError: 'Connection with Companion failed',
              companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',
              failedToUpload: 'Failed to upload %{file}',
              noInternetConnection: 'No Internet connection',
              connectedToInternet: 'Connected to the Internet',
              noFilesFound: 'You have no files or folders here',
              selectX: {
                0: 'Select %{smart_count}',
                1: 'Select %{smart_count}'
              },
              selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',
              unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',
              selectFileNamed: 'Select file %{name}',
              unselectFileNamed: 'Unselect file %{name}',
              openFolderNamed: 'Open folder %{name}',
              cancel: 'Cancel',
              logOut: 'Log out',
              filter: 'Filter',
              resetFilter: 'Reset filter',
              loading: 'Loading...',
              authenticateWithTitle: 'Please authenticate with %{pluginName} to select files',
              authenticateWith: 'Connect to %{pluginName}',
              emptyFolderAdded: 'No files were added from empty folder',
              folderAdded: {
                0: 'Added %{smart_count} file from %{folder}',
                1: 'Added %{smart_count} files from %{folder}'
              }
            }
          };
          var defaultOptions = {
            id: 'uppy',
            autoProceed: false,
            allowMultipleUploads: true,
            debug: false,
            restrictions: {
              maxFileSize: null,
              maxNumberOfFiles: null,
              minNumberOfFiles: null,
              allowedFileTypes: null
            },
            meta: {},
            onBeforeFileAdded: function onBeforeFileAdded(currentFile, files) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"defaultOptions.onBeforeFileAdded","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"defaultOptions.onBeforeFileAdded"},');

              return currentFile;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"defaultOptions.onBeforeFileAdded"},');

            },
            onBeforeUpload: function onBeforeUpload(files) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"defaultOptions.onBeforeUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"defaultOptions.onBeforeUpload"},');

              return files;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"defaultOptions.onBeforeUpload"},');

            },
            store: DefaultStore(),
            logger: justErrorsLogger
          };
          this.opts = _extends({}, defaultOptions, {}, opts, {
            restrictions: _extends({}, defaultOptions.restrictions, {}, opts && opts.restrictions)
          });
          if (opts && opts.logger && opts.debug) {
            this.log('You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.', 'warning');
          } else if (opts && opts.debug) {
            this.opts.logger = debugLogger;
          }
          this.log("Using Core v" + this.constructor.VERSION);
          if (this.opts.restrictions.allowedFileTypes && this.opts.restrictions.allowedFileTypes !== null && !Array.isArray(this.opts.restrictions.allowedFileTypes)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Uppy"},');

            throw new TypeError('`restrictions.allowedFileTypes` must be an array');
          }
          this.i18nInit();
          this.plugins = {};
          this.getState = this.getState.bind(this);
          this.getPlugin = this.getPlugin.bind(this);
          this.setFileMeta = this.setFileMeta.bind(this);
          this.setFileState = this.setFileState.bind(this);
          this.log = this.log.bind(this);
          this.info = this.info.bind(this);
          this.hideInfo = this.hideInfo.bind(this);
          this.addFile = this.addFile.bind(this);
          this.removeFile = this.removeFile.bind(this);
          this.pauseResume = this.pauseResume.bind(this);
          this._calculateProgress = throttle(this._calculateProgress.bind(this), 500, {
            leading: true,
            trailing: true
          });
          this.updateOnlineStatus = this.updateOnlineStatus.bind(this);
          this.resetProgress = this.resetProgress.bind(this);
          this.pauseAll = this.pauseAll.bind(this);
          this.resumeAll = this.resumeAll.bind(this);
          this.retryAll = this.retryAll.bind(this);
          this.cancelAll = this.cancelAll.bind(this);
          this.retryUpload = this.retryUpload.bind(this);
          this.upload = this.upload.bind(this);
          this.emitter = ee();
          this.on = this.on.bind(this);
          this.off = this.off.bind(this);
          this.once = this.emitter.once.bind(this.emitter);
          this.emit = this.emitter.emit.bind(this.emitter);
          this.preProcessors = [];
          this.uploaders = [];
          this.postProcessors = [];
          this.store = this.opts.store;
          this.setState({
            plugins: {},
            files: {},
            currentUploads: {},
            allowNewUpload: true,
            capabilities: {
              uploadProgress: supportsUploadProgress(),
              individualCancellation: true,
              resumableUploads: false
            },
            totalProgress: 0,
            meta: _extends({}, this.opts.meta),
            info: {
              isHidden: true,
              type: 'info',
              message: ''
            }
          });
          this._storeUnsubscribe = this.store.subscribe(function (prevState, nextState, patch) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_storeUnsubscribe.store.subscribe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            _this2.emit('state-update', prevState, nextState, patch);
            _this2.updateAll(nextState);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_storeUnsubscribe.store.subscribe"},');

          });
          if (this.opts.debug && typeof window !== 'undefined') {
            window[this.opts.id] = this;
          }
          this._addListeners();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Uppy","paramsNumber":1},');

        }
        var _proto = Uppy.prototype;
        _proto.on = function on(event, callback) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.emitter.on(event, callback);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.on"},');

          return this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.on"},');

        };
        _proto.off = function off(event, callback) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.off","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.emitter.off(event, callback);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.off"},');

          return this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.off"},');

        };
        _proto.updateAll = function updateAll(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.updateAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.iteratePlugins(function (plugin) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.updateAll.updateAll.iteratePlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            plugin.update(state);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.updateAll.updateAll.iteratePlugins"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.updateAll"},');

        };
        _proto.setState = function setState(patch) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.setState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.store.setState(patch);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.setState"},');

        };
        _proto.getState = function getState() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.getState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getState"},');

          return this.store.getState();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getState"},');

        };
        _proto.setFileState = function setFileState(fileID, state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.setFileState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _extends2;
          if (!this.getState().files[fileID]) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.setFileState"},');

            throw new Error("Can\u2019t set state for " + fileID + " (the file could have been removed)");
          }
          this.setState({
            files: _extends({}, this.getState().files, (_extends2 = {}, _extends2[fileID] = _extends({}, this.getState().files[fileID], state), _extends2))
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.setFileState"},');

        };
        _proto.i18nInit = function i18nInit() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.i18nInit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.translator = new Translator([this.defaultLocale, this.opts.locale]);
          this.locale = this.translator.locale;
          this.i18n = this.translator.translate.bind(this.translator);
          this.i18nArray = this.translator.translateArray.bind(this.translator);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.i18nInit"},');

        };
        _proto.setOptions = function setOptions(newOpts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.setOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.opts = _extends({}, this.opts, {}, newOpts, {
            restrictions: _extends({}, this.opts.restrictions, {}, newOpts && newOpts.restrictions)
          });
          if (newOpts.meta) {
            this.setMeta(newOpts.meta);
          }
          this.i18nInit();
          if (newOpts.locale) {
            this.iteratePlugins(function (plugin) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.setOptions.setOptions.iteratePlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              plugin.setOptions();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.setOptions.setOptions.iteratePlugins"},');

            });
          }
          this.setState();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.setOptions"},');

        };
        _proto.resetProgress = function resetProgress() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.resetProgress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var defaultProgress = {
            percentage: 0,
            bytesUploaded: 0,
            uploadComplete: false,
            uploadStarted: null
          };
          var files = _extends({}, this.getState().files);
          var updatedFiles = {};
          Object.keys(files).forEach(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.resetProgress.resetProgress.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var updatedFile = _extends({}, files[fileID]);
            updatedFile.progress = _extends({}, updatedFile.progress, defaultProgress);
            updatedFiles[fileID] = updatedFile;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.resetProgress.resetProgress.Object.keys.forEach"},');

          });
          this.setState({
            files: updatedFiles,
            totalProgress: 0
          });
          this.emit('reset-progress');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.resetProgress"},');

        };
        _proto.addPreProcessor = function addPreProcessor(fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.addPreProcessor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.preProcessors.push(fn);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addPreProcessor"},');

        };
        _proto.removePreProcessor = function removePreProcessor(fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removePreProcessor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var i = this.preProcessors.indexOf(fn);
          if (i !== -1) {
            this.preProcessors.splice(i, 1);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removePreProcessor"},');

        };
        _proto.addPostProcessor = function addPostProcessor(fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.addPostProcessor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.postProcessors.push(fn);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addPostProcessor"},');

        };
        _proto.removePostProcessor = function removePostProcessor(fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removePostProcessor","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var i = this.postProcessors.indexOf(fn);
          if (i !== -1) {
            this.postProcessors.splice(i, 1);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removePostProcessor"},');

        };
        _proto.addUploader = function addUploader(fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.addUploader","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.uploaders.push(fn);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addUploader"},');

        };
        _proto.removeUploader = function removeUploader(fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removeUploader","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var i = this.uploaders.indexOf(fn);
          if (i !== -1) {
            this.uploaders.splice(i, 1);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removeUploader"},');

        };
        _proto.setMeta = function setMeta(data) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.setMeta","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var updatedMeta = _extends({}, this.getState().meta, data);
          var updatedFiles = _extends({}, this.getState().files);
          Object.keys(updatedFiles).forEach(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.setMeta.setMeta.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {
              meta: _extends({}, updatedFiles[fileID].meta, data)
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.setMeta.setMeta.Object.keys.forEach"},');

          });
          this.log('Adding metadata:');
          this.log(data);
          this.setState({
            meta: updatedMeta,
            files: updatedFiles
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.setMeta"},');

        };
        _proto.setFileMeta = function setFileMeta(fileID, data) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.setFileMeta","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var updatedFiles = _extends({}, this.getState().files);
          if (!updatedFiles[fileID]) {
            this.log('Was trying to set metadata for a file that has been removed: ', fileID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.setFileMeta"},');

            return;
          }
          var newMeta = _extends({}, updatedFiles[fileID].meta, data);
          updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {
            meta: newMeta
          });
          this.setState({
            files: updatedFiles
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.setFileMeta"},');

        };
        _proto.getFile = function getFile(fileID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.getFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getFile"},');

          return this.getState().files[fileID];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getFile"},');

        };
        _proto.getFiles = function getFiles() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.getFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this$getState = this.getState(), files = _this$getState.files;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getFiles"},');

          return Object.keys(files).map(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.getFiles.getFiles.ReturnStatement.Object.keys.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getFiles.getFiles.ReturnStatement.Object.keys.map"},');

            return files[fileID];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getFiles.getFiles.ReturnStatement.Object.keys.map"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getFiles"},');

        };
        _proto._checkMinNumberOfFiles = function _checkMinNumberOfFiles(files) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._checkMinNumberOfFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var minNumberOfFiles = this.opts.restrictions.minNumberOfFiles;
          if (Object.keys(files).length < minNumberOfFiles) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkMinNumberOfFiles"},');

            throw new RestrictionError("" + this.i18n('youHaveToAtLeastSelectX', {
              smart_count: minNumberOfFiles
            }));
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkMinNumberOfFiles"},');

        };
        _proto._checkRestrictions = function _checkRestrictions(files, file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._checkRestrictions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this$opts$restrictio = this.opts.restrictions, maxFileSize = _this$opts$restrictio.maxFileSize, maxNumberOfFiles = _this$opts$restrictio.maxNumberOfFiles, allowedFileTypes = _this$opts$restrictio.allowedFileTypes;
          if (maxNumberOfFiles) {
            if (Object.keys(files).length + 1 > maxNumberOfFiles) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkRestrictions"},');

              throw new RestrictionError("" + this.i18n('youCanOnlyUploadX', {
                smart_count: maxNumberOfFiles
              }));
            }
          }
          if (allowedFileTypes) {
            var isCorrectFileType = allowedFileTypes.some(function (type) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._checkRestrictions._checkRestrictions.isCorrectFileType.allowedFileTypes.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (type.indexOf('/') > -1) {
                if (!file.type) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkRestrictions._checkRestrictions.isCorrectFileType.allowedFileTypes.some"},');

                  return false;
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkRestrictions._checkRestrictions.isCorrectFileType.allowedFileTypes.some"},');

                return match(file.type.replace(/;.*?$/, ''), type);
              }
              if (type[0] === '.') {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkRestrictions._checkRestrictions.isCorrectFileType.allowedFileTypes.some"},');

                return file.extension.toLowerCase() === type.substr(1).toLowerCase();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkRestrictions._checkRestrictions.isCorrectFileType.allowedFileTypes.some"},');

              return false;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkRestrictions._checkRestrictions.isCorrectFileType.allowedFileTypes.some"},');

            });
            if (!isCorrectFileType) {
              var allowedFileTypesString = allowedFileTypes.join(', ');
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkRestrictions"},');

              throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', {
                types: allowedFileTypesString
              }));
            }
          }
          if (maxFileSize && file.data.size != null) {
            if (file.data.size > maxFileSize) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkRestrictions"},');

              throw new RestrictionError(this.i18n('exceedsSize2', {
                backwardsCompat: this.i18n('exceedsSize'),
                size: prettierBytes(maxFileSize)
              }));
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkRestrictions"},');

        };
        _proto._showOrLogErrorAndThrow = function _showOrLogErrorAndThrow(err, _temp) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._showOrLogErrorAndThrow","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _ref = _temp === void 0 ? {} : _temp, _ref$showInformer = _ref.showInformer, showInformer = _ref$showInformer === void 0 ? true : _ref$showInformer, _ref$file = _ref.file, file = _ref$file === void 0 ? null : _ref$file, _ref$throwErr = _ref.throwErr, throwErr = _ref$throwErr === void 0 ? true : _ref$throwErr;
          var message = typeof err === 'object' ? err.message : err;
          var details = typeof err === 'object' && err.details ? err.details : '';
          var logMessageWithDetails = message;
          if (details) {
            logMessageWithDetails += ' ' + details;
          }
          if (err.isRestriction) {
            this.log(logMessageWithDetails);
            this.emit('restriction-failed', file, err);
          } else {
            this.log(logMessageWithDetails, 'error');
          }
          if (showInformer) {
            this.info({
              message: message,
              details: details
            }, 'error', 5000);
          }
          if (throwErr) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._showOrLogErrorAndThrow"},');

            throw typeof err === 'object' ? err : new Error(err);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._showOrLogErrorAndThrow"},');

        };
        _proto._assertNewUploadAllowed = function _assertNewUploadAllowed(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._assertNewUploadAllowed","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this$getState2 = this.getState(), allowNewUpload = _this$getState2.allowNewUpload;
          if (allowNewUpload === false) {
            this._showOrLogErrorAndThrow(new RestrictionError(this.i18n('noNewAlreadyUploading')), {
              file: file
            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._assertNewUploadAllowed"},');

        };
        _proto._checkAndCreateFileStateObject = function _checkAndCreateFileStateObject(files, file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._checkAndCreateFileStateObject","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var fileType = getFileType(file);
          file.type = fileType;
          var onBeforeFileAddedResult = this.opts.onBeforeFileAdded(file, files);
          if (onBeforeFileAddedResult === false) {
            this._showOrLogErrorAndThrow(new RestrictionError('Cannot add the file because onBeforeFileAdded returned false.'), {
              showInformer: false,
              file: file
            });
          }
          if (typeof onBeforeFileAddedResult === 'object' && onBeforeFileAddedResult) {
            file = onBeforeFileAddedResult;
          }
          var fileName;
          if (file.name) {
            fileName = file.name;
          } else if (fileType.split('/')[0] === 'image') {
            fileName = fileType.split('/')[0] + '.' + fileType.split('/')[1];
          } else {
            fileName = 'noname';
          }
          var fileExtension = getFileNameAndExtension(fileName).extension;
          var isRemote = file.isRemote || false;
          var fileID = generateFileID(file);
          if (files[fileID]) {
            this._showOrLogErrorAndThrow(new RestrictionError(this.i18n('noDuplicates', {
              fileName: fileName
            })), {
              file: file
            });
          }
          var meta = file.meta || ({});
          meta.name = fileName;
          meta.type = fileType;
          var size = isFinite(file.data.size) ? file.data.size : null;
          var newFile = {
            source: file.source || '',
            id: fileID,
            name: fileName,
            extension: fileExtension || '',
            meta: _extends({}, this.getState().meta, {}, meta),
            type: fileType,
            data: file.data,
            progress: {
              percentage: 0,
              bytesUploaded: 0,
              bytesTotal: size,
              uploadComplete: false,
              uploadStarted: null
            },
            size: size,
            isRemote: isRemote,
            remote: file.remote || '',
            preview: file.preview
          };
          try {
            this._checkRestrictions(files, newFile);
          } catch (err) {
            this._showOrLogErrorAndThrow(err, {
              file: newFile
            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkAndCreateFileStateObject"},');

          return newFile;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._checkAndCreateFileStateObject"},');

        };
        _proto._startIfAutoProceed = function _startIfAutoProceed() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._startIfAutoProceed","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this3 = this;
          if (this.opts.autoProceed && !this.scheduledAutoProceed) {
            this.scheduledAutoProceed = setTimeout(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._startIfAutoProceed._startIfAutoProceed.scheduledAutoProceed.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              _this3.scheduledAutoProceed = null;
              _this3.upload().catch(function (err) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._startIfAutoProceed._startIfAutoProceed.scheduledAutoProceed.setTimeout._this3.upload.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (!err.isRestriction) {
                  _this3.log(err.stack || err.message || err);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._startIfAutoProceed._startIfAutoProceed.scheduledAutoProceed.setTimeout._this3.upload.catch"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._startIfAutoProceed._startIfAutoProceed.scheduledAutoProceed.setTimeout"},');

            }, 4);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._startIfAutoProceed"},');

        };
        _proto.addFile = function addFile(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.addFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _extends3;
          this._assertNewUploadAllowed(file);
          var _this$getState3 = this.getState(), files = _this$getState3.files;
          var newFile = this._checkAndCreateFileStateObject(files, file);
          this.setState({
            files: _extends({}, files, (_extends3 = {}, _extends3[newFile.id] = newFile, _extends3))
          });
          this.emit('file-added', newFile);
          this.log("Added file: " + newFile.name + ", " + newFile.id + ", mime type: " + newFile.type);
          this._startIfAutoProceed();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addFile"},');

          return newFile.id;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addFile"},');

        };
        _proto.addFiles = function addFiles(fileDescriptors) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.addFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this4 = this;
          this._assertNewUploadAllowed();
          var files = _extends({}, this.getState().files);
          var newFiles = [];
          var errors = [];
          for (var i = 0; i < fileDescriptors.length; i++) {
            try {
              var newFile = this._checkAndCreateFileStateObject(files, fileDescriptors[i]);
              newFiles.push(newFile);
              files[newFile.id] = newFile;
            } catch (err) {
              if (!err.isRestriction) {
                errors.push(err);
              }
            }
          }
          this.setState({
            files: files
          });
          newFiles.forEach(function (newFile) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.addFiles.addFiles.newFiles.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this4.emit('file-added', newFile);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addFiles.addFiles.newFiles.forEach"},');

          });
          if (newFiles.length > 5) {
            this.log("Added batch of " + newFiles.length + " files");
          } else {
            Object.keys(newFiles).forEach(function (fileID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.addFiles.addFiles.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this4.log("Added file: " + newFiles[fileID].name + "\n id: " + newFiles[fileID].id + "\n type: " + newFiles[fileID].type);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addFiles.addFiles.Object.keys.forEach"},');

            });
          }
          if (newFiles.length > 0) {
            this._startIfAutoProceed();
          }
          if (errors.length > 0) {
            var message = 'Multiple errors occurred while adding files:\n';
            errors.forEach(function (subError) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.addFiles.addFiles.errors.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              message += "\n * " + subError.message;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addFiles.addFiles.errors.forEach"},');

            });
            this.info({
              message: this.i18n('addBulkFilesFailed', {
                smart_count: errors.length
              }),
              details: message
            }, 'error', 5000);
            var err = new Error(message);
            err.errors = errors;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addFiles"},');

            throw err;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addFiles"},');

        };
        _proto.removeFiles = function removeFiles(fileIDs) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removeFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this5 = this;
          var _this$getState4 = this.getState(), files = _this$getState4.files, currentUploads = _this$getState4.currentUploads;
          var updatedFiles = _extends({}, files);
          var updatedUploads = _extends({}, currentUploads);
          var removedFiles = Object.create(null);
          fileIDs.forEach(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removeFiles.removeFiles.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (files[fileID]) {
              removedFiles[fileID] = files[fileID];
              delete updatedFiles[fileID];
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removeFiles.removeFiles.fileIDs.forEach"},');

          });
          function fileIsNotRemoved(uploadFileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fileIsNotRemoved","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"fileIsNotRemoved"},');

            return removedFiles[uploadFileID] === undefined;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"fileIsNotRemoved","paramsNumber":1},');

          }
          var uploadsToRemove = [];
          Object.keys(updatedUploads).forEach(function (uploadID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removeFiles.removeFiles.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var newFileIDs = currentUploads[uploadID].fileIDs.filter(fileIsNotRemoved);
            if (newFileIDs.length === 0) {
              uploadsToRemove.push(uploadID);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removeFiles.removeFiles.Object.keys.forEach"},');

              return;
            }
            updatedUploads[uploadID] = _extends({}, currentUploads[uploadID], {
              fileIDs: newFileIDs
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removeFiles.removeFiles.Object.keys.forEach"},');

          });
          uploadsToRemove.forEach(function (uploadID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removeFiles.removeFiles.uploadsToRemove.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            delete updatedUploads[uploadID];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removeFiles.removeFiles.uploadsToRemove.forEach"},');

          });
          var stateUpdate = {
            currentUploads: updatedUploads,
            files: updatedFiles
          };
          if (Object.keys(updatedFiles).length === 0) {
            stateUpdate.allowNewUpload = true;
            stateUpdate.error = null;
          }
          this.setState(stateUpdate);
          this._calculateTotalProgress();
          var removedFileIDs = Object.keys(removedFiles);
          removedFileIDs.forEach(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removeFiles.removeFiles.removedFileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this5.emit('file-removed', removedFiles[fileID]);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removeFiles.removeFiles.removedFileIDs.forEach"},');

          });
          if (removedFileIDs.length > 5) {
            this.log("Removed " + removedFileIDs.length + " files");
          } else {
            this.log("Removed files: " + removedFileIDs.join(', '));
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removeFiles"},');

        };
        _proto.removeFile = function removeFile(fileID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removeFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.removeFiles([fileID]);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removeFile"},');

        };
        _proto.pauseResume = function pauseResume(fileID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.pauseResume","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (!this.getState().capabilities.resumableUploads || this.getFile(fileID).uploadComplete) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.pauseResume"},');

            return;
          }
          var wasPaused = this.getFile(fileID).isPaused || false;
          var isPaused = !wasPaused;
          this.setFileState(fileID, {
            isPaused: isPaused
          });
          this.emit('upload-pause', fileID, isPaused);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.pauseResume"},');

          return isPaused;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.pauseResume"},');

        };
        _proto.pauseAll = function pauseAll() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.pauseAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var updatedFiles = _extends({}, this.getState().files);
          var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.pauseAll.pauseAll.inProgressUpdatedFiles.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.pauseAll.pauseAll.inProgressUpdatedFiles.Object.keys.filter"},');

            return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.pauseAll.pauseAll.inProgressUpdatedFiles.Object.keys.filter"},');

          });
          inProgressUpdatedFiles.forEach(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.pauseAll.pauseAll.inProgressUpdatedFiles.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var updatedFile = _extends({}, updatedFiles[file], {
              isPaused: true
            });
            updatedFiles[file] = updatedFile;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.pauseAll.pauseAll.inProgressUpdatedFiles.forEach"},');

          });
          this.setState({
            files: updatedFiles
          });
          this.emit('pause-all');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.pauseAll"},');

        };
        _proto.resumeAll = function resumeAll() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.resumeAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var updatedFiles = _extends({}, this.getState().files);
          var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.resumeAll.resumeAll.inProgressUpdatedFiles.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.resumeAll.resumeAll.inProgressUpdatedFiles.Object.keys.filter"},');

            return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.resumeAll.resumeAll.inProgressUpdatedFiles.Object.keys.filter"},');

          });
          inProgressUpdatedFiles.forEach(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.resumeAll.resumeAll.inProgressUpdatedFiles.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var updatedFile = _extends({}, updatedFiles[file], {
              isPaused: false,
              error: null
            });
            updatedFiles[file] = updatedFile;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.resumeAll.resumeAll.inProgressUpdatedFiles.forEach"},');

          });
          this.setState({
            files: updatedFiles
          });
          this.emit('resume-all');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.resumeAll"},');

        };
        _proto.retryAll = function retryAll() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.retryAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var updatedFiles = _extends({}, this.getState().files);
          var filesToRetry = Object.keys(updatedFiles).filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.retryAll.retryAll.filesToRetry.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.retryAll.retryAll.filesToRetry.Object.keys.filter"},');

            return updatedFiles[file].error;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.retryAll.retryAll.filesToRetry.Object.keys.filter"},');

          });
          filesToRetry.forEach(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.retryAll.retryAll.filesToRetry.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var updatedFile = _extends({}, updatedFiles[file], {
              isPaused: false,
              error: null
            });
            updatedFiles[file] = updatedFile;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.retryAll.retryAll.filesToRetry.forEach"},');

          });
          this.setState({
            files: updatedFiles,
            error: null
          });
          this.emit('retry-all', filesToRetry);
          var uploadID = this._createUpload(filesToRetry, {
            forceAllowNewUpload: true
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.retryAll"},');

          return this._runUpload(uploadID);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.retryAll"},');

        };
        _proto.cancelAll = function cancelAll() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.cancelAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.emit('cancel-all');
          var _this$getState5 = this.getState(), files = _this$getState5.files;
          var fileIDs = Object.keys(files);
          if (fileIDs.length) {
            this.removeFiles(fileIDs);
          }
          this.setState({
            totalProgress: 0,
            error: null
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.cancelAll"},');

        };
        _proto.retryUpload = function retryUpload(fileID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.retryUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.setFileState(fileID, {
            error: null,
            isPaused: false
          });
          this.emit('upload-retry', fileID);
          var uploadID = this._createUpload([fileID], {
            forceAllowNewUpload: true
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.retryUpload"},');

          return this._runUpload(uploadID);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.retryUpload"},');

        };
        _proto.reset = function reset() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.reset","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.cancelAll();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.reset"},');

        };
        _proto._calculateProgress = function _calculateProgress(file, data) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._calculateProgress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!this.getFile(file.id)) {
            this.log("Not setting progress for a file that has been removed: " + file.id);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateProgress"},');

            return;
          }
          var canHavePercentage = isFinite(data.bytesTotal) && data.bytesTotal > 0;
          this.setFileState(file.id, {
            progress: _extends({}, this.getFile(file.id).progress, {
              bytesUploaded: data.bytesUploaded,
              bytesTotal: data.bytesTotal,
              percentage: canHavePercentage ? Math.round(data.bytesUploaded / data.bytesTotal * 100) : 0
            })
          });
          this._calculateTotalProgress();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateProgress"},');

        };
        _proto._calculateTotalProgress = function _calculateTotalProgress() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._calculateTotalProgress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var files = this.getFiles();
          var inProgress = files.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.inProgress.files.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.inProgress.files.filter"},');

            return file.progress.uploadStarted || file.progress.preprocess || file.progress.postprocess;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.inProgress.files.filter"},');

          });
          if (inProgress.length === 0) {
            this.emit('progress', 0);
            this.setState({
              totalProgress: 0
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress"},');

            return;
          }
          var sizedFiles = inProgress.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.sizedFiles.inProgress.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.sizedFiles.inProgress.filter"},');

            return file.progress.bytesTotal != null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.sizedFiles.inProgress.filter"},');

          });
          var unsizedFiles = inProgress.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.unsizedFiles.inProgress.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.unsizedFiles.inProgress.filter"},');

            return file.progress.bytesTotal == null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.unsizedFiles.inProgress.filter"},');

          });
          if (sizedFiles.length === 0) {
            var progressMax = inProgress.length * 100;
            var currentProgress = unsizedFiles.reduce(function (acc, file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.currentProgress.unsizedFiles.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.currentProgress.unsizedFiles.reduce"},');

              return acc + file.progress.percentage;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.currentProgress.unsizedFiles.reduce"},');

            }, 0);
            var _totalProgress = Math.round(currentProgress / progressMax * 100);
            this.setState({
              totalProgress: _totalProgress
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress"},');

            return;
          }
          var totalSize = sizedFiles.reduce(function (acc, file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.totalSize.sizedFiles.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.totalSize.sizedFiles.reduce"},');

            return acc + file.progress.bytesTotal;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.totalSize.sizedFiles.reduce"},');

          }, 0);
          var averageSize = totalSize / sizedFiles.length;
          totalSize += averageSize * unsizedFiles.length;
          var uploadedSize = 0;
          sizedFiles.forEach(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.sizedFiles.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            uploadedSize += file.progress.bytesUploaded;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.sizedFiles.forEach"},');

          });
          unsizedFiles.forEach(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.unsizedFiles.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            uploadedSize += averageSize * (file.progress.percentage || 0) / 100;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress._calculateTotalProgress.unsizedFiles.forEach"},');

          });
          var totalProgress = totalSize === 0 ? 0 : Math.round(uploadedSize / totalSize * 100);
          if (totalProgress > 100) {
            totalProgress = 100;
          }
          this.setState({
            totalProgress: totalProgress
          });
          this.emit('progress', totalProgress);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._calculateTotalProgress"},');

        };
        _proto._addListeners = function _addListeners() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this6 = this;
          this.on('error', function (error) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var errorMsg = 'Unknown error';
            if (error.message) {
              errorMsg = error.message;
            }
            if (error.details) {
              errorMsg += ' ' + error.details;
            }
            _this6.setState({
              error: errorMsg
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on"},');

          });
          this.on('upload-error', function (file, error, response) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var errorMsg = 'Unknown error';
            if (error.message) {
              errorMsg = error.message;
            }
            if (error.details) {
              errorMsg += ' ' + error.details;
            }
            _this6.setFileState(file.id, {
              error: errorMsg,
              response: response
            });
            _this6.setState({
              error: error.message
            });
            if (typeof error === 'object' && error.message) {
              var newError = new Error(error.message);
              newError.details = error.message;
              if (error.details) {
                newError.details += ' ' + error.details;
              }
              newError.message = _this6.i18n('failedToUpload', {
                file: file.name
              });
              _this6._showOrLogErrorAndThrow(newError, {
                throwErr: false
              });
            } else {
              _this6._showOrLogErrorAndThrow(error, {
                throwErr: false
              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###2"},');

          });
          this.on('upload', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this6.setState({
              error: null
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###3"},');

          });
          this.on('upload-started', function (file, upload) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (!_this6.getFile(file.id)) {
              _this6.log("Not setting progress for a file that has been removed: " + file.id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###4"},');

              return;
            }
            _this6.setFileState(file.id, {
              progress: {
                uploadStarted: Date.now(),
                uploadComplete: false,
                percentage: 0,
                bytesUploaded: 0,
                bytesTotal: file.size
              }
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###4"},');

          });
          this.on('upload-progress', this._calculateProgress);
          this.on('upload-success', function (file, uploadResp) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (!_this6.getFile(file.id)) {
              _this6.log("Not setting progress for a file that has been removed: " + file.id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###5"},');

              return;
            }
            var currentProgress = _this6.getFile(file.id).progress;
            _this6.setFileState(file.id, {
              progress: _extends({}, currentProgress, {
                uploadComplete: true,
                percentage: 100,
                bytesUploaded: currentProgress.bytesTotal
              }),
              response: uploadResp,
              uploadURL: uploadResp.uploadURL,
              isPaused: false
            });
            _this6._calculateTotalProgress();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###5"},');

          });
          this.on('preprocess-progress', function (file, progress) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (!_this6.getFile(file.id)) {
              _this6.log("Not setting progress for a file that has been removed: " + file.id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###6"},');

              return;
            }
            _this6.setFileState(file.id, {
              progress: _extends({}, _this6.getFile(file.id).progress, {
                preprocess: progress
              })
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###6"},');

          });
          this.on('preprocess-complete', function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (!_this6.getFile(file.id)) {
              _this6.log("Not setting progress for a file that has been removed: " + file.id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###7"},');

              return;
            }
            var files = _extends({}, _this6.getState().files);
            files[file.id] = _extends({}, files[file.id], {
              progress: _extends({}, files[file.id].progress)
            });
            delete files[file.id].progress.preprocess;
            _this6.setState({
              files: files
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###7"},');

          });
          this.on('postprocess-progress', function (file, progress) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (!_this6.getFile(file.id)) {
              _this6.log("Not setting progress for a file that has been removed: " + file.id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###8"},');

              return;
            }
            _this6.setFileState(file.id, {
              progress: _extends({}, _this6.getState().files[file.id].progress, {
                postprocess: progress
              })
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###8"},');

          });
          this.on('postprocess-complete', function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (!_this6.getFile(file.id)) {
              _this6.log("Not setting progress for a file that has been removed: " + file.id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###9"},');

              return;
            }
            var files = _extends({}, _this6.getState().files);
            files[file.id] = _extends({}, files[file.id], {
              progress: _extends({}, files[file.id].progress)
            });
            delete files[file.id].progress.postprocess;
            _this6.setState({
              files: files
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###9"},');

          });
          this.on('restored', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this6._calculateTotalProgress();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.on###10"},');

          });
          if (typeof window !== 'undefined' && window.addEventListener) {
            window.addEventListener('online', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.window.addEventListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.window.addEventListener"},');

              return _this6.updateOnlineStatus();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.window.addEventListener"},');

            });
            window.addEventListener('offline', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.window.addEventListener###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.window.addEventListener###2"},');

              return _this6.updateOnlineStatus();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.window.addEventListener###2"},');

            });
            setTimeout(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._addListeners._addListeners.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.setTimeout"},');

              return _this6.updateOnlineStatus();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners._addListeners.setTimeout"},');

            }, 3000);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._addListeners"},');

        };
        _proto.updateOnlineStatus = function updateOnlineStatus() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.updateOnlineStatus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var online = typeof window.navigator.onLine !== 'undefined' ? window.navigator.onLine : true;
          if (!online) {
            this.emit('is-offline');
            this.info(this.i18n('noInternetConnection'), 'error', 0);
            this.wasOffline = true;
          } else {
            this.emit('is-online');
            if (this.wasOffline) {
              this.emit('back-online');
              this.info(this.i18n('connectedToInternet'), 'success', 3000);
              this.wasOffline = false;
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.updateOnlineStatus"},');

        };
        _proto.getID = function getID() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.getID","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getID"},');

          return this.opts.id;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getID"},');

        };
        _proto.use = function use(Plugin, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.use","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (typeof Plugin !== 'function') {
            var msg = "Expected a plugin class, but got " + (Plugin === null ? 'null' : typeof Plugin) + "." + ' Please verify that the plugin was imported and spelled correctly.';
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.use"},');

            throw new TypeError(msg);
          }
          var plugin = new Plugin(this, opts);
          var pluginId = plugin.id;
          this.plugins[plugin.type] = this.plugins[plugin.type] || [];
          if (!pluginId) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.use"},');

            throw new Error('Your plugin must have an id');
          }
          if (!plugin.type) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.use"},');

            throw new Error('Your plugin must have a type');
          }
          var existsPluginAlready = this.getPlugin(pluginId);
          if (existsPluginAlready) {
            var _msg = "Already found a plugin named '" + existsPluginAlready.id + "'. " + ("Tried to use: '" + pluginId + "'.\n") + 'Uppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.';
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.use"},');

            throw new Error(_msg);
          }
          if (Plugin.VERSION) {
            this.log("Using " + pluginId + " v" + Plugin.VERSION);
          }
          this.plugins[plugin.type].push(plugin);
          plugin.install();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.use"},');

          return this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.use"},');

        };
        _proto.getPlugin = function getPlugin(id) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.getPlugin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var foundPlugin = null;
          this.iteratePlugins(function (plugin) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.getPlugin.getPlugin.iteratePlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (plugin.id === id) {
              foundPlugin = plugin;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getPlugin.getPlugin.iteratePlugins"},');

              return false;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getPlugin.getPlugin.iteratePlugins"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getPlugin"},');

          return foundPlugin;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.getPlugin"},');

        };
        _proto.iteratePlugins = function iteratePlugins(method) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.iteratePlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this7 = this;
          Object.keys(this.plugins).forEach(function (pluginType) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.iteratePlugins.iteratePlugins.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this7.plugins[pluginType].forEach(method);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.iteratePlugins.iteratePlugins.Object.keys.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.iteratePlugins"},');

        };
        _proto.removePlugin = function removePlugin(instance) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.removePlugin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.log("Removing plugin " + instance.id);
          this.emit('plugin-remove', instance);
          if (instance.uninstall) {
            instance.uninstall();
          }
          var list = this.plugins[instance.type].slice();
          var index = list.indexOf(instance);
          if (index !== -1) {
            list.splice(index, 1);
            this.plugins[instance.type] = list;
          }
          var updatedState = this.getState();
          delete updatedState.plugins[instance.id];
          this.setState(updatedState);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.removePlugin"},');

        };
        _proto.close = function close() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.close","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this8 = this;
          this.log("Closing Uppy instance " + this.opts.id + ": removing all files and uninstalling plugins");
          this.reset();
          this._storeUnsubscribe();
          this.iteratePlugins(function (plugin) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.close.close.iteratePlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this8.removePlugin(plugin);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.close.close.iteratePlugins"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.close"},');

        };
        _proto.info = function info(message, type, duration) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.info","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (type === void 0) {
            type = 'info';
          }
          if (duration === void 0) {
            duration = 3000;
          }
          var isComplexMessage = typeof message === 'object';
          this.setState({
            info: {
              isHidden: false,
              type: type,
              message: isComplexMessage ? message.message : message,
              details: isComplexMessage ? message.details : null
            }
          });
          this.emit('info-visible');
          clearTimeout(this.infoTimeoutID);
          if (duration === 0) {
            this.infoTimeoutID = undefined;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.info"},');

            return;
          }
          this.infoTimeoutID = setTimeout(this.hideInfo, duration);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.info"},');

        };
        _proto.hideInfo = function hideInfo() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.hideInfo","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var newInfo = _extends({}, this.getState().info, {
            isHidden: true
          });
          this.setState({
            info: newInfo
          });
          this.emit('info-hidden');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.hideInfo"},');

        };
        _proto.log = function log(message, type) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.log","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var logger = this.opts.logger;
          switch (type) {
            case 'error':
              logger.error(message);
              break;
            case 'warning':
              logger.warn(message);
              break;
            default:
              logger.debug(message);
              break;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.log"},');

        };
        _proto.run = function run() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.log('Calling run() is no longer necessary.', 'warning');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.run"},');

          return this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.run"},');

        };
        _proto.restore = function restore(uploadID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.restore","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.log("Core: attempting to restore upload \"" + uploadID + "\"");
          if (!this.getState().currentUploads[uploadID]) {
            this._removeUpload(uploadID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.restore"},');

            return Promise.reject(new Error('Nonexistent upload'));
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.restore"},');

          return this._runUpload(uploadID);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.restore"},');

        };
        _proto._createUpload = function _createUpload(fileIDs, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._createUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _extends4;
          if (opts === void 0) {
            opts = {};
          }
          var _opts = opts, _opts$forceAllowNewUp = _opts.forceAllowNewUpload, forceAllowNewUpload = _opts$forceAllowNewUp === void 0 ? false : _opts$forceAllowNewUp;
          var _this$getState6 = this.getState(), allowNewUpload = _this$getState6.allowNewUpload, currentUploads = _this$getState6.currentUploads;
          if (!allowNewUpload && !forceAllowNewUpload) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._createUpload"},');

            throw new Error('Cannot create a new upload: already uploading.');
          }
          var uploadID = cuid();
          this.emit('upload', {
            id: uploadID,
            fileIDs: fileIDs
          });
          this.setState({
            allowNewUpload: this.opts.allowMultipleUploads !== false,
            currentUploads: _extends({}, currentUploads, (_extends4 = {}, _extends4[uploadID] = {
              fileIDs: fileIDs,
              step: 0,
              result: {}
            }, _extends4))
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._createUpload"},');

          return uploadID;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._createUpload"},');

        };
        _proto._getUpload = function _getUpload(uploadID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._getUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this$getState7 = this.getState(), currentUploads = _this$getState7.currentUploads;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._getUpload"},');

          return currentUploads[uploadID];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._getUpload"},');

        };
        _proto.addResultData = function addResultData(uploadID, data) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.addResultData","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _extends5;
          if (!this._getUpload(uploadID)) {
            this.log("Not setting result for an upload that has been removed: " + uploadID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addResultData"},');

            return;
          }
          var currentUploads = this.getState().currentUploads;
          var currentUpload = _extends({}, currentUploads[uploadID], {
            result: _extends({}, currentUploads[uploadID].result, data)
          });
          this.setState({
            currentUploads: _extends({}, currentUploads, (_extends5 = {}, _extends5[uploadID] = currentUpload, _extends5))
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.addResultData"},');

        };
        _proto._removeUpload = function _removeUpload(uploadID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._removeUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var currentUploads = _extends({}, this.getState().currentUploads);
          delete currentUploads[uploadID];
          this.setState({
            currentUploads: currentUploads
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._removeUpload"},');

        };
        _proto._runUpload = function _runUpload(uploadID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this9 = this;
          var uploadData = this.getState().currentUploads[uploadID];
          var restoreStep = uploadData.step;
          var steps = [].concat(this.preProcessors, this.uploaders, this.postProcessors);
          var lastStep = Promise.resolve();
          steps.forEach(function (fn, step) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (step < restoreStep) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach"},');

              return;
            }
            lastStep = lastStep.then(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach.lastStep.lastStep.then.then.lastStep.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var _extends6;
              var _this9$getState = _this9.getState(), currentUploads = _this9$getState.currentUploads;
              var currentUpload = currentUploads[uploadID];
              if (!currentUpload) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach.lastStep.lastStep.then.then.lastStep.then"},');

                return;
              }
              var updatedUpload = _extends({}, currentUpload, {
                step: step
              });
              _this9.setState({
                currentUploads: _extends({}, currentUploads, (_extends6 = {}, _extends6[uploadID] = updatedUpload, _extends6))
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach.lastStep.lastStep.then.then.lastStep.then"},');

              return fn(updatedUpload.fileIDs, uploadID);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach.lastStep.lastStep.then.then.lastStep.then"},');

            }).then(function (result) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach.lastStep.lastStep.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach.lastStep.lastStep.then.then"},');

              return null;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach.lastStep.lastStep.then.then"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.steps.forEach"},');

          });
          lastStep.catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.lastStep.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this9.emit('error', err, uploadID);
            _this9._removeUpload(uploadID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.lastStep.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload"},');

          return lastStep.then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this9$getState2 = _this9.getState(), currentUploads = _this9$getState2.currentUploads;
            var currentUpload = currentUploads[uploadID];
            if (!currentUpload) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then"},');

              return;
            }
            var files = currentUpload.fileIDs.map(function (fileID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then.files.currentUpload.fileIDs.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then.files.currentUpload.fileIDs.map"},');

              return _this9.getFile(fileID);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then.files.currentUpload.fileIDs.map"},');

            });
            var successful = files.filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then.successful.files.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then.successful.files.filter"},');

              return !file.error;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then.successful.files.filter"},');

            });
            var failed = files.filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then.failed.files.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then.failed.files.filter"},');

              return file.error;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then.failed.files.filter"},');

            });
            _this9.addResultData(uploadID, {
              successful: successful,
              failed: failed,
              uploadID: uploadID
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then.lastStep.then"},');

          }).then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this9$getState3 = _this9.getState(), currentUploads = _this9$getState3.currentUploads;
            if (!currentUploads[uploadID]) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then"},');

              return;
            }
            var currentUpload = currentUploads[uploadID];
            var result = currentUpload.result;
            _this9.emit('complete', result);
            _this9._removeUpload(uploadID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then"},');

            return result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then.lastStep.then.then"},');

          }).then(function (result) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (result == null) {
              _this9.log("Not setting result for an upload that has been removed: " + uploadID);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then"},');

            return result;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload._runUpload.ReturnStatement.lastStep.then.then.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto._runUpload"},');

        };
        _proto.upload = function upload() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.upload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this10 = this;
          if (!this.plugins.uploader) {
            this.log('No uploader type plugins are used', 'warning');
          }
          var files = this.getState().files;
          var onBeforeUploadResult = this.opts.onBeforeUpload(files);
          if (onBeforeUploadResult === false) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload"},');

            return Promise.reject(new Error('Not starting the upload because onBeforeUpload returned false'));
          }
          if (onBeforeUploadResult && typeof onBeforeUploadResult === 'object') {
            files = onBeforeUploadResult;
            this.setState({
              files: files
            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload"},');

          return Promise.resolve().then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.Promise.resolve.then.catch.Promise.resolve.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.Promise.resolve.then.catch.Promise.resolve.then"},');

            return _this10._checkMinNumberOfFiles(files);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.Promise.resolve.then.catch.Promise.resolve.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.Promise.resolve.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this10._showOrLogErrorAndThrow(err);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.Promise.resolve.then.catch"},');

          }).then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this10$getState = _this10.getState(), currentUploads = _this10$getState.currentUploads;
            var currentlyUploadingFiles = Object.keys(currentUploads).reduce(function (prev, curr) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.currentlyUploadingFiles.Object.keys.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.currentlyUploadingFiles.Object.keys.reduce"},');

              return prev.concat(currentUploads[curr].fileIDs);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.currentlyUploadingFiles.Object.keys.reduce"},');

            }, []);
            var waitingFileIDs = [];
            Object.keys(files).forEach(function (fileID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var file = _this10.getFile(fileID);
              if (!file.progress.uploadStarted && currentlyUploadingFiles.indexOf(fileID) === -1) {
                waitingFileIDs.push(file.id);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then.Object.keys.forEach"},');

            });
            var uploadID = _this10._createUpload(waitingFileIDs);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then"},');

            return _this10._runUpload(uploadID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch.Promise.resolve.then.catch.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this10._showOrLogErrorAndThrow(err, {
              showInformer: false
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload.upload.ReturnStatement.Promise.resolve.then.catch.then.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._proto.upload"},');

        };
        _createClass(Uppy, [{
          key: "state",
          get: function get() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Uppy._createClass.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._createClass.get"},');

            return this.getState();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy._createClass.get"},');

          }
        }]);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy"},');

        return Uppy;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Uppy"},');

      })();
      Uppy.VERSION = require('../package.json').version;
      module.exports = function (opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###23","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###23"},');

        return new Uppy(opts);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###23"},');

      };
      module.exports.Uppy = Uppy;
      module.exports.Plugin = Plugin;
      module.exports.debugLogger = debugLogger;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###107"},');

    }, {
      "../package.json": 101,
      "./Plugin": 96,
      "./loggers": 98,
      "./supportsUploadProgress": 99,
      "@transloadit/prettier-bytes": 100,
      "@uppy/store-default": 177,
      "@uppy/utils/lib/Translator": 200,
      "@uppy/utils/lib/generateFileID": 206,
      "@uppy/utils/lib/getFileNameAndExtension": 213,
      "@uppy/utils/lib/getFileType": 214,
      "cuid": 13,
      "lodash.throttle": 43,
      "mime-match": 46,
      "namespace-emitter": 47
    }],
    98: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###108","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var getTimeStamp = require('@uppy/utils/lib/getTimeStamp');
      var justErrorsLogger = {
        debug: function debug() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.justErrorsLogger.debug","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.justErrorsLogger.debug"},');

        },
        warn: function warn() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.justErrorsLogger.warn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.justErrorsLogger.warn"},');

        },
        error: function error() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.justErrorsLogger.error","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _console;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.justErrorsLogger.error"},');

          return (_console = console).error.apply(_console, ["[Uppy] [" + getTimeStamp() + "]"].concat(args));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.justErrorsLogger.error"},');

        }
      };
      var debugLogger = {
        debug: function debug() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.debugLogger.debug","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var debug = console.debug || console.log;
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          debug.call.apply(debug, [console, "[Uppy] [" + getTimeStamp() + "]"].concat(args));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.debugLogger.debug"},');

        },
        warn: function warn() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.debugLogger.warn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _console2;
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.debugLogger.warn"},');

          return (_console2 = console).warn.apply(_console2, ["[Uppy] [" + getTimeStamp() + "]"].concat(args));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.debugLogger.warn"},');

        },
        error: function error() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.debugLogger.error","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _console3;
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.debugLogger.error"},');

          return (_console3 = console).error.apply(_console3, ["[Uppy] [" + getTimeStamp() + "]"].concat(args));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.debugLogger.error"},');

        }
      };
      module.exports = {
        justErrorsLogger: justErrorsLogger,
        debugLogger: debugLogger
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###108"},');

    }, {
      "@uppy/utils/lib/getTimeStamp": 218
    }],
    99: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###109","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function supportsUploadProgress(userAgent) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###24","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (userAgent == null) {
          userAgent = typeof navigator !== 'undefined' ? navigator.userAgent : null;
        }
        if (!userAgent) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###24"},');

          return true;
        }
        var m = (/Edge\/(\d+\.\d+)/).exec(userAgent);
        if (!m) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###24"},');

          return true;
        }
        var edgeVersion = m[1];
        var _edgeVersion$split = edgeVersion.split('.'), major = _edgeVersion$split[0], minor = _edgeVersion$split[1];
        major = parseInt(major, 10);
        minor = parseInt(minor, 10);
        if (major < 15 || major === 15 && minor < 15063) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###24"},');

          return true;
        }
        if (major > 18 || major === 18 && minor >= 18218) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###24"},');

          return true;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###24"},');

        return false;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###24"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###109"},');

    }, {}],
    100: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###110","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function prettierBytes(num) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###25","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (typeof num !== 'number' || isNaN(num)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###25"},');

          throw new TypeError('Expected a number, got ' + typeof num);
        }
        var neg = num < 0;
        var units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
        if (neg) {
          num = -num;
        }
        if (num < 1) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###25"},');

          return (neg ? '-' : '') + num + ' B';
        }
        var exponent = Math.min(Math.floor(Math.log(num) / Math.log(1024)), units.length - 1);
        num = Number(num / Math.pow(1024, exponent));
        var unit = units[exponent];
        if (num >= 10 || num % 1 === 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###25"},');

          return (neg ? '-' : '') + num.toFixed(0) + ' ' + unit;
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###25"},');

          return (neg ? '-' : '') + num.toFixed(1) + ' ' + unit;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###25"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###110"},');

    }, {}],
    101: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###111","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/core",
        "description": "Core module for the extensible JavaScript file upload widget with support for drag&drop, resumable uploads, previews, restrictions, file processing/encoding, remote providers like Instagram, Dropbox, Google Drive, S3 and more :dog:",
        "version": "1.10.5",
        "license": "MIT",
        "main": "lib/index.js",
        "style": "dist/style.min.css",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@transloadit/prettier-bytes": "0.0.7",
          "@uppy/store-default": "file:../store-default",
          "@uppy/utils": "file:../utils",
          "cuid": "^2.1.1",
          "lodash.throttle": "^4.1.1",
          "mime-match": "^1.0.2",
          "namespace-emitter": "^2.0.1",
          "preact": "8.2.9"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###111"},');

    }, {}],
    102: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###112","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('./icons'), iconMyDevice = _require.iconMyDevice;
      var _require2 = require('preact'), h = _require2.h, Component = _require2.Component;
      var AddFiles = (function (_Component) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AddFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(AddFiles, _Component);
        function AddFiles() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"AddFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.triggerFileInputClick = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.triggerFileInputClick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.fileInput.click();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.triggerFileInputClick"},');

          };
          _this.onFileInputChange = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.onFileInputChange","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this.props.handleInputChange(event);
            event.target.value = null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.onFileInputChange"},');

          };
          _this.renderCloudIcon = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderCloudIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderCloudIcon"},');

            return h("svg", {
              class: "uppy-Dashboard-dropFilesIcon",
              "aria-hidden": "true",
              width: "64",
              height: "45",
              viewBox: "0 0 64 45",
              xmlns: "http://www.w3.org/2000/svg"
            }, h("path", {
              d: "M38 44.932V31h8L33 15 20 31h8v13.932H13.538C6.075 44.932 0 38.774 0 31.202c0-6.1 4.06-11.512 9.873-13.162l.005-.017c.345-5.8 5.248-10.534 10.922-10.534.502 0 1.164.017 1.868.16C25.9 2.85 31.225 0 36.923 0c9.5 0 17.23 7.838 17.23 17.473l-.011.565.012.002C60.039 19.685 64 24.975 64 31.203c0 7.57-6.075 13.729-13.538 13.729H38z",
              fill: "#E2E2E2",
              "fill-rule": "nonzero"
            }));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderCloudIcon"},');

          };
          _this.renderHiddenFileInput = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderHiddenFileInput","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderHiddenFileInput"},');

            return h("input", {
              class: "uppy-Dashboard-input",
              hidden: true,
              "aria-hidden": "true",
              tabindex: -1,
              type: "file",
              name: "files[]",
              multiple: _this.props.maxNumberOfFiles !== 1,
              onchange: _this.onFileInputChange,
              accept: _this.props.allowedFileTypes,
              ref: function ref(_ref) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderHiddenFileInput.ReturnStatement.h.ref","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                _this.fileInput = _ref;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderHiddenFileInput.ReturnStatement.h.ref"},');

              }
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderHiddenFileInput"},');

          };
          _this.renderMyDeviceAcquirer = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderMyDeviceAcquirer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMyDeviceAcquirer"},');

            return h("div", {
              class: "uppy-DashboardTab",
              role: "presentation"
            }, h("button", {
              type: "button",
              class: "uppy-DashboardTab-btn",
              role: "tab",
              tabindex: 0,
              "data-uppy-super-focusable": true,
              onclick: _this.triggerFileInputClick
            }, iconMyDevice(), h("div", {
              class: "uppy-DashboardTab-name"
            }, _this.props.i18n('myDevice'))));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMyDeviceAcquirer"},');

          };
          _this.renderDropPasteBrowseTagline = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderDropPasteBrowseTagline","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var numberOfAcquirers = _this.props.acquirers.length;
            var browse = h("button", {
              type: "button",
              class: "uppy-u-reset uppy-Dashboard-browse",
              onclick: _this.triggerFileInputClick,
              "data-uppy-super-focusable": numberOfAcquirers === 0
            }, _this.props.i18n('browse'));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderDropPasteBrowseTagline"},');

            return h("div", {
              class: "uppy-Dashboard-AddFiles-title"
            }, numberOfAcquirers > 0 ? _this.props.i18nArray('dropPasteImport', {
              browse: browse
            }) : _this.props.i18nArray('dropPaste', {
              browse: browse
            }));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderDropPasteBrowseTagline"},');

          };
          _this.renderAcquirer = function (acquirer) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderAcquirer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirer"},');

            return h("div", {
              class: "uppy-DashboardTab",
              role: "presentation"
            }, h("button", {
              type: "button",
              class: "uppy-DashboardTab-btn",
              role: "tab",
              tabindex: 0,
              "aria-controls": "uppy-DashboardContent-panel--" + acquirer.id,
              "aria-selected": _this.props.activePickerPanel.id === acquirer.id,
              "data-uppy-super-focusable": true,
              onclick: function onclick() {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderAcquirer.ReturnStatement.h.h.onclick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirer.ReturnStatement.h.h.onclick"},');

                return _this.props.showPanel(acquirer.id);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirer.ReturnStatement.h.h.onclick"},');

              }
            }, acquirer.icon(), h("div", {
              class: "uppy-DashboardTab-name"
            }, acquirer.name)));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirer"},');

          };
          _this.renderAcquirers = function (acquirers) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderAcquirers","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var acquirersWithoutLastTwo = [].concat(acquirers);
            var lastTwoAcquirers = acquirersWithoutLastTwo.splice(acquirers.length - 2, acquirers.length);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirers"},');

            return h("div", {
              class: "uppy-Dashboard-AddFiles-list",
              role: "tablist"
            }, _this.renderMyDeviceAcquirer(), acquirersWithoutLastTwo.map(function (acquirer) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderAcquirers.ReturnStatement.h.acquirersWithoutLastTwo.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirers.ReturnStatement.h.acquirersWithoutLastTwo.map"},');

              return _this.renderAcquirer(acquirer);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirers.ReturnStatement.h.acquirersWithoutLastTwo.map"},');

            }), h("span", {
              role: "presentation",
              style: "white-space: nowrap;"
            }, lastTwoAcquirers.map(function (acquirer) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderAcquirers.ReturnStatement.h.h.lastTwoAcquirers.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirers.ReturnStatement.h.h.lastTwoAcquirers.map"},');

              return _this.renderAcquirer(acquirer);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirers.ReturnStatement.h.h.lastTwoAcquirers.map"},');

            })));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderAcquirers"},');

          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"AddFiles"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"AddFiles","paramsNumber":0},');

        }
        var _proto = AddFiles.prototype;
        _proto.renderPoweredByUppy = function renderPoweredByUppy() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AddFiles._proto.renderPoweredByUppy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var uppyBranding = h("span", null, h("svg", {
            "aria-hidden": "true",
            focusable: "false",
            class: "UppyIcon uppy-Dashboard-poweredByIcon",
            width: "11",
            height: "11",
            viewBox: "0 0 11 11"
          }, h("path", {
            d: "M7.365 10.5l-.01-4.045h2.612L5.5.806l-4.467 5.65h2.604l.01 4.044h3.718z",
            "fill-rule": "evenodd"
          })), h("span", {
            class: "uppy-Dashboard-poweredByUppy"
          }, "Uppy"));
          var linkText = this.props.i18nArray('poweredBy2', {
            backwardsCompat: this.props.i18n('poweredBy'),
            uppy: uppyBranding
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AddFiles._proto.renderPoweredByUppy"},');

          return h("a", {
            tabindex: "-1",
            href: "https://uppy.io",
            rel: "noreferrer noopener",
            target: "_blank",
            class: "uppy-Dashboard-poweredBy"
          }, linkText);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AddFiles._proto.renderPoweredByUppy"},');

        };
        _proto.render = function render() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AddFiles._proto.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AddFiles._proto.render"},');

          return h("div", {
            class: "uppy-Dashboard-AddFiles"
          }, this.renderHiddenFileInput(), this.renderDropPasteBrowseTagline(), this.props.acquirers.length > 0 && this.renderAcquirers(this.props.acquirers), h("div", {
            class: "uppy-Dashboard-AddFiles-info"
          }, this.props.note && h("div", {
            class: "uppy-Dashboard-note"
          }, this.props.note), this.props.proudlyDisplayPoweredByUppy && this.renderPoweredByUppy(this.props)));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AddFiles._proto.render"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AddFiles"},');

        return AddFiles;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AddFiles"},');

      })(Component);
      module.exports = AddFiles;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###112"},');

    }, {
      "./icons": 117,
      "preact": 51
    }],
    103: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###113","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var AddFiles = require('./AddFiles');
      var AddFilesPanel = function AddFilesPanel(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"AddFilesPanel","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"AddFilesPanel"},');

        return h("div", {
          class: "uppy-Dashboard-AddFilesPanel",
          "data-uppy-panelType": "AddFiles",
          "aria-hidden": props.showAddFilesPanel
        }, h("div", {
          class: "uppy-DashboardContent-bar"
        }, h("div", {
          class: "uppy-DashboardContent-title",
          role: "heading",
          "aria-level": "1"
        }, props.i18n('addingMoreFiles')), h("button", {
          class: "uppy-DashboardContent-back",
          type: "button",
          onclick: function onclick(ev) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AddFilesPanel.AddFilesPanel.ReturnStatement.h.h.h.onclick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AddFilesPanel.AddFilesPanel.ReturnStatement.h.h.h.onclick"},');

            return props.toggleAddFilesPanel(false);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AddFilesPanel.AddFilesPanel.ReturnStatement.h.h.h.onclick"},');

          }
        }, props.i18n('back'))), h(AddFiles, props));
                SRTlib.send('{"type":"FUNCTIONEND","function":"AddFilesPanel"},');

      };
      module.exports = AddFilesPanel;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###113"},');

    }, {
      "./AddFiles": 102,
      "preact": 51
    }],
    104: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###114","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###5"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###5"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var FileList = require('./FileList');
      var AddFiles = require('./AddFiles');
      var AddFilesPanel = require('./AddFilesPanel');
      var PickerPanelContent = require('./PickerPanelContent');
      var PanelTopBar = require('./PickerPanelTopBar');
      var FileCard = require('./FileCard');
      var classNames = require('classnames');
      var isDragDropSupported = require('@uppy/utils/lib/isDragDropSupported');
      var _require = require('preact'), h = _require.h;
      var PreactCSSTransitionGroup = require('preact-css-transition-group');
      function TransitionWrapper(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"TransitionWrapper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"TransitionWrapper"},');

        return h(PreactCSSTransitionGroup, {
          transitionName: "uppy-transition-slideDownUp",
          transitionEnterTimeout: 250,
          transitionLeaveTimeout: 250
        }, props.children);
                SRTlib.send('{"type":"FUNCTIONEND","function":"TransitionWrapper","paramsNumber":1},');

      }
      var WIDTH_XL = 900;
      var WIDTH_LG = 700;
      var WIDTH_MD = 576;
      var HEIGHT_MD = 400;
      module.exports = function Dashboard(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###26","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var noFiles = props.totalFileCount === 0;
        var isSizeMD = props.containerWidth > WIDTH_MD;
        var dashboardClassName = classNames({
          'uppy-Root': props.isTargetDOMEl,
          'uppy-Dashboard': true,
          'uppy-Dashboard--animateOpenClose': props.animateOpenClose,
          'uppy-Dashboard--isClosing': props.isClosing,
          'uppy-Dashboard--isDraggingOver': props.isDraggingOver,
          'uppy-Dashboard--modal': !props.inline,
          'uppy-size--md': props.containerWidth > WIDTH_MD,
          'uppy-size--lg': props.containerWidth > WIDTH_LG,
          'uppy-size--xl': props.containerWidth > WIDTH_XL,
          'uppy-size--height-md': props.containerHeight > HEIGHT_MD,
          'uppy-Dashboard--isAddFilesPanelVisible': props.showAddFilesPanel,
          'uppy-Dashboard--isInnerWrapVisible': props.areInsidesReadyToBeVisible
        });
        var itemsPerRow = 1;
        if (props.containerWidth > WIDTH_XL) {
          itemsPerRow = 5;
        } else if (props.containerWidth > WIDTH_LG) {
          itemsPerRow = 4;
        } else if (props.containerWidth > WIDTH_MD) {
          itemsPerRow = 3;
        }
        var showFileList = props.showSelectedFiles && !noFiles;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###26"},');

        return h("div", {
          class: dashboardClassName,
          "data-uppy-theme": props.theme,
          "data-uppy-num-acquirers": props.acquirers.length,
          "data-uppy-drag-drop-supported": isDragDropSupported(),
          "aria-hidden": props.inline ? 'false' : props.isHidden,
          "aria-label": !props.inline ? props.i18n('dashboardWindowTitle') : props.i18n('dashboardTitle'),
          onpaste: props.handlePaste,
          onDragOver: props.handleDragOver,
          onDragLeave: props.handleDragLeave,
          onDrop: props.handleDrop
        }, h("div", {
          class: "uppy-Dashboard-overlay",
          tabindex: -1,
          onclick: props.handleClickOutside
        }), h("div", {
          class: "uppy-Dashboard-inner",
          "aria-modal": !props.inline && 'true',
          role: !props.inline && 'dialog',
          style: {
            width: props.inline && props.width ? props.width : '',
            height: props.inline && props.height ? props.height : ''
          }
        }, !props.inline ? h("button", {
          class: "uppy-u-reset uppy-Dashboard-close",
          type: "button",
          "aria-label": props.i18n('closeModal'),
          title: props.i18n('closeModal'),
          onclick: props.closeModal
        }, h("span", {
          "aria-hidden": "true"
        }, "\xD7")) : null, h("div", {
          class: "uppy-Dashboard-innerWrap"
        }, h("div", {
          class: "uppy-Dashboard-dropFilesHereHint"
        }, props.i18n('dropHint')), showFileList && h(PanelTopBar, props), showFileList ? h(FileList, _extends({}, props, {
          itemsPerRow: itemsPerRow
        })) : h(AddFiles, _extends({}, props, {
          isSizeMD: isSizeMD
        })), h(TransitionWrapper, null, props.showAddFilesPanel ? h(AddFilesPanel, _extends({
          key: "AddFilesPanel"
        }, props, {
          isSizeMD: isSizeMD
        })) : null), h(TransitionWrapper, null, props.fileCardFor ? h(FileCard, _extends({
          key: "FileCard"
        }, props)) : null), h(TransitionWrapper, null, props.activePickerPanel ? h(PickerPanelContent, _extends({
          key: "PickerPanelContent"
        }, props)) : null), h("div", {
          class: "uppy-Dashboard-progressindicators"
        }, props.progressindicators.map(function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.Dashboard.ReturnStatement.h.h.h.h.props.progressindicators.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.Dashboard.ReturnStatement.h.h.h.h.props.progressindicators.map"},');

          return props.getPlugin(target.id).render(props.state);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.Dashboard.ReturnStatement.h.h.h.h.props.progressindicators.map"},');

        })))));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###26"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###114"},');

    }, {
      "./AddFiles": 102,
      "./AddFilesPanel": 103,
      "./FileCard": 105,
      "./FileList": 112,
      "./PickerPanelContent": 114,
      "./PickerPanelTopBar": 115,
      "@uppy/utils/lib/isDragDropSupported": 221,
      "classnames": 9,
      "preact": 51,
      "preact-css-transition-group": 50
    }],
    105: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###115","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###6"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###6"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('preact'), h = _require.h, Component = _require.Component;
      var getFileTypeIcon = require('../../utils/getFileTypeIcon');
      var ignoreEvent = require('../../utils/ignoreEvent.js');
      var FilePreview = require('../FilePreview');
      var FileCard = (function (_Component) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.FileCard","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(FileCard, _Component);
        function FileCard(props) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"FileCard","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this;
          _this = _Component.call(this, props) || this;
          _this.saveOnEnter = function (ev) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.saveOnEnter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (ev.keyCode === 13) {
              ev.stopPropagation();
              ev.preventDefault();
              var file = _this.props.files[_this.props.fileCardFor];
              _this.props.saveFileCard(_this.state.formState, file.id);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.saveOnEnter"},');

          };
          _this.updateMeta = function (newVal, name) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.updateMeta","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var _extends2;
            _this.setState({
              formState: _extends({}, _this.state.formState, (_extends2 = {}, _extends2[name] = newVal, _extends2))
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.updateMeta"},');

          };
          _this.handleSave = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleSave","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var fileID = _this.props.fileCardFor;
            _this.props.saveFileCard(_this.state.formState, fileID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleSave"},');

          };
          _this.handleCancel = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleCancel","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.props.toggleFileCard();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleCancel"},');

          };
          _this.renderMetaFields = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderMetaFields","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var metaFields = _this.props.metaFields || [];
            var fieldCSSClasses = {
              text: 'uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input'
            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMetaFields"},');

            return metaFields.map(function (field) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderMetaFields.ReturnStatement.metaFields.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var id = "uppy-Dashboard-FileCard-input-" + field.id;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMetaFields.ReturnStatement.metaFields.map"},');

              return h("fieldset", {
                key: field.id,
                class: "uppy-Dashboard-FileCard-fieldset"
              }, h("label", {
                class: "uppy-Dashboard-FileCard-label",
                for: id
              }, field.name), field.render !== undefined ? field.render({
                value: _this.state.formState[field.id],
                onChange: function onChange(newVal) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderMetaFields.ReturnStatement.metaFields.map.ReturnStatement.h.field.render.onChange","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMetaFields.ReturnStatement.metaFields.map.ReturnStatement.h.field.render.onChange"},');

                  return _this.updateMeta(newVal, field.id);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMetaFields.ReturnStatement.metaFields.map.ReturnStatement.h.field.render.onChange"},');

                },
                fieldCSSClasses: fieldCSSClasses
              }, h) : h("input", {
                class: fieldCSSClasses.text,
                id: id,
                type: field.type || 'text',
                value: _this.state.formState[field.id],
                placeholder: field.placeholder,
                onkeyup: _this.saveOnEnter,
                onkeydown: _this.saveOnEnter,
                onkeypress: _this.saveOnEnter,
                oninput: function oninput(ev) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.renderMetaFields.ReturnStatement.metaFields.map.ReturnStatement.h.h.oninput","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMetaFields.ReturnStatement.metaFields.map.ReturnStatement.h.h.oninput"},');

                  return _this.updateMeta(ev.target.value, field.id);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMetaFields.ReturnStatement.metaFields.map.ReturnStatement.h.h.oninput"},');

                },
                "data-uppy-super-focusable": true
              }));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMetaFields.ReturnStatement.metaFields.map"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.renderMetaFields"},');

          };
          var _file = _this.props.files[_this.props.fileCardFor];
          var _metaFields = _this.props.metaFields || [];
          var storedMetaData = {};
          _metaFields.forEach(function (field) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_metaFields.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            storedMetaData[field.id] = _file.meta[field.id] || '';
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_metaFields.forEach"},');

          });
          _this.state = {
            formState: storedMetaData
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"FileCard"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"FileCard","paramsNumber":1},');

        }
        var _proto = FileCard.prototype;
        _proto.render = function render() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.FileCard._proto.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var file = this.props.files[this.props.fileCardFor];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileCard._proto.render"},');

          return h("div", {
            class: "uppy-Dashboard-FileCard",
            "data-uppy-panelType": "FileCard",
            onDragOver: ignoreEvent,
            onDragLeave: ignoreEvent,
            onDrop: ignoreEvent,
            onPaste: ignoreEvent
          }, h("div", {
            class: "uppy-DashboardContent-bar"
          }, h("div", {
            class: "uppy-DashboardContent-title",
            role: "heading",
            "aria-level": "1"
          }, this.props.i18nArray('editing', {
            file: h("span", {
              class: "uppy-DashboardContent-titleFile"
            }, file.meta ? file.meta.name : file.name)
          })), h("button", {
            class: "uppy-DashboardContent-back",
            type: "button",
            title: this.props.i18n('finishEditingFile'),
            onclick: this.handleSave
          }, this.props.i18n('done'))), h("div", {
            class: "uppy-Dashboard-FileCard-inner"
          }, h("div", {
            class: "uppy-Dashboard-FileCard-preview",
            style: {
              backgroundColor: getFileTypeIcon(file.type).color
            }
          }, h(FilePreview, {
            file: file
          })), h("div", {
            class: "uppy-Dashboard-FileCard-info"
          }, this.renderMetaFields()), h("div", {
            class: "uppy-Dashboard-FileCard-actions"
          }, h("button", {
            class: "uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn",
            type: "button",
            onclick: this.handleSave
          }, this.props.i18n('saveChanges')), h("button", {
            class: "uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn",
            type: "button",
            onclick: this.handleCancel
          }, this.props.i18n('cancel')))));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileCard._proto.render"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileCard"},');

        return FileCard;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.FileCard"},');

      })(Component);
      module.exports = FileCard;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###115"},');

    }, {
      "../../utils/getFileTypeIcon": 122,
      "../../utils/ignoreEvent.js": 123,
      "../FilePreview": 113,
      "preact": 51
    }],
    106: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###116","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var copyToClipboard = require('../../../utils/copyToClipboard');
      var _require2 = require('../../icons'), iconPencil = _require2.iconPencil, iconCross = _require2.iconCross, iconCopyLink = _require2.iconCopyLink;
      function EditButton(_ref) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"EditButton","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var file = _ref.file, uploadInProgressOrComplete = _ref.uploadInProgressOrComplete, metaFields = _ref.metaFields, i18n = _ref.i18n, onClick = _ref.onClick;
        if (!uploadInProgressOrComplete && metaFields && metaFields.length > 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"EditButton"},');

          return h("button", {
            class: "uppy-u-reset uppy-DashboardItem-action uppy-DashboardItem-action--edit",
            type: "button",
            "aria-label": i18n('editFile') + ' ' + file.meta.name,
            title: i18n('editFile'),
            onclick: function onclick() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.h.onclick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.onclick"},');

              return onClick();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.onclick"},');

            }
          }, iconPencil());
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"EditButton"},');

        return null;
                SRTlib.send('{"type":"FUNCTIONEND","function":"EditButton","paramsNumber":1},');

      }
      function RemoveButton(_ref2) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"RemoveButton","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var i18n = _ref2.i18n, onClick = _ref2.onClick;
                SRTlib.send('{"type":"FUNCTIONEND","function":"RemoveButton"},');

        return h("button", {
          class: "uppy-u-reset uppy-DashboardItem-action uppy-DashboardItem-action--remove",
          type: "button",
          "aria-label": i18n('removeFile'),
          title: i18n('removeFile'),
          onclick: function onclick() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.h.onclick###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.onclick###2"},');

            return onClick();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.onclick###2"},');

          }
        }, iconCross());
                SRTlib.send('{"type":"FUNCTIONEND","function":"RemoveButton","paramsNumber":1},');

      }
      var copyLinkToClipboard = function copyLinkToClipboard(event, props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"copyLinkToClipboard","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        copyToClipboard(props.file.uploadURL, props.i18n('copyLinkToClipboardFallback')).then(function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.copyLinkToClipboard.copyLinkToClipboard.copyToClipboard.then.catch.then.copyToClipboard.then.catch.copyToClipboard.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          props.log('Link copied to clipboard.');
          props.info(props.i18n('copyLinkToClipboardSuccess'), 'info', 3000);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.copyLinkToClipboard.copyLinkToClipboard.copyToClipboard.then.catch.then.copyToClipboard.then.catch.copyToClipboard.then"},');

        }).catch(props.log).then(function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.copyLinkToClipboard.copyLinkToClipboard.copyToClipboard.then.catch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.copyLinkToClipboard.copyLinkToClipboard.copyToClipboard.then.catch.then"},');

          return event.target.focus({
            preventScroll: true
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.copyLinkToClipboard.copyLinkToClipboard.copyToClipboard.then.catch.then"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"copyLinkToClipboard"},');

      };
      function CopyLinkButton(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"CopyLinkButton","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"CopyLinkButton"},');

        return h("button", {
          class: "uppy-u-reset uppy-DashboardItem-action uppy-DashboardItem-action--copyLink",
          type: "button",
          "aria-label": props.i18n('copyLink'),
          title: props.i18n('copyLink'),
          onclick: function onclick(event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.h.onclick###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.onclick###3"},');

            return copyLinkToClipboard(event, props);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.onclick###3"},');

          }
        }, iconCopyLink());
                SRTlib.send('{"type":"FUNCTIONEND","function":"CopyLinkButton","paramsNumber":1},');

      }
      module.exports = function Buttons(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###27","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var file = props.file, uploadInProgressOrComplete = props.uploadInProgressOrComplete, metaFields = props.metaFields, showLinkToFileUploadResult = props.showLinkToFileUploadResult, showRemoveButton = props.showRemoveButton, i18n = props.i18n, removeFile = props.removeFile, toggleFileCard = props.toggleFileCard, log = props.log, info = props.info;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###27"},');

        return h("div", {
          className: "uppy-DashboardItem-actionWrapper"
        }, h(EditButton, {
          i18n: i18n,
          file: file,
          uploadInProgressOrComplete: uploadInProgressOrComplete,
          metaFields: metaFields,
          onClick: function onClick() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.Buttons.ReturnStatement.h.h.onClick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.Buttons.ReturnStatement.h.h.onClick"},');

            return toggleFileCard(file.id);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.Buttons.ReturnStatement.h.h.onClick"},');

          }
        }), showLinkToFileUploadResult && file.uploadURL ? h(CopyLinkButton, {
          file: file,
          i18n: i18n,
          info: info,
          log: log
        }) : null, showRemoveButton ? h(RemoveButton, {
          i18n: i18n,
          info: props.info,
          log: props.log,
          onClick: function onClick() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.Buttons.ReturnStatement.h.h.onClick###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.Buttons.ReturnStatement.h.h.onClick###2"},');

            return removeFile(file.id);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.Buttons.ReturnStatement.h.h.onClick###2"},');

          }
        }) : null);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###27"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###116"},');

    }, {
      "../../../utils/copyToClipboard": 119,
      "../../icons": 117,
      "preact": 51
    }],
    107: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###117","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var prettierBytes = require('@transloadit/prettier-bytes');
      var truncateString = require('../../../utils/truncateString');
      var renderAcquirerIcon = function renderAcquirerIcon(acquirer, props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"renderAcquirerIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"renderAcquirerIcon"},');

        return h("span", {
          title: props.i18n('fileSource', {
            name: acquirer.name
          })
        }, acquirer.icon());
                SRTlib.send('{"type":"FUNCTIONEND","function":"renderAcquirerIcon"},');

      };
      var renderFileSource = function renderFileSource(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"renderFileSource","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"renderFileSource"},');

        return props.file.source && props.file.source !== props.id && h("div", {
          class: "uppy-DashboardItem-sourceIcon"
        }, props.acquirers.map(function (acquirer) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.renderFileSource.renderFileSource.ReturnStatement.h.props.acquirers.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (acquirer.id === props.file.source) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.renderFileSource.renderFileSource.ReturnStatement.h.props.acquirers.map"},');

            return renderAcquirerIcon(acquirer, props);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.renderFileSource.renderFileSource.ReturnStatement.h.props.acquirers.map"},');

        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"renderFileSource"},');

      };
      var renderFileName = function renderFileName(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"renderFileName","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var maxNameLength;
        if (props.containerWidth <= 352) {
          maxNameLength = 35;
        } else if (props.containerWidth <= 576) {
          maxNameLength = 60;
        } else {
          maxNameLength = 30;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"renderFileName"},');

        return h("div", {
          class: "uppy-DashboardItem-name",
          title: props.file.meta.name
        }, truncateString(props.file.meta.name, maxNameLength));
                SRTlib.send('{"type":"FUNCTIONEND","function":"renderFileName"},');

      };
      var renderFileSize = function renderFileSize(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"renderFileSize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"renderFileSize"},');

        return props.file.data.size && h("div", {
          class: "uppy-DashboardItem-statusSize"
        }, prettierBytes(props.file.data.size));
                SRTlib.send('{"type":"FUNCTIONEND","function":"renderFileSize"},');

      };
      var ErrorButton = function ErrorButton(_ref) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ErrorButton","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var file = _ref.file, onClick = _ref.onClick;
        if (file.error) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ErrorButton"},');

          return h("span", {
            class: "uppy-DashboardItem-errorDetails",
            "aria-label": file.error,
            "data-microtip-position": "bottom",
            "data-microtip-size": "medium",
            role: "tooltip",
            onclick: onClick
          }, "?");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ErrorButton"},');

        return null;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ErrorButton"},');

      };
      module.exports = function FileInfo(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###28","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###28"},');

        return h("div", {
          class: "uppy-DashboardItem-fileInfo",
          "data-uppy-file-source": props.file.source
        }, renderFileName(props), h("div", {
          class: "uppy-DashboardItem-status"
        }, renderFileSize(props), renderFileSource(props), h(ErrorButton, {
          file: props.file,
          onClick: function onClick() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.FileInfo.ReturnStatement.h.h.h.onClick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            alert(props.file.error);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.FileInfo.ReturnStatement.h.h.h.onClick"},');

          }
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###28"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###117"},');

    }, {
      "../../../utils/truncateString": 125,
      "@transloadit/prettier-bytes": 126,
      "preact": 51
    }],
    108: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###118","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var FilePreview = require('../../FilePreview');
      var getFileTypeIcon = require('../../../utils/getFileTypeIcon');
      module.exports = function FilePreviewAndLink(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###29","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###29"},');

        return h("div", {
          class: "uppy-DashboardItem-previewInnerWrap",
          style: {
            backgroundColor: getFileTypeIcon(props.file.type).color
          }
        }, props.showLinkToFileUploadResult && props.file.uploadURL && h("a", {
          class: "uppy-DashboardItem-previewLink",
          href: props.file.uploadURL,
          rel: "noreferrer noopener",
          target: "_blank",
          "aria-label": props.file.meta.name
        }), h(FilePreview, {
          file: props.file
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###29"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###118"},');

    }, {
      "../../../utils/getFileTypeIcon": 122,
      "../../FilePreview": 113,
      "preact": 51
    }],
    109: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###119","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var circleLength = 2 * Math.PI * 15;
      module.exports = function PauseResumeCancelIcon(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###30","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###30"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "70",
          height: "70",
          viewBox: "0 0 36 36",
          class: "UppyIcon UppyIcon-progressCircle"
        }, h("g", {
          class: "progress-group"
        }, h("circle", {
          class: "bg",
          r: "15",
          cx: "18",
          cy: "18",
          "stroke-width": "2",
          fill: "none"
        }), h("circle", {
          class: "progress",
          r: "15",
          cx: "18",
          cy: "18",
          transform: "rotate(-90, 18, 18)",
          "stroke-width": "2",
          fill: "none",
          "stroke-dasharray": circleLength,
          "stroke-dashoffset": circleLength - circleLength / 100 * props.progress
        })), !props.hidePauseResumeCancelButtons && h("g", null, h("polygon", {
          class: "play",
          transform: "translate(3, 3)",
          points: "12 20 12 10 20 15"
        }), h("g", {
          class: "pause",
          transform: "translate(14.5, 13)"
        }, h("rect", {
          x: "0",
          y: "0",
          width: "2",
          height: "10",
          rx: "0"
        }), h("rect", {
          x: "5",
          y: "0",
          width: "2",
          height: "10",
          rx: "0"
        })), h("polygon", {
          class: "cancel",
          transform: "translate(2, 2)",
          points: "19.8856516 11.0625 16 14.9481516 12.1019737 11.0625 11.0625 12.1143484 14.9481516 16 11.0625 19.8980263 12.1019737 20.9375 16 17.0518484 19.8856516 20.9375 20.9375 19.8980263 17.0518484 16 20.9375 12"
        })), h("polygon", {
          class: "check",
          transform: "translate(2, 3)",
          points: "14 22.5 7 15.2457065 8.99985857 13.1732815 14 18.3547104 22.9729883 9 25 11.1005634"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###30"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###119"},');

    }, {
      "preact": 51
    }],
    110: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###120","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var _require2 = require('../../icons'), iconRetry = _require2.iconRetry;
      var PauseResumeCancelIcon = require('./PauseResumeCancelIcon');
      function onPauseResumeCancelRetry(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"onPauseResumeCancelRetry","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (props.isUploaded) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onPauseResumeCancelRetry"},');

          return;
        }
        if (props.error && !props.hideRetryButton) {
          props.retryUpload(props.file.id);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onPauseResumeCancelRetry"},');

          return;
        }
        if (props.hidePauseResumeCancelButtons) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"onPauseResumeCancelRetry"},');

          return;
        }
        if (props.resumableUploads) {
          props.pauseUpload(props.file.id);
        } else if (props.individualCancellation) {
          props.cancelUpload(props.file.id);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"onPauseResumeCancelRetry","paramsNumber":1},');

      }
      function progressIndicatorTitle(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"progressIndicatorTitle","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (props.isUploaded) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"progressIndicatorTitle"},');

          return props.i18n('uploadComplete');
        }
        if (props.error) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"progressIndicatorTitle"},');

          return props.i18n('retryUpload');
        }
        if (props.resumableUploads) {
          if (props.file.isPaused) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"progressIndicatorTitle"},');

            return props.i18n('resumeUpload');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"progressIndicatorTitle"},');

          return props.i18n('pauseUpload');
        } else if (props.individualCancellation) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"progressIndicatorTitle"},');

          return props.i18n('cancelUpload');
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"progressIndicatorTitle"},');

        return '';
                SRTlib.send('{"type":"FUNCTIONEND","function":"progressIndicatorTitle","paramsNumber":1},');

      }
      module.exports = function FileProgress(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###31","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (props.hideRetryButton && props.error || props.isUploaded && props.showRemoveButtonAfterComplete) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###31"},');

          return h("div", {
            class: "uppy-DashboardItem-progress"
          });
        } else if (props.isUploaded || props.hidePauseResumeCancelButtons && !props.error) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###31"},');

          return h("div", {
            class: "uppy-DashboardItem-progress"
          }, h("div", {
            class: "uppy-DashboardItem-progressIndicator"
          }, h(PauseResumeCancelIcon, {
            progress: props.file.progress.percentage,
            hidePauseResumeCancelButtons: props.hidePauseResumeCancelButtons
          })));
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###31"},');

          return h("div", {
            class: "uppy-DashboardItem-progress"
          }, h("button", {
            class: "uppy-u-reset uppy-DashboardItem-progressIndicator",
            type: "button",
            "aria-label": progressIndicatorTitle(props),
            title: progressIndicatorTitle(props),
            onclick: function onclick() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.FileProgress.ReturnStatement.h.h.onclick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.FileProgress.ReturnStatement.h.h.onclick"},');

              return onPauseResumeCancelRetry(props);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.FileProgress.ReturnStatement.h.h.onclick"},');

            }
          }, props.error ? props.hideRetryButton ? null : iconRetry() : h(PauseResumeCancelIcon, {
            progress: props.file.progress.percentage,
            hidePauseResumeCancelButtons: props.hidePauseResumeCancelButtons
          })));
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###31"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###120"},');

    }, {
      "../../icons": 117,
      "./PauseResumeCancelIcon": 109,
      "preact": 51
    }],
    111: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###121","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('preact'), h = _require.h, Component = _require.Component;
      var classNames = require('classnames');
      var shallowEqual = require('is-shallow-equal');
      var FilePreviewAndLink = require('./FilePreviewAndLink');
      var FileProgress = require('./FileProgress');
      var FileInfo = require('./FileInfo');
      var Buttons = require('./Buttons');
      module.exports = (function (_Component) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###32","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(FileItem, _Component);
        function FileItem() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"FileItem","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"FileItem"},');

          return _Component.apply(this, arguments) || this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"FileItem","paramsNumber":0},');

        }
        var _proto = FileItem.prototype;
        _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.shouldComponentUpdate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.shouldComponentUpdate"},');

          return !shallowEqual(this.props, nextProps);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.shouldComponentUpdate"},');

        };
        _proto.componentDidMount = function componentDidMount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.componentDidMount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var file = this.props.file;
          if (!file.preview) {
            this.props.handleRequestThumbnail(file);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.componentDidMount"},');

        };
        _proto.componentWillUnmount = function componentWillUnmount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.componentWillUnmount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var file = this.props.file;
          if (!file.preview) {
            this.props.handleCancelThumbnail(file);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.componentWillUnmount"},');

        };
        _proto.render = function render() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.render###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var file = this.props.file;
          var isProcessing = file.progress.preprocess || file.progress.postprocess;
          var isUploaded = file.progress.uploadComplete && !isProcessing && !file.error;
          var uploadInProgressOrComplete = file.progress.uploadStarted || isProcessing;
          var uploadInProgress = file.progress.uploadStarted && !file.progress.uploadComplete || isProcessing;
          var isPaused = file.isPaused || false;
          var error = file.error || false;
          var showRemoveButton = this.props.individualCancellation ? !isUploaded : !uploadInProgress && !isUploaded;
          if (isUploaded && this.props.showRemoveButtonAfterComplete) {
            showRemoveButton = true;
          }
          var dashboardItemClass = classNames({
            'uppy-u-reset': true,
            'uppy-DashboardItem': true,
            'is-inprogress': uploadInProgress,
            'is-processing': isProcessing,
            'is-complete': isUploaded,
            'is-paused': isPaused,
            'is-error': !!error,
            'is-resumable': this.props.resumableUploads,
            'is-noIndividualCancellation': !this.props.individualCancellation
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.render###2"},');

          return h("div", {
            class: dashboardItemClass,
            id: "uppy_" + file.id,
            role: this.props.role
          }, h("div", {
            class: "uppy-DashboardItem-preview"
          }, h(FilePreviewAndLink, {
            file: file,
            showLinkToFileUploadResult: this.props.showLinkToFileUploadResult
          }), h(FileProgress, {
            file: file,
            error: error,
            isUploaded: isUploaded,
            hideRetryButton: this.props.hideRetryButton,
            hidePauseResumeCancelButtons: this.props.hidePauseResumeCancelButtons,
            showRemoveButtonAfterComplete: this.props.showRemoveButtonAfterComplete,
            resumableUploads: this.props.resumableUploads,
            individualCancellation: this.props.individualCancellation,
            pauseUpload: this.props.pauseUpload,
            cancelUpload: this.props.cancelUpload,
            retryUpload: this.props.retryUpload,
            i18n: this.props.i18n
          })), h("div", {
            class: "uppy-DashboardItem-fileInfoAndButtons"
          }, h(FileInfo, {
            file: file,
            id: this.props.id,
            acquirers: this.props.acquirers,
            containerWidth: this.props.containerWidth,
            i18n: this.props.i18n
          }), h(Buttons, {
            file: file,
            metaFields: this.props.metaFields,
            showLinkToFileUploadResult: this.props.showLinkToFileUploadResult,
            showRemoveButton: showRemoveButton,
            uploadInProgressOrComplete: uploadInProgressOrComplete,
            removeFile: this.props.removeFile,
            toggleFileCard: this.props.toggleFileCard,
            i18n: this.props.i18n,
            log: this.props.log,
            info: this.props.info
          })));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.render###2"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###32"},');

        return FileItem;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###32"},');

      })(Component);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###121"},');

    }, {
      "./Buttons": 106,
      "./FileInfo": 107,
      "./FilePreviewAndLink": 108,
      "./FileProgress": 110,
      "classnames": 9,
      "is-shallow-equal": 40,
      "preact": 51
    }],
    112: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###122","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###7"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###7"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var FileItem = require('./FileItem/index.js');
      var VirtualList = require('./VirtualList');
      var classNames = require('classnames');
      var _require = require('preact'), h = _require.h;
      function chunks(list, size) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"chunks","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var chunked = [];
        var currentChunk = [];
        list.forEach(function (item, i) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"list.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (currentChunk.length < size) {
            currentChunk.push(item);
          } else {
            chunked.push(currentChunk);
            currentChunk = [item];
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"list.forEach"},');

        });
        if (currentChunk.length) chunked.push(currentChunk);
                SRTlib.send('{"type":"FUNCTIONEND","function":"chunks"},');

        return chunked;
                SRTlib.send('{"type":"FUNCTIONEND","function":"chunks","paramsNumber":2},');

      }
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###33","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var noFiles = props.totalFileCount === 0;
        var dashboardFilesClass = classNames('uppy-Dashboard-files', {
          'uppy-Dashboard-files--noFiles': noFiles
        });
        var rowHeight = props.itemsPerRow === 1 ? 71 : 200;
        var fileProps = {
          id: props.id,
          error: props.error,
          i18n: props.i18n,
          log: props.log,
          info: props.info,
          acquirers: props.acquirers,
          resumableUploads: props.resumableUploads,
          individualCancellation: props.individualCancellation,
          hideRetryButton: props.hideRetryButton,
          hidePauseResumeCancelButtons: props.hidePauseResumeCancelButtons,
          showLinkToFileUploadResult: props.showLinkToFileUploadResult,
          showRemoveButtonAfterComplete: props.showRemoveButtonAfterComplete,
          isWide: props.isWide,
          metaFields: props.metaFields,
          retryUpload: props.retryUpload,
          pauseUpload: props.pauseUpload,
          cancelUpload: props.cancelUpload,
          toggleFileCard: props.toggleFileCard,
          removeFile: props.removeFile,
          handleRequestThumbnail: props.handleRequestThumbnail,
          handleCancelThumbnail: props.handleCancelThumbnail
        };
        var rows = chunks(Object.keys(props.files), props.itemsPerRow);
        function renderRow(row) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"renderRow","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"renderRow"},');

          return h("div", {
            role: "presentation",
            key: row[0]
          }, row.map(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.h.row.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.row.map"},');

            return h(FileItem, _extends({
              key: fileID
            }, fileProps, {
              role: "listitem",
              file: props.files[fileID]
            }));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.row.map"},');

          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"renderRow","paramsNumber":1},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###33"},');

        return h(VirtualList, {
          class: dashboardFilesClass,
          role: "list",
          data: rows,
          renderRow: renderRow,
          rowHeight: rowHeight
        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###33"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###122"},');

    }, {
      "./FileItem/index.js": 111,
      "./VirtualList": 116,
      "classnames": 9,
      "preact": 51
    }],
    113: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###123","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var getFileTypeIcon = require('../utils/getFileTypeIcon');
      var _require = require('preact'), h = _require.h;
      module.exports = function FilePreview(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###34","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var file = props.file;
        if (file.preview) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###34"},');

          return h("img", {
            class: "uppy-DashboardItem-previewImg",
            alt: file.name,
            src: file.preview
          });
        }
        var _getFileTypeIcon = getFileTypeIcon(file.type), color = _getFileTypeIcon.color, icon = _getFileTypeIcon.icon;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###34"},');

        return h("div", {
          class: "uppy-DashboardItem-previewIconWrap"
        }, h("span", {
          class: "uppy-DashboardItem-previewIcon",
          style: {
            color: color
          }
        }, icon), h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "uppy-DashboardItem-previewIconBg",
          width: "58",
          height: "76",
          viewBox: "0 0 58 76"
        }, h("rect", {
          fill: "#FFF",
          width: "58",
          height: "76",
          rx: "3",
          "fill-rule": "evenodd"
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###34"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###123"},');

    }, {
      "../utils/getFileTypeIcon": 122,
      "preact": 51
    }],
    114: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###124","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var ignoreEvent = require('../utils/ignoreEvent.js');
      function PickerPanelContent(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"PickerPanelContent","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"PickerPanelContent"},');

        return h("div", {
          class: "uppy-DashboardContent-panel",
          role: "tabpanel",
          "data-uppy-panelType": "PickerPanel",
          id: "uppy-DashboardContent-panel--" + props.activePickerPanel.id,
          onDragOver: ignoreEvent,
          onDragLeave: ignoreEvent,
          onDrop: ignoreEvent,
          onPaste: ignoreEvent
        }, h("div", {
          class: "uppy-DashboardContent-bar"
        }, h("div", {
          class: "uppy-DashboardContent-title",
          role: "heading",
          "aria-level": "1"
        }, props.i18n('importFrom', {
          name: props.activePickerPanel.name
        })), h("button", {
          class: "uppy-DashboardContent-back",
          type: "button",
          onclick: props.hideAllPanels
        }, props.i18n('done'))), h("div", {
          class: "uppy-DashboardContent-panelBody"
        }, props.getPlugin(props.activePickerPanel.id).render(props.state)));
                SRTlib.send('{"type":"FUNCTIONEND","function":"PickerPanelContent","paramsNumber":1},');

      }
      module.exports = PickerPanelContent;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###124"},');

    }, {
      "../utils/ignoreEvent.js": 123,
      "preact": 51
    }],
    115: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###125","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var _require2 = require('./icons'), iconPlus = _require2.iconPlus;
      var uploadStates = {
        STATE_ERROR: 'error',
        STATE_WAITING: 'waiting',
        STATE_PREPROCESSING: 'preprocessing',
        STATE_UPLOADING: 'uploading',
        STATE_POSTPROCESSING: 'postprocessing',
        STATE_COMPLETE: 'complete',
        STATE_PAUSED: 'paused'
      };
      function getUploadingState(isAllErrored, isAllComplete, isAllPaused, files) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getUploadingState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

        if (files === void 0) {
          files = {};
        }
        if (isAllErrored) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getUploadingState"},');

          return uploadStates.STATE_ERROR;
        }
        if (isAllComplete) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getUploadingState"},');

          return uploadStates.STATE_COMPLETE;
        }
        if (isAllPaused) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getUploadingState"},');

          return uploadStates.STATE_PAUSED;
        }
        var state = uploadStates.STATE_WAITING;
        var fileIDs = Object.keys(files);
        for (var i = 0; i < fileIDs.length; i++) {
          var progress = files[fileIDs[i]].progress;
          if (progress.uploadStarted && !progress.uploadComplete) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getUploadingState"},');

            return uploadStates.STATE_UPLOADING;
          }
          if (progress.preprocess && state !== uploadStates.STATE_UPLOADING) {
            state = uploadStates.STATE_PREPROCESSING;
          }
          if (progress.postprocess && state !== uploadStates.STATE_UPLOADING && state !== uploadStates.STATE_PREPROCESSING) {
            state = uploadStates.STATE_POSTPROCESSING;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"getUploadingState"},');

        return state;
                SRTlib.send('{"type":"FUNCTIONEND","function":"getUploadingState","paramsNumber":4},');

      }
      function UploadStatus(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"UploadStatus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var uploadingState = getUploadingState(props.isAllErrored, props.isAllComplete, props.isAllPaused, props.files);
        switch (uploadingState) {
          case 'uploading':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###125"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"UploadStatus"},');

            return props.i18n('uploadingXFiles', {
              smart_count: props.inProgressNotPausedFiles.length
            });
          case 'preprocessing':
          case 'postprocessing':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###125"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"UploadStatus"},');

            return props.i18n('processingXFiles', {
              smart_count: props.processingFiles.length
            });
          case 'paused':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###125"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"UploadStatus"},');

            return props.i18n('uploadPaused');
          case 'waiting':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###125"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"UploadStatus"},');

            return props.i18n('xFilesSelected', {
              smart_count: props.newFiles.length
            });
          case 'complete':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###125"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"UploadStatus"},');

            return props.i18n('uploadComplete');
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"UploadStatus","paramsNumber":1},');

      }
      function PanelTopBar(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"PanelTopBar","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var allowNewUpload = props.allowNewUpload;
        if (allowNewUpload && props.maxNumberOfFiles) {
          allowNewUpload = props.totalFileCount < props.maxNumberOfFiles;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"PanelTopBar"},');

        return h("div", {
          class: "uppy-DashboardContent-bar"
        }, !props.isAllComplete && !props.hideCancelButton ? h("button", {
          class: "uppy-DashboardContent-back",
          type: "button",
          onclick: props.cancelAll
        }, props.i18n('cancel')) : h("div", null), h("div", {
          class: "uppy-DashboardContent-title",
          role: "heading",
          "aria-level": "1"
        }, h(UploadStatus, props)), allowNewUpload ? h("button", {
          class: "uppy-DashboardContent-addMore",
          type: "button",
          "aria-label": props.i18n('addMoreFiles'),
          title: props.i18n('addMoreFiles'),
          onclick: function onclick() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.h.h.onclick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.h.onclick"},');

            return props.toggleAddFilesPanel(true);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h.h.onclick"},');

          }
        }, iconPlus(), h("span", {
          class: "uppy-DashboardContent-addMoreCaption"
        }, props.i18n('addMore'))) : h("div", null));
                SRTlib.send('{"type":"FUNCTIONEND","function":"PanelTopBar","paramsNumber":1},');

      }
      module.exports = PanelTopBar;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###125"},');

    }, {
      "./icons": 117,
      "preact": 51
    }],
    116: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###126","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###8"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###8"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _objectWithoutPropertiesLoose(source, excluded) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_objectWithoutPropertiesLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (source == null) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_objectWithoutPropertiesLoose"},');

          return {};
        }
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i;
        for (i = 0; i < sourceKeys.length; i++) {
          key = sourceKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_objectWithoutPropertiesLoose"},');

        return target;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_objectWithoutPropertiesLoose","paramsNumber":2},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('preact'), h = _require.h, Component = _require.Component;
      var STYLE_INNER = {
        position: 'relative',
        width: '100%',
        minHeight: '100%'
      };
      var STYLE_CONTENT = {
        position: 'absolute',
        top: 0,
        left: 0,
        width: '100%',
        overflow: 'visible'
      };
      var VirtualList = (function (_Component) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.VirtualList","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(VirtualList, _Component);
        function VirtualList(props) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"VirtualList","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this;
          _this = _Component.call(this, props) || this;
          _this.handleResize = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleResize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.resize();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleResize"},');

          };
          _this.handleScroll = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleScroll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.setState({
              offset: _this.base.scrollTop
            });
            if (_this.props.sync) {
              _this.forceUpdate();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleScroll"},');

          };
          _this.focusElement = null;
          _this.state = {
            offset: 0,
            height: 0
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"VirtualList"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"VirtualList","paramsNumber":1},');

        }
        var _proto = VirtualList.prototype;
        _proto.resize = function resize() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.VirtualList._proto.resize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (this.state.height !== this.base.offsetHeight) {
            this.setState({
              height: this.base.offsetHeight
            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.VirtualList._proto.resize"},');

        };
        _proto.componentWillUpdate = function componentWillUpdate() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.VirtualList._proto.componentWillUpdate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (this.base.contains(document.activeElement)) {
            this.focusElement = document.activeElement;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.VirtualList._proto.componentWillUpdate"},');

        };
        _proto.componentDidUpdate = function componentDidUpdate() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.VirtualList._proto.componentDidUpdate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (this.focusElement && this.focusElement.parentNode && document.activeElement !== this.focusElement) {
            this.focusElement.focus();
          }
          this.focusElement = null;
          this.resize();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.VirtualList._proto.componentDidUpdate"},');

        };
        _proto.componentDidMount = function componentDidMount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.VirtualList._proto.componentDidMount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.resize();
          window.addEventListener('resize', this.handleResize);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.VirtualList._proto.componentDidMount"},');

        };
        _proto.componentWillUnmount = function componentWillUnmount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.VirtualList._proto.componentWillUnmount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          window.removeEventListener('resize', this.handleResize);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.VirtualList._proto.componentWillUnmount"},');

        };
        _proto.render = function render(_ref) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.VirtualList._proto.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var data = _ref.data, rowHeight = _ref.rowHeight, renderRow = _ref.renderRow, _ref$overscanCount = _ref.overscanCount, overscanCount = _ref$overscanCount === void 0 ? 10 : _ref$overscanCount, sync = _ref.sync, props = _objectWithoutPropertiesLoose(_ref, ["data", "rowHeight", "renderRow", "overscanCount", "sync"]);
          var _this$state = this.state, offset = _this$state.offset, height = _this$state.height;
          var start = Math.floor(offset / rowHeight);
          var visibleRowCount = Math.floor(height / rowHeight);
          if (overscanCount) {
            start = Math.max(0, start - start % overscanCount);
            visibleRowCount += overscanCount;
          }
          var end = start + visibleRowCount + 4;
          var selection = data.slice(start, end);
          var styleInner = _extends({}, STYLE_INNER, {
            height: data.length * rowHeight
          });
          var styleContent = _extends({}, STYLE_CONTENT, {
            top: start * rowHeight
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.VirtualList._proto.render"},');

          return h("div", _extends({
            onScroll: this.handleScroll
          }, props), h("div", {
            role: "presentation",
            style: styleInner
          }, h("div", {
            role: "presentation",
            style: styleContent
          }, selection.map(renderRow))));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.VirtualList._proto.render"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.VirtualList"},');

        return VirtualList;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.VirtualList"},');

      })(Component);
      module.exports = VirtualList;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###126"},');

    }, {
      "preact": 51
    }],
    117: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###127","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      function defaultPickerIcon() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"defaultPickerIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"defaultPickerIcon"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "30",
          height: "30",
          viewBox: "0 0 30 30"
        }, h("path", {
          d: "M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"defaultPickerIcon","paramsNumber":0},');

      }
      function iconCopy() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconCopy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconCopy"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "51",
          height: "51",
          viewBox: "0 0 51 51"
        }, h("path", {
          d: "M17.21 45.765a5.394 5.394 0 0 1-7.62 0l-4.12-4.122a5.393 5.393 0 0 1 0-7.618l6.774-6.775-2.404-2.404-6.775 6.776c-3.424 3.427-3.424 9 0 12.426l4.12 4.123a8.766 8.766 0 0 0 6.216 2.57c2.25 0 4.5-.858 6.214-2.57l13.55-13.552a8.72 8.72 0 0 0 2.575-6.213 8.73 8.73 0 0 0-2.575-6.213l-4.123-4.12-2.404 2.404 4.123 4.12a5.352 5.352 0 0 1 1.58 3.81c0 1.438-.562 2.79-1.58 3.808l-13.55 13.55z"
        }), h("path", {
          d: "M44.256 2.858A8.728 8.728 0 0 0 38.043.283h-.002a8.73 8.73 0 0 0-6.212 2.574l-13.55 13.55a8.725 8.725 0 0 0-2.575 6.214 8.73 8.73 0 0 0 2.574 6.216l4.12 4.12 2.405-2.403-4.12-4.12a5.357 5.357 0 0 1-1.58-3.812c0-1.437.562-2.79 1.58-3.808l13.55-13.55a5.348 5.348 0 0 1 3.81-1.58c1.44 0 2.792.562 3.81 1.58l4.12 4.12c2.1 2.1 2.1 5.518 0 7.617L39.2 23.775l2.404 2.404 6.775-6.777c3.426-3.427 3.426-9 0-12.426l-4.12-4.12z"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconCopy","paramsNumber":0},');

      }
      function iconResume() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconResume","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconResume"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "25",
          height: "25",
          viewBox: "0 0 44 44"
        }, h("polygon", {
          class: "play",
          transform: "translate(6, 5.5)",
          points: "13 21.6666667 13 11 21 16.3333333"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconResume","paramsNumber":0},');

      }
      function iconPause() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconPause","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconPause"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "25px",
          height: "25px",
          viewBox: "0 0 44 44"
        }, h("g", {
          transform: "translate(18, 17)",
          class: "pause"
        }, h("rect", {
          x: "0",
          y: "0",
          width: "2",
          height: "10",
          rx: "0"
        }), h("rect", {
          x: "6",
          y: "0",
          width: "2",
          height: "10",
          rx: "0"
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconPause","paramsNumber":0},');

      }
      function localIcon() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"localIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"localIcon"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "32",
          height: "32",
          viewBox: "0 0 32 32",
          xmlns: "http://www.w3.org/2000/svg"
        }, h("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, h("rect", {
          fill: "#5B5B5B",
          width: "32",
          height: "32",
          rx: "16"
        }), h("g", {
          fill: "#FFF",
          "fill-rule": "nonzero"
        }, h("path", {
          d: "M11.31 12.504a.185.185 0 0 0 .167.104h2.868v2.324c0 .898.741 1.328 1.655 1.328.913 0 1.653-.43 1.653-1.328v-2.324h2.868c.073 0 .137-.04.169-.104a.18.18 0 0 0-.027-.192l-4.524-5.25a.187.187 0 0 0-.28 0l-4.52 5.25a.179.179 0 0 0-.029.192z"
        }), h("path", {
          d: "M22.4 10.018c-.13-.45-.32-.703-.716-.703h-2.877l.603.699h2.34l1.21 6.541h-4.263v1.617h-5.296v-1.615H9.039l1.577-6.542h1.973l.603-.7h-2.877c-.396 0-.628.273-.717.703L8 16.752v4.185c0 .486.4.878.895.878h14.21a.887.887 0 0 0 .895-.878v-4.185l-1.6-6.734z"
        }))));
                SRTlib.send('{"type":"FUNCTIONEND","function":"localIcon","paramsNumber":0},');

      }
      function iconMyDevice() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconMyDevice","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconMyDevice"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "32",
          height: "32",
          viewBox: "0 0 32 32",
          xmlns: "http://www.w3.org/2000/svg"
        }, h("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, h("rect", {
          width: "32",
          height: "32",
          rx: "16",
          fill: "#2275D7"
        }), h("path", {
          d: "M21.973 21.152H9.863l-1.108-5.087h14.464l-1.246 5.087zM9.935 11.37h3.958l.886 1.444a.673.673 0 0 0 .585.316h6.506v1.37H9.935v-3.13zm14.898 3.44a.793.793 0 0 0-.616-.31h-.978v-2.126c0-.379-.275-.613-.653-.613H15.75l-.886-1.445a.673.673 0 0 0-.585-.316H9.232c-.378 0-.667.209-.667.587V14.5h-.782a.793.793 0 0 0-.61.303.795.795 0 0 0-.155.663l1.45 6.633c.078.36.396.618.764.618h13.354c.36 0 .674-.246.76-.595l1.631-6.636a.795.795 0 0 0-.144-.675z",
          fill: "#FFF"
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconMyDevice","paramsNumber":0},');

      }
      function iconRetry() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconRetry","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconRetry"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon retry",
          width: "28",
          height: "31",
          viewBox: "0 0 16 19"
        }, h("path", {
          d: "M16 11a8 8 0 1 1-8-8v2a6 6 0 1 0 6 6h2z"
        }), h("path", {
          d: "M7.9 3H10v2H7.9z"
        }), h("path", {
          d: "M8.536.5l3.535 3.536-1.414 1.414L7.12 1.914z"
        }), h("path", {
          d: "M10.657 2.621l1.414 1.415L8.536 7.57 7.12 6.157z"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconRetry","paramsNumber":0},');

      }
      function checkIcon() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"checkIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"checkIcon"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon UppyIcon-check",
          width: "13",
          height: "9",
          viewBox: "0 0 13 9"
        }, h("polygon", {
          points: "5 7.293 1.354 3.647 0.646 4.354 5 8.707 12.354 1.354 11.646 0.647"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"checkIcon","paramsNumber":0},');

      }
      function iconImage() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconImage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconImage"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "25",
          height: "25",
          viewBox: "0 0 25 25",
          xmlns: "http://www.w3.org/2000/svg"
        }, h("g", {
          fill: "#686DE0",
          "fill-rule": "evenodd"
        }, h("path", {
          d: "M5 7v10h15V7H5zm0-1h15a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1z",
          "fill-rule": "nonzero"
        }), h("path", {
          d: "M6.35 17.172l4.994-5.026a.5.5 0 0 1 .707 0l2.16 2.16 3.505-3.505a.5.5 0 0 1 .707 0l2.336 2.31-.707.72-1.983-1.97-3.505 3.505a.5.5 0 0 1-.707 0l-2.16-2.159-3.938 3.939-1.409.026z",
          "fill-rule": "nonzero"
        }), h("circle", {
          cx: "7.5",
          cy: "9.5",
          r: "1.5"
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconImage","paramsNumber":0},');

      }
      function iconAudio() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconAudio","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconAudio"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "25",
          height: "25",
          viewBox: "0 0 25 25"
        }, h("path", {
          d: "M9.5 18.64c0 1.14-1.145 2-2.5 2s-2.5-.86-2.5-2c0-1.14 1.145-2 2.5-2 .557 0 1.079.145 1.5.396V7.25a.5.5 0 0 1 .379-.485l9-2.25A.5.5 0 0 1 18.5 5v11.64c0 1.14-1.145 2-2.5 2s-2.5-.86-2.5-2c0-1.14 1.145-2 2.5-2 .557 0 1.079.145 1.5.396V8.67l-8 2v7.97zm8-11v-2l-8 2v2l8-2zM7 19.64c.855 0 1.5-.484 1.5-1s-.645-1-1.5-1-1.5.484-1.5 1 .645 1 1.5 1zm9-2c.855 0 1.5-.484 1.5-1s-.645-1-1.5-1-1.5.484-1.5 1 .645 1 1.5 1z",
          fill: "#049BCF",
          "fill-rule": "nonzero"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconAudio","paramsNumber":0},');

      }
      function iconVideo() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconVideo","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconVideo"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "25",
          height: "25",
          viewBox: "0 0 25 25"
        }, h("path", {
          d: "M16 11.834l4.486-2.691A1 1 0 0 1 22 10v6a1 1 0 0 1-1.514.857L16 14.167V17a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v2.834zM15 9H5v8h10V9zm1 4l5 3v-6l-5 3z",
          fill: "#19AF67",
          "fill-rule": "nonzero"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconVideo","paramsNumber":0},');

      }
      function iconPDF() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconPDF","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconPDF"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "25",
          height: "25",
          viewBox: "0 0 25 25"
        }, h("path", {
          d: "M9.766 8.295c-.691-1.843-.539-3.401.747-3.726 1.643-.414 2.505.938 2.39 3.299-.039.79-.194 1.662-.537 3.148.324.49.66.967 1.055 1.51.17.231.382.488.629.757 1.866-.128 3.653.114 4.918.655 1.487.635 2.192 1.685 1.614 2.84-.566 1.133-1.839 1.084-3.416.249-1.141-.604-2.457-1.634-3.51-2.707a13.467 13.467 0 0 0-2.238.426c-1.392 4.051-4.534 6.453-5.707 4.572-.986-1.58 1.38-4.206 4.914-5.375.097-.322.185-.656.264-1.001.08-.353.306-1.31.407-1.737-.678-1.059-1.2-2.031-1.53-2.91zm2.098 4.87c-.033.144-.068.287-.104.427l.033-.01-.012.038a14.065 14.065 0 0 1 1.02-.197l-.032-.033.052-.004a7.902 7.902 0 0 1-.208-.271c-.197-.27-.38-.526-.555-.775l-.006.028-.002-.003c-.076.323-.148.632-.186.8zm5.77 2.978c1.143.605 1.832.632 2.054.187.26-.519-.087-1.034-1.113-1.473-.911-.39-2.175-.608-3.55-.608.845.766 1.787 1.459 2.609 1.894zM6.559 18.789c.14.223.693.16 1.425-.413.827-.648 1.61-1.747 2.208-3.206-2.563 1.064-4.102 2.867-3.633 3.62zm5.345-10.97c.088-1.793-.351-2.48-1.146-2.28-.473.119-.564 1.05-.056 2.405.213.566.52 1.188.908 1.859.18-.858.268-1.453.294-1.984z",
          fill: "#E2514A",
          "fill-rule": "nonzero"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconPDF","paramsNumber":0},');

      }
      function iconArchive() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconArchive","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconArchive"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "25",
          height: "25",
          viewBox: "0 0 25 25",
          xmlns: "http://www.w3.org/2000/svg"
        }, h("path", {
          d: "M10.45 2.05h1.05a.5.5 0 0 1 .5.5v.024a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5V2.55a.5.5 0 0 1 .5-.5zm2.05 1.024h1.05a.5.5 0 0 1 .5.5V3.6a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5v-.001zM10.45 0h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5V.5a.5.5 0 0 1 .5-.5zm2.05 1.025h1.05a.5.5 0 0 1 .5.5v.024a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.024a.5.5 0 0 1 .5-.5zm-2.05 3.074h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5zm2.05 1.025h1.05a.5.5 0 0 1 .5.5v.024a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.024a.5.5 0 0 1 .5-.5zm-2.05 1.024h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5zm2.05 1.025h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5zm-2.05 1.025h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5zm2.05 1.025h1.05a.5.5 0 0 1 .5.5v.024a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.024a.5.5 0 0 1 .5-.5zm-1.656 3.074l-.82 5.946c.52.302 1.174.458 1.976.458.803 0 1.455-.156 1.975-.458l-.82-5.946h-2.311zm0-1.025h2.312c.512 0 .946.378 1.015.885l.82 5.946c.056.412-.142.817-.501 1.026-.686.398-1.515.597-2.49.597-.974 0-1.804-.199-2.49-.597a1.025 1.025 0 0 1-.5-1.026l.819-5.946c.07-.507.503-.885 1.015-.885zm.545 6.6a.5.5 0 0 1-.397-.561l.143-.999a.5.5 0 0 1 .495-.429h.74a.5.5 0 0 1 .495.43l.143.998a.5.5 0 0 1-.397.561c-.404.08-.819.08-1.222 0z",
          fill: "#00C469",
          "fill-rule": "nonzero"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconArchive","paramsNumber":0},');

      }
      function iconFile() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconFile"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "25",
          height: "25",
          viewBox: "0 0 25 25"
        }, h("g", {
          fill: "#A7AFB7",
          "fill-rule": "nonzero"
        }, h("path", {
          d: "M5.5 22a.5.5 0 0 1-.5-.5v-18a.5.5 0 0 1 .5-.5h10.719a.5.5 0 0 1 .367.16l3.281 3.556a.5.5 0 0 1 .133.339V21.5a.5.5 0 0 1-.5.5h-14zm.5-1h13V7.25L16 4H6v17z"
        }), h("path", {
          d: "M15 4v3a1 1 0 0 0 1 1h3V7h-3V4h-1z"
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconFile","paramsNumber":0},');

      }
      function iconText() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconText","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconText"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "25",
          height: "25",
          viewBox: "0 0 25 25"
        }, h("path", {
          d: "M4.5 7h13a.5.5 0 1 1 0 1h-13a.5.5 0 0 1 0-1zm0 3h15a.5.5 0 1 1 0 1h-15a.5.5 0 1 1 0-1zm0 3h15a.5.5 0 1 1 0 1h-15a.5.5 0 1 1 0-1zm0 3h10a.5.5 0 1 1 0 1h-10a.5.5 0 1 1 0-1z",
          fill: "#5A5E69",
          "fill-rule": "nonzero"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconText","paramsNumber":0},');

      }
      function iconCopyLink() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconCopyLink","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconCopyLink"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "14",
          height: "14",
          viewBox: "0 0 14 12"
        }, h("path", {
          d: "M7.94 7.703a2.613 2.613 0 0 1-.626 2.681l-.852.851a2.597 2.597 0 0 1-1.849.766A2.616 2.616 0 0 1 2.764 7.54l.852-.852a2.596 2.596 0 0 1 2.69-.625L5.267 7.099a1.44 1.44 0 0 0-.833.407l-.852.851a1.458 1.458 0 0 0 1.03 2.486c.39 0 .755-.152 1.03-.426l.852-.852c.231-.231.363-.522.406-.824l1.04-1.038zm4.295-5.937A2.596 2.596 0 0 0 10.387 1c-.698 0-1.355.272-1.849.766l-.852.851a2.614 2.614 0 0 0-.624 2.688l1.036-1.036c.041-.304.173-.6.407-.833l.852-.852c.275-.275.64-.426 1.03-.426a1.458 1.458 0 0 1 1.03 2.486l-.852.851a1.442 1.442 0 0 1-.824.406l-1.04 1.04a2.596 2.596 0 0 0 2.683-.628l.851-.85a2.616 2.616 0 0 0 0-3.697zm-6.88 6.883a.577.577 0 0 0 .82 0l3.474-3.474a.579.579 0 1 0-.819-.82L5.355 7.83a.579.579 0 0 0 0 .819z"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconCopyLink","paramsNumber":0},');

      }
      function iconPencil() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconPencil","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconPencil"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "14",
          height: "14",
          viewBox: "0 0 14 14"
        }, h("g", {
          "fill-rule": "evenodd"
        }, h("path", {
          d: "M1.5 10.793h2.793A1 1 0 0 0 5 10.5L11.5 4a1 1 0 0 0 0-1.414L9.707.793a1 1 0 0 0-1.414 0l-6.5 6.5A1 1 0 0 0 1.5 8v2.793zm1-1V8L9 1.5l1.793 1.793-6.5 6.5H2.5z",
          "fill-rule": "nonzero"
        }), h("rect", {
          x: "1",
          y: "12.293",
          width: "11",
          height: "1",
          rx: ".5"
        }), h("path", {
          "fill-rule": "nonzero",
          d: "M6.793 2.5L9.5 5.207l.707-.707L7.5 1.793z"
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconPencil","paramsNumber":0},');

      }
      function iconCross() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconCross","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconCross"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "18",
          height: "18",
          viewBox: "0 0 18 18"
        }, h("path", {
          d: "M9 0C4.034 0 0 4.034 0 9s4.034 9 9 9 9-4.034 9-9-4.034-9-9-9z"
        }), h("path", {
          fill: "#FFF",
          d: "M13 12.222l-.778.778L9 9.778 5.778 13 5 12.222 8.222 9 5 5.778 5.778 5 9 8.222 12.222 5l.778.778L9.778 9z"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconCross","paramsNumber":0},');

      }
      function iconPlus() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"iconPlus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"iconPlus"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "15",
          height: "15",
          viewBox: "0 0 15 15"
        }, h("path", {
          d: "M8 6.5h6a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5H8v6a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V8h-6a.5.5 0 0 1-.5-.5V7a.5.5 0 0 1 .5-.5h6v-6A.5.5 0 0 1 7 0h.5a.5.5 0 0 1 .5.5v6z"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"iconPlus","paramsNumber":0},');

      }
      module.exports = {
        defaultPickerIcon: defaultPickerIcon,
        iconCopy: iconCopy,
        iconResume: iconResume,
        iconPause: iconPause,
        iconRetry: iconRetry,
        localIcon: localIcon,
        iconMyDevice: iconMyDevice,
        checkIcon: checkIcon,
        iconImage: iconImage,
        iconAudio: iconAudio,
        iconVideo: iconVideo,
        iconPDF: iconPDF,
        iconArchive: iconArchive,
        iconFile: iconFile,
        iconText: iconText,
        iconCopyLink: iconCopyLink,
        iconPencil: iconPencil,
        iconCross: iconCross,
        iconPlus: iconPlus
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###127"},');

    }, {
      "preact": 51
    }],
    118: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###128","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###9"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###9"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var Translator = require('@uppy/utils/lib/Translator');
      var DashboardUI = require('./components/Dashboard');
      var StatusBar = require('@uppy/status-bar');
      var Informer = require('@uppy/informer');
      var ThumbnailGenerator = require('@uppy/thumbnail-generator');
      var findAllDOMElements = require('@uppy/utils/lib/findAllDOMElements');
      var toArray = require('@uppy/utils/lib/toArray');
      var getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles');
      var trapFocus = require('./utils/trapFocus');
      var cuid = require('cuid');
      var ResizeObserver = require('resize-observer-polyfill').default || require('resize-observer-polyfill');
      var _require2 = require('./components/icons'), defaultPickerIcon = _require2.defaultPickerIcon;
      var createSuperFocus = require('./utils/createSuperFocus');
      var memoize = require('memoize-one').default || require('memoize-one');
      var TAB_KEY = 9;
      var ESC_KEY = 27;
      function createPromise() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createPromise","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var o = {};
        o.promise = new Promise(function (resolve, reject) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"o.promise.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          o.resolve = resolve;
          o.reject = reject;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"o.promise.NewExpression"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"createPromise"},');

        return o;
                SRTlib.send('{"type":"FUNCTIONEND","function":"createPromise","paramsNumber":0},');

      }
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Dashboard, _Plugin);
        function Dashboard(uppy, _opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Dashboard","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, _opts) || this;
          _this.setOptions = function (newOpts) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.setOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _Plugin.prototype.setOptions.call(_assertThisInitialized(_this), newOpts);
            _this.i18nInit();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.setOptions"},');

          };
          _this.i18nInit = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.i18nInit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.translator = new Translator([_this.defaultLocale, _this.uppy.locale, _this.opts.locale]);
            _this.i18n = _this.translator.translate.bind(_this.translator);
            _this.i18nArray = _this.translator.translateArray.bind(_this.translator);
            _this.setPluginState();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.i18nInit"},');

          };
          _this.removeTarget = function (plugin) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.removeTarget","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var pluginState = _this.getPluginState();
            var newTargets = pluginState.targets.filter(function (target) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.removeTarget.newTargets.pluginState.targets.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.removeTarget.newTargets.pluginState.targets.filter"},');

              return target.id !== plugin.id;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.removeTarget.newTargets.pluginState.targets.filter"},');

            });
            _this.setPluginState({
              targets: newTargets
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.removeTarget"},');

          };
          _this.addTarget = function (plugin) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.addTarget","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var callerPluginId = plugin.id || plugin.constructor.name;
            var callerPluginName = plugin.title || callerPluginId;
            var callerPluginType = plugin.type;
            if (callerPluginType !== 'acquirer' && callerPluginType !== 'progressindicator' && callerPluginType !== 'presenter') {
              var msg = 'Dashboard: Modal can only be used by plugins of types: acquirer, progressindicator, presenter';
              _this.uppy.log(msg, 'error');
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.addTarget"},');

              return;
            }
            var target = {
              id: callerPluginId,
              name: callerPluginName,
              type: callerPluginType
            };
            var state = _this.getPluginState();
            var newTargets = state.targets.slice();
            newTargets.push(target);
            _this.setPluginState({
              targets: newTargets
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.addTarget"},');

            return _this.el;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.addTarget"},');

          };
          _this.hideAllPanels = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.hideAllPanels","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var update = {
              activePickerPanel: false,
              showAddFilesPanel: false,
              activeOverlayType: null
            };
            var current = _this.getPluginState();
            if (current.activePickerPanel === update.activePickerPanel && current.showAddFilesPanel === update.showAddFilesPanel && current.activeOverlayType === update.activeOverlayType) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.hideAllPanels"},');

              return;
            }
            _this.setPluginState(update);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.hideAllPanels"},');

          };
          _this.showPanel = function (id) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.showPanel","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _this$getPluginState = _this.getPluginState(), targets = _this$getPluginState.targets;
            var activePickerPanel = targets.filter(function (target) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.showPanel.activePickerPanel.targets.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.showPanel.activePickerPanel.targets.filter"},');

              return target.type === 'acquirer' && target.id === id;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.showPanel.activePickerPanel.targets.filter"},');

            })[0];
            _this.setPluginState({
              activePickerPanel: activePickerPanel,
              activeOverlayType: 'PickerPanel'
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.showPanel"},');

          };
          _this.openModal = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.openModal","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _createPromise = createPromise(), promise = _createPromise.promise, resolve = _createPromise.resolve;
            _this.savedScrollPosition = window.pageYOffset;
            _this.savedActiveElement = document.activeElement;
            if (_this.opts.disablePageScrollWhenModalOpen) {
              document.body.classList.add('uppy-Dashboard-isFixed');
            }
            if (_this.opts.animateOpenClose && _this.getPluginState().isClosing) {
              var handler = function handler() {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"handler","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                _this.setPluginState({
                  isHidden: false
                });
                _this.el.removeEventListener('animationend', handler, false);
                resolve();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"handler"},');

              };
              _this.el.addEventListener('animationend', handler, false);
            } else {
              _this.setPluginState({
                isHidden: false
              });
              resolve();
            }
            if (_this.opts.browserBackButtonClose) {
              _this.updateBrowserHistory();
            }
            document.addEventListener('keydown', _this.handleKeyDownInModal);
            _this.uppy.emit('dashboard:modal-open');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.openModal"},');

            return promise;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.openModal"},');

          };
          _this.closeModal = function (opts) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.closeModal","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (opts === void 0) {
              opts = {};
            }
            var _opts2 = opts, _opts2$manualClose = _opts2.manualClose, manualClose = _opts2$manualClose === void 0 ? true : _opts2$manualClose;
            var _this$getPluginState2 = _this.getPluginState(), isHidden = _this$getPluginState2.isHidden, isClosing = _this$getPluginState2.isClosing;
            if (isHidden || isClosing) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.closeModal"},');

              return;
            }
            var _createPromise2 = createPromise(), promise = _createPromise2.promise, resolve = _createPromise2.resolve;
            if (_this.opts.disablePageScrollWhenModalOpen) {
              document.body.classList.remove('uppy-Dashboard-isFixed');
            }
            if (_this.opts.animateOpenClose) {
              _this.setPluginState({
                isClosing: true
              });
              var handler = function handler() {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"handler","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                _this.setPluginState({
                  isHidden: true,
                  isClosing: false
                });
                _this.superFocus.cancel();
                _this.savedActiveElement.focus();
                _this.el.removeEventListener('animationend', handler, false);
                resolve();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"handler"},');

              };
              _this.el.addEventListener('animationend', handler, false);
            } else {
              _this.setPluginState({
                isHidden: true
              });
              _this.superFocus.cancel();
              _this.savedActiveElement.focus();
              resolve();
            }
            document.removeEventListener('keydown', _this.handleKeyDownInModal);
            if (manualClose) {
              if (_this.opts.browserBackButtonClose) {
                if (history.state && history.state[_this.modalName]) {
                  history.go(-1);
                }
              }
            }
            _this.uppy.emit('dashboard:modal-closed');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.closeModal"},');

            return promise;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.closeModal"},');

          };
          _this.isModalOpen = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.isModalOpen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.isModalOpen"},');

            return !_this.getPluginState().isHidden || false;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.isModalOpen"},');

          };
          _this.requestCloseModal = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.requestCloseModal","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (_this.opts.onRequestCloseModal) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.requestCloseModal"},');

              return _this.opts.onRequestCloseModal();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.requestCloseModal"},');

            return _this.closeModal();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.requestCloseModal"},');

          };
          _this.setDarkModeCapability = function (isDarkModeOn) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.setDarkModeCapability","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _this$uppy$getState = _this.uppy.getState(), capabilities = _this$uppy$getState.capabilities;
            _this.uppy.setState({
              capabilities: _extends({}, capabilities, {
                darkMode: isDarkModeOn
              })
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.setDarkModeCapability"},');

          };
          _this.handleSystemDarkModeChange = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleSystemDarkModeChange","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var isDarkModeOnNow = event.matches;
            _this.uppy.log("[Dashboard] Dark mode is " + (isDarkModeOnNow ? 'on' : 'off'));
            _this.setDarkModeCapability(isDarkModeOnNow);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleSystemDarkModeChange"},');

          };
          _this.toggleFileCard = function (fileId) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.toggleFileCard","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (fileId) {
              _this.uppy.emit('dashboard:file-edit-start');
            } else {
              _this.uppy.emit('dashboard:file-edit-complete');
            }
            _this.setPluginState({
              fileCardFor: fileId || null,
              activeOverlayType: fileId ? 'FileCard' : null
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.toggleFileCard"},');

          };
          _this.toggleAddFilesPanel = function (show) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.toggleAddFilesPanel","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this.setPluginState({
              showAddFilesPanel: show,
              activeOverlayType: show ? 'AddFiles' : null
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.toggleAddFilesPanel"},');

          };
          _this.addFiles = function (files) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.addFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var descriptors = files.map(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.addFiles.descriptors.files.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.addFiles.descriptors.files.map"},');

              return {
                source: _this.id,
                name: file.name,
                type: file.type,
                data: file,
                meta: {
                  relativePath: file.relativePath || null
                }
              };
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.addFiles.descriptors.files.map"},');

            });
            try {
              _this.uppy.addFiles(descriptors);
            } catch (err) {
              _this.uppy.log(err);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.addFiles"},');

          };
          _this.startListeningToResize = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.startListeningToResize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.resizeObserver = new ResizeObserver(function (entries, observer) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.startListeningToResize._this.resizeObserver.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var uppyDashboardInnerEl = entries[0];
              var _uppyDashboardInnerEl = uppyDashboardInnerEl.contentRect, width = _uppyDashboardInnerEl.width, height = _uppyDashboardInnerEl.height;
              _this.uppy.log("[Dashboard] resized: " + width + " / " + height, 'debug');
              _this.setPluginState({
                containerWidth: width,
                containerHeight: height,
                areInsidesReadyToBeVisible: true
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.startListeningToResize._this.resizeObserver.NewExpression"},');

            });
            _this.resizeObserver.observe(_this.el.querySelector('.uppy-Dashboard-inner'));
            _this.makeDashboardInsidesVisibleAnywayTimeout = setTimeout(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.startListeningToResize._this.makeDashboardInsidesVisibleAnywayTimeout.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var pluginState = _this.getPluginState();
              var isModalAndClosed = !_this.opts.inline && pluginState.isHidden;
              if (!pluginState.areInsidesReadyToBeVisible && !isModalAndClosed) {
                _this.uppy.log("[Dashboard] resize event didn't fire on time: defaulted to mobile layout", 'debug');
                _this.setPluginState({
                  areInsidesReadyToBeVisible: true
                });
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.startListeningToResize._this.makeDashboardInsidesVisibleAnywayTimeout.setTimeout"},');

            }, 1000);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.startListeningToResize"},');

          };
          _this.stopListeningToResize = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.stopListeningToResize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.resizeObserver.disconnect();
            clearTimeout(_this.makeDashboardInsidesVisibleAnywayTimeout);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.stopListeningToResize"},');

          };
          _this.recordIfFocusedOnUppyRecently = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.recordIfFocusedOnUppyRecently","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (_this.el.contains(event.target)) {
              _this.ifFocusedOnUppyRecently = true;
            } else {
              _this.ifFocusedOnUppyRecently = false;
              _this.superFocus.cancel();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.recordIfFocusedOnUppyRecently"},');

          };
          _this.updateBrowserHistory = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.updateBrowserHistory","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (!history.state || !history.state[_this.modalName]) {
              var _extends2;
              history.pushState(_extends({}, history.state, (_extends2 = {}, _extends2[_this.modalName] = true, _extends2)), '');
            }
            window.addEventListener('popstate', _this.handlePopState, false);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.updateBrowserHistory"},');

          };
          _this.handlePopState = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handlePopState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (_this.isModalOpen() && (!event.state || !event.state[_this.modalName])) {
              _this.closeModal({
                manualClose: false
              });
            }
            if (!_this.isModalOpen() && event.state && event.state[_this.modalName]) {
              history.go(-1);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handlePopState"},');

          };
          _this.handleKeyDownInModal = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleKeyDownInModal","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (event.keyCode === ESC_KEY) _this.requestCloseModal(event);
            if (event.keyCode === TAB_KEY) trapFocus.forModal(event, _this.getPluginState().activeOverlayType, _this.el);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleKeyDownInModal"},');

          };
          _this.handleClickOutside = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleClickOutside","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (_this.opts.closeModalOnClickOutside) _this.requestCloseModal();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleClickOutside"},');

          };
          _this.handlePaste = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handlePaste","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this.uppy.iteratePlugins(function (plugin) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handlePaste._this.uppy.iteratePlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (plugin.type === 'acquirer') {
                plugin.handleRootPaste && plugin.handleRootPaste(event);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handlePaste._this.uppy.iteratePlugins"},');

            });
            var files = toArray(event.clipboardData.files);
            _this.addFiles(files);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handlePaste"},');

          };
          _this.handleInputChange = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleInputChange","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            event.preventDefault();
            var files = toArray(event.target.files);
            _this.addFiles(files);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleInputChange"},');

          };
          _this.handleDragOver = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleDragOver","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            event.preventDefault();
            event.stopPropagation();
            event.dataTransfer.dropEffect = 'copy';
            clearTimeout(_this.removeDragOverClassTimeout);
            _this.setPluginState({
              isDraggingOver: true
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleDragOver"},');

          };
          _this.handleDragLeave = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleDragLeave","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            event.preventDefault();
            event.stopPropagation();
            clearTimeout(_this.removeDragOverClassTimeout);
            _this.removeDragOverClassTimeout = setTimeout(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleDragLeave._this.removeDragOverClassTimeout.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              _this.setPluginState({
                isDraggingOver: false
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleDragLeave._this.removeDragOverClassTimeout.setTimeout"},');

            }, 50);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleDragLeave"},');

          };
          _this.handleDrop = function (event, dropCategory) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleDrop","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            event.preventDefault();
            event.stopPropagation();
            clearTimeout(_this.removeDragOverClassTimeout);
            _this.setPluginState({
              isDraggingOver: false
            });
            _this.uppy.iteratePlugins(function (plugin) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleDrop._this.uppy.iteratePlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (plugin.type === 'acquirer') {
                plugin.handleRootDrop && plugin.handleRootDrop(event);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleDrop._this.uppy.iteratePlugins"},');

            });
            var executedDropErrorOnce = false;
            var logDropError = function logDropError(error) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"logDropError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this.uppy.log(error, 'error');
              if (!executedDropErrorOnce) {
                _this.uppy.info(error.message, 'error');
                executedDropErrorOnce = true;
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"logDropError"},');

            };
            getDroppedFiles(event.dataTransfer, {
              logDropError: logDropError
            }).then(function (files) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleDrop.getDroppedFiles.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (files.length > 0) {
                _this.uppy.log('[Dashboard] Files were dropped');
                _this.addFiles(files);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleDrop.getDroppedFiles.then"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleDrop"},');

          };
          _this.handleRequestThumbnail = function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleRequestThumbnail","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (!_this.opts.waitForThumbnailsBeforeUpload) {
              _this.uppy.emit('thumbnail:request', file);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleRequestThumbnail"},');

          };
          _this.handleCancelThumbnail = function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleCancelThumbnail","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (!_this.opts.waitForThumbnailsBeforeUpload) {
              _this.uppy.emit('thumbnail:cancel', file);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleCancelThumbnail"},');

          };
          _this.handleKeyDownInInline = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleKeyDownInInline","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (event.keyCode === TAB_KEY) trapFocus.forInline(event, _this.getPluginState().activeOverlayType, _this.el);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleKeyDownInInline"},');

          };
          _this.handlePasteOnBody = function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handlePasteOnBody","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var isFocusInOverlay = _this.el.contains(document.activeElement);
            if (isFocusInOverlay) {
              _this.handlePaste(event);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handlePasteOnBody"},');

          };
          _this.handleComplete = function (_ref) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.handleComplete","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var failed = _ref.failed, uploadID = _ref.uploadID;
            if (_this.opts.closeAfterFinish && failed.length === 0) {
              _this.requestCloseModal();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.handleComplete"},');

          };
          _this.initEvents = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.initEvents","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (_this.opts.trigger && !_this.opts.inline) {
              var showModalTrigger = findAllDOMElements(_this.opts.trigger);
              if (showModalTrigger) {
                showModalTrigger.forEach(function (trigger) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.initEvents.showModalTrigger.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"_this.initEvents.showModalTrigger.forEach"},');

                  return trigger.addEventListener('click', _this.openModal);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"_this.initEvents.showModalTrigger.forEach"},');

                });
              } else {
                _this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options, unless you are planning to call `dashboard.openModal()` method yourself', 'warning');
              }
            }
            _this.startListeningToResize();
            document.addEventListener('paste', _this.handlePasteOnBody);
            _this.uppy.on('plugin-remove', _this.removeTarget);
            _this.uppy.on('file-added', _this.hideAllPanels);
            _this.uppy.on('dashboard:modal-closed', _this.hideAllPanels);
            _this.uppy.on('complete', _this.handleComplete);
            document.addEventListener('focus', _this.recordIfFocusedOnUppyRecently, true);
            document.addEventListener('click', _this.recordIfFocusedOnUppyRecently, true);
            if (_this.opts.inline) {
              _this.el.addEventListener('keydown', _this.handleKeyDownInInline);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.initEvents"},');

          };
          _this.removeEvents = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.removeEvents","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var showModalTrigger = findAllDOMElements(_this.opts.trigger);
            if (!_this.opts.inline && showModalTrigger) {
              showModalTrigger.forEach(function (trigger) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.removeEvents.showModalTrigger.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"_this.removeEvents.showModalTrigger.forEach"},');

                return trigger.removeEventListener('click', _this.openModal);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"_this.removeEvents.showModalTrigger.forEach"},');

              });
            }
            _this.stopListeningToResize();
            document.removeEventListener('paste', _this.handlePasteOnBody);
            window.removeEventListener('popstate', _this.handlePopState, false);
            _this.uppy.off('plugin-remove', _this.removeTarget);
            _this.uppy.off('file-added', _this.hideAllPanels);
            _this.uppy.off('dashboard:modal-closed', _this.hideAllPanels);
            _this.uppy.off('complete', _this.handleComplete);
            document.removeEventListener('focus', _this.recordIfFocusedOnUppyRecently);
            document.removeEventListener('click', _this.recordIfFocusedOnUppyRecently);
            if (_this.opts.inline) {
              _this.el.removeEventListener('keydown', _this.handleKeyDownInInline);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.removeEvents"},');

          };
          _this.superFocusOnEachUpdate = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.superFocusOnEachUpdate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var isFocusInUppy = _this.el.contains(document.activeElement);
            var isFocusNowhere = document.activeElement === document.body || document.activeElement === null;
            var isInformerHidden = _this.uppy.getState().info.isHidden;
            var isModal = !_this.opts.inline;
            if (isInformerHidden && (isModal || isFocusInUppy || isFocusNowhere && _this.ifFocusedOnUppyRecently)) {
              _this.superFocus(_this.el, _this.getPluginState().activeOverlayType);
            } else {
              _this.superFocus.cancel();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.superFocusOnEachUpdate"},');

          };
          _this.afterUpdate = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.afterUpdate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.superFocusOnEachUpdate();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.afterUpdate"},');

          };
          _this.cancelUpload = function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.cancelUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this.uppy.removeFile(fileID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.cancelUpload"},');

          };
          _this.saveFileCard = function (meta, fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.saveFileCard","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this.uppy.setFileMeta(fileID, meta);
            _this.toggleFileCard();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.saveFileCard"},');

          };
          _this._attachRenderFunctionToTarget = function (target) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this._attachRenderFunctionToTarget","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var plugin = _this.uppy.getPlugin(target.id);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this._attachRenderFunctionToTarget"},');

            return _extends({}, target, {
              icon: plugin.icon || _this.opts.defaultPickerIcon,
              render: plugin.render
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this._attachRenderFunctionToTarget"},');

          };
          _this._isTargetSupported = function (target) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this._isTargetSupported","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var plugin = _this.uppy.getPlugin(target.id);
            if (typeof plugin.isSupported !== 'function') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this._isTargetSupported"},');

              return true;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this._isTargetSupported"},');

            return plugin.isSupported();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this._isTargetSupported"},');

          };
          _this._getAcquirers = memoize(function (targets) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this._getAcquirers.memoize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this._getAcquirers.memoize"},');

            return targets.filter(function (target) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this._getAcquirers.memoize.ReturnStatement.targets.filter.map.targets.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this._getAcquirers.memoize.ReturnStatement.targets.filter.map.targets.filter"},');

              return target.type === 'acquirer' && _this._isTargetSupported(target);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this._getAcquirers.memoize.ReturnStatement.targets.filter.map.targets.filter"},');

            }).map(_this._attachRenderFunctionToTarget);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this._getAcquirers.memoize"},');

          });
          _this._getProgressIndicators = memoize(function (targets) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this._getProgressIndicators.memoize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this._getProgressIndicators.memoize"},');

            return targets.filter(function (target) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this._getProgressIndicators.memoize.ReturnStatement.targets.filter.map.targets.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this._getProgressIndicators.memoize.ReturnStatement.targets.filter.map.targets.filter"},');

              return target.type === 'progressindicator';
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this._getProgressIndicators.memoize.ReturnStatement.targets.filter.map.targets.filter"},');

            }).map(_this._attachRenderFunctionToTarget);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this._getProgressIndicators.memoize"},');

          });
          _this.render = function (state) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var pluginState = _this.getPluginState();
            var files = state.files, capabilities = state.capabilities, allowNewUpload = state.allowNewUpload;
            var newFiles = Object.keys(files).filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render.newFiles.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.newFiles.Object.keys.filter"},');

              return !files[file].progress.uploadStarted;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.newFiles.Object.keys.filter"},');

            });
            var uploadStartedFiles = Object.keys(files).filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render.uploadStartedFiles.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.uploadStartedFiles.Object.keys.filter"},');

              return files[file].progress.uploadStarted;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.uploadStartedFiles.Object.keys.filter"},');

            });
            var pausedFiles = Object.keys(files).filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render.pausedFiles.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.pausedFiles.Object.keys.filter"},');

              return files[file].isPaused;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.pausedFiles.Object.keys.filter"},');

            });
            var completeFiles = Object.keys(files).filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render.completeFiles.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.completeFiles.Object.keys.filter"},');

              return files[file].progress.uploadComplete;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.completeFiles.Object.keys.filter"},');

            });
            var erroredFiles = Object.keys(files).filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render.erroredFiles.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.erroredFiles.Object.keys.filter"},');

              return files[file].error;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.erroredFiles.Object.keys.filter"},');

            });
            var inProgressFiles = Object.keys(files).filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render.inProgressFiles.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.inProgressFiles.Object.keys.filter"},');

              return !files[file].progress.uploadComplete && files[file].progress.uploadStarted;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.inProgressFiles.Object.keys.filter"},');

            });
            var inProgressNotPausedFiles = inProgressFiles.filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render.inProgressNotPausedFiles.inProgressFiles.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.inProgressNotPausedFiles.inProgressFiles.filter"},');

              return !files[file].isPaused;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.inProgressNotPausedFiles.inProgressFiles.filter"},');

            });
            var processingFiles = Object.keys(files).filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render.processingFiles.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.processingFiles.Object.keys.filter"},');

              return files[file].progress.preprocess || files[file].progress.postprocess;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render.processingFiles.Object.keys.filter"},');

            });
            var isUploadStarted = uploadStartedFiles.length > 0;
            var isAllComplete = state.totalProgress === 100 && completeFiles.length === Object.keys(files).length && processingFiles.length === 0;
            var isAllErrored = isUploadStarted && erroredFiles.length === uploadStartedFiles.length;
            var isAllPaused = inProgressFiles.length !== 0 && pausedFiles.length === inProgressFiles.length;
            var acquirers = _this._getAcquirers(pluginState.targets);
            var progressindicators = _this._getProgressIndicators(pluginState.targets);
            var theme;
            if (_this.opts.theme === 'auto') {
              theme = capabilities.darkMode ? 'dark' : 'light';
            } else {
              theme = _this.opts.theme;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render"},');

            return DashboardUI({
              state: state,
              isHidden: pluginState.isHidden,
              files: files,
              newFiles: newFiles,
              uploadStartedFiles: uploadStartedFiles,
              completeFiles: completeFiles,
              erroredFiles: erroredFiles,
              inProgressFiles: inProgressFiles,
              inProgressNotPausedFiles: inProgressNotPausedFiles,
              processingFiles: processingFiles,
              isUploadStarted: isUploadStarted,
              isAllComplete: isAllComplete,
              isAllErrored: isAllErrored,
              isAllPaused: isAllPaused,
              totalFileCount: Object.keys(files).length,
              totalProgress: state.totalProgress,
              allowNewUpload: allowNewUpload,
              acquirers: acquirers,
              theme: theme,
              activePickerPanel: pluginState.activePickerPanel,
              animateOpenClose: _this.opts.animateOpenClose,
              isClosing: pluginState.isClosing,
              getPlugin: _this.uppy.getPlugin,
              progressindicators: progressindicators,
              autoProceed: _this.uppy.opts.autoProceed,
              id: _this.id,
              closeModal: _this.requestCloseModal,
              handleClickOutside: _this.handleClickOutside,
              handleInputChange: _this.handleInputChange,
              handlePaste: _this.handlePaste,
              inline: _this.opts.inline,
              showPanel: _this.showPanel,
              hideAllPanels: _this.hideAllPanels,
              log: _this.uppy.log,
              i18n: _this.i18n,
              i18nArray: _this.i18nArray,
              removeFile: _this.uppy.removeFile,
              info: _this.uppy.info,
              note: _this.opts.note,
              metaFields: pluginState.metaFields,
              resumableUploads: capabilities.resumableUploads || false,
              individualCancellation: capabilities.individualCancellation,
              isMobileDevice: capabilities.isMobileDevice,
              pauseUpload: _this.uppy.pauseResume,
              retryUpload: _this.uppy.retryUpload,
              cancelUpload: _this.cancelUpload,
              cancelAll: _this.uppy.cancelAll,
              fileCardFor: pluginState.fileCardFor,
              toggleFileCard: _this.toggleFileCard,
              toggleAddFilesPanel: _this.toggleAddFilesPanel,
              showAddFilesPanel: pluginState.showAddFilesPanel,
              saveFileCard: _this.saveFileCard,
              width: _this.opts.width,
              height: _this.opts.height,
              showLinkToFileUploadResult: _this.opts.showLinkToFileUploadResult,
              proudlyDisplayPoweredByUppy: _this.opts.proudlyDisplayPoweredByUppy,
              hideCancelButton: _this.opts.hideCancelButton,
              hideRetryButton: _this.opts.hideRetryButton,
              hidePauseResumeCancelButtons: _this.opts.hidePauseResumeCancelButton,
              showRemoveButtonAfterComplete: _this.opts.showRemoveButtonAfterComplete,
              containerWidth: pluginState.containerWidth,
              containerHeight: pluginState.containerHeight,
              areInsidesReadyToBeVisible: pluginState.areInsidesReadyToBeVisible,
              isTargetDOMEl: _this.isTargetDOMEl,
              parentElement: _this.el,
              allowedFileTypes: _this.uppy.opts.restrictions.allowedFileTypes,
              maxNumberOfFiles: _this.uppy.opts.restrictions.maxNumberOfFiles,
              showSelectedFiles: _this.opts.showSelectedFiles,
              handleRequestThumbnail: _this.handleRequestThumbnail,
              handleCancelThumbnail: _this.handleCancelThumbnail,
              isDraggingOver: pluginState.isDraggingOver,
              handleDragOver: _this.handleDragOver,
              handleDragLeave: _this.handleDragLeave,
              handleDrop: _this.handleDrop
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render"},');

          };
          _this.discoverProviderPlugins = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.discoverProviderPlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.uppy.iteratePlugins(function (plugin) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.discoverProviderPlugins._this.uppy.iteratePlugins","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (plugin && !plugin.target && plugin.opts && plugin.opts.target === _this.constructor) {
                _this.addTarget(plugin);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.discoverProviderPlugins._this.uppy.iteratePlugins"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.discoverProviderPlugins"},');

          };
          _this.install = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.install","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.setPluginState({
              isHidden: true,
              fileCardFor: null,
              activeOverlayType: null,
              showAddFilesPanel: false,
              activePickerPanel: false,
              metaFields: _this.opts.metaFields,
              targets: [],
              areInsidesReadyToBeVisible: false,
              isDraggingOver: false
            });
            var _this$opts = _this.opts, inline = _this$opts.inline, closeAfterFinish = _this$opts.closeAfterFinish;
            if (inline && closeAfterFinish) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.install"},');

              throw new Error('[Dashboard] `closeAfterFinish: true` cannot be used on an inline Dashboard, because an inline Dashboard cannot be closed at all. Either set `inline: false`, or disable the `closeAfterFinish` option.');
            }
            var allowMultipleUploads = _this.uppy.opts.allowMultipleUploads;
            if (allowMultipleUploads && closeAfterFinish) {
              _this.uppy.log('[Dashboard] When using `closeAfterFinish`, we recommended setting the `allowMultipleUploads` option to `false` in the Uppy constructor. See https://uppy.io/docs/uppy/#allowMultipleUploads-true', 'warning');
            }
            var target = _this.opts.target;
            if (target) {
              _this.mount(target, _assertThisInitialized(_this));
            }
            var plugins = _this.opts.plugins || [];
            plugins.forEach(function (pluginID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.install.plugins.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var plugin = _this.uppy.getPlugin(pluginID);
              if (plugin) {
                plugin.mount(_assertThisInitialized(_this), plugin);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.install.plugins.forEach"},');

            });
            if (!_this.opts.disableStatusBar) {
              _this.uppy.use(StatusBar, {
                id: _this.id + ":StatusBar",
                target: _assertThisInitialized(_this),
                hideUploadButton: _this.opts.hideUploadButton,
                hideRetryButton: _this.opts.hideRetryButton,
                hidePauseResumeButton: _this.opts.hidePauseResumeButton,
                hideCancelButton: _this.opts.hideCancelButton,
                showProgressDetails: _this.opts.showProgressDetails,
                hideAfterFinish: _this.opts.hideProgressAfterFinish,
                locale: _this.opts.locale
              });
            }
            if (!_this.opts.disableInformer) {
              _this.uppy.use(Informer, {
                id: _this.id + ":Informer",
                target: _assertThisInitialized(_this)
              });
            }
            if (!_this.opts.disableThumbnailGenerator) {
              _this.uppy.use(ThumbnailGenerator, {
                id: _this.id + ":ThumbnailGenerator",
                thumbnailWidth: _this.opts.thumbnailWidth,
                waitForThumbnailsBeforeUpload: _this.opts.waitForThumbnailsBeforeUpload,
                lazy: !_this.opts.waitForThumbnailsBeforeUpload
              });
            }
            _this.darkModeMediaQuery = typeof window !== 'undefined' && window.matchMedia ? window.matchMedia('(prefers-color-scheme: dark)') : null;
            var isDarkModeOnFromTheStart = _this.darkModeMediaQuery ? _this.darkModeMediaQuery.matches : false;
            _this.uppy.log("[Dashboard] Dark mode is " + (isDarkModeOnFromTheStart ? 'on' : 'off'));
            _this.setDarkModeCapability(isDarkModeOnFromTheStart);
            if (_this.opts.theme === 'auto') {
              _this.darkModeMediaQuery.addListener(_this.handleSystemDarkModeChange);
            }
            _this.discoverProviderPlugins();
            _this.initEvents();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.install"},');

          };
          _this.uninstall = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.uninstall","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (!_this.opts.disableInformer) {
              var informer = _this.uppy.getPlugin(_this.id + ":Informer");
              if (informer) _this.uppy.removePlugin(informer);
            }
            if (!_this.opts.disableStatusBar) {
              var statusBar = _this.uppy.getPlugin(_this.id + ":StatusBar");
              if (statusBar) _this.uppy.removePlugin(statusBar);
            }
            if (!_this.opts.disableThumbnailGenerator) {
              var thumbnail = _this.uppy.getPlugin(_this.id + ":ThumbnailGenerator");
              if (thumbnail) _this.uppy.removePlugin(thumbnail);
            }
            var plugins = _this.opts.plugins || [];
            plugins.forEach(function (pluginID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.uninstall.plugins.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var plugin = _this.uppy.getPlugin(pluginID);
              if (plugin) plugin.unmount();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.uninstall.plugins.forEach"},');

            });
            if (_this.opts.theme === 'auto') {
              _this.darkModeMediaQuery.removeListener(_this.handleSystemDarkModeChange);
            }
            _this.unmount();
            _this.removeEvents();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.uninstall"},');

          };
          _this.id = _this.opts.id || 'Dashboard';
          _this.title = 'Dashboard';
          _this.type = 'orchestrator';
          _this.modalName = "uppy-Dashboard-" + cuid();
          _this.defaultLocale = {
            strings: {
              closeModal: 'Close Modal',
              importFrom: 'Import from %{name}',
              addingMoreFiles: 'Adding more files',
              addMoreFiles: 'Add more files',
              dashboardWindowTitle: 'File Uploader Window (Press escape to close)',
              dashboardTitle: 'File Uploader',
              copyLinkToClipboardSuccess: 'Link copied to clipboard',
              copyLinkToClipboardFallback: 'Copy the URL below',
              copyLink: 'Copy link',
              fileSource: 'File source: %{name}',
              done: 'Done',
              back: 'Back',
              addMore: 'Add more',
              removeFile: 'Remove file',
              editFile: 'Edit file',
              editing: 'Editing %{file}',
              finishEditingFile: 'Finish editing file',
              saveChanges: 'Save changes',
              cancel: 'Cancel',
              myDevice: 'My Device',
              dropPaste: 'Drop files here, paste or %{browse}',
              dropPasteImport: 'Drop files here, paste, %{browse} or import from:',
              dropHint: 'Drop your files here',
              browse: 'browse',
              uploadComplete: 'Upload complete',
              uploadPaused: 'Upload paused',
              resumeUpload: 'Resume upload',
              pauseUpload: 'Pause upload',
              retryUpload: 'Retry upload',
              cancelUpload: 'Cancel upload',
              xFilesSelected: {
                0: '%{smart_count} file selected',
                1: '%{smart_count} files selected'
              },
              uploadingXFiles: {
                0: 'Uploading %{smart_count} file',
                1: 'Uploading %{smart_count} files'
              },
              processingXFiles: {
                0: 'Processing %{smart_count} file',
                1: 'Processing %{smart_count} files'
              },
              poweredBy2: '%{backwardsCompat} %{uppy}',
              poweredBy: 'Powered by'
            }
          };
          var defaultOptions = {
            target: 'body',
            metaFields: [],
            trigger: '#uppy-select-files',
            inline: false,
            width: 750,
            height: 550,
            thumbnailWidth: 280,
            waitForThumbnailsBeforeUpload: false,
            defaultPickerIcon: defaultPickerIcon,
            showLinkToFileUploadResult: true,
            showProgressDetails: false,
            hideUploadButton: false,
            hideRetryButton: false,
            hidePauseResumeCancelButtons: false,
            hideProgressAfterFinish: false,
            note: null,
            closeModalOnClickOutside: false,
            closeAfterFinish: false,
            disableStatusBar: false,
            disableInformer: false,
            disableThumbnailGenerator: false,
            disablePageScrollWhenModalOpen: true,
            animateOpenClose: true,
            proudlyDisplayPoweredByUppy: true,
            onRequestCloseModal: function onRequestCloseModal() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"defaultOptions.onRequestCloseModal","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"defaultOptions.onRequestCloseModal"},');

              return _this.closeModal();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"defaultOptions.onRequestCloseModal"},');

            },
            showSelectedFiles: true,
            showRemoveButtonAfterComplete: false,
            browserBackButtonClose: false,
            theme: 'light'
          };
          _this.opts = _extends({}, defaultOptions, {}, _opts);
          _this.i18nInit();
          _this.superFocus = createSuperFocus();
          _this.ifFocusedOnUppyRecently = false;
          _this.makeDashboardInsidesVisibleAnywayTimeout = null;
          _this.removeDragOverClassTimeout = null;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Dashboard"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Dashboard","paramsNumber":2},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###2"},');

        return Dashboard;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###2"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###128"},');

    }, {
      "../package.json": 127,
      "./components/Dashboard": 104,
      "./components/icons": 117,
      "./utils/createSuperFocus": 120,
      "./utils/trapFocus": 124,
      "@uppy/core": 97,
      "@uppy/informer": 137,
      "@uppy/status-bar": 174,
      "@uppy/thumbnail-generator": 179,
      "@uppy/utils/lib/Translator": 200,
      "@uppy/utils/lib/findAllDOMElements": 204,
      "@uppy/utils/lib/getDroppedFiles": 208,
      "@uppy/utils/lib/toArray": 229,
      "cuid": 13,
      "memoize-one": 45,
      "resize-observer-polyfill": 55
    }],
    119: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###129","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function copyToClipboard(textToCopy, fallbackString) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###35","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        fallbackString = fallbackString || 'Copy the URL below';
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###35"},');

        return new Promise(function (resolve) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.copyToClipboard.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var textArea = document.createElement('textarea');
          textArea.setAttribute('style', {
            position: 'fixed',
            top: 0,
            left: 0,
            width: '2em',
            height: '2em',
            padding: 0,
            border: 'none',
            outline: 'none',
            boxShadow: 'none',
            background: 'transparent'
          });
          textArea.value = textToCopy;
          document.body.appendChild(textArea);
          textArea.select();
          var magicCopyFailed = function magicCopyFailed() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"magicCopyFailed","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            document.body.removeChild(textArea);
            window.prompt(fallbackString, textToCopy);
            resolve();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"magicCopyFailed"},');

          };
          try {
            var successful = document.execCommand('copy');
            if (!successful) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.copyToClipboard.ReturnStatement.NewExpression"},');

              return magicCopyFailed('copy command unavailable');
            }
            document.body.removeChild(textArea);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.copyToClipboard.ReturnStatement.NewExpression"},');

            return resolve();
          } catch (err) {
            document.body.removeChild(textArea);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.copyToClipboard.ReturnStatement.NewExpression"},');

            return magicCopyFailed(err);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.copyToClipboard.ReturnStatement.NewExpression"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###35"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###129"},');

    }, {}],
    120: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###130","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var debounce = require('lodash.debounce');
      var FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS');
      var getActiveOverlayEl = require('./getActiveOverlayEl');
      module.exports = function createSuperFocus() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###36","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var lastFocusWasOnSuperFocusableEl = false;
        var superFocus = function superFocus(dashboardEl, activeOverlayType) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"superFocus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var overlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType);
          var isFocusInOverlay = overlayEl.contains(document.activeElement);
          if (isFocusInOverlay && lastFocusWasOnSuperFocusableEl) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"superFocus"},');

            return;
          }
          var superFocusableEl = overlayEl.querySelector('[data-uppy-super-focusable]');
          if (isFocusInOverlay && !superFocusableEl) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"superFocus"},');

            return;
          }
          if (superFocusableEl) {
            superFocusableEl.focus({
              preventScroll: true
            });
            lastFocusWasOnSuperFocusableEl = true;
          } else {
            var firstEl = overlayEl.querySelector(FOCUSABLE_ELEMENTS);
            firstEl && firstEl.focus({
              preventScroll: true
            });
            lastFocusWasOnSuperFocusableEl = false;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"superFocus"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###36"},');

        return debounce(superFocus, 260);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###36"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###130"},');

    }, {
      "./getActiveOverlayEl": 121,
      "@uppy/utils/lib/FOCUSABLE_ELEMENTS": 197,
      "lodash.debounce": 42
    }],
    121: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###131","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function getActiveOverlayEl(dashboardEl, activeOverlayType) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###37","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (activeOverlayType) {
          var overlayEl = dashboardEl.querySelector("[data-uppy-paneltype=\"" + activeOverlayType + "\"]");
          if (overlayEl) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###37"},');

            return overlayEl;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###37"},');

        return dashboardEl;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###37"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###131"},');

    }, {}],
    122: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###132","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('../components/icons'), iconFile = _require.iconFile, iconText = _require.iconText, iconImage = _require.iconImage, iconAudio = _require.iconAudio, iconVideo = _require.iconVideo, iconPDF = _require.iconPDF, iconArchive = _require.iconArchive;
      module.exports = function getIconByMime(fileType) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###38","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var defaultChoice = {
          color: '#838999',
          icon: iconFile()
        };
        if (!fileType) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###38"},');

          return defaultChoice;
        }
        var fileTypeGeneral = fileType.split('/')[0];
        var fileTypeSpecific = fileType.split('/')[1];
        if (fileTypeGeneral === 'text') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###38"},');

          return {
            color: '#5a5e69',
            icon: iconText()
          };
        }
        if (fileTypeGeneral === 'image') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###38"},');

          return {
            color: '#686de0',
            icon: iconImage()
          };
        }
        if (fileTypeGeneral === 'audio') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###38"},');

          return {
            color: '#068dbb',
            icon: iconAudio()
          };
        }
        if (fileTypeGeneral === 'video') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###38"},');

          return {
            color: '#19af67',
            icon: iconVideo()
          };
        }
        if (fileTypeGeneral === 'application' && fileTypeSpecific === 'pdf') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###38"},');

          return {
            color: '#e25149',
            icon: iconPDF()
          };
        }
        var archiveTypes = ['zip', 'x-7z-compressed', 'x-rar-compressed', 'x-gtar', 'x-apple-diskimage', 'x-diskcopy'];
        if (fileTypeGeneral === 'application' && archiveTypes.indexOf(fileTypeSpecific) !== -1) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###38"},');

          return {
            color: '#00C469',
            icon: iconArchive()
          };
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###38"},');

        return defaultChoice;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###38"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###132"},');

    }, {
      "../components/icons": 117
    }],
    123: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###133","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function ignoreEvent(ev) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ignoreEvent","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var tagName = ev.target.tagName;
        if (tagName === 'INPUT' || tagName === 'TEXTAREA') {
          ev.stopPropagation();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ignoreEvent"},');

          return;
        }
        ev.preventDefault();
        ev.stopPropagation();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ignoreEvent","paramsNumber":1},');

      }
      module.exports = ignoreEvent;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###133"},');

    }, {}],
    124: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###134","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var toArray = require('@uppy/utils/lib/toArray');
      var getActiveOverlayEl = require('./getActiveOverlayEl');
      var FOCUSABLE_ELEMENTS = require('@uppy/utils/lib//FOCUSABLE_ELEMENTS');
      function focusOnFirstNode(event, nodes) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"focusOnFirstNode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var node = nodes[0];
        if (node) {
          node.focus();
          event.preventDefault();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"focusOnFirstNode","paramsNumber":2},');

      }
      function focusOnLastNode(event, nodes) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"focusOnLastNode","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var node = nodes[nodes.length - 1];
        if (node) {
          node.focus();
          event.preventDefault();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"focusOnLastNode","paramsNumber":2},');

      }
      function isFocusInOverlay(activeOverlayEl) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isFocusInOverlay","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"isFocusInOverlay"},');

        return activeOverlayEl.contains(document.activeElement);
                SRTlib.send('{"type":"FUNCTIONEND","function":"isFocusInOverlay","paramsNumber":1},');

      }
      function trapFocus(event, activeOverlayType, dashboardEl) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"trapFocus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var activeOverlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType);
        var focusableNodes = toArray(activeOverlayEl.querySelectorAll(FOCUSABLE_ELEMENTS));
        var focusedItemIndex = focusableNodes.indexOf(document.activeElement);
        if (!isFocusInOverlay(activeOverlayEl)) {
          focusOnFirstNode(event, focusableNodes);
        } else if (event.shiftKey && focusedItemIndex === 0) {
          focusOnLastNode(event, focusableNodes);
        } else if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {
          focusOnFirstNode(event, focusableNodes);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"trapFocus","paramsNumber":3},');

      }
      module.exports = {
        forModal: function forModal(event, activeOverlayType, dashboardEl) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.forModal","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          trapFocus(event, activeOverlayType, dashboardEl);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forModal"},');

        },
        forInline: function forInline(event, activeOverlayType, dashboardEl) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.forInline","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (activeOverlayType === null) {} else {
            trapFocus(event, activeOverlayType, dashboardEl);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forInline"},');

        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###134"},');

    }, {
      "./getActiveOverlayEl": 121,
      "@uppy/utils/lib//FOCUSABLE_ELEMENTS": 197,
      "@uppy/utils/lib/toArray": 229
    }],
    125: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###135","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function truncateString(string, maxLength) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###39","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var separator = '...';
        if (string.length <= maxLength) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###39"},');

          return string;
        } else if (maxLength <= separator.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###39"},');

          return string.substr(0, maxLength);
        } else {
          var charsToShow = maxLength - separator.length;
          var frontChars = Math.ceil(charsToShow / 2);
          var backChars = Math.floor(charsToShow / 2);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###39"},');

          return string.substr(0, frontChars) + separator + string.substr(string.length - backChars);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###39"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###135"},');

    }, {}],
    126: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###136","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      arguments[4][100][0].apply(exports, arguments);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###136"},');

    }, {
      "dup": 100
    }],
    127: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###137","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/dashboard",
        "description": "Universal UI plugin for Uppy.",
        "version": "1.9.0",
        "license": "MIT",
        "main": "lib/index.js",
        "style": "dist/style.min.css",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "dashboard", "ui"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@transloadit/prettier-bytes": "0.0.7",
          "@uppy/informer": "file:../informer",
          "@uppy/provider-views": "file:../provider-views",
          "@uppy/status-bar": "file:../status-bar",
          "@uppy/thumbnail-generator": "file:../thumbnail-generator",
          "@uppy/utils": "file:../utils",
          "classnames": "^2.2.6",
          "cuid": "^2.1.1",
          "is-shallow-equal": "^1.0.1",
          "lodash.debounce": "^4.0.8",
          "lodash.throttle": "^4.1.1",
          "memoize-one": "^5.0.4",
          "preact": "8.2.9",
          "preact-css-transition-group": "^1.3.0",
          "resize-observer-polyfill": "^1.5.0"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###137"},');

    }, {}],
    128: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###138","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var _require2 = require('@uppy/companion-client'), Provider = _require2.Provider;
      var ProviderViews = require('@uppy/provider-views');
      var _require3 = require('preact'), h = _require3.h;
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Dropbox, _Plugin);
        function Dropbox(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Dropbox","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.id = _this.opts.id || 'Dropbox';
          Provider.initPlugin(_assertThisInitialized(_this), opts);
          _this.title = _this.opts.title || 'Dropbox';
          _this.icon = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.icon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon"},');

            return h("svg", {
              "aria-hidden": "true",
              focusable: "false",
              width: "32",
              height: "32",
              viewBox: "0 0 32 32",
              xmlns: "http://www.w3.org/2000/svg"
            }, h("g", {
              fill: "none",
              "fill-rule": "evenodd"
            }, h("rect", {
              fill: "#0D2481",
              width: "32",
              height: "32",
              rx: "16"
            }), h("path", {
              d: "M11 8l5 3.185-5 3.186-5-3.186L11 8zm10 0l5 3.185-5 3.186-5-3.186L21 8zM6 17.556l5-3.185 5 3.185-5 3.186-5-3.186zm15-3.185l5 3.185-5 3.186-5-3.186 5-3.185zm-10 7.432l5-3.185 5 3.185-5 3.186-5-3.186z",
              fill: "#FFF",
              "fill-rule": "nonzero"
            })));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon"},');

          };
          _this.provider = new Provider(uppy, {
            companionUrl: _this.opts.companionUrl,
            companionHeaders: _this.opts.companionHeaders || _this.opts.serverHeaders,
            provider: 'dropbox',
            pluginId: _this.id
          });
          _this.onFirstRender = _this.onFirstRender.bind(_assertThisInitialized(_this));
          _this.render = _this.render.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Dropbox"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Dropbox","paramsNumber":2},');

        }
        var _proto = Dropbox.prototype;
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view = new ProviderViews(this, {
            provider: this.provider
          });
          this.setPluginState({
            authenticated: false,
            files: [],
            folders: [],
            directories: [],
            activeRow: -1,
            filterInput: '',
            isSearchVisible: false
          });
          var target = this.opts.target;
          if (target) {
            this.mount(target, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view.tearDown();
          this.unmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall"},');

        };
        _proto.onFirstRender = function onFirstRender() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender"},');

          return this.view.getFolder();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender"},');

        };
        _proto.render = function render(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render"},');

          return this.view.render(state);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###3"},');

        return Dropbox;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###3"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###138"},');

    }, {
      "../package.json": 129,
      "@uppy/companion-client": 93,
      "@uppy/core": 97,
      "@uppy/provider-views": 154,
      "preact": 51
    }],
    129: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###139","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/dropbox",
        "description": "Import files from Dropbox, into Uppy.",
        "version": "1.4.6",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "dropbox"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/companion-client": "file:../companion-client",
          "@uppy/provider-views": "file:../provider-views",
          "@uppy/utils": "file:../utils",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###139"},');

    }, {}],
    130: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###140","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var _require2 = require('@uppy/companion-client'), Provider = _require2.Provider;
      var ProviderViews = require('@uppy/provider-views');
      var _require3 = require('preact'), h = _require3.h;
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Facebook, _Plugin);
        function Facebook(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Facebook","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.id = _this.opts.id || 'Facebook';
          Provider.initPlugin(_assertThisInitialized(_this), opts);
          _this.title = _this.opts.title || 'Facebook';
          _this.icon = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.icon###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###2"},');

            return h("svg", {
              "aria-hidden": "true",
              focusable: "false",
              width: "32",
              height: "32",
              viewBox: "0 0 32 32",
              xmlns: "http://www.w3.org/2000/svg"
            }, h("g", {
              fill: "none",
              "fill-rule": "evenodd"
            }, h("rect", {
              width: "32",
              height: "32",
              rx: "16",
              fill: "#3C5A99"
            }), h("path", {
              d: "M17.842 26v-8.667h2.653l.398-3.377h-3.051v-2.157c0-.978.248-1.644 1.527-1.644H21V7.132A19.914 19.914 0 0 0 18.623 7c-2.352 0-3.963 1.574-3.963 4.465v2.49H12v3.378h2.66V26h3.182z",
              fill: "#FFF",
              "fill-rule": "nonzero"
            })));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###2"},');

          };
          _this.provider = new Provider(uppy, {
            companionUrl: _this.opts.companionUrl,
            companionHeaders: _this.opts.companionHeaders || _this.opts.serverHeaders,
            provider: 'facebook',
            pluginId: _this.id
          });
          _this.onFirstRender = _this.onFirstRender.bind(_assertThisInitialized(_this));
          _this.render = _this.render.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Facebook"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Facebook","paramsNumber":2},');

        }
        var _proto = Facebook.prototype;
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view = new ProviderViews(this, {
            provider: this.provider
          });
          this.setPluginState({
            authenticated: false,
            files: [],
            folders: [],
            directories: [],
            activeRow: -1,
            filterInput: '',
            isSearchVisible: false
          });
          var target = this.opts.target;
          if (target) {
            this.mount(target, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###2"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view.tearDown();
          this.unmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###2"},');

        };
        _proto.onFirstRender = function onFirstRender() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###2"},');

          return this.view.getFolder();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###2"},');

        };
        _proto.render = function render(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var viewOptions = {};
          if (this.getPluginState().files.length && !this.getPluginState().folders.length) {
            viewOptions.viewType = 'grid';
            viewOptions.showFilter = false;
            viewOptions.showTitles = false;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###2"},');

          return this.view.render(state, viewOptions);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###2"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###4"},');

        return Facebook;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###4"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###140"},');

    }, {
      "../package.json": 131,
      "@uppy/companion-client": 93,
      "@uppy/core": 97,
      "@uppy/provider-views": 154,
      "preact": 51
    }],
    131: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###141","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/facebook",
        "description": "Import files from Facebook, into Uppy.",
        "version": "1.1.6",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "facebook"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/companion-client": "file:../companion-client",
          "@uppy/provider-views": "file:../provider-views",
          "@uppy/utils": "file:../utils",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###141"},');

    }, {}],
    132: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###142","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###10"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###10"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var findDOMElement = require('@uppy/utils/lib/findDOMElement');
      var toArray = require('@uppy/utils/lib/toArray');
      var getFormData = require('get-form-data').default || require('get-form-data');
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Form, _Plugin);
        function Form(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Form","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.type = 'acquirer';
          _this.id = _this.opts.id || 'Form';
          _this.title = 'Form';
          var defaultOptions = {
            target: null,
            resultName: 'uppyResult',
            getMetaFromForm: true,
            addResultToForm: true,
            multipleResults: false,
            submitOnSuccess: false,
            triggerUploadOnSubmit: false
          };
          _this.opts = _extends({}, defaultOptions, {}, opts);
          _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_this));
          _this.handleUploadStart = _this.handleUploadStart.bind(_assertThisInitialized(_this));
          _this.handleSuccess = _this.handleSuccess.bind(_assertThisInitialized(_this));
          _this.addResultToForm = _this.addResultToForm.bind(_assertThisInitialized(_this));
          _this.getMetaFromForm = _this.getMetaFromForm.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Form"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Form","paramsNumber":2},');

        }
        var _proto = Form.prototype;
        _proto.handleUploadStart = function handleUploadStart() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleUploadStart","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (this.opts.getMetaFromForm) {
            this.getMetaFromForm();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleUploadStart"},');

        };
        _proto.handleSuccess = function handleSuccess(result) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleSuccess","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (this.opts.addResultToForm) {
            this.addResultToForm(result);
          }
          if (this.opts.submitOnSuccess) {
            this.form.submit();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleSuccess"},');

        };
        _proto.handleFormSubmit = function handleFormSubmit(ev) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this2 = this;
          if (this.opts.triggerUploadOnSubmit) {
            ev.preventDefault();
            var elements = toArray(ev.target.elements);
            var disabledByUppy = [];
            elements.forEach(function (el) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.elements.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var isButton = el.tagName === 'BUTTON' || el.tagName === 'INPUT' && el.type === 'submit';
              if (isButton && !el.disabled) {
                el.disabled = true;
                disabledByUppy.push(el);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.elements.forEach"},');

            });
            this.uppy.upload().then(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              disabledByUppy.forEach(function (button) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then.disabledByUppy.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                button.disabled = false;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then.disabledByUppy.forEach"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then"},');

            }, function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              disabledByUppy.forEach(function (button) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then.disabledByUppy.forEach###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                button.disabled = false;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then.disabledByUppy.forEach###2"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then###2"},');

              return Promise.reject(err);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then###2"},');

            }).catch(function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this2.uppy.log(err.stack || err.message || err);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit.handleFormSubmit.uppy.upload.then.catch"},');

            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleFormSubmit"},');

        };
        _proto.addResultToForm = function addResultToForm(result) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.addResultToForm","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.uppy.log('[Form] Adding result to the original form:');
          this.uppy.log(result);
          var resultInput = this.form.querySelector("[name=\"" + this.opts.resultName + "\"]");
          if (resultInput) {
            if (this.opts.multipleResults) {
              var updatedResult;
              try {
                updatedResult = JSON.parse(resultInput.value);
              } catch (err) {}
              if (!Array.isArray(updatedResult)) {
                updatedResult = [];
              }
              updatedResult.push(result);
              resultInput.value = JSON.stringify(updatedResult);
            } else {
              resultInput.value = JSON.stringify(result);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addResultToForm"},');

            return;
          }
          resultInput = document.createElement('input');
          resultInput.name = this.opts.resultName;
          resultInput.type = 'hidden';
          if (this.opts.multipleResults) {
            resultInput.value = JSON.stringify([result]);
          } else {
            resultInput.value = JSON.stringify(result);
          }
          this.form.appendChild(resultInput);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addResultToForm"},');

        };
        _proto.getMetaFromForm = function getMetaFromForm() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getMetaFromForm","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var formMeta = getFormData(this.form);
          delete formMeta[this.opts.resultName];
          this.uppy.setMeta(formMeta);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getMetaFromForm"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.form = findDOMElement(this.opts.target);
          if (!this.form || this.form.nodeName !== 'FORM') {
            this.uppy.log('Form plugin requires a <form> target element passed in options to operate, none was found', 'error');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###3"},');

            return;
          }
          this.form.addEventListener('submit', this.handleFormSubmit);
          this.uppy.on('upload', this.handleUploadStart);
          this.uppy.on('complete', this.handleSuccess);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###3"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.form.removeEventListener('submit', this.handleFormSubmit);
          this.uppy.off('upload', this.handleUploadStart);
          this.uppy.off('complete', this.handleSuccess);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###3"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###5"},');

        return Form;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###5"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###142"},');

    }, {
      "../package.json": 133,
      "@uppy/core": 97,
      "@uppy/utils/lib/findDOMElement": 205,
      "@uppy/utils/lib/toArray": 229,
      "get-form-data": 34
    }],
    133: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###143","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/form",
        "description": "Connect Uppy to an existing HTML <form>.",
        "version": "1.3.15",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "form"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/utils": "file:../utils",
          "get-form-data": "^2.0.0"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###143"},');

    }, {}],
    134: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###144","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var ProviderViews = require('@uppy/provider-views');
      module.exports = (function (_ProviderViews) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###40","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(DriveProviderViews, _ProviderViews);
        function DriveProviderViews() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"DriveProviderViews","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"DriveProviderViews"},');

          return _ProviderViews.apply(this, arguments) || this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"DriveProviderViews","paramsNumber":0},');

        }
        var _proto = DriveProviderViews.prototype;
        _proto.toggleCheckbox = function toggleCheckbox(e, file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.toggleCheckbox","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          e.stopPropagation();
          e.preventDefault();
          if (!file.custom.isTeamDrive && !file.custom.isSharedDrive) {
            _ProviderViews.prototype.toggleCheckbox.call(this, e, file);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.toggleCheckbox"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###40"},');

        return DriveProviderViews;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###40"},');

      })(ProviderViews);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###144"},');

    }, {
      "@uppy/provider-views": 154
    }],
    135: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###145","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var _require2 = require('@uppy/companion-client'), Provider = _require2.Provider;
      var DriveProviderViews = require('./DriveProviderViews');
      var _require3 = require('preact'), h = _require3.h;
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(GoogleDrive, _Plugin);
        function GoogleDrive(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"GoogleDrive","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.id = _this.opts.id || 'GoogleDrive';
          _this.title = _this.opts.title || 'Google Drive';
          Provider.initPlugin(_assertThisInitialized(_this), opts);
          _this.title = _this.opts.title || 'Google Drive';
          _this.icon = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.icon###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###3"},');

            return h("svg", {
              "aria-hidden": "true",
              focusable: "false",
              width: "32",
              height: "32",
              viewBox: "0 0 32 32",
              xmlns: "http://www.w3.org/2000/svg"
            }, h("g", {
              fill: "none",
              "fill-rule": "evenodd"
            }, h("rect", {
              fill: "#4285F4",
              width: "32",
              height: "32",
              rx: "16"
            }), h("path", {
              d: "M10.324 23.3l3-5.1H25l-3 5.1H10.324zM13 18.2l-3 5.1-3-5.1 5.839-9.924 2.999 5.1L13 18.2zm11.838-.276h-6L13 8h6l5.84 9.924h-.002z",
              fill: "#FFF"
            })));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###3"},');

          };
          _this.provider = new Provider(uppy, {
            companionUrl: _this.opts.companionUrl,
            companionHeaders: _this.opts.companionHeaders || _this.opts.serverHeaders,
            provider: 'drive',
            authProvider: 'google',
            pluginId: _this.id
          });
          _this.onFirstRender = _this.onFirstRender.bind(_assertThisInitialized(_this));
          _this.render = _this.render.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"GoogleDrive"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"GoogleDrive","paramsNumber":2},');

        }
        var _proto = GoogleDrive.prototype;
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view = new DriveProviderViews(this, {
            provider: this.provider
          });
          this.setPluginState({
            authenticated: false,
            files: [],
            folders: [],
            directories: [],
            activeRow: -1,
            filterInput: '',
            isSearchVisible: false,
            hasTeamDrives: false,
            teamDrives: [],
            teamDriveId: ''
          });
          var target = this.opts.target;
          if (target) {
            this.mount(target, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###4"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view.tearDown();
          this.unmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###4"},');

        };
        _proto.onFirstRender = function onFirstRender() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###3"},');

          return this.view.getFolder('root', '/');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###3"},');

        };
        _proto.render = function render(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###3"},');

          return this.view.render(state);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###3"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###6"},');

        return GoogleDrive;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###6"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###145"},');

    }, {
      "../package.json": 136,
      "./DriveProviderViews": 134,
      "@uppy/companion-client": 93,
      "@uppy/core": 97,
      "preact": 51
    }],
    136: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###146","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/google-drive",
        "description": "The Google Drive plugin for Uppy lets users import files from their Google Drive account",
        "version": "1.5.6",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "google drive", "cloud storage", "uppy", "uppy-plugin"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/companion-client": "file:../companion-client",
          "@uppy/provider-views": "file:../provider-views",
          "@uppy/utils": "file:../utils",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###146"},');

    }, {}],
    137: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###147","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###11"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###11"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var _require2 = require('preact'), h = _require2.h;
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Informer, _Plugin);
        function Informer(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Informer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.render = function (state) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.render###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _state$info = state.info, isHidden = _state$info.isHidden, message = _state$info.message, details = _state$info.details;
            function displayErrorAlert() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"displayErrorAlert","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var errorMessage = message + " \n\n " + details;
              alert(errorMessage);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"displayErrorAlert","paramsNumber":0},');

            }
            var handleMouseOver = function handleMouseOver() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"handleMouseOver","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              clearTimeout(_this.uppy.infoTimeoutID);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"handleMouseOver"},');

            };
            var handleMouseLeave = function handleMouseLeave() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"handleMouseLeave","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              _this.uppy.infoTimeoutID = setTimeout(_this.uppy.hideInfo, 2000);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"handleMouseLeave"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render###2"},');

            return h("div", {
              class: "uppy uppy-Informer",
              "aria-hidden": isHidden
            }, h("p", {
              role: "alert"
            }, message, ' ', details && h("span", {
              "aria-label": details,
              "data-microtip-position": "top-left",
              "data-microtip-size": "medium",
              role: "tooltip",
              onclick: displayErrorAlert,
              onMouseOver: handleMouseOver,
              onMouseLeave: handleMouseLeave
            }, "?")));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.render###2"},');

          };
          _this.type = 'progressindicator';
          _this.id = _this.opts.id || 'Informer';
          _this.title = 'Informer';
          var defaultOptions = {};
          _this.opts = _extends({}, defaultOptions, opts);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Informer"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Informer","paramsNumber":2},');

        }
        var _proto = Informer.prototype;
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var target = this.opts.target;
          if (target) {
            this.mount(target, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###5"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###7"},');

        return Informer;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###7"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###147"},');

    }, {
      "../package.json": 138,
      "@uppy/core": 97,
      "preact": 51
    }],
    138: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###148","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/informer",
        "description": "A notification and error pop-up bar for Uppy.",
        "version": "1.5.6",
        "license": "MIT",
        "main": "lib/index.js",
        "style": "dist/style.min.css",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "notification", "bar", "ui"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/utils": "file:../utils",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###148"},');

    }, {}],
    139: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###149","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var _require2 = require('@uppy/companion-client'), Provider = _require2.Provider;
      var ProviderViews = require('@uppy/provider-views');
      var _require3 = require('preact'), h = _require3.h;
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Instagram, _Plugin);
        function Instagram(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Instagram","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.id = _this.opts.id || 'Instagram';
          Provider.initPlugin(_assertThisInitialized(_this), opts);
          _this.title = _this.opts.title || 'Instagram';
          _this.icon = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.icon###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###4"},');

            return h("svg", {
              "aria-hidden": "true",
              focusable: "false",
              width: "32",
              height: "32",
              viewBox: "0 0 32 32",
              xmlns: "http://www.w3.org/2000/svg"
            }, h("g", {
              fill: "none",
              "fill-rule": "evenodd"
            }, h("rect", {
              fill: "#E1306C",
              width: "32",
              height: "32",
              rx: "16"
            }), h("path", {
              d: "M16 8.622c2.403 0 2.688.009 3.637.052.877.04 1.354.187 1.67.31.392.144.745.374 1.036.673.299.29.529.644.673 1.035.123.317.27.794.31 1.671.043.95.052 1.234.052 3.637s-.009 2.688-.052 3.637c-.04.877-.187 1.354-.31 1.671a2.98 2.98 0 0 1-1.708 1.708c-.317.123-.794.27-1.671.31-.95.043-1.234.053-3.637.053s-2.688-.01-3.637-.053c-.877-.04-1.354-.187-1.671-.31a2.788 2.788 0 0 1-1.035-.673 2.788 2.788 0 0 1-.673-1.035c-.123-.317-.27-.794-.31-1.671-.043-.949-.052-1.234-.052-3.637s.009-2.688.052-3.637c.04-.877.187-1.354.31-1.67.144-.392.374-.745.673-1.036.29-.299.644-.529 1.035-.673.317-.123.794-.27 1.671-.31.95-.043 1.234-.052 3.637-.052zM16 7c-2.444 0-2.75.01-3.71.054-.959.044-1.613.196-2.185.419-.6.225-1.145.58-1.594 1.038-.458.45-.813.993-1.039 1.594-.222.572-.374 1.226-.418 2.184C7.01 13.25 7 13.556 7 16s.01 2.75.054 3.71c.044.959.196 1.613.419 2.185.226.6.58 1.145 1.038 1.594.45.458.993.813 1.594 1.038.572.223 1.227.375 2.184.419.96.044 1.267.054 3.711.054s2.75-.01 3.71-.054c.959-.044 1.613-.196 2.185-.419a4.602 4.602 0 0 0 2.632-2.632c.223-.572.375-1.226.419-2.184.044-.96.054-1.267.054-3.711s-.01-2.75-.054-3.71c-.044-.959-.196-1.613-.419-2.185A4.412 4.412 0 0 0 23.49 8.51a4.412 4.412 0 0 0-1.594-1.039c-.572-.222-1.226-.374-2.184-.418C18.75 7.01 18.444 7 16 7zm0 4.5a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9zm0 7.421a2.921 2.921 0 1 1 0-5.842 2.921 2.921 0 0 1 0 5.842zm4.875-6.671a1.125 1.125 0 1 1 0-2.25 1.125 1.125 0 0 1 0 2.25z",
              fill: "#FFF"
            })));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###4"},');

          };
          _this.provider = new Provider(uppy, {
            companionUrl: _this.opts.companionUrl,
            companionHeaders: _this.opts.companionHeaders || _this.opts.serverHeaders,
            provider: 'instagram',
            authProvider: 'instagram',
            pluginId: _this.id
          });
          _this.onFirstRender = _this.onFirstRender.bind(_assertThisInitialized(_this));
          _this.render = _this.render.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Instagram"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Instagram","paramsNumber":2},');

        }
        var _proto = Instagram.prototype;
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view = new ProviderViews(this, {
            provider: this.provider,
            viewType: 'grid',
            showTitles: false,
            showFilter: false,
            showBreadcrumbs: false
          });
          this.setPluginState({
            authenticated: false,
            files: [],
            folders: [],
            directories: [],
            activeRow: -1,
            filterInput: '',
            isSearchVisible: false
          });
          var target = this.opts.target;
          if (target) {
            this.mount(target, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###6"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view.tearDown();
          this.unmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###5"},');

        };
        _proto.onFirstRender = function onFirstRender() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view.getFolder('recent');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###4"},');

        };
        _proto.render = function render(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###4"},');

          return this.view.render(state);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###4"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###8"},');

        return Instagram;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###8"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###149"},');

    }, {
      "../package.json": 140,
      "@uppy/companion-client": 93,
      "@uppy/core": 97,
      "@uppy/provider-views": 154,
      "preact": 51
    }],
    140: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###150","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/instagram",
        "description": "Import photos and videos from Instagram, into Uppy.",
        "version": "1.4.6",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "instagram", "provider", "photos", "videos"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/companion-client": "file:../companion-client",
          "@uppy/provider-views": "file:../provider-views",
          "@uppy/utils": "file:../utils",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###150"},');

    }, {}],
    141: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###151","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var _require2 = require('@uppy/companion-client'), Provider = _require2.Provider;
      var ProviderViews = require('@uppy/provider-views');
      var _require3 = require('preact'), h = _require3.h;
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(OneDrive, _Plugin);
        function OneDrive(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"OneDrive","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.id = _this.opts.id || 'OneDrive';
          Provider.initPlugin(_assertThisInitialized(_this), opts);
          _this.title = _this.opts.title || 'OneDrive';
          _this.icon = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.icon###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###5"},');

            return h("svg", {
              "aria-hidden": "true",
              focusable: "false",
              width: "32",
              height: "32",
              viewBox: "0 0 32 32",
              xmlns: "http://www.w3.org/2000/svg"
            }, h("g", {
              fill: "none",
              "fill-rule": "evenodd"
            }, h("rect", {
              width: "32",
              height: "32",
              rx: "16",
              fill: "#0262C0"
            }), h("g", {
              fill: "#FFF",
              "fill-rule": "nonzero"
            }, h("path", {
              d: "M24.157 22s1.492-.205 1.79-1.655a2.624 2.624 0 0 0 .03-.878c-.22-1.64-1.988-2.01-1.988-2.01s.307-1.765-1.312-2.69c-1.62-.925-3.1 0-3.1 0S18.711 13 16.366 13c-3.016 0-3.519 3.448-3.519 3.448S10 16.618 10 19.14c0 2.523 2.597 2.86 2.597 2.86h11.56z"
            }), h("path", {
              d: "M9.421 19.246c0-2.197 1.606-3.159 2.871-3.472.44-1.477 1.654-3.439 4.135-3.439H16.445c1.721 0 2.79.823 3.368 1.476a3.99 3.99 0 0 1 1.147-.171h.01l.03.002C21.017 13.5 20.691 10 16.757 10c-2.69 0-3.639 2.345-3.639 2.345s-1.95-1.482-3.955.567c-1.028 1.052-.79 2.669-.79 2.669S6 15.824 6 18.412C6 20.757 8.452 21 8.452 21h1.372a3.77 3.77 0 0 1-.403-1.754z"
            }))));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###5"},');

          };
          _this.provider = new Provider(uppy, {
            companionUrl: _this.opts.companionUrl,
            companionHeaders: _this.opts.companionHeaders || _this.opts.serverHeaders,
            provider: 'onedrive',
            pluginId: _this.id
          });
          _this.onFirstRender = _this.onFirstRender.bind(_assertThisInitialized(_this));
          _this.render = _this.render.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"OneDrive"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"OneDrive","paramsNumber":2},');

        }
        var _proto = OneDrive.prototype;
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view = new ProviderViews(this, {
            provider: this.provider
          });
          this.setPluginState({
            authenticated: false,
            files: [],
            folders: [],
            directories: [],
            activeRow: -1,
            filterInput: '',
            isSearchVisible: false
          });
          var target = this.opts.target;
          if (target) {
            this.mount(target, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###7"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.view.tearDown();
          this.unmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###6"},');

        };
        _proto.onFirstRender = function onFirstRender() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###5"},');

          return this.view.getFolder();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFirstRender###5"},');

        };
        _proto.render = function render(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###5"},');

          return this.view.render(state);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###5"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###9"},');

        return OneDrive;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###9"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###151"},');

    }, {
      "../package.json": 142,
      "@uppy/companion-client": 93,
      "@uppy/core": 97,
      "@uppy/provider-views": 154,
      "preact": 51
    }],
    142: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###152","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/onedrive",
        "description": "Import files from OneDrive, into Uppy.",
        "version": "1.1.6",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "onedrive"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/companion-client": "file:../companion-client",
          "@uppy/provider-views": "file:../provider-views",
          "@uppy/utils": "file:../utils",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###152"},');

    }, {}],
    143: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###153","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('preact'), h = _require.h, Component = _require.Component;
      var AuthView = (function (_Component) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AuthView","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(AuthView, _Component);
        function AuthView() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"AuthView","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"AuthView"},');

          return _Component.apply(this, arguments) || this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"AuthView","paramsNumber":0},');

        }
        var _proto = AuthView.prototype;
        _proto.render = function render() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AuthView._proto.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var pluginNameComponent = h("span", {
            class: "uppy-Provider-authTitleName"
          }, this.props.pluginName, h("br", null));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AuthView._proto.render"},');

          return h("div", {
            class: "uppy-Provider-auth"
          }, h("div", {
            class: "uppy-Provider-authIcon"
          }, this.props.pluginIcon()), h("div", {
            class: "uppy-Provider-authTitle"
          }, this.props.i18nArray('authenticateWithTitle', {
            pluginName: pluginNameComponent
          })), h("button", {
            type: "button",
            class: "uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Provider-authBtn",
            onclick: this.props.handleAuth,
            "data-uppy-super-focusable": true
          }, this.props.i18nArray('authenticateWith', {
            pluginName: this.props.pluginName
          })));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AuthView._proto.render"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AuthView"},');

        return AuthView;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AuthView"},');

      })(Component);
      module.exports = AuthView;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###153"},');

    }, {
      "preact": 51
    }],
    144: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###154","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var Breadcrumb = function Breadcrumb(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Breadcrumb","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"Breadcrumb"},');

        return h("span", null, h("button", {
          type: "button",
          class: "uppy-u-reset",
          onclick: props.getFolder
        }, props.title), !props.isLast ? ' / ' : '');
                SRTlib.send('{"type":"FUNCTIONEND","function":"Breadcrumb"},');

      };
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###41","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###41"},');

        return h("div", {
          class: "uppy-Provider-breadcrumbs"
        }, h("div", {
          class: "uppy-Provider-breadcrumbsIcon"
        }, props.breadcrumbsIcon), props.directories.map(function (directory, i) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.ReturnStatement.h.props.directories.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.props.directories.map"},');

          return h(Breadcrumb, {
            key: directory.id,
            getFolder: function getFolder() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.ReturnStatement.h.props.directories.map.ReturnStatement.h.getFolder","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.props.directories.map.ReturnStatement.h.getFolder"},');

              return props.getFolder(directory.id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.props.directories.map.ReturnStatement.h.getFolder"},');

            },
            title: i === 0 ? props.title : directory.title,
            isLast: i + 1 === props.directories.length
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.props.directories.map"},');

        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###41"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###154"},');

    }, {
      "preact": 51
    }],
    145: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###155","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###12"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###12"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var classNames = require('classnames');
      var Breadcrumbs = require('./Breadcrumbs');
      var Filter = require('./Filter');
      var ItemList = require('./ItemList');
      var FooterActions = require('./FooterActions');
      var _require = require('preact'), h = _require.h;
      var Browser = function Browser(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Browser","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var filteredFolders = props.folders;
        var filteredFiles = props.files;
        if (props.filterInput !== '') {
          filteredFolders = props.filterItems(props.folders);
          filteredFiles = props.filterItems(props.files);
        }
        var selected = props.currentSelection.length;
                SRTlib.send('{"type":"FUNCTIONEND","function":"Browser"},');

        return h("div", {
          class: classNames('uppy-ProviderBrowser', "uppy-ProviderBrowser-viewType--" + props.viewType)
        }, h("div", {
          class: "uppy-ProviderBrowser-header"
        }, h("div", {
          class: classNames('uppy-ProviderBrowser-headerBar', !props.showBreadcrumbs && 'uppy-ProviderBrowser-headerBar--simple')
        }, props.showBreadcrumbs && Breadcrumbs({
          getFolder: props.getFolder,
          directories: props.directories,
          breadcrumbsIcon: props.pluginIcon && props.pluginIcon(),
          title: props.title
        }), h("span", {
          class: "uppy-ProviderBrowser-user"
        }, props.username), h("button", {
          type: "button",
          onclick: props.logout,
          class: "uppy-u-reset uppy-ProviderBrowser-userLogout"
        }, props.i18n('logOut')))), props.showFilter && h(Filter, props), h(ItemList, {
          columns: [{
            name: 'Name',
            key: 'title'
          }],
          folders: filteredFolders,
          files: filteredFiles,
          activeRow: props.isActiveRow,
          sortByTitle: props.sortByTitle,
          sortByDate: props.sortByDate,
          isChecked: props.isChecked,
          handleFolderClick: props.getNextFolder,
          toggleCheckbox: props.toggleCheckbox,
          handleScroll: props.handleScroll,
          title: props.title,
          showTitles: props.showTitles,
          i18n: props.i18n,
          viewType: props.viewType
        }), selected > 0 && h(FooterActions, _extends({
          selected: selected
        }, props)));
                SRTlib.send('{"type":"FUNCTIONEND","function":"Browser"},');

      };
      module.exports = Browser;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###155"},');

    }, {
      "./Breadcrumbs": 144,
      "./Filter": 146,
      "./FooterActions": 147,
      "./ItemList": 152,
      "classnames": 9,
      "preact": 51
    }],
    146: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###156","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('preact'), h = _require.h, Component = _require.Component;
      module.exports = (function (_Component) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###42","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Filter, _Component);
        function Filter(props) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this;
          _this = _Component.call(this, props) || this;
          _this.preventEnterPress = _this.preventEnterPress.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Filter"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Filter","paramsNumber":1},');

        }
        var _proto = Filter.prototype;
        _proto.preventEnterPress = function preventEnterPress(ev) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.preventEnterPress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (ev.keyCode === 13) {
            ev.stopPropagation();
            ev.preventDefault();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.preventEnterPress"},');

        };
        _proto.render = function render() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.render###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this2 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.render###3"},');

          return h("div", {
            class: "uppy-ProviderBrowser-search"
          }, h("input", {
            class: "uppy-u-reset uppy-ProviderBrowser-searchInput",
            type: "text",
            placeholder: this.props.i18n('filter'),
            "aria-label": this.props.i18n('filter'),
            onkeyup: this.preventEnterPress,
            onkeydown: this.preventEnterPress,
            onkeypress: this.preventEnterPress,
            oninput: function oninput(e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.render.render.ReturnStatement.h.h.oninput","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.render.render.ReturnStatement.h.h.oninput"},');

              return _this2.props.filterQuery(e);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.render.render.ReturnStatement.h.h.oninput"},');

            },
            value: this.props.filterInput
          }), h("svg", {
            "aria-hidden": "true",
            focusable: "false",
            class: "UppyIcon uppy-ProviderBrowser-searchIcon",
            width: "12",
            height: "12",
            viewBox: "0 0 12 12"
          }, h("path", {
            d: "M8.638 7.99l3.172 3.172a.492.492 0 1 1-.697.697L7.91 8.656a4.977 4.977 0 0 1-2.983.983C2.206 9.639 0 7.481 0 4.819 0 2.158 2.206 0 4.927 0c2.721 0 4.927 2.158 4.927 4.82a4.74 4.74 0 0 1-1.216 3.17zm-3.71.685c2.176 0 3.94-1.726 3.94-3.856 0-2.129-1.764-3.855-3.94-3.855C2.75.964.984 2.69.984 4.819c0 2.13 1.765 3.856 3.942 3.856z"
          })), this.props.filterInput && h("button", {
            class: "uppy-u-reset uppy-ProviderBrowser-searchClose",
            type: "button",
            "aria-label": this.props.i18n('resetFilter'),
            title: this.props.i18n('resetFilter'),
            onclick: this.props.filterQuery
          }, h("svg", {
            "aria-hidden": "true",
            focusable: "false",
            class: "UppyIcon",
            viewBox: "0 0 19 19"
          }, h("path", {
            d: "M17.318 17.232L9.94 9.854 9.586 9.5l-.354.354-7.378 7.378h.707l-.62-.62v.706L9.318 9.94l.354-.354-.354-.354L1.94 1.854v.707l.62-.62h-.706l7.378 7.378.354.354.354-.354 7.378-7.378h-.707l.622.62v-.706L9.854 9.232l-.354.354.354.354 7.378 7.378.708-.707-7.38-7.378v.708l7.38-7.38.353-.353-.353-.353-.622-.622-.353-.353-.354.352-7.378 7.38h.708L2.56 1.23 2.208.88l-.353.353-.622.62-.353.355.352.353 7.38 7.38v-.708l-7.38 7.38-.353.353.352.353.622.622.353.353.354-.353 7.38-7.38h-.708l7.38 7.38z"
          }))));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.render###3"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###42"},');

        return Filter;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###42"},');

      })(Component);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###156"},');

    }, {
      "preact": 51
    }],
    147: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###157","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###43","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###43"},');

        return h("div", {
          class: "uppy-ProviderBrowser-footer"
        }, h("button", {
          class: "uppy-u-reset uppy-c-btn uppy-c-btn-primary",
          onclick: props.done
        }, props.i18n('selectX', {
          smart_count: props.selected
        })), h("button", {
          class: "uppy-u-reset uppy-c-btn uppy-c-btn-link",
          onclick: props.cancel
        }, props.i18n('cancel')));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###43"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###157"},');

    }, {
      "preact": 51
    }],
    148: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###158","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###44","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###44"},');

        return h("li", {
          class: props.className
        }, h("div", {
          "aria-hidden": true,
          class: "uppy-ProviderBrowserItem-fakeCheckbox " + (props.isChecked ? 'uppy-ProviderBrowserItem-fakeCheckbox--is-checked' : '')
        }), h("button", {
          type: "button",
          class: "uppy-u-reset uppy-ProviderBrowserItem-inner",
          onclick: props.toggleCheckbox,
          role: "option",
          "aria-label": props.isChecked ? props.i18n('unselectFileNamed', {
            name: props.title
          }) : props.i18n('selectFileNamed', {
            name: props.title
          }),
          "aria-selected": props.isChecked,
          "aria-disabled": props.isDisabled,
          "data-uppy-super-focusable": true
        }, props.itemIconEl, props.showTitles && props.title));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###44"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###158"},');

    }, {
      "preact": 51
    }],
    149: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###159","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      function FileIcon() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"FileIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"FileIcon"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: 11,
          height: 14.5,
          viewBox: "0 0 44 58"
        }, h("path", {
          d: "M27.437.517a1 1 0 0 0-.094.03H4.25C2.037.548.217 2.368.217 4.58v48.405c0 2.212 1.82 4.03 4.03 4.03H39.03c2.21 0 4.03-1.818 4.03-4.03V15.61a1 1 0 0 0-.03-.28 1 1 0 0 0 0-.093 1 1 0 0 0-.03-.032 1 1 0 0 0 0-.03 1 1 0 0 0-.032-.063 1 1 0 0 0-.03-.063 1 1 0 0 0-.032 0 1 1 0 0 0-.03-.063 1 1 0 0 0-.032-.03 1 1 0 0 0-.03-.063 1 1 0 0 0-.063-.062l-14.593-14a1 1 0 0 0-.062-.062A1 1 0 0 0 28 .708a1 1 0 0 0-.374-.157 1 1 0 0 0-.156 0 1 1 0 0 0-.03-.03l-.003-.003zM4.25 2.547h22.218v9.97c0 2.21 1.82 4.03 4.03 4.03h10.564v36.438a2.02 2.02 0 0 1-2.032 2.032H4.25c-1.13 0-2.032-.9-2.032-2.032V4.58c0-1.13.902-2.032 2.03-2.032zm24.218 1.345l10.375 9.937.75.718H30.5c-1.13 0-2.032-.9-2.032-2.03V3.89z"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"FileIcon","paramsNumber":0},');

      }
      function FolderIcon() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"FolderIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"FolderIcon"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          style: {
            width: 16,
            marginRight: 3
          },
          viewBox: "0 0 276.157 276.157"
        }, h("path", {
          d: "M273.08 101.378c-3.3-4.65-8.86-7.32-15.254-7.32h-24.34V67.59c0-10.2-8.3-18.5-18.5-18.5h-85.322c-3.63 0-9.295-2.875-11.436-5.805l-6.386-8.735c-4.982-6.814-15.104-11.954-23.546-11.954H58.73c-9.292 0-18.638 6.608-21.737 15.372l-2.033 5.752c-.958 2.71-4.72 5.37-7.596 5.37H18.5C8.3 49.09 0 57.39 0 67.59v167.07c0 .886.16 1.73.443 2.52.152 3.306 1.18 6.424 3.053 9.064 3.3 4.652 8.86 7.32 15.255 7.32h188.487c11.395 0 23.27-8.425 27.035-19.18l40.677-116.188c2.11-6.035 1.43-12.164-1.87-16.816zM18.5 64.088h8.864c9.295 0 18.64-6.607 21.738-15.37l2.032-5.75c.96-2.712 4.722-5.373 7.597-5.373h29.565c3.63 0 9.295 2.876 11.437 5.806l6.386 8.735c4.982 6.815 15.104 11.954 23.546 11.954h85.322c1.898 0 3.5 1.602 3.5 3.5v26.47H69.34c-11.395 0-23.27 8.423-27.035 19.178L15 191.23V67.59c0-1.898 1.603-3.5 3.5-3.5zm242.29 49.15l-40.676 116.188c-1.674 4.78-7.812 9.135-12.877 9.135H18.75c-1.447 0-2.576-.372-3.02-.997-.442-.625-.422-1.814.057-3.18l40.677-116.19c1.674-4.78 7.812-9.134 12.877-9.134h188.487c1.448 0 2.577.372 3.02.997.443.625.423 1.814-.056 3.18z"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"FolderIcon","paramsNumber":0},');

      }
      function VideoIcon() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"VideoIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"VideoIcon"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          viewBox: "0 0 58 58"
        }, h("path", {
          d: "M36.537 28.156l-11-7a1.005 1.005 0 0 0-1.02-.033C24.2 21.3 24 21.635 24 22v14a1 1 0 0 0 1.537.844l11-7a1.002 1.002 0 0 0 0-1.688zM26 34.18V23.82L34.137 29 26 34.18z"
        }), h("path", {
          d: "M57 6H1a1 1 0 0 0-1 1v44a1 1 0 0 0 1 1h56a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1zM10 28H2v-9h8v9zm-8 2h8v9H2v-9zm10 10V8h34v42H12V40zm44-12h-8v-9h8v9zm-8 2h8v9h-8v-9zm8-22v9h-8V8h8zM2 8h8v9H2V8zm0 42v-9h8v9H2zm54 0h-8v-9h8v9z"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"VideoIcon","paramsNumber":0},');

      }
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###45","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (props.itemIconString === null) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###45"},');

          return;
        }
        switch (props.itemIconString) {
          case 'file':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###159"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###45"},');

            return h(FileIcon, null);
          case 'folder':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###159"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###45"},');

            return h(FolderIcon, null);
          case 'video':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###159"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###45"},');

            return h(VideoIcon, null);
          default:
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###159"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###45"},');

            return h("img", {
              src: props.itemIconString
            });
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###45"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###159"},');

    }, {
      "preact": 51
    }],
    150: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###160","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var getAriaLabelOfCheckbox = function getAriaLabelOfCheckbox(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getAriaLabelOfCheckbox","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (props.type === 'folder') {
          if (props.isChecked) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getAriaLabelOfCheckbox"},');

            return props.i18n('unselectAllFilesFromFolderNamed', {
              name: props.title
            });
          } else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getAriaLabelOfCheckbox"},');

            return props.i18n('selectAllFilesFromFolderNamed', {
              name: props.title
            });
          }
        } else {
          if (props.isChecked) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getAriaLabelOfCheckbox"},');

            return props.i18n('unselectFileNamed', {
              name: props.title
            });
          } else {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getAriaLabelOfCheckbox"},');

            return props.i18n('selectFileNamed', {
              name: props.title
            });
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"getAriaLabelOfCheckbox"},');

      };
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###46","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###46"},');

        return h("li", {
          class: props.className
        }, h("button", {
          type: "button",
          class: "uppy-u-reset uppy-ProviderBrowserItem-fakeCheckbox " + (props.isChecked ? 'uppy-ProviderBrowserItem-fakeCheckbox--is-checked' : ''),
          onClick: props.toggleCheckbox,
          id: props.id,
          role: "option",
          "aria-label": getAriaLabelOfCheckbox(props),
          "aria-selected": props.isChecked,
          "aria-disabled": props.isDisabled,
          "data-uppy-super-focusable": true
        }), props.type === 'file' ? h("label", {
          for: props.id,
          className: "uppy-u-reset uppy-ProviderBrowserItem-inner"
        }, props.itemIconEl, props.showTitles && props.title) : h("button", {
          type: "button",
          class: "uppy-u-reset uppy-ProviderBrowserItem-inner",
          onclick: props.handleFolderClick,
          "aria-label": props.i18n('openFolderNamed', {
            name: props.title
          })
        }, props.itemIconEl, props.showTitles && props.title));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###46"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###160"},');

    }, {
      "preact": 51
    }],
    151: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###161","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###13"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###13"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var _require = require('preact'), h = _require.h;
      var classNames = require('classnames');
      var ItemIcon = require('./components/ItemIcon');
      var GridLi = require('./components/GridLi');
      var ListLi = require('./components/ListLi');
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###47","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var itemIconString = props.getItemIcon();
        var className = classNames('uppy-ProviderBrowserItem', {
          'uppy-ProviderBrowserItem--selected': props.isChecked
        }, {
          'uppy-ProviderBrowserItem--noPreview': itemIconString === 'video'
        });
        var itemIconEl = h(ItemIcon, {
          itemIconString: itemIconString
        });
        switch (props.viewType) {
          case 'grid':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###161"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###47"},');

            return h(GridLi, _extends({}, props, {
              className: className,
              itemIconEl: itemIconEl
            }));
          case 'list':
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###161"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###47"},');

            return h(ListLi, _extends({}, props, {
              className: className,
              itemIconEl: itemIconEl
            }));
          default:
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###161"},');

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###47"},');

            throw new Error("There is no such type " + props.viewType);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###47"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###161"},');

    }, {
      "./components/GridLi": 148,
      "./components/ItemIcon": 149,
      "./components/ListLi": 150,
      "classnames": 9,
      "preact": 51
    }],
    152: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###162","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###14","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###14"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###14"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var _require = require('preact'), h = _require.h;
      var Item = require('./Item/index');
      var getSharedProps = function getSharedProps(fileOrFolder, props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getSharedProps","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"getSharedProps"},');

        return {
          id: fileOrFolder.id,
          title: fileOrFolder.name,
          getItemIcon: function getItemIcon() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.getSharedProps.getSharedProps.ReturnStatement.getItemIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.getSharedProps.getSharedProps.ReturnStatement.getItemIcon"},');

            return fileOrFolder.icon;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.getSharedProps.getSharedProps.ReturnStatement.getItemIcon"},');

          },
          isChecked: props.isChecked(fileOrFolder),
          toggleCheckbox: function toggleCheckbox(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.getSharedProps.getSharedProps.ReturnStatement.toggleCheckbox","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.getSharedProps.getSharedProps.ReturnStatement.toggleCheckbox"},');

            return props.toggleCheckbox(e, fileOrFolder);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.getSharedProps.getSharedProps.ReturnStatement.toggleCheckbox"},');

          },
          columns: props.columns,
          showTitles: props.showTitles,
          viewType: props.viewType,
          i18n: props.i18n
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"getSharedProps"},');

      };
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###48","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!props.folders.length && !props.files.length) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###48"},');

          return h("div", {
            class: "uppy-Provider-empty"
          }, props.i18n('noFilesFound'));
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###48"},');

        return h("div", {
          class: "uppy-ProviderBrowser-body"
        }, h("ul", {
          class: "uppy-ProviderBrowser-list",
          onscroll: props.handleScroll,
          role: "listbox",
          tabindex: "-1"
        }, props.folders.map(function (folder) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.ReturnStatement.h.h.props.folders.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.h.props.folders.map"},');

          return Item(_extends({}, getSharedProps(folder, props), {
            type: 'folder',
            isDisabled: props.isChecked(folder) ? props.isChecked(folder).loading : false,
            handleFolderClick: function handleFolderClick() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.ReturnStatement.h.h.props.folders.map.ReturnStatement.Item._extends.handleFolderClick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.h.props.folders.map.ReturnStatement.Item._extends.handleFolderClick"},');

              return props.handleFolderClick(folder);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.h.props.folders.map.ReturnStatement.Item._extends.handleFolderClick"},');

            }
          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.h.props.folders.map"},');

        }), props.files.map(function (file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.ReturnStatement.h.h.props.files.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.h.props.files.map"},');

          return Item(_extends({}, getSharedProps(file, props), {
            type: 'file',
            isDisabled: false
          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.ReturnStatement.h.h.props.files.map"},');

        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###48"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###162"},');

    }, {
      "./Item/index": 151,
      "preact": 51
    }],
    153: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###163","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###49","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###49"},');

        return h("div", {
          class: "uppy-Provider-loading"
        }, h("span", null, props.i18n('loading')));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###49"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###163"},');

    }, {
      "preact": 51
    }],
    154: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###164","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###15","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###15"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###15"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('preact'), h = _require.h, Component = _require.Component;
      var AuthView = require('./AuthView');
      var Browser = require('./Browser');
      var LoaderView = require('./Loader');
      var generateFileID = require('@uppy/utils/lib/generateFileID');
      var getFileType = require('@uppy/utils/lib/getFileType');
      var isPreviewSupported = require('@uppy/utils/lib/isPreviewSupported');
      function findIndex(array, predicate) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"findIndex","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        for (var i = 0; i < array.length; i++) {
          if (predicate(array[i])) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"findIndex"},');

            return i;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"findIndex"},');

        return -1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"findIndex","paramsNumber":2},');

      }
      function getOrigin() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getOrigin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (('origin' in location)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getOrigin"},');

          return location.origin;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"getOrigin"},');

        return location.protocol + "//" + location.hostname + (location.port ? ":" + location.port : '');
                SRTlib.send('{"type":"FUNCTIONEND","function":"getOrigin","paramsNumber":0},');

      }
      var CloseWrapper = (function (_Component) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CloseWrapper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(CloseWrapper, _Component);
        function CloseWrapper() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"CloseWrapper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"CloseWrapper"},');

          return _Component.apply(this, arguments) || this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"CloseWrapper","paramsNumber":0},');

        }
        var _proto = CloseWrapper.prototype;
        _proto.componentWillUnmount = function componentWillUnmount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CloseWrapper._proto.componentWillUnmount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.props.onUnmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CloseWrapper._proto.componentWillUnmount"},');

        };
        _proto.render = function render() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CloseWrapper._proto.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CloseWrapper._proto.render"},');

          return this.props.children[0];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CloseWrapper._proto.render"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CloseWrapper"},');

        return CloseWrapper;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CloseWrapper"},');

      })(Component);
      module.exports = (_temp = _class = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function ProviderView(plugin, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ProviderView","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.plugin = plugin;
          this.provider = opts.provider;
          var defaultOptions = {
            viewType: 'list',
            showTitles: true,
            showFilter: true,
            showBreadcrumbs: true
          };
          this.opts = _extends({}, defaultOptions, {}, opts);
          this.addFile = this.addFile.bind(this);
          this.filterItems = this.filterItems.bind(this);
          this.filterQuery = this.filterQuery.bind(this);
          this.toggleSearch = this.toggleSearch.bind(this);
          this.getFolder = this.getFolder.bind(this);
          this.getNextFolder = this.getNextFolder.bind(this);
          this.logout = this.logout.bind(this);
          this.preFirstRender = this.preFirstRender.bind(this);
          this.handleAuth = this.handleAuth.bind(this);
          this.sortByTitle = this.sortByTitle.bind(this);
          this.sortByDate = this.sortByDate.bind(this);
          this.isActiveRow = this.isActiveRow.bind(this);
          this.isChecked = this.isChecked.bind(this);
          this.toggleCheckbox = this.toggleCheckbox.bind(this);
          this.handleError = this.handleError.bind(this);
          this.handleScroll = this.handleScroll.bind(this);
          this.listAllFiles = this.listAllFiles.bind(this);
          this.donePicking = this.donePicking.bind(this);
          this.cancelPicking = this.cancelPicking.bind(this);
          this.clearSelection = this.clearSelection.bind(this);
          this.render = this.render.bind(this);
          this.clearSelection();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ProviderView","paramsNumber":2},');

        }
        var _proto2 = ProviderView.prototype;
        _proto2.tearDown = function tearDown() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.tearDown","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.tearDown"},');

        };
        _proto2._updateFilesAndFolders = function _updateFilesAndFolders(res, files, folders) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2._updateFilesAndFolders","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          this.nextPagePath = res.nextPagePath;
          res.items.forEach(function (item) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2._updateFilesAndFolders._updateFilesAndFolders.res.items.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (item.isFolder) {
              folders.push(item);
            } else {
              files.push(item);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._updateFilesAndFolders._updateFilesAndFolders.res.items.forEach"},');

          });
          this.plugin.setPluginState({
            folders: folders,
            files: files
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._updateFilesAndFolders"},');

        };
        _proto2.preFirstRender = function preFirstRender() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.preFirstRender","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.plugin.setPluginState({
            didFirstRender: true
          });
          this.plugin.onFirstRender();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.preFirstRender"},');

        };
        _proto2.getFolder = function getFolder(id, name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.getFolder","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.getFolder"},');

          return this._loaderWrapper(this.provider.list(id), function (res) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.getFolder.getFolder.ReturnStatement._loaderWrapper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var folders = [];
            var files = [];
            var updatedDirectories;
            var state = _this.plugin.getPluginState();
            var index = findIndex(state.directories, function (dir) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.getFolder.getFolder.ReturnStatement._loaderWrapper.index.findIndex","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.getFolder.getFolder.ReturnStatement._loaderWrapper.index.findIndex"},');

              return id === dir.id;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.getFolder.getFolder.ReturnStatement._loaderWrapper.index.findIndex"},');

            });
            if (index !== -1) {
              updatedDirectories = state.directories.slice(0, index + 1);
            } else {
              updatedDirectories = state.directories.concat([{
                id: id,
                title: name
              }]);
            }
            _this.username = _this.username ? _this.username : res.username;
            _this._updateFilesAndFolders(res, files, folders);
            _this.plugin.setPluginState({
              directories: updatedDirectories
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.getFolder.getFolder.ReturnStatement._loaderWrapper"},');

          }, this.handleError);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.getFolder"},');

        };
        _proto2.getNextFolder = function getNextFolder(folder) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.getNextFolder","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.getFolder(folder.requestPath, folder.name);
          this.lastCheckbox = undefined;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.getNextFolder"},');

        };
        _proto2.addFile = function addFile(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.addFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var tagFile = {
            id: this.providerFileToId(file),
            source: this.plugin.id,
            data: file,
            name: file.name || file.id,
            type: file.mimeType,
            isRemote: true,
            body: {
              fileId: file.id
            },
            remote: {
              companionUrl: this.plugin.opts.companionUrl,
              url: "" + this.provider.fileUrl(file.requestPath),
              body: {
                fileId: file.id
              },
              providerOptions: this.provider.opts
            }
          };
          var fileType = getFileType(tagFile);
          if (fileType && isPreviewSupported(fileType)) {
            tagFile.preview = file.thumbnail;
          }
          this.plugin.uppy.log('Adding remote file');
          try {
            this.plugin.uppy.addFile(tagFile);
          } catch (err) {
            if (!err.isRestriction) {
              this.plugin.uppy.log(err);
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.addFile"},');

        };
        _proto2.removeFile = function removeFile(id) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.removeFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this$plugin$getPlugi = this.plugin.getPluginState(), currentSelection = _this$plugin$getPlugi.currentSelection;
          this.plugin.setPluginState({
            currentSelection: currentSelection.filter(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.removeFile.removeFile.plugin.setPluginState.currentSelection.currentSelection.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.removeFile.removeFile.plugin.setPluginState.currentSelection.currentSelection.filter"},');

              return file.id !== id;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.removeFile.removeFile.plugin.setPluginState.currentSelection.currentSelection.filter"},');

            })
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.removeFile"},');

        };
        _proto2.logout = function logout() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.logout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this2 = this;
          this.provider.logout().then(function (res) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.logout.logout.provider.logout.then.catch.provider.logout.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (res.ok) {
              if (!res.revoked) {
                var message = _this2.plugin.uppy.i18n('companionUnauthorizeHint', {
                  provider: _this2.plugin.title,
                  url: res.manual_revoke_url
                });
                _this2.plugin.uppy.info(message, 'info', 7000);
              }
              var newState = {
                authenticated: false,
                files: [],
                folders: [],
                directories: []
              };
              _this2.plugin.setPluginState(newState);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.logout.logout.provider.logout.then.catch.provider.logout.then"},');

          }).catch(this.handleError);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.logout"},');

        };
        _proto2.filterQuery = function filterQuery(e) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.filterQuery","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var state = this.plugin.getPluginState();
          this.plugin.setPluginState(_extends({}, state, {
            filterInput: e ? e.target.value : ''
          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.filterQuery"},');

        };
        _proto2.toggleSearch = function toggleSearch(inputEl) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.toggleSearch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var state = this.plugin.getPluginState();
          this.plugin.setPluginState({
            isSearchVisible: !state.isSearchVisible,
            filterInput: ''
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.toggleSearch"},');

        };
        _proto2.filterItems = function filterItems(items) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.filterItems","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var state = this.plugin.getPluginState();
          if (!state.filterInput || state.filterInput === '') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.filterItems"},');

            return items;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.filterItems"},');

          return items.filter(function (folder) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.filterItems.filterItems.ReturnStatement.items.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.filterItems.filterItems.ReturnStatement.items.filter"},');

            return folder.name.toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.filterItems.filterItems.ReturnStatement.items.filter"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.filterItems"},');

        };
        _proto2.sortByTitle = function sortByTitle() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var state = _extends({}, this.plugin.getPluginState());
          var files = state.files, folders = state.folders, sorting = state.sorting;
          var sortedFiles = files.sort(function (fileA, fileB) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle.sortByTitle.sortedFiles.files.sort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (sorting === 'titleDescending') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle.sortByTitle.sortedFiles.files.sort"},');

              return fileB.name.localeCompare(fileA.name);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle.sortByTitle.sortedFiles.files.sort"},');

            return fileA.name.localeCompare(fileB.name);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle.sortByTitle.sortedFiles.files.sort"},');

          });
          var sortedFolders = folders.sort(function (folderA, folderB) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle.sortByTitle.sortedFolders.folders.sort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (sorting === 'titleDescending') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle.sortByTitle.sortedFolders.folders.sort"},');

              return folderB.name.localeCompare(folderA.name);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle.sortByTitle.sortedFolders.folders.sort"},');

            return folderA.name.localeCompare(folderB.name);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle.sortByTitle.sortedFolders.folders.sort"},');

          });
          this.plugin.setPluginState(_extends({}, state, {
            files: sortedFiles,
            folders: sortedFolders,
            sorting: sorting === 'titleDescending' ? 'titleAscending' : 'titleDescending'
          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByTitle"},');

        };
        _proto2.sortByDate = function sortByDate() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var state = _extends({}, this.plugin.getPluginState());
          var files = state.files, folders = state.folders, sorting = state.sorting;
          var sortedFiles = files.sort(function (fileA, fileB) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate.sortByDate.sortedFiles.files.sort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var a = new Date(fileA.modifiedDate);
            var b = new Date(fileB.modifiedDate);
            if (sorting === 'dateDescending') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate.sortByDate.sortedFiles.files.sort"},');

              return a > b ? -1 : a < b ? 1 : 0;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate.sortByDate.sortedFiles.files.sort"},');

            return a > b ? 1 : a < b ? -1 : 0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate.sortByDate.sortedFiles.files.sort"},');

          });
          var sortedFolders = folders.sort(function (folderA, folderB) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate.sortByDate.sortedFolders.folders.sort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var a = new Date(folderA.modifiedDate);
            var b = new Date(folderB.modifiedDate);
            if (sorting === 'dateDescending') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate.sortByDate.sortedFolders.folders.sort"},');

              return a > b ? -1 : a < b ? 1 : 0;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate.sortByDate.sortedFolders.folders.sort"},');

            return a > b ? 1 : a < b ? -1 : 0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate.sortByDate.sortedFolders.folders.sort"},');

          });
          this.plugin.setPluginState(_extends({}, state, {
            files: sortedFiles,
            folders: sortedFolders,
            sorting: sorting === 'dateDescending' ? 'dateAscending' : 'dateDescending'
          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortByDate"},');

        };
        _proto2.sortBySize = function sortBySize() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.sortBySize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var state = _extends({}, this.plugin.getPluginState());
          var files = state.files, sorting = state.sorting;
          if (!files.length || !this.plugin.getItemData(files[0]).size) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortBySize"},');

            return;
          }
          var sortedFiles = files.sort(function (fileA, fileB) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.sortBySize.sortBySize.sortedFiles.files.sort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var a = fileA.size;
            var b = fileB.size;
            if (sorting === 'sizeDescending') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortBySize.sortBySize.sortedFiles.files.sort"},');

              return a > b ? -1 : a < b ? 1 : 0;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortBySize.sortBySize.sortedFiles.files.sort"},');

            return a > b ? 1 : a < b ? -1 : 0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortBySize.sortBySize.sortedFiles.files.sort"},');

          });
          this.plugin.setPluginState(_extends({}, state, {
            files: sortedFiles,
            sorting: sorting === 'sizeDescending' ? 'sizeAscending' : 'sizeDescending'
          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.sortBySize"},');

        };
        _proto2.isActiveRow = function isActiveRow(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.isActiveRow","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.isActiveRow"},');

          return this.plugin.getPluginState().activeRow === this.plugin.getItemId(file);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.isActiveRow"},');

        };
        _proto2.isChecked = function isChecked(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.isChecked","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this$plugin$getPlugi2 = this.plugin.getPluginState(), currentSelection = _this$plugin$getPlugi2.currentSelection;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.isChecked"},');

          return currentSelection.some(function (item) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.isChecked.isChecked.ReturnStatement.currentSelection.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.isChecked.isChecked.ReturnStatement.currentSelection.some"},');

            return item.id === file.id;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.isChecked.isChecked.ReturnStatement.currentSelection.some"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.isChecked"},');

        };
        _proto2.addFolder = function addFolder(folder) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.addFolder","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this3 = this;
          var folderId = this.providerFileToId(folder);
          var state = this.plugin.getPluginState();
          var folders = state.selectedFolders || ({});
          if ((folderId in folders) && folders[folderId].loading) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.addFolder"},');

            return;
          }
          folders[folderId] = {
            loading: true,
            files: []
          };
          this.plugin.setPluginState({
            selectedFolders: folders
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.addFolder"},');

          return this.listAllFiles(folder.requestPath).then(function (files) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.addFolder.addFolder.ReturnStatement.listAllFiles.then.catch.listAllFiles.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            files.forEach(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.addFolder.addFolder.ReturnStatement.listAllFiles.then.catch.listAllFiles.then.files.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this3.addFile(file);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.addFolder.addFolder.ReturnStatement.listAllFiles.then.catch.listAllFiles.then.files.forEach"},');

            });
            var ids = files.map(_this3.providerFileToId);
            state = _this3.plugin.getPluginState();
            state.selectedFolders[folderId] = {
              loading: false,
              files: ids
            };
            _this3.plugin.setPluginState({
              selectedFolders: folders
            });
            var message;
            if (files.length) {
              message = _this3.plugin.uppy.i18n('folderAdded', {
                smart_count: files.length,
                folder: folder.name
              });
            } else {
              message = _this3.plugin.uppy.i18n('emptyFolderAdded');
            }
            _this3.plugin.uppy.info(message);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.addFolder.addFolder.ReturnStatement.listAllFiles.then.catch.listAllFiles.then"},');

          }).catch(function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.addFolder.addFolder.ReturnStatement.listAllFiles.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            state = _this3.plugin.getPluginState();
            delete state.selectedFolders[folderId];
            _this3.plugin.setPluginState({
              selectedFolders: state.selectedFolders
            });
            _this3.handleError(e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.addFolder.addFolder.ReturnStatement.listAllFiles.then.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.addFolder"},');

        };
        _proto2.toggleCheckbox = function toggleCheckbox(e, file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.toggleCheckbox","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          e.stopPropagation();
          e.preventDefault();
          e.currentTarget.focus();
          var _this$plugin$getPlugi3 = this.plugin.getPluginState(), folders = _this$plugin$getPlugi3.folders, files = _this$plugin$getPlugi3.files;
          var items = this.filterItems(folders.concat(files));
          if (this.lastCheckbox && e.shiftKey) {
            var _currentSelection;
            var prevIndex = items.indexOf(this.lastCheckbox);
            var currentIndex = items.indexOf(file);
            if (prevIndex < currentIndex) {
              _currentSelection = items.slice(prevIndex, currentIndex + 1);
            } else {
              _currentSelection = items.slice(currentIndex, prevIndex + 1);
            }
            this.plugin.setPluginState({
              currentSelection: _currentSelection
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.toggleCheckbox"},');

            return;
          }
          this.lastCheckbox = file;
          var _this$plugin$getPlugi4 = this.plugin.getPluginState(), currentSelection = _this$plugin$getPlugi4.currentSelection;
          if (this.isChecked(file)) {
            this.plugin.setPluginState({
              currentSelection: currentSelection.filter(function (item) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.toggleCheckbox.toggleCheckbox.plugin.setPluginState.currentSelection.currentSelection.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.toggleCheckbox.toggleCheckbox.plugin.setPluginState.currentSelection.currentSelection.filter"},');

                return item.id !== file.id;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.toggleCheckbox.toggleCheckbox.plugin.setPluginState.currentSelection.currentSelection.filter"},');

              })
            });
          } else {
            this.plugin.setPluginState({
              currentSelection: currentSelection.concat([file])
            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.toggleCheckbox"},');

        };
        _proto2.providerFileToId = function providerFileToId(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.providerFileToId","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.providerFileToId"},');

          return generateFileID({
            data: file,
            name: file.name || file.id,
            type: file.mimeType
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.providerFileToId"},');

        };
        _proto2.handleAuth = function handleAuth() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.handleAuth","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this4 = this;
          var authState = btoa(JSON.stringify({
            origin: getOrigin()
          }));
          var clientVersion = encodeURIComponent("@uppy/provider-views=" + ProviderView.VERSION);
          var link = this.provider.authUrl() + "?state=" + authState + "&uppyVersions=" + clientVersion;
          var authWindow = window.open(link, '_blank');
          var handleToken = function handleToken(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"handleToken","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (!_this4._isOriginAllowed(e.origin, _this4.plugin.opts.companionAllowedHosts) || e.source !== authWindow) {
              _this4.plugin.uppy.log("rejecting event from " + e.origin + " vs allowed pattern " + _this4.plugin.opts.companionAllowedHosts);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"handleToken"},');

              return;
            }
            var data = typeof e.data === 'string' ? JSON.parse(e.data) : e.data;
            if (!data.token) {
              _this4.plugin.uppy.log('did not receive token from auth window');
                            SRTlib.send('{"type":"FUNCTIONEND","function":"handleToken"},');

              return;
            }
            authWindow.close();
            window.removeEventListener('message', handleToken);
            _this4.provider.setAuthToken(data.token);
            _this4.preFirstRender();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"handleToken"},');

          };
          window.addEventListener('message', handleToken);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.handleAuth"},');

        };
        _proto2._isOriginAllowed = function _isOriginAllowed(origin, allowedOrigin) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2._isOriginAllowed","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var getRegex = function getRegex(value) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getRegex","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (typeof value === 'string') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"getRegex"},');

              return new RegExp("^" + value + "$");
            } else if (value instanceof RegExp) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"getRegex"},');

              return value;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getRegex"},');

          };
          var patterns = Array.isArray(allowedOrigin) ? allowedOrigin.map(getRegex) : [getRegex(allowedOrigin)];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._isOriginAllowed"},');

          return patterns.filter(function (pattern) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2._isOriginAllowed._isOriginAllowed.ReturnStatement.patterns.filter.some.patterns.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._isOriginAllowed._isOriginAllowed.ReturnStatement.patterns.filter.some.patterns.filter"},');

            return pattern != null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._isOriginAllowed._isOriginAllowed.ReturnStatement.patterns.filter.some.patterns.filter"},');

          }).some(function (pattern) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2._isOriginAllowed._isOriginAllowed.ReturnStatement.patterns.filter.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._isOriginAllowed._isOriginAllowed.ReturnStatement.patterns.filter.some"},');

            return pattern.test(origin) || pattern.test(origin + "/");
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._isOriginAllowed._isOriginAllowed.ReturnStatement.patterns.filter.some"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._isOriginAllowed"},');

        };
        _proto2.handleError = function handleError(error) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.handleError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var uppy = this.plugin.uppy;
          uppy.log(error.toString());
          if (error.isAuthError) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.handleError"},');

            return;
          }
          var message = uppy.i18n('companionError');
          uppy.info({
            message: message,
            details: error.toString()
          }, 'error', 5000);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.handleError"},');

        };
        _proto2.handleScroll = function handleScroll(e) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.handleScroll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this5 = this;
          var scrollPos = e.target.scrollHeight - (e.target.scrollTop + e.target.offsetHeight);
          var path = this.nextPagePath || null;
          if (scrollPos < 50 && path && !this._isHandlingScroll) {
            this.provider.list(path).then(function (res) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.handleScroll.handleScroll.provider.list.then.catch.then.provider.list.then.catch.provider.list.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var _this5$plugin$getPlug = _this5.plugin.getPluginState(), files = _this5$plugin$getPlug.files, folders = _this5$plugin$getPlug.folders;
              _this5._updateFilesAndFolders(res, files, folders);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.handleScroll.handleScroll.provider.list.then.catch.then.provider.list.then.catch.provider.list.then"},');

            }).catch(this.handleError).then(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.handleScroll.handleScroll.provider.list.then.catch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              _this5._isHandlingScroll = false;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.handleScroll.handleScroll.provider.list.then.catch.then"},');

            });
            this._isHandlingScroll = true;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.handleScroll"},');

        };
        _proto2.listAllFiles = function listAllFiles(path, files) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this6 = this;
          if (files === void 0) {
            files = null;
          }
          files = files || [];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this6.provider.list(path).then(function (res) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              res.items.forEach(function (item) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then.res.items.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (!item.isFolder) {
                  files.push(item);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then.res.items.forEach"},');

              });
              var moreFiles = res.nextPagePath || null;
              if (moreFiles) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then"},');

                return _this6.listAllFiles(moreFiles, files).then(function (files) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then.ReturnStatement._this6.listAllFiles.then.catch._this6.listAllFiles.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then.ReturnStatement._this6.listAllFiles.then.catch._this6.listAllFiles.then"},');

                  return resolve(files);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then.ReturnStatement._this6.listAllFiles.then.catch._this6.listAllFiles.then"},');

                }).catch(function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then.ReturnStatement._this6.listAllFiles.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then.ReturnStatement._this6.listAllFiles.then.catch"},');

                  return reject(e);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then.ReturnStatement._this6.listAllFiles.then.catch"},');

                });
              } else {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then"},');

                return resolve(files);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch._this6.provider.list.then"},');

            }).catch(function (e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch"},');

              return reject(e);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression._this6.provider.list.then.catch"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles.listAllFiles.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.listAllFiles"},');

        };
        _proto2.donePicking = function donePicking() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.donePicking","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this7 = this;
          var _this$plugin$getPlugi5 = this.plugin.getPluginState(), currentSelection = _this$plugin$getPlugi5.currentSelection;
          var promises = currentSelection.map(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.donePicking.donePicking.promises.currentSelection.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (file.isFolder) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.donePicking.donePicking.promises.currentSelection.map"},');

              return _this7.addFolder(file);
            } else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.donePicking.donePicking.promises.currentSelection.map"},');

              return _this7.addFile(file);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.donePicking.donePicking.promises.currentSelection.map"},');

          });
          this._loaderWrapper(Promise.all(promises), function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.donePicking.donePicking._loaderWrapper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this7.clearSelection();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.donePicking.donePicking._loaderWrapper"},');

          }, function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.donePicking.donePicking._loaderWrapper###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.donePicking.donePicking._loaderWrapper###2"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.donePicking"},');

        };
        _proto2.cancelPicking = function cancelPicking() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.cancelPicking","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.clearSelection();
          var dashboard = this.plugin.uppy.getPlugin('Dashboard');
          if (dashboard) dashboard.hideAllPanels();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.cancelPicking"},');

        };
        _proto2.clearSelection = function clearSelection() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.clearSelection","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.plugin.setPluginState({
            currentSelection: []
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.clearSelection"},');

        };
        _proto2._loaderWrapper = function _loaderWrapper(promise, then, catch_) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2._loaderWrapper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var _this8 = this;
          promise.then(function (result) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2._loaderWrapper._loaderWrapper.promise.then.catch.promise.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this8.plugin.setPluginState({
              loading: false
            });
            then(result);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._loaderWrapper._loaderWrapper.promise.then.catch.promise.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2._loaderWrapper._loaderWrapper.promise.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this8.plugin.setPluginState({
              loading: false
            });
            catch_(err);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._loaderWrapper._loaderWrapper.promise.then.catch"},');

          });
          this.plugin.setPluginState({
            loading: true
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2._loaderWrapper"},');

        };
        _proto2.render = function render(state, viewOptions) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto2.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (viewOptions === void 0) {
            viewOptions = {};
          }
          var _this$plugin$getPlugi6 = this.plugin.getPluginState(), authenticated = _this$plugin$getPlugi6.authenticated, didFirstRender = _this$plugin$getPlugi6.didFirstRender;
          if (!didFirstRender) {
            this.preFirstRender();
          }
          if (this.plugin.getPluginState().loading) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.render"},');

            return h(CloseWrapper, {
              onUnmount: this.clearSelection
            }, h(LoaderView, {
              i18n: this.plugin.uppy.i18n
            }));
          }
          if (!authenticated) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.render"},');

            return h(CloseWrapper, {
              onUnmount: this.clearSelection
            }, h(AuthView, {
              pluginName: this.plugin.title,
              pluginIcon: this.plugin.icon,
              handleAuth: this.handleAuth,
              i18n: this.plugin.uppy.i18n,
              i18nArray: this.plugin.uppy.i18nArray
            }));
          }
          var targetViewOptions = _extends({}, this.opts, {}, viewOptions);
          var browserProps = _extends({}, this.plugin.getPluginState(), {
            username: this.username,
            getNextFolder: this.getNextFolder,
            getFolder: this.getFolder,
            filterItems: this.filterItems,
            filterQuery: this.filterQuery,
            toggleSearch: this.toggleSearch,
            sortByTitle: this.sortByTitle,
            sortByDate: this.sortByDate,
            logout: this.logout,
            isActiveRow: this.isActiveRow,
            isChecked: this.isChecked,
            toggleCheckbox: this.toggleCheckbox,
            handleScroll: this.handleScroll,
            listAllFiles: this.listAllFiles,
            done: this.donePicking,
            cancel: this.cancelPicking,
            title: this.plugin.title,
            viewType: targetViewOptions.viewType,
            showTitles: targetViewOptions.showTitles,
            showFilter: targetViewOptions.showFilter,
            showBreadcrumbs: targetViewOptions.showBreadcrumbs,
            pluginIcon: this.plugin.icon,
            i18n: this.plugin.uppy.i18n
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.render"},');

          return h(CloseWrapper, {
            onUnmount: this.clearSelection
          }, h(Browser, browserProps));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto2.render"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###10"},');

        return ProviderView;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###10"},');

      })(), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###164"},');

    }, {
      "../package.json": 155,
      "./AuthView": 143,
      "./Browser": 145,
      "./Loader": 153,
      "@uppy/utils/lib/generateFileID": 206,
      "@uppy/utils/lib/getFileType": 214,
      "@uppy/utils/lib/isPreviewSupported": 224,
      "preact": 51
    }],
    155: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###165","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/provider-views",
        "description": "View library for Uppy remote provider plugins.",
        "version": "1.6.6",
        "license": "MIT",
        "main": "lib/index.js",
        "style": "dist/style.min.css",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/utils": "file:../utils",
          "classnames": "^2.2.6",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###165"},');

    }, {}],
    156: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###166","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      require('es6-promise/auto');
      require('whatwg-fetch');
      module.exports = require('./');
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###166"},');

    }, {
      "./": 166,
      "es6-promise/auto": 169,
      "whatwg-fetch": 86
    }],
    157: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###167","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var toArray = require('@uppy/utils/lib/toArray');
      var findDOMElement = require('@uppy/utils/lib/findDOMElement');
      var AttachFileInputs = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AttachFileInputs","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(AttachFileInputs, _Plugin);
        function AttachFileInputs(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"AttachFileInputs","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.id = _this.opts.id || 'AttachFileInputs';
          _this.type = 'acquirer';
          _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));
          _this.inputs = null;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"AttachFileInputs"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"AttachFileInputs","paramsNumber":2},');

        }
        var _proto = AttachFileInputs.prototype;
        _proto.handleChange = function handleChange(event) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AttachFileInputs._proto.handleChange","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.addFiles(event.target);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs._proto.handleChange"},');

        };
        _proto.addFiles = function addFiles(input) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AttachFileInputs._proto.addFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this2 = this;
          var files = toArray(input.files);
          files.forEach(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AttachFileInputs._proto.addFiles.addFiles.files.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            try {
              _this2.uppy.addFile({
                source: _this2.id,
                name: file.name,
                type: file.type,
                data: file
              });
            } catch (err) {
              if (!err.isRestriction) {
                _this2.uppy.log(err);
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs._proto.addFiles.addFiles.files.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs._proto.addFiles"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AttachFileInputs._proto.install","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this3 = this;
          this.el = findDOMElement(this.opts.target);
          if (!this.el) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs._proto.install"},');

            throw new Error('[AttachFileInputs] Target form does not exist');
          }
          var restrictions = this.uppy.opts.restrictions;
          this.inputs = this.el.querySelectorAll('input[type="file"]');
          this.inputs.forEach(function (input) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AttachFileInputs._proto.install.install.inputs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            input.addEventListener('change', _this3.handleChange);
            if (!input.hasAttribute('multiple')) {
              if (restrictions.maxNumberOfFiles !== 1) {
                input.setAttribute('multiple', 'multiple');
              } else {
                input.removeAttribute('multiple');
              }
            }
            if (!input.hasAttribute('accept') && restrictions.allowedFileTypes) {
              input.setAttribute('accept', restrictions.allowedFileTypes.join(','));
            }
            _this3.addFiles(input);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs._proto.install.install.inputs.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs._proto.install"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AttachFileInputs._proto.uninstall","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this4 = this;
          this.inputs.forEach(function (input) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AttachFileInputs._proto.uninstall.uninstall.inputs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            input.removeEventListener('change', _this4.handleChange);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs._proto.uninstall.uninstall.inputs.forEach"},');

          });
          this.inputs = null;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs._proto.uninstall"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs"},');

        return AttachFileInputs;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AttachFileInputs"},');

      })(Plugin);
      module.exports = AttachFileInputs;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###167"},');

    }, {
      "@uppy/core": 97,
      "@uppy/utils/lib/findDOMElement": 205,
      "@uppy/utils/lib/toArray": 229
    }],
    158: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###168","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var findDOMElement = require('@uppy/utils/lib/findDOMElement');
      var TransloaditFormResult = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditFormResult","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(TransloaditFormResult, _Plugin);
        function TransloaditFormResult(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"TransloaditFormResult","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.id = _this.opts.id || 'TransloaditFormResult';
          _this.type = 'modifier';
          _this.handleUpload = _this.handleUpload.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"TransloaditFormResult"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"TransloaditFormResult","paramsNumber":2},');

        }
        var _proto = TransloaditFormResult.prototype;
        _proto.getAssemblyStatuses = function getAssemblyStatuses(fileIDs) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditFormResult._proto.getAssemblyStatuses","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this2 = this;
          var assemblyIds = [];
          fileIDs.forEach(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditFormResult._proto.getAssemblyStatuses.getAssemblyStatuses.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var file = _this2.uppy.getFile(fileID);
            var assembly = file.transloadit && file.transloadit.assembly;
            if (assembly && assemblyIds.indexOf(assembly) === -1) {
              assemblyIds.push(assembly);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult._proto.getAssemblyStatuses.getAssemblyStatuses.fileIDs.forEach"},');

          });
          var tl = this.uppy.getPlugin(this.opts.transloaditPluginId || 'Transloadit');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult._proto.getAssemblyStatuses"},');

          return assemblyIds.map(function (id) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditFormResult._proto.getAssemblyStatuses.getAssemblyStatuses.ReturnStatement.assemblyIds.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult._proto.getAssemblyStatuses.getAssemblyStatuses.ReturnStatement.assemblyIds.map"},');

            return tl.getAssembly(id);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult._proto.getAssemblyStatuses.getAssemblyStatuses.ReturnStatement.assemblyIds.map"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult._proto.getAssemblyStatuses"},');

        };
        _proto.handleUpload = function handleUpload(fileIDs) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditFormResult._proto.handleUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var assemblies = this.getAssemblyStatuses(fileIDs);
          var input = document.createElement('input');
          input.type = 'hidden';
          input.name = this.opts.name;
          input.value = JSON.stringify(assemblies);
          var target = findDOMElement(this.opts.target);
          target.appendChild(input);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult._proto.handleUpload"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditFormResult._proto.install","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.uppy.addPostProcessor(this.handleUpload);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult._proto.install"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditFormResult._proto.uninstall","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.uppy.removePostProcessor(this.handleUpload);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult._proto.uninstall"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult"},');

        return TransloaditFormResult;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditFormResult"},');

      })(Plugin);
      module.exports = TransloaditFormResult;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###168"},');

    }, {
      "@uppy/core": 97,
      "@uppy/utils/lib/findDOMElement": 205
    }],
    159: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###169","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###16","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###16"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###16"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var TransloaditResultsPlugin = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditResultsPlugin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(TransloaditResultsPlugin, _Plugin);
        function TransloaditResultsPlugin(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"TransloaditResultsPlugin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.type = 'modifier';
          _this.id = _this.opts.id || 'TransloaditResultsPlugin';
          _this._afterUpload = _this._afterUpload.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"TransloaditResultsPlugin"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"TransloaditResultsPlugin","paramsNumber":2},');

        }
        var _proto = TransloaditResultsPlugin.prototype;
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditResultsPlugin._proto.install","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.uppy.addPostProcessor(this._afterUpload);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditResultsPlugin._proto.install"},');

        };
        _proto._afterUpload = function _afterUpload(fileIDs, uploadID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditResultsPlugin._proto._afterUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this$uppy$getState = this.uppy.getState(), currentUploads = _this$uppy$getState.currentUploads;
          var result = currentUploads[uploadID].result;
          var assemblies = result && Array.isArray(result.transloadit) ? result.transloadit : [];
          var assemblyResults = [];
          assemblies.forEach(function (assembly) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditResultsPlugin._proto._afterUpload._afterUpload.assemblies.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            Object.keys(assembly.results).forEach(function (stepName) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditResultsPlugin._proto._afterUpload._afterUpload.assemblies.forEach.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var results = assembly.results[stepName];
              results.forEach(function (result) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditResultsPlugin._proto._afterUpload._afterUpload.assemblies.forEach.Object.keys.forEach.results.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                assemblyResults.push(_extends({}, result, {
                  assemblyId: assembly.assembly_id,
                  stepName: stepName
                }));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditResultsPlugin._proto._afterUpload._afterUpload.assemblies.forEach.Object.keys.forEach.results.forEach"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditResultsPlugin._proto._afterUpload._afterUpload.assemblies.forEach.Object.keys.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditResultsPlugin._proto._afterUpload._afterUpload.assemblies.forEach"},');

          });
          this.uppy.addResultData(uploadID, {
            results: assemblyResults
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditResultsPlugin._proto._afterUpload"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditResultsPlugin"},');

        return TransloaditResultsPlugin;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditResultsPlugin"},');

      })(Plugin);
      module.exports = TransloaditResultsPlugin;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###169"},');

    }, {
      "@uppy/core": 97
    }],
    160: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###170","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###17","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###17"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###17"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var Dashboard = require('@uppy/dashboard');
      var has = require('@uppy/utils/lib/hasProperty');
      var dashboardOptionNames = ['metaFields', 'width', 'height', 'thumbnailWidth', 'showLinkToFileUploadResult', 'showProgressDetails', 'hideRetryButton', 'hidePauseResumeCancelButtons', 'hideUploadButton', 'hideProgressAfterFinish', 'note', 'disableStatusBar', 'disableInformer', 'disableThumbnailGenerator', 'showSelectedFiles', 'proudlyDisplayPoweredByUppy', 'theme'];
      var modalDashboardOptionNames = ['trigger', 'closeModalOnClickOutside', 'closeAfterFinish', 'disablePageScrollWhenModalOpen', 'animateOpenClose', 'onRequestCloseModal', 'browserBackButtonClose'];
      function addDashboardPlugin(uppy, opts, overrideOpts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"addDashboardPlugin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var dashboardOpts = {};
        dashboardOptionNames.forEach(function (key) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"dashboardOptionNames.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (has(opts, key)) {
            dashboardOpts[key] = opts[key];
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"dashboardOptionNames.forEach"},');

        });
        var inline = overrideOpts.inline == null ? dashboardOpts.inline : overrideOpts.inline;
        if (!inline) {
          modalDashboardOptionNames.forEach(function (key) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"modalDashboardOptionNames.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (has(opts, key)) {
              dashboardOpts[key] = opts[key];
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"modalDashboardOptionNames.forEach"},');

          });
        }
        uppy.use(Dashboard, _extends({}, dashboardOpts, {}, overrideOpts));
                SRTlib.send('{"type":"FUNCTIONEND","function":"addDashboardPlugin","paramsNumber":3},');

      }
      module.exports = addDashboardPlugin;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###170"},');

    }, {
      "@uppy/dashboard": 118,
      "@uppy/utils/lib/hasProperty": 219
    }],
    161: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###171","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###18","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###18"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###18"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var Transloadit = require('@uppy/transloadit');
      var has = require('@uppy/utils/lib/hasProperty');
      var remoteProviders = {
        dropbox: require('@uppy/dropbox'),
        'google-drive': require('@uppy/google-drive'),
        instagram: require('@uppy/instagram'),
        facebook: require('@uppy/facebook'),
        onedrive: require('@uppy/onedrive'),
        url: require('@uppy/url')
      };
      var localProviders = {
        webcam: require('@uppy/webcam')
      };
      var remoteProviderOptionNames = ['companionUrl', 'companionAllowedHosts', 'companionHeaders', 'serverHeaders', 'target'];
      var localProviderOptionNames = ['target'];
      function addRemoteProvider(uppy, name, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"addRemoteProvider","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var Provider = remoteProviders[name];
        var providerOptions = {
          companionUrl: Transloadit.COMPANION,
          companionAllowedHosts: Transloadit.COMPANION_PATTERN
        };
        remoteProviderOptionNames.forEach(function (name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"remoteProviderOptionNames.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (has(opts, name)) providerOptions[name] = opts[name];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"remoteProviderOptionNames.forEach"},');

        });
        if (typeof opts[name] === 'object') {
          _extends(providerOptions, opts[name]);
        }
        uppy.use(Provider, providerOptions);
                SRTlib.send('{"type":"FUNCTIONEND","function":"addRemoteProvider","paramsNumber":3},');

      }
      function addLocalProvider(uppy, name, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"addLocalProvider","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var Provider = localProviders[name];
        var providerOptions = {};
        localProviderOptionNames.forEach(function (name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"localProviderOptionNames.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (has(opts, name)) providerOptions[name] = opts[name];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"localProviderOptionNames.forEach"},');

        });
        if (typeof opts[name] === 'object') {
          _extends(providerOptions, opts[name]);
        }
        uppy.use(Provider, providerOptions);
                SRTlib.send('{"type":"FUNCTIONEND","function":"addLocalProvider","paramsNumber":3},');

      }
      function addProviders(uppy, names, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"addProviders","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (opts === void 0) {
          opts = {};
        }
        names.forEach(function (name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"names.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (has(remoteProviders, name)) {
            addRemoteProvider(uppy, name, opts);
          } else if (has(localProviders, name)) {
            addLocalProvider(uppy, name, opts);
          } else {
            var validNames = [].concat(Object.keys(remoteProviders), Object.keys(localProviders));
            var expectedNameString = validNames.sort().map(function (validName) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"names.forEach.expectedNameString.validNames.sort.map.join.validNames.sort.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"names.forEach.expectedNameString.validNames.sort.map.join.validNames.sort.map"},');

              return "'" + validName + "'";
                            SRTlib.send('{"type":"FUNCTIONEND","function":"names.forEach.expectedNameString.validNames.sort.map.join.validNames.sort.map"},');

            }).join(', ');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"names.forEach"},');

            throw new Error("Unexpected provider '" + name + "', expected one of [" + expectedNameString + "]");
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"names.forEach"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"addProviders","paramsNumber":3},');

      }
      module.exports = addProviders;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###171"},');

    }, {
      "@uppy/dropbox": 128,
      "@uppy/facebook": 130,
      "@uppy/google-drive": 135,
      "@uppy/instagram": 139,
      "@uppy/onedrive": 141,
      "@uppy/transloadit": 186,
      "@uppy/url": 193,
      "@uppy/utils/lib/hasProperty": 219,
      "@uppy/webcam": 237
    }],
    162: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###172","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var Transloadit = require('@uppy/transloadit');
      var has = require('@uppy/utils/lib/hasProperty');
      var TransloaditResults = require('./TransloaditResultsPlugin');
      var transloaditOptionNames = ['service', 'waitForEncoding', 'waitForMetadata', 'alwaysRunAssembly', 'importFromUploadURLs', 'signature', 'params', 'fields', 'getAssemblyOptions'];
      function addTransloaditPlugin(uppy, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"addTransloaditPlugin","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var transloaditOptions = {};
        transloaditOptionNames.forEach(function (name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"transloaditOptionNames.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (has(opts, name)) transloaditOptions[name] = opts[name];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"transloaditOptionNames.forEach"},');

        });
        uppy.use(Transloadit, transloaditOptions);
        if (transloaditOptions.waitForEncoding) {
          uppy.use(TransloaditResults);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"addTransloaditPlugin","paramsNumber":2},');

      }
      module.exports = addTransloaditPlugin;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###172"},');

    }, {
      "./TransloaditResultsPlugin": 159,
      "@uppy/transloadit": 186,
      "@uppy/utils/lib/hasProperty": 219
    }],
    163: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###173","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###19","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###19"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###19"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var Uppy = require('@uppy/core');
      var has = require('@uppy/utils/lib/hasProperty');
      var eventNames = {
        onFileAdded: 'file-added',
        onFileRemoved: 'file-removed',
        onImportError: 'transloadit:import-error',
        onAssemblyCreated: 'transloadit:assembly-created',
        onAssemblyExecuting: 'transloadit:assembly-executing',
        onAssemblyError: 'transloadit:assembly-error',
        onAssemblyComplete: 'transloadit:complete',
        onResult: 'transloadit:result',
        onStart: 'upload',
        onPause: 'pause-all',
        onFilePause: 'upload-pause',
        onCancel: 'cancel-all',
        onError: 'error',
        onFileCancel: 'upload-cancel',
        onFileProgress: 'upload-progress',
        onFileError: 'upload-error',
        onUploaded: 'transloadit:upload',
        onComplete: 'complete'
      };
      var uppyOptionNames = ['autoProceed', 'restrictions', 'meta', 'onBeforeFileAdded', 'onBeforeUpload', 'debug'];
      function createUppy(opts, overrides) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createUppy","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (overrides === void 0) {
          overrides = {};
        }
        var uppyOptions = {};
        uppyOptionNames.forEach(function (name) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"uppyOptionNames.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (has(opts, name)) uppyOptions[name] = opts[name];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"uppyOptionNames.forEach"},');

        });
        _extends(uppyOptions, overrides);
        var uppy = Uppy(uppyOptions);
        Object.keys(eventNames).forEach(function (optionName) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var eventName = eventNames[optionName];
          if (typeof opts[optionName] === 'function') {
            uppy.on(eventName, opts[optionName]);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Object.keys.forEach"},');

        });
        if (typeof opts.onProgress === 'function') {
          uppy.on('upload-progress', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"uppy.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _uppy$getState = uppy.getState(), totalProgress = _uppy$getState.totalProgress;
            opts.onProgress.call(uppy, totalProgress);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"uppy.on"},');

          });
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"createUppy"},');

        return uppy;
                SRTlib.send('{"type":"FUNCTIONEND","function":"createUppy","paramsNumber":2},');

      }
      module.exports = createUppy;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###173"},');

    }, {
      "@uppy/core": 97,
      "@uppy/utils/lib/hasProperty": 219
    }],
    164: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###174","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###20","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###20"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###20"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var createUppy = require('./createUppy');
      var addDashboardPlugin = require('./addDashboardPlugin');
      var addTransloaditPlugin = require('./addTransloaditPlugin');
      var addProviders = require('./addProviders');
      function dashboard(target, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"dashboard","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (opts === void 0) {
          opts = {};
        }
        var inline = opts.inline == null ? true : opts.inline;
        var pluginId = 'Dashboard';
        var uppy = createUppy(opts);
        addTransloaditPlugin(uppy, opts);
        addDashboardPlugin(uppy, opts, {
          id: pluginId,
          inline: inline,
          target: target,
          closeAfterFinish: false
        });
        if (Array.isArray(opts.providers)) {
          addProviders(uppy, opts.providers, _extends({}, opts, {
            target: uppy.getPlugin(pluginId)
          }));
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"dashboard"},');

        return uppy;
                SRTlib.send('{"type":"FUNCTIONEND","function":"dashboard","paramsNumber":2},');

      }
      module.exports = dashboard;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###174"},');

    }, {
      "./addDashboardPlugin": 160,
      "./addProviders": 161,
      "./addTransloaditPlugin": 162,
      "./createUppy": 163
    }],
    165: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###175","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###21","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###21"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###21"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var Uppy = require('@uppy/core');
      var Form = require('@uppy/form');
      var StatusBar = require('@uppy/status-bar');
      var findDOMElement = require('@uppy/utils/lib/findDOMElement');
      var has = require('@uppy/utils/lib/hasProperty');
      var AttachFileInputs = require('./AttachFileInputs');
      var TransloaditFormResult = require('./TransloaditFormResult');
      var addDashboardPlugin = require('./addDashboardPlugin');
      var addTransloaditPlugin = require('./addTransloaditPlugin');
      var addProviders = require('./addProviders');
      var defaultLocaleStrings = {
        chooseFiles: 'Choose files'
      };
      function mergeDefaultLocale(defaults, userProvided) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"mergeDefaultLocale","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (userProvided === void 0) {
          userProvided = {};
        }
        var strings = userProvided.strings || ({});
                SRTlib.send('{"type":"FUNCTIONEND","function":"mergeDefaultLocale"},');

        return _extends({}, userProvided, {
          strings: _extends({}, defaults, {}, strings)
        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"mergeDefaultLocale","paramsNumber":2},');

      }
      function form(target, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"form","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (!opts) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"form"},');

          throw new TypeError('robodog.form: must provide an options object');
        }
        opts = _extends({}, opts, {
          locale: mergeDefaultLocale(defaultLocaleStrings, opts.locale)
        });
        var uppy = Uppy(opts);
        addTransloaditPlugin(uppy, opts);
        uppy.use(TransloaditFormResult, {
          target: target,
          transloaditPluginId: 'Transloadit',
          name: 'transloadit'
        });
        var submitOnSuccess = true;
        if (has(opts, 'submitOnSuccess')) {
          submitOnSuccess = !!opts.submitOnSuccess;
        }
        var formOptions = {
          target: target,
          triggerUploadOnSubmit: true,
          submitOnSuccess: submitOnSuccess,
          addResultToForm: false
        };
        if (has(opts, 'triggerUploadOnSubmit')) {
          formOptions.triggerUploadOnSubmit = opts.triggerUploadOnSubmit;
        }
        uppy.use(Form, formOptions);
        var useDashboard = opts.dashboard || opts.modal;
        if (useDashboard) {
          var dashboardTarget = findDOMElement(opts.dashboard) || document.body;
          var dashboardId = 'form:Dashboard';
          var dashboardOpts = {
            id: dashboardId,
            target: dashboardTarget
          };
          if (opts.modal) {
            var trigger = 'input[type="file"]';
            var button = document.createElement('button');
            button.textContent = uppy.i18n('chooseFiles');
            button.type = 'button';
            var old = findDOMElement(trigger, findDOMElement(target));
            old.parentNode.replaceChild(button, old);
            dashboardOpts.inline = false;
            dashboardOpts.trigger = button;
          } else {
            dashboardOpts.inline = true;
            dashboardOpts.hideUploadButton = true;
          }
          addDashboardPlugin(uppy, opts, dashboardOpts);
          if (Array.isArray(opts.providers)) {
            addProviders(uppy, opts.providers, _extends({}, opts, {
              target: uppy.getPlugin(dashboardId)
            }));
          }
        } else {
          uppy.use(AttachFileInputs, {
            target: target
          });
        }
        if (opts.statusBar) {
          uppy.use(StatusBar, {
            target: opts.statusBar,
            hideUploadButton: true,
            hideAfterFinish: true,
            hideRetryButton: true,
            hidePauseResumeButtons: true,
            hideCancelButtons: true
          });
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"form"},');

        return uppy;
                SRTlib.send('{"type":"FUNCTIONEND","function":"form","paramsNumber":2},');

      }
      module.exports = form;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###175"},');

    }, {
      "./AttachFileInputs": 157,
      "./TransloaditFormResult": 158,
      "./addDashboardPlugin": 160,
      "./addProviders": 161,
      "./addTransloaditPlugin": 162,
      "@uppy/core": 97,
      "@uppy/form": 132,
      "@uppy/status-bar": 174,
      "@uppy/utils/lib/findDOMElement": 205,
      "@uppy/utils/lib/hasProperty": 219
    }],
    166: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###176","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var form = require('./form');
      var dashboard = require('./dashboard');
      var pick = require('./pick');
      var upload = require('./upload');
      module.exports = {
        dashboard: dashboard,
        form: form,
        pick: pick,
        upload: upload,
        VERSION: require('../package.json').version
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###176"},');

    }, {
      "../package.json": 171,
      "./dashboard": 164,
      "./form": 165,
      "./pick": 167,
      "./upload": 168
    }],
    167: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###177","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###22","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###22"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###22"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var createUppy = require('./createUppy');
      var addDashboardPlugin = require('./addDashboardPlugin');
      var addTransloaditPlugin = require('./addTransloaditPlugin');
      var addProviders = require('./addProviders');
      var CANCEL = {};
      function pick(opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"pick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (opts === void 0) {
          opts = {};
        }
        var target = opts.target || document.body;
        var pluginId = 'pick';
        var uppy = createUppy(opts, {
          allowMultipleUploads: false
        });
        addTransloaditPlugin(uppy, opts);
        addDashboardPlugin(uppy, opts, {
          id: pluginId,
          target: target,
          closeAfterFinish: true
        });
        if (Array.isArray(opts.providers)) {
          addProviders(uppy, opts.providers, _extends({}, opts, {
            target: uppy.getPlugin(pluginId)
          }));
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"pick"},');

        return new Promise(function (resolve, reject) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.then.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          uppy.on('complete', function (result) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.then.NewExpression.uppy.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (result.failed.length === 0) {
              resolve(result);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.then.NewExpression.uppy.on"},');

          });
          uppy.on('error', reject);
          uppy.on('cancel-all', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.then.NewExpression.uppy.on###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.then.NewExpression.uppy.on###2"},');

            return reject(CANCEL);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.then.NewExpression.uppy.on###2"},');

          });
          uppy.getPlugin(pluginId).openModal();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.then.NewExpression"},');

        }).then(function (result) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.then"},');

          return result;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.then"},');

        }, function (err) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.then###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (err === CANCEL) {
            uppy.getPlugin(pluginId).requestCloseModal();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.then###2"},');

            return null;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.then###2"},');

          throw err;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.then###2"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"pick","paramsNumber":1},');

      }
      module.exports = pick;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###177"},');

    }, {
      "./addDashboardPlugin": 160,
      "./addProviders": 161,
      "./addTransloaditPlugin": 162,
      "./createUppy": 163
    }],
    168: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###178","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var toArray = require('@uppy/utils/lib/toArray');
      var createUppy = require('./createUppy');
      var addTransloaditPlugin = require('./addTransloaditPlugin');
      function upload(files, opts) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"upload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (opts === void 0) {
          opts = {};
        }
        if (!Array.isArray(files) && typeof files.length === 'number') {
          files = toArray(files);
        }
        var uppy = createUppy(opts, {
          allowMultipleUploads: false
        });
        addTransloaditPlugin(uppy, opts);
        files.forEach(function (file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"files.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          uppy.addFile({
            data: file,
            type: file.type,
            name: file.name,
            meta: file.meta || ({})
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"files.forEach"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"upload"},');

        return uppy.upload();
                SRTlib.send('{"type":"FUNCTIONEND","function":"upload","paramsNumber":2},');

      }
      module.exports = upload;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###178"},');

    }, {
      "./addTransloaditPlugin": 162,
      "./createUppy": 163,
      "@uppy/utils/lib/toArray": 229
    }],
    169: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###179","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      'use strict';
      module.exports = require('./').polyfill();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###179"},');

    }, {
      "./": 170
    }],
    170: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###185","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (process, global) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###20","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        (function (global, factory) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###18","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.ES6Promise = factory();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###18"},');

        })(this, function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###19","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          'use strict';
          function objectOrFunction(x) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"objectOrFunction","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var type = typeof x;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"objectOrFunction"},');

            return x !== null && (type === 'object' || type === 'function');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"objectOrFunction","paramsNumber":1},');

          }
          function isFunction(x) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isFunction","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"isFunction"},');

            return typeof x === 'function';
                        SRTlib.send('{"type":"FUNCTIONEND","function":"isFunction","paramsNumber":1},');

          }
          var _isArray = void 0;
          if (Array.isArray) {
            _isArray = Array.isArray;
          } else {
            _isArray = function (x) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call._isArray","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._isArray"},');

              return Object.prototype.toString.call(x) === '[object Array]';
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._isArray"},');

            };
          }
          var isArray = _isArray;
          var len = 0;
          var vertxNext = void 0;
          var customSchedulerFn = void 0;
          var asap = function asap(callback, arg) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"asap","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            queue[len] = callback;
            queue[len + 1] = arg;
            len += 2;
            if (len === 2) {
              if (customSchedulerFn) {
                customSchedulerFn(flush);
              } else {
                scheduleFlush();
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"asap"},');

          };
          function setScheduler(scheduleFn) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"setScheduler","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            customSchedulerFn = scheduleFn;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"setScheduler","paramsNumber":1},');

          }
          function setAsap(asapFn) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"setAsap","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            asap = asapFn;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"setAsap","paramsNumber":1},');

          }
          var browserWindow = typeof window !== 'undefined' ? window : undefined;
          var browserGlobal = browserWindow || ({});
          var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
          var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';
          var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';
          function useNextTick() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"useNextTick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"useNextTick"},');

            return function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###180","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###180"},');

              return process.nextTick(flush);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###180"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useNextTick","paramsNumber":0},');

          }
          function useVertxTimer() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"useVertxTimer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (typeof vertxNext !== 'undefined') {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"useVertxTimer"},');

              return function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###181","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                vertxNext(flush);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###181"},');

              };
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useVertxTimer"},');

            return useSetTimeout();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useVertxTimer","paramsNumber":0},');

          }
          function useMutationObserver() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"useMutationObserver","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var iterations = 0;
            var observer = new BrowserMutationObserver(flush);
            var node = document.createTextNode('');
            observer.observe(node, {
              characterData: true
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useMutationObserver"},');

            return function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###182","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              node.data = iterations = ++iterations % 2;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###182"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useMutationObserver","paramsNumber":0},');

          }
          function useMessageChannel() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"useMessageChannel","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var channel = new MessageChannel();
            channel.port1.onmessage = flush;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useMessageChannel"},');

            return function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###183","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###183"},');

              return channel.port2.postMessage(0);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###183"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useMessageChannel","paramsNumber":0},');

          }
          function useSetTimeout() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"useSetTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var globalSetTimeout = setTimeout;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useSetTimeout"},');

            return function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###184","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###184"},');

              return globalSetTimeout(flush, 1);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###184"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"useSetTimeout","paramsNumber":0},');

          }
          var queue = new Array(1000);
          function flush() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"flush","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            for (var i = 0; i < len; i += 2) {
              var callback = queue[i];
              var arg = queue[i + 1];
              callback(arg);
              queue[i] = undefined;
              queue[i + 1] = undefined;
            }
            len = 0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"flush","paramsNumber":0},');

          }
          function attemptVertx() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"attemptVertx","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            try {
              var vertx = Function('return this')().require('vertx');
              vertxNext = vertx.runOnLoop || vertx.runOnContext;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"attemptVertx"},');

              return useVertxTimer();
            } catch (e) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"attemptVertx"},');

              return useSetTimeout();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"attemptVertx","paramsNumber":0},');

          }
          var scheduleFlush = void 0;
          if (isNode) {
            scheduleFlush = useNextTick();
          } else if (BrowserMutationObserver) {
            scheduleFlush = useMutationObserver();
          } else if (isWorker) {
            scheduleFlush = useMessageChannel();
          } else if (browserWindow === undefined && typeof require === 'function') {
            scheduleFlush = attemptVertx();
          } else {
            scheduleFlush = useSetTimeout();
          }
          function then(onFulfillment, onRejection) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var parent = this;
            var child = new this.constructor(noop);
            if (child[PROMISE_ID] === undefined) {
              makePromise(child);
            }
            var _state = parent._state;
            if (_state) {
              var callback = arguments[_state - 1];
              asap(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"asap","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"asap"},');

                return invokeCallback(_state, child, callback, parent._result);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"asap"},');

              });
            } else {
              subscribe(parent, child, onFulfillment, onRejection);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"then"},');

            return child;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"then","paramsNumber":2},');

          }
          function resolve$1(object) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"resolve$1","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var Constructor = this;
            if (object && typeof object === 'object' && object.constructor === Constructor) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"resolve$1"},');

              return object;
            }
            var promise = new Constructor(noop);
            resolve(promise, object);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"resolve$1"},');

            return promise;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"resolve$1","paramsNumber":1},');

          }
          var PROMISE_ID = Math.random().toString(36).substring(2);
          function noop() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"noop","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"noop","paramsNumber":0},');

          }
          var PENDING = void 0;
          var FULFILLED = 1;
          var REJECTED = 2;
          var TRY_CATCH_ERROR = {
            error: null
          };
          function selfFulfillment() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"selfFulfillment","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"selfFulfillment"},');

            return new TypeError("You cannot resolve a promise with itself");
                        SRTlib.send('{"type":"FUNCTIONEND","function":"selfFulfillment","paramsNumber":0},');

          }
          function cannotReturnOwn() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"cannotReturnOwn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"cannotReturnOwn"},');

            return new TypeError('A promises callback cannot return that same promise.');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"cannotReturnOwn","paramsNumber":0},');

          }
          function getThen(promise) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getThen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            try {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"getThen"},');

              return promise.then;
            } catch (error) {
              TRY_CATCH_ERROR.error = error;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"getThen"},');

              return TRY_CATCH_ERROR;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"getThen","paramsNumber":1},');

          }
          function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"tryThen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

            try {
              then$$1.call(value, fulfillmentHandler, rejectionHandler);
            } catch (e) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"tryThen"},');

              return e;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"tryThen","paramsNumber":4},');

          }
          function handleForeignThenable(promise, thenable, then$$1) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"handleForeignThenable","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            asap(function (promise) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"asap###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var sealed = false;
              var error = tryThen(then$$1, thenable, function (value) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"asap.error.tryThen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (sealed) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"asap.error.tryThen"},');

                  return;
                }
                sealed = true;
                if (thenable !== value) {
                  resolve(promise, value);
                } else {
                  fulfill(promise, value);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"asap.error.tryThen"},');

              }, function (reason) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"asap.error.tryThen###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (sealed) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"asap.error.tryThen###2"},');

                  return;
                }
                sealed = true;
                reject(promise, reason);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"asap.error.tryThen###2"},');

              }, 'Settle: ' + (promise._label || ' unknown promise'));
              if (!sealed && error) {
                sealed = true;
                reject(promise, error);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"asap###2"},');

            }, promise);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"handleForeignThenable","paramsNumber":3},');

          }
          function handleOwnThenable(promise, thenable) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"handleOwnThenable","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (thenable._state === FULFILLED) {
              fulfill(promise, thenable._result);
            } else if (thenable._state === REJECTED) {
              reject(promise, thenable._result);
            } else {
              subscribe(thenable, undefined, function (value) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"subscribe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"subscribe"},');

                return resolve(promise, value);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"subscribe"},');

              }, function (reason) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"subscribe###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"subscribe###2"},');

                return reject(promise, reason);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"subscribe###2"},');

              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"handleOwnThenable","paramsNumber":2},');

          }
          function handleMaybeThenable(promise, maybeThenable, then$$1) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"handleMaybeThenable","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {
              handleOwnThenable(promise, maybeThenable);
            } else {
              if (then$$1 === TRY_CATCH_ERROR) {
                reject(promise, TRY_CATCH_ERROR.error);
                TRY_CATCH_ERROR.error = null;
              } else if (then$$1 === undefined) {
                fulfill(promise, maybeThenable);
              } else if (isFunction(then$$1)) {
                handleForeignThenable(promise, maybeThenable, then$$1);
              } else {
                fulfill(promise, maybeThenable);
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"handleMaybeThenable","paramsNumber":3},');

          }
          function resolve(promise, value) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"resolve","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (promise === value) {
              reject(promise, selfFulfillment());
            } else if (objectOrFunction(value)) {
              handleMaybeThenable(promise, value, getThen(value));
            } else {
              fulfill(promise, value);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"resolve","paramsNumber":2},');

          }
          function publishRejection(promise) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"publishRejection","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (promise._onerror) {
              promise._onerror(promise._result);
            }
            publish(promise);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"publishRejection","paramsNumber":1},');

          }
          function fulfill(promise, value) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"fulfill","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (promise._state !== PENDING) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"fulfill"},');

              return;
            }
            promise._result = value;
            promise._state = FULFILLED;
            if (promise._subscribers.length !== 0) {
              asap(publish, promise);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"fulfill","paramsNumber":2},');

          }
          function reject(promise, reason) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"reject","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (promise._state !== PENDING) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"reject"},');

              return;
            }
            promise._state = REJECTED;
            promise._result = reason;
            asap(publishRejection, promise);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"reject","paramsNumber":2},');

          }
          function subscribe(parent, child, onFulfillment, onRejection) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"subscribe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

            var _subscribers = parent._subscribers;
            var length = _subscribers.length;
            parent._onerror = null;
            _subscribers[length] = child;
            _subscribers[length + FULFILLED] = onFulfillment;
            _subscribers[length + REJECTED] = onRejection;
            if (length === 0 && parent._state) {
              asap(publish, parent);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"subscribe","paramsNumber":4},');

          }
          function publish(promise) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"publish","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var subscribers = promise._subscribers;
            var settled = promise._state;
            if (subscribers.length === 0) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"publish"},');

              return;
            }
            var child = void 0, callback = void 0, detail = promise._result;
            for (var i = 0; i < subscribers.length; i += 3) {
              child = subscribers[i];
              callback = subscribers[i + settled];
              if (child) {
                invokeCallback(settled, child, callback, detail);
              } else {
                callback(detail);
              }
            }
            promise._subscribers.length = 0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"publish","paramsNumber":1},');

          }
          function tryCatch(callback, detail) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"tryCatch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            try {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"tryCatch"},');

              return callback(detail);
            } catch (e) {
              TRY_CATCH_ERROR.error = e;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"tryCatch"},');

              return TRY_CATCH_ERROR;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"tryCatch","paramsNumber":2},');

          }
          function invokeCallback(settled, promise, callback, detail) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"invokeCallback","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

            var hasCallback = isFunction(callback), value = void 0, error = void 0, succeeded = void 0, failed = void 0;
            if (hasCallback) {
              value = tryCatch(callback, detail);
              if (value === TRY_CATCH_ERROR) {
                failed = true;
                error = value.error;
                value.error = null;
              } else {
                succeeded = true;
              }
              if (promise === value) {
                reject(promise, cannotReturnOwn());
                                SRTlib.send('{"type":"FUNCTIONEND","function":"invokeCallback"},');

                return;
              }
            } else {
              value = detail;
              succeeded = true;
            }
            if (promise._state !== PENDING) {} else if (hasCallback && succeeded) {
              resolve(promise, value);
            } else if (failed) {
              reject(promise, error);
            } else if (settled === FULFILLED) {
              fulfill(promise, value);
            } else if (settled === REJECTED) {
              reject(promise, value);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"invokeCallback","paramsNumber":4},');

          }
          function initializePromise(promise, resolver) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"initializePromise","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            try {
              resolver(function resolvePromise(value) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"resolver","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                resolve(promise, value);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"resolver"},');

              }, function rejectPromise(reason) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"resolver###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                reject(promise, reason);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"resolver###2"},');

              });
            } catch (e) {
              reject(promise, e);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"initializePromise","paramsNumber":2},');

          }
          var id = 0;
          function nextId() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"nextId","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"nextId"},');

            return id++;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"nextId","paramsNumber":0},');

          }
          function makePromise(promise) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"makePromise","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            promise[PROMISE_ID] = id++;
            promise._state = undefined;
            promise._result = undefined;
            promise._subscribers = [];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"makePromise","paramsNumber":1},');

          }
          function validationError() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"validationError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"validationError"},');

            return new Error('Array Methods must be provided an Array');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"validationError","paramsNumber":0},');

          }
          var Enumerator = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Enumerator","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function Enumerator(Constructor, input) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Enumerator","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              this._instanceConstructor = Constructor;
              this.promise = new Constructor(noop);
              if (!this.promise[PROMISE_ID]) {
                makePromise(this.promise);
              }
              if (isArray(input)) {
                this.length = input.length;
                this._remaining = input.length;
                this._result = new Array(this.length);
                if (this.length === 0) {
                  fulfill(this.promise, this._result);
                } else {
                  this.length = this.length || 0;
                  this._enumerate(input);
                  if (this._remaining === 0) {
                    fulfill(this.promise, this._result);
                  }
                }
              } else {
                reject(this.promise, validationError());
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Enumerator","paramsNumber":2},');

            }
            Enumerator.prototype._enumerate = function _enumerate(input) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Enumerator.Enumerator.prototype._enumerate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              for (var i = 0; this._state === PENDING && i < input.length; i++) {
                this._eachEntry(input[i], i);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._enumerate"},');

            };
            Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Enumerator.Enumerator.prototype._eachEntry","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var c = this._instanceConstructor;
              var resolve$$1 = c.resolve;
              if (resolve$$1 === resolve$1) {
                var _then = getThen(entry);
                if (_then === then && entry._state !== PENDING) {
                  this._settledAt(entry._state, i, entry._result);
                } else if (typeof _then !== 'function') {
                  this._remaining--;
                  this._result[i] = entry;
                } else if (c === Promise$1) {
                  var promise = new c(noop);
                  handleMaybeThenable(promise, entry, _then);
                  this._willSettleAt(promise, i);
                } else {
                  this._willSettleAt(new c(function (resolve$$1) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Enumerator.Enumerator.prototype._eachEntry._eachEntry._willSettleAt.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._eachEntry._eachEntry._willSettleAt.NewExpression"},');

                    return resolve$$1(entry);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._eachEntry._eachEntry._willSettleAt.NewExpression"},');

                  }), i);
                }
              } else {
                this._willSettleAt(resolve$$1(entry), i);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._eachEntry"},');

            };
            Enumerator.prototype._settledAt = function _settledAt(state, i, value) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Enumerator.Enumerator.prototype._settledAt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

              var promise = this.promise;
              if (promise._state === PENDING) {
                this._remaining--;
                if (state === REJECTED) {
                  reject(promise, value);
                } else {
                  this._result[i] = value;
                }
              }
              if (this._remaining === 0) {
                fulfill(promise, this._result);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._settledAt"},');

            };
            Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Enumerator.Enumerator.prototype._willSettleAt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var enumerator = this;
              subscribe(promise, undefined, function (value) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Enumerator.Enumerator.prototype._willSettleAt._willSettleAt.subscribe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._willSettleAt._willSettleAt.subscribe"},');

                return enumerator._settledAt(FULFILLED, i, value);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._willSettleAt._willSettleAt.subscribe"},');

              }, function (reason) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Enumerator.Enumerator.prototype._willSettleAt._willSettleAt.subscribe###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._willSettleAt._willSettleAt.subscribe###2"},');

                return enumerator._settledAt(REJECTED, i, reason);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._willSettleAt._willSettleAt.subscribe###2"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator.Enumerator.prototype._willSettleAt"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator"},');

            return Enumerator;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Enumerator"},');

          })();
          function all(entries) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"all","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"all"},');

            return new Enumerator(this, entries).promise;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"all","paramsNumber":1},');

          }
          function race(entries) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"race","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var Constructor = this;
            if (!isArray(entries)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"race"},');

              return new Constructor(function (_, reject) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression###3"},');

                return reject(new TypeError('You must pass an array to race.'));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression###3"},');

              });
            } else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"race"},');

              return new Constructor(function (resolve, reject) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NewExpression###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var length = entries.length;
                for (var i = 0; i < length; i++) {
                  Constructor.resolve(entries[i]).then(resolve, reject);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NewExpression###4"},');

              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"race","paramsNumber":1},');

          }
          function reject$1(reason) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"reject$1","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var Constructor = this;
            var promise = new Constructor(noop);
            reject(promise, reason);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"reject$1"},');

            return promise;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"reject$1","paramsNumber":1},');

          }
          function needsResolver() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"needsResolver","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"needsResolver"},');

            throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"needsResolver","paramsNumber":0},');

          }
          function needsNew() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"needsNew","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"needsNew"},');

            throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                        SRTlib.send('{"type":"FUNCTIONEND","function":"needsNew","paramsNumber":0},');

          }
          var Promise$1 = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Promise$1","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function Promise(resolver) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Promise","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              this[PROMISE_ID] = nextId();
              this._result = this._state = undefined;
              this._subscribers = [];
              if (noop !== resolver) {
                typeof resolver !== 'function' && needsResolver();
                this instanceof Promise ? initializePromise(this, resolver) : needsNew();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Promise","paramsNumber":1},');

            }
            Promise.prototype.catch = function _catch(onRejection) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Promise$1.Promise.prototype.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.catch"},');

              return this.then(null, onRejection);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.catch"},');

            };
            Promise.prototype.finally = function _finally(callback) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Promise$1.Promise.prototype.finally","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var promise = this;
              var constructor = promise.constructor;
              if (isFunction(callback)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally"},');

                return promise.then(function (value) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then"},');

                  return constructor.resolve(callback()).then(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then.ReturnStatement.constructor.resolve.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then.ReturnStatement.constructor.resolve.then"},');

                    return value;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then.ReturnStatement.constructor.resolve.then"},');

                  });
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then"},');

                }, function (reason) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then###2"},');

                  return constructor.resolve(callback()).then(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then.ReturnStatement.constructor.resolve.then###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then.ReturnStatement.constructor.resolve.then###2"},');

                    throw reason;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then.ReturnStatement.constructor.resolve.then###2"},');

                  });
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally._finally.ReturnStatement.promise.then###2"},');

                });
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally"},');

              return promise.then(callback, callback);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1.Promise.prototype.finally"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1"},');

            return Promise;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Promise$1"},');

          })();
          Promise$1.prototype.then = then;
          Promise$1.all = all;
          Promise$1.race = race;
          Promise$1.resolve = resolve$1;
          Promise$1.reject = reject$1;
          Promise$1._setScheduler = setScheduler;
          Promise$1._setAsap = setAsap;
          Promise$1._asap = asap;
          function polyfill() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"polyfill","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var local = void 0;
            if (typeof global !== 'undefined') {
              local = global;
            } else if (typeof self !== 'undefined') {
              local = self;
            } else {
              try {
                local = Function('return this')();
              } catch (e) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"polyfill"},');

                throw new Error('polyfill failed because global object is unavailable in this environment');
              }
            }
            var P = local.Promise;
            if (P) {
              var promiseToString = null;
              try {
                promiseToString = Object.prototype.toString.call(P.resolve());
              } catch (e) {}
              if (promiseToString === '[object Promise]' && !P.cast) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"polyfill"},');

                return;
              }
            }
            local.Promise = Promise$1;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"polyfill","paramsNumber":0},');

          }
          Promise$1.polyfill = polyfill;
          Promise$1.Promise = Promise$1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###19"},');

          return Promise$1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###19"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###20"},');

      }).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###185"},');

    }, {
      "_process": 52
    }],
    171: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###186","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/robodog",
        "description": "Transloadit SDK for browsers based on Uppy",
        "version": "1.6.7",
        "license": "MIT",
        "main": "lib/index.js",
        "jsnext:main": "src/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "transloadit", "file encoding", "encoding", "file processing", "video encoding", "crop", "resize", "watermark", "uppy", "uppy-plugin"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/core": "file:../core",
          "@uppy/dashboard": "file:../dashboard",
          "@uppy/dropbox": "file:../dropbox",
          "@uppy/facebook": "file:../facebook",
          "@uppy/form": "file:../form",
          "@uppy/google-drive": "file:../google-drive",
          "@uppy/instagram": "file:../instagram",
          "@uppy/onedrive": "file:../onedrive",
          "@uppy/status-bar": "file:../status-bar",
          "@uppy/transloadit": "file:../transloadit",
          "@uppy/url": "file:../url",
          "@uppy/utils": "file:../utils",
          "@uppy/webcam": "file:../webcam",
          "es6-promise": "4.2.5",
          "whatwg-fetch": "3.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###186"},');

    }, {}],
    172: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###187","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###23","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###23"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###23"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var throttle = require('lodash.throttle');
      var classNames = require('classnames');
      var statusBarStates = require('./StatusBarStates');
      var prettierBytes = require('@transloadit/prettier-bytes');
      var prettyETA = require('@uppy/utils/lib/prettyETA');
      var _require = require('preact'), h = _require.h;
      function calculateProcessingProgress(files) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"calculateProcessingProgress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var progresses = [];
        Object.keys(files).forEach(function (fileID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"Object.keys.forEach###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var progress = files[fileID].progress;
          if (progress.preprocess) {
            progresses.push(progress.preprocess);
          }
          if (progress.postprocess) {
            progresses.push(progress.postprocess);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Object.keys.forEach###2"},');

        });
        var _progresses$ = progresses[0], mode = _progresses$.mode, message = _progresses$.message;
        var value = progresses.filter(isDeterminate).reduce(function (total, progress, index, all) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"value.progresses.filter.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"value.progresses.filter.reduce"},');

          return total + progress.value / all.length;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"value.progresses.filter.reduce"},');

        }, 0);
        function isDeterminate(progress) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isDeterminate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"isDeterminate"},');

          return progress.mode === 'determinate';
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isDeterminate","paramsNumber":1},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"calculateProcessingProgress"},');

        return {
          mode: mode,
          message: message,
          value: value
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"calculateProcessingProgress","paramsNumber":1},');

      }
      function togglePauseResume(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"togglePauseResume","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (props.isAllComplete) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"togglePauseResume"},');

          return;
        }
        if (!props.resumableUploads) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"togglePauseResume"},');

          return props.cancelAll();
        }
        if (props.isAllPaused) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"togglePauseResume"},');

          return props.resumeAll();
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"togglePauseResume"},');

        return props.pauseAll();
                SRTlib.send('{"type":"FUNCTIONEND","function":"togglePauseResume","paramsNumber":1},');

      }
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###50","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        props = props || ({});
        var _props = props, newFiles = _props.newFiles, allowNewUpload = _props.allowNewUpload, isUploadInProgress = _props.isUploadInProgress, isAllPaused = _props.isAllPaused, resumableUploads = _props.resumableUploads, error = _props.error, hideUploadButton = _props.hideUploadButton, hidePauseResumeButton = _props.hidePauseResumeButton, hideCancelButton = _props.hideCancelButton, hideRetryButton = _props.hideRetryButton;
        var uploadState = props.uploadState;
        var progressValue = props.totalProgress;
        var progressMode;
        var progressBarContent;
        if (uploadState === statusBarStates.STATE_PREPROCESSING || uploadState === statusBarStates.STATE_POSTPROCESSING) {
          var progress = calculateProcessingProgress(props.files);
          progressMode = progress.mode;
          if (progressMode === 'determinate') {
            progressValue = progress.value * 100;
          }
          progressBarContent = ProgressBarProcessing(progress);
        } else if (uploadState === statusBarStates.STATE_COMPLETE) {
          progressBarContent = ProgressBarComplete(props);
        } else if (uploadState === statusBarStates.STATE_UPLOADING) {
          if (!props.supportsUploadProgress) {
            progressMode = 'indeterminate';
            progressValue = null;
          }
          progressBarContent = ProgressBarUploading(props);
        } else if (uploadState === statusBarStates.STATE_ERROR) {
          progressValue = undefined;
          progressBarContent = ProgressBarError(props);
        }
        var width = typeof progressValue === 'number' ? progressValue : 100;
        var isHidden = uploadState === statusBarStates.STATE_WAITING && props.hideUploadButton || uploadState === statusBarStates.STATE_WAITING && !props.newFiles > 0 || uploadState === statusBarStates.STATE_COMPLETE && props.hideAfterFinish;
        var showUploadBtn = !error && newFiles && !isUploadInProgress && !isAllPaused && allowNewUpload && !hideUploadButton;
        var showCancelBtn = !hideCancelButton && uploadState !== statusBarStates.STATE_WAITING && uploadState !== statusBarStates.STATE_COMPLETE;
        var showPauseResumeBtn = resumableUploads && !hidePauseResumeButton && uploadState === statusBarStates.STATE_UPLOADING;
        var showRetryBtn = error && !hideRetryButton;
        var progressClassNames = "uppy-StatusBar-progress\n                           " + (progressMode ? 'is-' + progressMode : '');
        var statusBarClassNames = classNames({
          'uppy-Root': props.isTargetDOMEl
        }, 'uppy-StatusBar', "is-" + uploadState);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###50"},');

        return h("div", {
          class: statusBarClassNames,
          "aria-hidden": isHidden
        }, h("div", {
          class: progressClassNames,
          style: {
            width: width + '%'
          },
          role: "progressbar",
          "aria-valuemin": "0",
          "aria-valuemax": "100",
          "aria-valuenow": progressValue
        }), progressBarContent, h("div", {
          class: "uppy-StatusBar-actions"
        }, showUploadBtn ? h(UploadBtn, _extends({}, props, {
          uploadState: uploadState
        })) : null, showRetryBtn ? h(RetryBtn, props) : null, showPauseResumeBtn ? h(PauseResumeButton, props) : null, showCancelBtn ? h(CancelBtn, props) : null));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###50"},');

      };
      var UploadBtn = function UploadBtn(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"UploadBtn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var uploadBtnClassNames = classNames('uppy-u-reset', 'uppy-c-btn', 'uppy-StatusBar-actionBtn', 'uppy-StatusBar-actionBtn--upload', {
          'uppy-c-btn-primary': props.uploadState === statusBarStates.STATE_WAITING
        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"UploadBtn"},');

        return h("button", {
          type: "button",
          class: uploadBtnClassNames,
          "aria-label": props.i18n('uploadXFiles', {
            smart_count: props.newFiles
          }),
          onclick: props.startUpload,
          "data-uppy-super-focusable": true
        }, props.newFiles && props.isUploadStarted ? props.i18n('uploadXNewFiles', {
          smart_count: props.newFiles
        }) : props.i18n('uploadXFiles', {
          smart_count: props.newFiles
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"UploadBtn"},');

      };
      var RetryBtn = function RetryBtn(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"RetryBtn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"RetryBtn"},');

        return h("button", {
          type: "button",
          class: "uppy-u-reset uppy-c-btn uppy-StatusBar-actionBtn uppy-StatusBar-actionBtn--retry",
          "aria-label": props.i18n('retryUpload'),
          onclick: props.retryAll,
          "data-uppy-super-focusable": true
        }, h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "8",
          height: "10",
          viewBox: "0 0 8 10"
        }, h("path", {
          d: "M4 2.408a2.75 2.75 0 1 0 2.75 2.75.626.626 0 0 1 1.25.018v.023a4 4 0 1 1-4-4.041V.25a.25.25 0 0 1 .389-.208l2.299 1.533a.25.25 0 0 1 0 .416l-2.3 1.533A.25.25 0 0 1 4 3.316v-.908z"
        })), props.i18n('retry'));
                SRTlib.send('{"type":"FUNCTIONEND","function":"RetryBtn"},');

      };
      var CancelBtn = function CancelBtn(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"CancelBtn","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"CancelBtn"},');

        return h("button", {
          type: "button",
          class: "uppy-u-reset uppy-StatusBar-actionCircleBtn",
          title: props.i18n('cancel'),
          "aria-label": props.i18n('cancel'),
          onclick: props.cancelAll,
          "data-uppy-super-focusable": true
        }, h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "16",
          height: "16",
          viewBox: "0 0 16 16"
        }, h("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, h("circle", {
          fill: "#888",
          cx: "8",
          cy: "8",
          r: "8"
        }), h("path", {
          fill: "#FFF",
          d: "M9.283 8l2.567 2.567-1.283 1.283L8 9.283 5.433 11.85 4.15 10.567 6.717 8 4.15 5.433 5.433 4.15 8 6.717l2.567-2.567 1.283 1.283z"
        }))));
                SRTlib.send('{"type":"FUNCTIONEND","function":"CancelBtn"},');

      };
      var PauseResumeButton = function PauseResumeButton(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"PauseResumeButton","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var isAllPaused = props.isAllPaused, i18n = props.i18n;
        var title = isAllPaused ? i18n('resume') : i18n('pause');
                SRTlib.send('{"type":"FUNCTIONEND","function":"PauseResumeButton"},');

        return h("button", {
          title: title,
          "aria-label": title,
          class: "uppy-u-reset uppy-StatusBar-actionCircleBtn",
          type: "button",
          onclick: function onclick() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.PauseResumeButton.PauseResumeButton.ReturnStatement.h.onclick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.PauseResumeButton.PauseResumeButton.ReturnStatement.h.onclick"},');

            return togglePauseResume(props);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.PauseResumeButton.PauseResumeButton.ReturnStatement.h.onclick"},');

          },
          "data-uppy-super-focusable": true
        }, isAllPaused ? h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "16",
          height: "16",
          viewBox: "0 0 16 16"
        }, h("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, h("circle", {
          fill: "#888",
          cx: "8",
          cy: "8",
          r: "8"
        }), h("path", {
          fill: "#FFF",
          d: "M6 4.25L11.5 8 6 11.75z"
        }))) : h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "16",
          height: "16",
          viewBox: "0 0 16 16"
        }, h("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, h("circle", {
          fill: "#888",
          cx: "8",
          cy: "8",
          r: "8"
        }), h("path", {
          d: "M5 4.5h2v7H5v-7zm4 0h2v7H9v-7z",
          fill: "#FFF"
        }))));
                SRTlib.send('{"type":"FUNCTIONEND","function":"PauseResumeButton"},');

      };
      var LoadingSpinner = function LoadingSpinner() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"LoadingSpinner","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"LoadingSpinner"},');

        return h("svg", {
          class: "uppy-StatusBar-spinner",
          "aria-hidden": "true",
          focusable: "false",
          width: "14",
          height: "14"
        }, h("path", {
          d: "M13.983 6.547c-.12-2.509-1.64-4.893-3.939-5.936-2.48-1.127-5.488-.656-7.556 1.094C.524 3.367-.398 6.048.162 8.562c.556 2.495 2.46 4.52 4.94 5.183 2.932.784 5.61-.602 7.256-3.015-1.493 1.993-3.745 3.309-6.298 2.868-2.514-.434-4.578-2.349-5.153-4.84a6.226 6.226 0 0 1 2.98-6.778C6.34.586 9.74 1.1 11.373 3.493c.407.596.693 1.282.842 1.988.127.598.073 1.197.161 1.794.078.525.543 1.257 1.15.864.525-.341.49-1.05.456-1.592-.007-.15.02.3 0 0",
          "fill-rule": "evenodd"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"LoadingSpinner"},');

      };
      var ProgressBarProcessing = function ProgressBarProcessing(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ProgressBarProcessing","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var value = Math.round(props.value * 100);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressBarProcessing"},');

        return h("div", {
          class: "uppy-StatusBar-content"
        }, h(LoadingSpinner, null), props.mode === 'determinate' ? value + "% \xB7 " : '', props.message);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressBarProcessing"},');

      };
      var renderDot = function renderDot() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"renderDot","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"renderDot"},');

        return " \xB7 ";
                SRTlib.send('{"type":"FUNCTIONEND","function":"renderDot"},');

      };
      var ProgressDetails = function ProgressDetails(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ProgressDetails","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var ifShowFilesUploadedOfTotal = props.numUploads > 1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressDetails"},');

        return h("div", {
          class: "uppy-StatusBar-statusSecondary"
        }, ifShowFilesUploadedOfTotal && props.i18n('filesUploadedOfTotal', {
          complete: props.complete,
          smart_count: props.numUploads
        }), h("span", {
          class: "uppy-StatusBar-additionalInfo"
        }, ifShowFilesUploadedOfTotal && renderDot(), props.i18n('dataUploadedOfTotal', {
          complete: prettierBytes(props.totalUploadedSize),
          total: prettierBytes(props.totalSize)
        }), renderDot(), props.i18n('xTimeLeft', {
          time: prettyETA(props.totalETA)
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressDetails"},');

      };
      var UnknownProgressDetails = function UnknownProgressDetails(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"UnknownProgressDetails","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"UnknownProgressDetails"},');

        return h("div", {
          class: "uppy-StatusBar-statusSecondary"
        }, props.i18n('filesUploadedOfTotal', {
          complete: props.complete,
          smart_count: props.numUploads
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"UnknownProgressDetails"},');

      };
      var UploadNewlyAddedFiles = function UploadNewlyAddedFiles(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"UploadNewlyAddedFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var uploadBtnClassNames = classNames('uppy-u-reset', 'uppy-c-btn', 'uppy-StatusBar-actionBtn', 'uppy-StatusBar-actionBtn--uploadNewlyAdded');
                SRTlib.send('{"type":"FUNCTIONEND","function":"UploadNewlyAddedFiles"},');

        return h("div", {
          class: "uppy-StatusBar-statusSecondary"
        }, h("div", {
          class: "uppy-StatusBar-statusSecondaryHint"
        }, props.i18n('xMoreFilesAdded', {
          smart_count: props.newFiles
        })), h("button", {
          type: "button",
          class: uploadBtnClassNames,
          "aria-label": props.i18n('uploadXFiles', {
            smart_count: props.newFiles
          }),
          onclick: props.startUpload
        }, props.i18n('upload')));
                SRTlib.send('{"type":"FUNCTIONEND","function":"UploadNewlyAddedFiles"},');

      };
      var ThrottledProgressDetails = throttle(ProgressDetails, 500, {
        leading: true,
        trailing: true
      });
      var ProgressBarUploading = function ProgressBarUploading(props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ProgressBarUploading","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!props.isUploadStarted || props.isAllComplete) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressBarUploading"},');

          return null;
        }
        var title = props.isAllPaused ? props.i18n('paused') : props.i18n('uploading');
        var showUploadNewlyAddedFiles = props.newFiles && props.isUploadStarted;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressBarUploading"},');

        return h("div", {
          class: "uppy-StatusBar-content",
          "aria-label": title,
          title: title
        }, !props.isAllPaused ? h(LoadingSpinner, null) : null, h("div", {
          class: "uppy-StatusBar-status"
        }, h("div", {
          class: "uppy-StatusBar-statusPrimary"
        }, props.supportsUploadProgress ? title + ": " + props.totalProgress + "%" : title), !props.isAllPaused && !showUploadNewlyAddedFiles && props.showProgressDetails ? props.supportsUploadProgress ? h(ThrottledProgressDetails, props) : h(UnknownProgressDetails, props) : null, showUploadNewlyAddedFiles ? h(UploadNewlyAddedFiles, props) : null));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressBarUploading"},');

      };
      var ProgressBarComplete = function ProgressBarComplete(_ref) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ProgressBarComplete","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var totalProgress = _ref.totalProgress, i18n = _ref.i18n;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressBarComplete"},');

        return h("div", {
          class: "uppy-StatusBar-content",
          role: "status",
          title: i18n('complete')
        }, h("div", {
          class: "uppy-StatusBar-status"
        }, h("div", {
          class: "uppy-StatusBar-statusPrimary"
        }, h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "uppy-StatusBar-statusIndicator UppyIcon",
          width: "15",
          height: "11",
          viewBox: "0 0 15 11"
        }, h("path", {
          d: "M.414 5.843L1.627 4.63l3.472 3.472L13.202 0l1.212 1.213L5.1 10.528z"
        })), i18n('complete'))));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressBarComplete"},');

      };
      var ProgressBarError = function ProgressBarError(_ref2) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ProgressBarError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var error = _ref2.error, retryAll = _ref2.retryAll, hideRetryButton = _ref2.hideRetryButton, i18n = _ref2.i18n;
        function displayErrorAlert() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"displayErrorAlert","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var errorMessage = i18n('uploadFailed') + " \n\n " + error;
          alert(errorMessage);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"displayErrorAlert","paramsNumber":0},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressBarError"},');

        return h("div", {
          class: "uppy-StatusBar-content",
          role: "alert",
          title: i18n('uploadFailed')
        }, h("div", {
          class: "uppy-StatusBar-status"
        }, h("div", {
          class: "uppy-StatusBar-statusPrimary"
        }, h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "uppy-StatusBar-statusIndicator UppyIcon",
          width: "11",
          height: "11",
          viewBox: "0 0 11 11"
        }, h("path", {
          d: "M4.278 5.5L0 1.222 1.222 0 5.5 4.278 9.778 0 11 1.222 6.722 5.5 11 9.778 9.778 11 5.5 6.722 1.222 11 0 9.778z"
        })), i18n('uploadFailed'))), h("span", {
          class: "uppy-StatusBar-details",
          "aria-label": error,
          "data-microtip-position": "top-right",
          "data-microtip-size": "medium",
          role: "tooltip",
          onclick: displayErrorAlert
        }, "?"));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ProgressBarError"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###187"},');

    }, {
      "./StatusBarStates": 173,
      "@transloadit/prettier-bytes": 175,
      "@uppy/utils/lib/prettyETA": 226,
      "classnames": 9,
      "lodash.throttle": 43,
      "preact": 51
    }],
    173: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###188","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        STATE_ERROR: 'error',
        STATE_WAITING: 'waiting',
        STATE_PREPROCESSING: 'preprocessing',
        STATE_UPLOADING: 'uploading',
        STATE_POSTPROCESSING: 'postprocessing',
        STATE_COMPLETE: 'complete'
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###188"},');

    }, {}],
    174: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###189","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###24","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###24"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###24"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var Translator = require('@uppy/utils/lib/Translator');
      var StatusBarUI = require('./StatusBar');
      var statusBarStates = require('./StatusBarStates');
      var getSpeed = require('@uppy/utils/lib/getSpeed');
      var getBytesRemaining = require('@uppy/utils/lib/getBytesRemaining');
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(StatusBar, _Plugin);
        function StatusBar(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"StatusBar","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.startUpload = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.startUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.startUpload"},');

            return _this.uppy.upload().catch(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.startUpload.ReturnStatement._this.uppy.upload.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.startUpload.ReturnStatement._this.uppy.upload.catch"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.startUpload"},');

          };
          _this.id = _this.opts.id || 'StatusBar';
          _this.title = 'StatusBar';
          _this.type = 'progressindicator';
          _this.defaultLocale = {
            strings: {
              uploading: 'Uploading',
              upload: 'Upload',
              complete: 'Complete',
              uploadFailed: 'Upload failed',
              paused: 'Paused',
              retry: 'Retry',
              cancel: 'Cancel',
              pause: 'Pause',
              resume: 'Resume',
              filesUploadedOfTotal: {
                0: '%{complete} of %{smart_count} file uploaded',
                1: '%{complete} of %{smart_count} files uploaded'
              },
              dataUploadedOfTotal: '%{complete} of %{total}',
              xTimeLeft: '%{time} left',
              uploadXFiles: {
                0: 'Upload %{smart_count} file',
                1: 'Upload %{smart_count} files'
              },
              uploadXNewFiles: {
                0: 'Upload +%{smart_count} file',
                1: 'Upload +%{smart_count} files'
              },
              xMoreFilesAdded: {
                0: '%{smart_count} more file added',
                1: '%{smart_count} more files added'
              }
            }
          };
          var defaultOptions = {
            target: 'body',
            hideUploadButton: false,
            hideRetryButton: false,
            hidePauseResumeButton: false,
            hideCancelButton: false,
            showProgressDetails: false,
            hideAfterFinish: true
          };
          _this.opts = _extends({}, defaultOptions, {}, opts);
          _this.i18nInit();
          _this.render = _this.render.bind(_assertThisInitialized(_this));
          _this.install = _this.install.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"StatusBar"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"StatusBar","paramsNumber":2},');

        }
        var _proto = StatusBar.prototype;
        _proto.setOptions = function setOptions(newOpts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.setOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          _Plugin.prototype.setOptions.call(this, newOpts);
          this.i18nInit();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.setOptions"},');

        };
        _proto.i18nInit = function i18nInit() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.i18nInit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale]);
          this.i18n = this.translator.translate.bind(this.translator);
          this.setPluginState();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.i18nInit"},');

        };
        _proto.getTotalSpeed = function getTotalSpeed(files) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getTotalSpeed","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var totalSpeed = 0;
          files.forEach(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getTotalSpeed.getTotalSpeed.files.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            totalSpeed = totalSpeed + getSpeed(file.progress);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getTotalSpeed.getTotalSpeed.files.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getTotalSpeed"},');

          return totalSpeed;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getTotalSpeed"},');

        };
        _proto.getTotalETA = function getTotalETA(files) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getTotalETA","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var totalSpeed = this.getTotalSpeed(files);
          if (totalSpeed === 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getTotalETA"},');

            return 0;
          }
          var totalBytesRemaining = files.reduce(function (total, file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getTotalETA.getTotalETA.totalBytesRemaining.files.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getTotalETA.getTotalETA.totalBytesRemaining.files.reduce"},');

            return total + getBytesRemaining(file.progress);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getTotalETA.getTotalETA.totalBytesRemaining.files.reduce"},');

          }, 0);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getTotalETA"},');

          return Math.round(totalBytesRemaining / totalSpeed * 10) / 10;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getTotalETA"},');

        };
        _proto.getUploadingState = function getUploadingState(isAllErrored, isAllComplete, files) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getUploadingState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (isAllErrored) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getUploadingState"},');

            return statusBarStates.STATE_ERROR;
          }
          if (isAllComplete) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getUploadingState"},');

            return statusBarStates.STATE_COMPLETE;
          }
          var state = statusBarStates.STATE_WAITING;
          var fileIDs = Object.keys(files);
          for (var i = 0; i < fileIDs.length; i++) {
            var progress = files[fileIDs[i]].progress;
            if (progress.uploadStarted && !progress.uploadComplete) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getUploadingState"},');

              return statusBarStates.STATE_UPLOADING;
            }
            if (progress.preprocess && state !== statusBarStates.STATE_UPLOADING) {
              state = statusBarStates.STATE_PREPROCESSING;
            }
            if (progress.postprocess && state !== statusBarStates.STATE_UPLOADING && state !== statusBarStates.STATE_PREPROCESSING) {
              state = statusBarStates.STATE_POSTPROCESSING;
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getUploadingState"},');

          return state;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getUploadingState"},');

        };
        _proto.render = function render(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var capabilities = state.capabilities, files = state.files, allowNewUpload = state.allowNewUpload, totalProgress = state.totalProgress, error = state.error;
          var filesArray = Object.keys(files).map(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.filesArray.Object.keys.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.filesArray.Object.keys.map"},');

            return files[file];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.filesArray.Object.keys.map"},');

          });
          var newFiles = filesArray.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.newFiles.filesArray.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.newFiles.filesArray.filter"},');

            return !file.progress.uploadStarted && !file.progress.preprocess && !file.progress.postprocess;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.newFiles.filesArray.filter"},');

          });
          var uploadStartedFiles = filesArray.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.uploadStartedFiles.filesArray.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.uploadStartedFiles.filesArray.filter"},');

            return file.progress.uploadStarted;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.uploadStartedFiles.filesArray.filter"},');

          });
          var pausedFiles = uploadStartedFiles.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.pausedFiles.uploadStartedFiles.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.pausedFiles.uploadStartedFiles.filter"},');

            return file.isPaused;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.pausedFiles.uploadStartedFiles.filter"},');

          });
          var completeFiles = filesArray.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.completeFiles.filesArray.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.completeFiles.filesArray.filter"},');

            return file.progress.uploadComplete;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.completeFiles.filesArray.filter"},');

          });
          var erroredFiles = filesArray.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.erroredFiles.filesArray.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.erroredFiles.filesArray.filter"},');

            return file.error;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.erroredFiles.filesArray.filter"},');

          });
          var inProgressFiles = filesArray.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.inProgressFiles.filesArray.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.inProgressFiles.filesArray.filter"},');

            return !file.progress.uploadComplete && file.progress.uploadStarted;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.inProgressFiles.filesArray.filter"},');

          });
          var inProgressNotPausedFiles = inProgressFiles.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.inProgressNotPausedFiles.inProgressFiles.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.inProgressNotPausedFiles.inProgressFiles.filter"},');

            return !file.isPaused;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.inProgressNotPausedFiles.inProgressFiles.filter"},');

          });
          var startedFiles = filesArray.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.startedFiles.filesArray.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.startedFiles.filesArray.filter"},');

            return file.progress.uploadStarted || file.progress.preprocess || file.progress.postprocess;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.startedFiles.filesArray.filter"},');

          });
          var processingFiles = filesArray.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.processingFiles.filesArray.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.processingFiles.filesArray.filter"},');

            return file.progress.preprocess || file.progress.postprocess;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.processingFiles.filesArray.filter"},');

          });
          var totalETA = this.getTotalETA(inProgressNotPausedFiles);
          var totalSize = 0;
          var totalUploadedSize = 0;
          startedFiles.forEach(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render.render.startedFiles.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            totalSize = totalSize + (file.progress.bytesTotal || 0);
            totalUploadedSize = totalUploadedSize + (file.progress.bytesUploaded || 0);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render.render.startedFiles.forEach"},');

          });
          var isUploadStarted = startedFiles.length > 0;
          var isAllComplete = totalProgress === 100 && completeFiles.length === Object.keys(files).length && processingFiles.length === 0;
          var isAllErrored = error && erroredFiles.length === filesArray.length;
          var isAllPaused = inProgressFiles.length !== 0 && pausedFiles.length === inProgressFiles.length;
          var isUploadInProgress = inProgressFiles.length > 0;
          var resumableUploads = capabilities.resumableUploads || false;
          var supportsUploadProgress = capabilities.uploadProgress !== false;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###6"},');

          return StatusBarUI({
            error: error,
            uploadState: this.getUploadingState(isAllErrored, isAllComplete, state.files || ({})),
            allowNewUpload: allowNewUpload,
            totalProgress: totalProgress,
            totalSize: totalSize,
            totalUploadedSize: totalUploadedSize,
            isAllComplete: isAllComplete,
            isAllPaused: isAllPaused,
            isAllErrored: isAllErrored,
            isUploadStarted: isUploadStarted,
            isUploadInProgress: isUploadInProgress,
            complete: completeFiles.length,
            newFiles: newFiles.length,
            numUploads: startedFiles.length,
            totalETA: totalETA,
            files: files,
            i18n: this.i18n,
            pauseAll: this.uppy.pauseAll,
            resumeAll: this.uppy.resumeAll,
            retryAll: this.uppy.retryAll,
            cancelAll: this.uppy.cancelAll,
            startUpload: this.startUpload,
            resumableUploads: resumableUploads,
            supportsUploadProgress: supportsUploadProgress,
            showProgressDetails: this.opts.showProgressDetails,
            hideUploadButton: this.opts.hideUploadButton,
            hideRetryButton: this.opts.hideRetryButton,
            hidePauseResumeButton: this.opts.hidePauseResumeButton,
            hideCancelButton: this.opts.hideCancelButton,
            hideAfterFinish: this.opts.hideAfterFinish,
            isTargetDOMEl: this.isTargetDOMEl
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###6"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var target = this.opts.target;
          if (target) {
            this.mount(target, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###8"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.unmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###7"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###11"},');

        return StatusBar;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###11"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###189"},');

    }, {
      "../package.json": 176,
      "./StatusBar": 172,
      "./StatusBarStates": 173,
      "@uppy/core": 97,
      "@uppy/utils/lib/Translator": 200,
      "@uppy/utils/lib/getBytesRemaining": 207,
      "@uppy/utils/lib/getSpeed": 217
    }],
    175: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###190","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      arguments[4][100][0].apply(exports, arguments);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###190"},');

    }, {
      "dup": 100
    }],
    176: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###191","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/status-bar",
        "description": "A progress bar for Uppy, with many bells and whistles.",
        "version": "1.6.6",
        "license": "MIT",
        "main": "lib/index.js",
        "style": "dist/style.min.css",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "progress bar", "status bar", "progress", "upload", "eta", "speed"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@transloadit/prettier-bytes": "0.0.7",
          "@uppy/utils": "file:../utils",
          "classnames": "^2.2.6",
          "lodash.throttle": "^4.1.1",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###191"},');

    }, {}],
    177: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###192","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###25","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###25"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###25"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var DefaultStore = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.DefaultStore","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function DefaultStore() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"DefaultStore","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.state = {};
          this.callbacks = [];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"DefaultStore","paramsNumber":0},');

        }
        var _proto = DefaultStore.prototype;
        _proto.getState = function getState() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.DefaultStore._proto.getState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore._proto.getState"},');

          return this.state;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore._proto.getState"},');

        };
        _proto.setState = function setState(patch) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.DefaultStore._proto.setState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var prevState = _extends({}, this.state);
          var nextState = _extends({}, this.state, patch);
          this.state = nextState;
          this._publish(prevState, nextState, patch);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore._proto.setState"},');

        };
        _proto.subscribe = function subscribe(listener) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.DefaultStore._proto.subscribe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this = this;
          this.callbacks.push(listener);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore._proto.subscribe"},');

          return function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.DefaultStore._proto.subscribe.subscribe.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this.callbacks.splice(_this.callbacks.indexOf(listener), 1);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore._proto.subscribe.subscribe.ReturnStatement"},');

          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore._proto.subscribe"},');

        };
        _proto._publish = function _publish() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.DefaultStore._proto._publish","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          this.callbacks.forEach(function (listener) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.DefaultStore._proto._publish._publish.callbacks.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            listener.apply(void 0, args);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore._proto._publish._publish.callbacks.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore._proto._publish"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore"},');

        return DefaultStore;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.DefaultStore"},');

      })();
      DefaultStore.VERSION = require('../package.json').version;
      module.exports = function defaultStore() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###51","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###51"},');

        return new DefaultStore();
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###51"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###192"},');

    }, {
      "../package.json": 178
    }],
    178: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###193","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/store-default",
        "description": "The default simple object-based store for Uppy.",
        "version": "1.2.1",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-store"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###193"},');

    }, {}],
    179: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###194","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###26","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###26"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###26"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var Translator = require('@uppy/utils/lib/Translator');
      var dataURItoBlob = require('@uppy/utils/lib/dataURItoBlob');
      var isObjectURL = require('@uppy/utils/lib/isObjectURL');
      var isPreviewSupported = require('@uppy/utils/lib/isPreviewSupported');
      var MathLog2 = require('math-log2');
      var exifr = require('exifr/dist/mini.legacy.umd.js');
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(ThumbnailGenerator, _Plugin);
        function ThumbnailGenerator(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ThumbnailGenerator","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.onFileAdded = function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.onFileAdded","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (!file.preview && isPreviewSupported(file.type) && !file.isRemote) {
              _this.addToQueue(file.id);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.onFileAdded"},');

          };
          _this.onCancelRequest = function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.onCancelRequest","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var index = _this.queue.indexOf(file.id);
            if (index !== -1) {
              _this.queue.splice(index, 1);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.onCancelRequest"},');

          };
          _this.onFileRemoved = function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.onFileRemoved","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var index = _this.queue.indexOf(file.id);
            if (index !== -1) {
              _this.queue.splice(index, 1);
            }
            if (file.preview && isObjectURL(file.preview)) {
              URL.revokeObjectURL(file.preview);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.onFileRemoved"},');

          };
          _this.onRestored = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.onRestored","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this$uppy$getState = _this.uppy.getState(), files = _this$uppy$getState.files;
            var fileIDs = Object.keys(files);
            fileIDs.forEach(function (fileID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.onRestored.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var file = _this.uppy.getFile(fileID);
              if (!file.isRestored) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"_this.onRestored.fileIDs.forEach"},');

                return;
              }
              if (!file.preview || isObjectURL(file.preview)) {
                _this.addToQueue(file.id);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.onRestored.fileIDs.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.onRestored"},');

          };
          _this.waitUntilAllProcessed = function (fileIDs) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.waitUntilAllProcessed","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            fileIDs.forEach(function (fileID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.waitUntilAllProcessed.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var file = _this.uppy.getFile(fileID);
              _this.uppy.emit('preprocess-progress', file, {
                mode: 'indeterminate',
                message: _this.i18n('generatingThumbnails')
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.waitUntilAllProcessed.fileIDs.forEach"},');

            });
            var emitPreprocessCompleteForAll = function emitPreprocessCompleteForAll() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"emitPreprocessCompleteForAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              fileIDs.forEach(function (fileID) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.waitUntilAllProcessed.emitPreprocessCompleteForAll.emitPreprocessCompleteForAll.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var file = _this.uppy.getFile(fileID);
                _this.uppy.emit('preprocess-complete', file);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"_this.waitUntilAllProcessed.emitPreprocessCompleteForAll.emitPreprocessCompleteForAll.fileIDs.forEach"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"emitPreprocessCompleteForAll"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.waitUntilAllProcessed"},');

            return new Promise(function (resolve, reject) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.waitUntilAllProcessed.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              if (_this.queueProcessing) {
                _this.uppy.once('thumbnail:all-generated', function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.waitUntilAllProcessed.ReturnStatement.NewExpression._this.uppy.once","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                  emitPreprocessCompleteForAll();
                  resolve();
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"_this.waitUntilAllProcessed.ReturnStatement.NewExpression._this.uppy.once"},');

                });
              } else {
                emitPreprocessCompleteForAll();
                resolve();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_this.waitUntilAllProcessed.ReturnStatement.NewExpression"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.waitUntilAllProcessed"},');

          };
          _this.type = 'modifier';
          _this.id = _this.opts.id || 'ThumbnailGenerator';
          _this.title = 'Thumbnail Generator';
          _this.queue = [];
          _this.queueProcessing = false;
          _this.defaultThumbnailDimension = 200;
          _this.defaultLocale = {
            strings: {
              generatingThumbnails: 'Generating thumbnails...'
            }
          };
          var defaultOptions = {
            thumbnailWidth: null,
            thumbnailHeight: null,
            waitForThumbnailsBeforeUpload: false,
            lazy: false
          };
          _this.opts = _extends({}, defaultOptions, {}, opts);
          if (_this.opts.lazy && _this.opts.waitForThumbnailsBeforeUpload) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ThumbnailGenerator"},');

            throw new Error('ThumbnailGenerator: The `lazy` and `waitForThumbnailsBeforeUpload` options are mutually exclusive. Please ensure at most one of them is set to `true`.');
          }
          _this.i18nInit();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ThumbnailGenerator"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ThumbnailGenerator","paramsNumber":2},');

        }
        var _proto = ThumbnailGenerator.prototype;
        _proto.setOptions = function setOptions(newOpts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.setOptions###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          _Plugin.prototype.setOptions.call(this, newOpts);
          this.i18nInit();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.setOptions###2"},');

        };
        _proto.i18nInit = function i18nInit() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.i18nInit###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale]);
          this.i18n = this.translator.translate.bind(this.translator);
          this.setPluginState();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.i18nInit###2"},');

        };
        _proto.createThumbnail = function createThumbnail(file, targetWidth, targetHeight) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var _this2 = this;
          var originalUrl = URL.createObjectURL(file.data);
          var onload = new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.onload.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var image = new Image();
            image.src = originalUrl;
            image.addEventListener('load', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.onload.NewExpression.image.addEventListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              URL.revokeObjectURL(originalUrl);
              resolve(image);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.onload.NewExpression.image.addEventListener"},');

            });
            image.addEventListener('error', function (event) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.onload.NewExpression.image.addEventListener###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              URL.revokeObjectURL(originalUrl);
              reject(event.error || new Error('Could not create thumbnail'));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.onload.NewExpression.image.addEventListener###2"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.onload.NewExpression"},');

          });
          var orientationPromise = exifr.rotation(file.data).catch(function (_err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.orientationPromise.exifr.rotation.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.orientationPromise.exifr.rotation.catch"},');

            return 1;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.orientationPromise.exifr.rotation.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail"},');

          return Promise.all([onload, orientationPromise]).then(function (_ref) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.ReturnStatement.Promise.all.then.then.Promise.all.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var image = _ref[0], orientation = _ref[1];
            var dimensions = _this2.getProportionalDimensions(image, targetWidth, targetHeight, orientation.deg);
            var rotatedImage = _this2.rotateImage(image, orientation);
            var resizedImage = _this2.resizeImage(rotatedImage, dimensions.width, dimensions.height);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.ReturnStatement.Promise.all.then.then.Promise.all.then"},');

            return _this2.canvasToBlob(resizedImage, 'image/jpeg', 80);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.ReturnStatement.Promise.all.then.then.Promise.all.then"},');

          }).then(function (blob) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.ReturnStatement.Promise.all.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.ReturnStatement.Promise.all.then.then"},');

            return URL.createObjectURL(blob);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail.createThumbnail.ReturnStatement.Promise.all.then.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.createThumbnail"},');

        };
        _proto.getProportionalDimensions = function getProportionalDimensions(img, width, height, rotation) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getProportionalDimensions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

          var aspect = img.width / img.height;
          if (rotation === 90 || rotation === 270) {
            aspect = img.height / img.width;
          }
          if (width != null) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getProportionalDimensions"},');

            return {
              width: width,
              height: Math.round(width / aspect)
            };
          }
          if (height != null) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getProportionalDimensions"},');

            return {
              width: Math.round(height * aspect),
              height: height
            };
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getProportionalDimensions"},');

          return {
            width: this.defaultThumbnailDimension,
            height: Math.round(this.defaultThumbnailDimension / aspect)
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getProportionalDimensions"},');

        };
        _proto.protect = function protect(image) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.protect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var ratio = image.width / image.height;
          var maxSquare = 5000000;
          var maxSize = 4096;
          var maxW = Math.floor(Math.sqrt(maxSquare * ratio));
          var maxH = Math.floor(maxSquare / Math.sqrt(maxSquare * ratio));
          if (maxW > maxSize) {
            maxW = maxSize;
            maxH = Math.round(maxW / ratio);
          }
          if (maxH > maxSize) {
            maxH = maxSize;
            maxW = Math.round(ratio * maxH);
          }
          if (image.width > maxW) {
            var canvas = document.createElement('canvas');
            canvas.width = maxW;
            canvas.height = maxH;
            canvas.getContext('2d').drawImage(image, 0, 0, maxW, maxH);
            image = canvas;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.protect"},');

          return image;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.protect"},');

        };
        _proto.resizeImage = function resizeImage(image, targetWidth, targetHeight) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.resizeImage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          image = this.protect(image);
          var steps = Math.ceil(MathLog2(image.width / targetWidth));
          if (steps < 1) {
            steps = 1;
          }
          var sW = targetWidth * Math.pow(2, steps - 1);
          var sH = targetHeight * Math.pow(2, steps - 1);
          var x = 2;
          while (steps--) {
            var canvas = document.createElement('canvas');
            canvas.width = sW;
            canvas.height = sH;
            canvas.getContext('2d').drawImage(image, 0, 0, sW, sH);
            image = canvas;
            sW = Math.round(sW / x);
            sH = Math.round(sH / x);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.resizeImage"},');

          return image;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.resizeImage"},');

        };
        _proto.rotateImage = function rotateImage(image, translate) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.rotateImage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var w = image.width;
          var h = image.height;
          if (translate.deg === 90 || translate.deg === 270) {
            w = image.height;
            h = image.width;
          }
          var canvas = document.createElement('canvas');
          canvas.width = w;
          canvas.height = h;
          var context = canvas.getContext('2d');
          context.translate(w / 2, h / 2);
          if (translate.canvas) {
            context.rotate(translate.rad);
            context.scale(translate.scaleX, translate.scaleY);
          }
          context.drawImage(image, -image.width / 2, -image.height / 2, image.width, image.height);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.rotateImage"},');

          return canvas;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.rotateImage"},');

        };
        _proto.canvasToBlob = function canvasToBlob(canvas, type, quality) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          try {
            canvas.getContext('2d').getImageData(0, 0, 1, 1);
          } catch (err) {
            if (err.code === 18) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob"},');

              return Promise.reject(new Error('cannot read image, probably an svg with external resources'));
            }
          }
          if (canvas.toBlob) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob"},');

            return new Promise(function (resolve) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.then.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              canvas.toBlob(resolve, type, quality);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.then.NewExpression"},');

            }).then(function (blob) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (blob === null) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.then"},');

                throw new Error('cannot read image, probably an svg with external resources');
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.then"},');

              return blob;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.then"},');

            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob"},');

          return Promise.resolve().then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.Promise.resolve.then.then.Promise.resolve.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.Promise.resolve.then.then.Promise.resolve.then"},');

            return dataURItoBlob(canvas.toDataURL(type, quality), {});
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.Promise.resolve.then.then.Promise.resolve.then"},');

          }).then(function (blob) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.Promise.resolve.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (blob === null) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.Promise.resolve.then.then"},');

              throw new Error('could not extract blob, probably an old browser');
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.Promise.resolve.then.then"},');

            return blob;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob.canvasToBlob.ReturnStatement.Promise.resolve.then.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.canvasToBlob"},');

        };
        _proto.setPreviewURL = function setPreviewURL(fileID, preview) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.setPreviewURL","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.uppy.setFileState(fileID, {
            preview: preview
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.setPreviewURL"},');

        };
        _proto.addToQueue = function addToQueue(item) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.addToQueue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.queue.push(item);
          if (this.queueProcessing === false) {
            this.processQueue();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addToQueue"},');

        };
        _proto.processQueue = function processQueue() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.processQueue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this3 = this;
          this.queueProcessing = true;
          if (this.queue.length > 0) {
            var current = this.uppy.getFile(this.queue.shift());
            if (!current) {
              this.uppy.log('[ThumbnailGenerator] file was removed before a thumbnail could be generated, but not removed from the queue. This is probably a bug', 'error');
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.processQueue"},');

              return;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.processQueue"},');

            return this.requestThumbnail(current).catch(function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.processQueue.processQueue.ReturnStatement.requestThumbnail.catch.then.requestThumbnail.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.processQueue.processQueue.ReturnStatement.requestThumbnail.catch.then.requestThumbnail.catch"},');

            }).then(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.processQueue.processQueue.ReturnStatement.requestThumbnail.catch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.processQueue.processQueue.ReturnStatement.requestThumbnail.catch.then"},');

              return _this3.processQueue();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.processQueue.processQueue.ReturnStatement.requestThumbnail.catch.then"},');

            });
          } else {
            this.queueProcessing = false;
            this.uppy.log('[ThumbnailGenerator] Emptied thumbnail queue');
            this.uppy.emit('thumbnail:all-generated');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.processQueue"},');

        };
        _proto.requestThumbnail = function requestThumbnail(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.requestThumbnail","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this4 = this;
          if (isPreviewSupported(file.type) && !file.isRemote) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.requestThumbnail"},');

            return this.createThumbnail(file, this.opts.thumbnailWidth, this.opts.thumbnailHeight).then(function (preview) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.requestThumbnail.requestThumbnail.ReturnStatement.createThumbnail.then.catch.createThumbnail.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this4.setPreviewURL(file.id, preview);
              _this4.uppy.log("[ThumbnailGenerator] Generated thumbnail for " + file.id);
              _this4.uppy.emit('thumbnail:generated', _this4.uppy.getFile(file.id), preview);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.requestThumbnail.requestThumbnail.ReturnStatement.createThumbnail.then.catch.createThumbnail.then"},');

            }).catch(function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.requestThumbnail.requestThumbnail.ReturnStatement.createThumbnail.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this4.uppy.log("[ThumbnailGenerator] Failed thumbnail for " + file.id + ":", 'warning');
              _this4.uppy.log(err, 'warning');
              _this4.uppy.emit('thumbnail:error', _this4.uppy.getFile(file.id), err);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.requestThumbnail.requestThumbnail.ReturnStatement.createThumbnail.then.catch"},');

            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.requestThumbnail"},');

          return Promise.resolve();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.requestThumbnail"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.uppy.on('file-removed', this.onFileRemoved);
          if (this.opts.lazy) {
            this.uppy.on('thumbnail:request', this.onFileAdded);
            this.uppy.on('thumbnail:cancel', this.onCancelRequest);
          } else {
            this.uppy.on('file-added', this.onFileAdded);
            this.uppy.on('restored', this.onRestored);
          }
          if (this.opts.waitForThumbnailsBeforeUpload) {
            this.uppy.addPreProcessor(this.waitUntilAllProcessed);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###9"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.uppy.off('file-removed', this.onFileRemoved);
          if (this.opts.lazy) {
            this.uppy.off('thumbnail:request', this.onFileAdded);
            this.uppy.off('thumbnail:cancel', this.onCancelRequest);
          } else {
            this.uppy.off('file-added', this.onFileAdded);
            this.uppy.off('restored', this.onRestored);
          }
          if (this.opts.waitForThumbnailsBeforeUpload) {
            this.uppy.removePreProcessor(this.waitUntilAllProcessed);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###8"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###12"},');

        return ThumbnailGenerator;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###12"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###194"},');

    }, {
      "../package.json": 181,
      "@uppy/core": 97,
      "@uppy/utils/lib/Translator": 200,
      "@uppy/utils/lib/dataURItoBlob": 202,
      "@uppy/utils/lib/isObjectURL": 223,
      "@uppy/utils/lib/isPreviewSupported": 224,
      "exifr/dist/mini.legacy.umd.js": 180,
      "math-log2": 44
    }],
    180: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###197","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      (function (process, global, Buffer) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###23","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        !(function (e, t) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###21","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define("exifr", ["exports"], t) : t((e = e || self).exifr = {});
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###21"},');

        })(this, function (e) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call###22","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          "use strict";
          function t(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"t","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (!(e instanceof t)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"t"},');

              throw new TypeError("Cannot call a class as a function");
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"t","paramsNumber":2},');

          }
          function n(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            for (var n = 0; n < t.length; n++) {
              var r = t[n];
              (r.enumerable = r.enumerable || !1, r.configurable = !0, ("value" in r) && (r.writable = !0), Object.defineProperty(e, r.key, r));
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":2},');

          }
          function r(e, t, r) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"r","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"r"},');

            return (t && n(e.prototype, t), r && n(e, r), e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"r","paramsNumber":3},');

          }
          function i(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"i","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"i"},');

            return ((t in e) ? Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0
            }) : e[t] = n, e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"i","paramsNumber":3},');

          }
          function s(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"s","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if ("function" != typeof t && null !== t) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"s"},');

              throw new TypeError("Super expression must either be null or a function");
            }
            e.prototype = Object.create(t && t.prototype, {
              constructor: {
                value: e,
                writable: !0,
                configurable: !0
              }
            });
            var n = ["prototype", "__proto__", "caller", "arguments", "length", "name"];
            (Object.getOwnPropertyNames(t).forEach(function (r) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"Object.getOwnPropertyNames.forEach###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              -1 === n.indexOf(r) && e[r] !== t[r] && (e[r] = t[r]);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Object.getOwnPropertyNames.forEach###2"},');

            }), t && u(e, t));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"s","paramsNumber":2},');

          }
          function a(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"a","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"a"},');

            return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.a","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.a"},');

              return e.__proto__ || Object.getPrototypeOf(e);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.a"},');

            })(e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"a","paramsNumber":1},');

          }
          function u(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"u","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"u"},');

            return (u = Object.setPrototypeOf || (function (e, t) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.u","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.u"},');

              return (e.__proto__ = t, e);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.u"},');

            }))(e, t);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"u","paramsNumber":2},');

          }
          function o() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"o","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if ("undefined" == typeof Reflect || !Reflect.construct) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"o"},');

              return !1;
            }
            if (Reflect.construct.sham) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"o"},');

              return !1;
            }
            if ("function" == typeof Proxy) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"o"},');

              return !0;
            }
            try {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"o"},');

              return (Date.prototype.toString.call(Reflect.construct(Date, [], function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.Date.prototype.toString.call.Reflect.construct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.Date.prototype.toString.call.Reflect.construct"},');

              })), !0);
            } catch (e) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"o"},');

              return !1;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"o","paramsNumber":0},');

          }
          function f(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"f","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"f"},');

            return (f = o() ? Reflect.construct : function (e, t, n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.apply.f","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

              var r = [null];
              r.push.apply(r, t);
              var i = new (Function.bind.apply(e, r))();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.apply.f"},');

              return (n && u(i, n.prototype), i);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.apply.f"},');

            }).apply(null, arguments);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"f","paramsNumber":3},');

          }
          function h(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"h","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = "function" == typeof Map ? new Map() : void 0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"h"},');

            return (h = function (e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.h","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (null === e || (n = e, -1 === Function.toString.call(n).indexOf("[native code]"))) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h"},');

                return e;
              }
              var n;
              if ("function" != typeof e) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h"},');

                throw new TypeError("Super expression must either be null or a function");
              }
              if (void 0 !== t) {
                if (t.has(e)) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h"},');

                  return t.get(e);
                }
                t.set(e, r);
              }
              function r() {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"r","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"r"},');

                return f(e, arguments, a(this).constructor);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"r","paramsNumber":0},');

              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h"},');

              return (r.prototype = Object.create(e.prototype, {
                constructor: {
                  value: r,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0
                }
              }), u(r, e));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.h"},');

            })(e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"h","paramsNumber":1},');

          }
          function c(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"c","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (void 0 === e) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"c"},');

              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"c"},');

            return e;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"c","paramsNumber":1},');

          }
          function l(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"l","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"l"},');

            return !t || "object" != typeof t && "function" != typeof t ? c(e) : t;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"l","paramsNumber":2},');

          }
          function d(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"d","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"d"},');

            return (d = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (e, t, n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.d","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

              var r = (function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.d.r","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = a(e)); ) ;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.d.r"},');

                return e;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.d.r"},');

              })(e, t);
              if (r) {
                var i = Object.getOwnPropertyDescriptor(r, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.d"},');

                return i.get ? i.get.call(n) : i.value;
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.d"},');

            })(e, t, n || e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"d","paramsNumber":3},');

          }
          var p = Object.values || (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.p","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = [];
            for (var n in e) t.push(e[n]);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.p"},');

            return t;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.p"},');

          }), v = Object.entries || (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.v","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = [];
            for (var n in e) t.push([n, e[n]]);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.v"},');

            return t;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.v"},');

          }), y = Object.assign || (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.y","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.y"},');

            return (n.forEach(function (t) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.y.ReturnStatement.n.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              for (var n in t) e[n] = t[n];
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.y.ReturnStatement.n.forEach"},');

            }), e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.y"},');

          }), g = Object.fromEntries || (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.g","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = {};
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.g"},');

            return (k(e).forEach(function (e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.g.ReturnStatement.k.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var n = e[0], r = e[1];
              t[n] = r;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.g.ReturnStatement.k.forEach"},');

            }), t);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.g"},');

          }), k = Array.from || (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.k","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (e instanceof S) {
              var t = [];
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.k"},');

              return (e.forEach(function (e, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.k.ReturnStatement.e.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.k.ReturnStatement.e.forEach"},');

                return t.push([n, e]);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.k.ReturnStatement.e.forEach"},');

              }), t);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.k"},');

            return Array.prototype.slice.call(e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.k"},');

          });
          function m(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"m","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"m"},');

            return -1 !== this.indexOf(e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"m","paramsNumber":1},');

          }
          (Array.prototype.includes || (Array.prototype.includes = m), String.prototype.includes || (String.prototype.includes = m), String.prototype.startsWith || (String.prototype.startsWith = function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.String.prototype.startsWith","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.String.prototype.startsWith"},');

            return this.substring(t, t + e.length) === e;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.String.prototype.startsWith"},');

          }), String.prototype.endsWith || (String.prototype.endsWith = function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.String.prototype.endsWith","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.length;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.String.prototype.endsWith"},');

            return this.substring(t - e.length, t) === e;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.String.prototype.endsWith"},');

          }));
          var b = "undefined" != typeof self ? self : global, w = b.fetch || (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.w","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.w"},');

            return new Promise(function (n, r) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.w.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var i = new XMLHttpRequest();
              if ((i.open("get", e, !0), i.responseType = "arraybuffer", i.onerror = r, t.headers)) for (var s in t.headers) i.setRequestHeader(s, t.headers[s]);
              (i.onload = function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.w.ReturnStatement.NewExpression.i.onload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                n({
                  ok: i.status >= 200 && i.status < 300,
                  status: i.status,
                  arrayBuffer: function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.w.ReturnStatement.NewExpression.i.onload.n.arrayBuffer","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.w.ReturnStatement.NewExpression.i.onload.n.arrayBuffer"},');

                    return Promise.resolve(i.response);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.w.ReturnStatement.NewExpression.i.onload.n.arrayBuffer"},');

                  }
                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.w.ReturnStatement.NewExpression.i.onload"},');

              }, i.send(null));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.w.ReturnStatement.NewExpression"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.w"},');

          }), A = function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"A","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = [];
            if ((Object.defineProperties(t, {
              size: {
                get: function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.A.Object.defineProperties.size.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.A.Object.defineProperties.size.get"},');

                  return this.length;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.A.Object.defineProperties.size.get"},');

                }
              },
              has: {
                value: function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.A.Object.defineProperties.has.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.A.Object.defineProperties.has.value"},');

                  return -1 !== this.indexOf(e);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.A.Object.defineProperties.has.value"},');

                }
              },
              add: {
                value: function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.A.Object.defineProperties.add.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  this.has(e) || this.push(e);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.A.Object.defineProperties.add.value"},');

                }
              },
              delete: {
                value: function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.A.Object.defineProperties.delete.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  if (this.has(e)) {
                    var t = this.indexOf(e);
                    this.splice(t, 1);
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.A.Object.defineProperties.delete.value"},');

                }
              }
            }), Array.isArray(e))) for (var n = 0; n < e.length; n++) t.add(e[n]);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"A"},');

            return t;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"A"},');

          }, O = function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"O","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"O"},');

            return new S(e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"O"},');

          }, S = void 0 !== b.Map && void 0 !== b.Map.prototype.keys ? b.Map : (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function e(n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if ((t(this, e), this.clear(), n)) for (var r = 0; r < n.length; r++) this.set(n[r][0], n[r][1]);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"e","paramsNumber":1},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S"},');

            return (r(e, [{
              key: "clear",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                (this._map = {}, this._keys = []);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value"},');

              }
            }, {
              key: "get",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###2"},');

                return this._map["map_" + e];
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "set",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###3"},');

                return (this._map["map_" + e] = t, this._keys.indexOf(e) < 0 && this._keys.push(e), this);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###3"},');

              }
            }, {
              key: "has",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###4"},');

                return this._keys.indexOf(e) >= 0;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###4"},');

              }
            }, {
              key: "delete",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = this._keys.indexOf(e);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###5"},');

                return !(t < 0) && (delete this._map["map_" + e], this._keys.splice(t, 1), !0);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###5"},');

              }
            }, {
              key: "keys",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###6"},');

                return this._keys.slice(0);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###6"},');

              }
            }, {
              key: "values",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = this;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###7"},');

                return this._keys.map(function (t) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value.ReturnStatement._keys.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value.ReturnStatement._keys.map"},');

                  return e.get(t);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value.ReturnStatement._keys.map"},');

                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###7"},');

              }
            }, {
              key: "entries",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = this;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###8"},');

                return this._keys.map(function (t) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value.ReturnStatement._keys.map###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value.ReturnStatement._keys.map###2"},');

                  return [t, e.get(t)];
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value.ReturnStatement._keys.map###2"},');

                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###8"},');

              }
            }, {
              key: "forEach",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.value###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                for (var n = 0; n < this._keys.length; n++) e.call(t, this._map["map_" + this._keys[n]], this._keys[n], this);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.value###9"},');

              }
            }, {
              key: "size",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.S.ReturnStatement.r.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.get"},');

                return this._keys.length;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S.ReturnStatement.r.get"},');

              }
            }]), e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.S"},');

          })(), P = "undefined" != typeof self ? self : global, U = "undefined" != typeof navigator, x = U && "undefined" == typeof HTMLImageElement, C = !("undefined" == typeof global || "undefined" == typeof process || !process.versions || !process.versions.node), B = P.Buffer, j = P.BigInt, _ = !!B;
          var I = function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"I","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"I"},');

            return void 0 !== e;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"I"},');

          };
          function V(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"V","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"V"},');

            return void 0 === e || (e instanceof S ? 0 === e.size : 0 === p(e).filter(I).length);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"V","paramsNumber":1},');

          }
          function T(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"T","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = new Error(e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"T"},');

            return (delete t.stack, t);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"T","paramsNumber":1},');

          }
          function L(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"L","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = (function (e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"t","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var t = 0;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"t"},');

              return (e.ifd0.enabled && (t += 1024), e.exif.enabled && (t += 2048), e.makerNote && (t += 2048), e.userComment && (t += 1024), e.gps.enabled && (t += 512), e.interop.enabled && (t += 100), e.ifd1.enabled && (t += 1024), t + 2048);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"t"},');

            })(e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"L"},');

            return (e.jfif.enabled && (t += 50), e.xmp.enabled && (t += 2e4), e.iptc.enabled && (t += 14e3), e.icc.enabled && (t += 6e3), t);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"L","paramsNumber":1},');

          }
          var z = "undefined" != typeof TextDecoder ? new TextDecoder("utf-8") : void 0;
          function F(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"F","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"F"},');

            return z ? z.decode(e) : _ ? Buffer.from(e).toString("utf8") : decodeURIComponent(escape(String.fromCharCode.apply(null, e)));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"F","paramsNumber":1},');

          }
          var E = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function e(n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, i = arguments.length > 2 ? arguments[2] : void 0, s = arguments.length > 3 ? arguments[3] : void 0;
              if ((t(this, e), "boolean" == typeof s && (this.le = s), Array.isArray(n) && (n = new Uint8Array(n)), 0 === n)) (this.byteOffset = 0, this.byteLength = 0); else if (n instanceof ArrayBuffer) {
                void 0 === i && (i = n.byteLength - r);
                var a = new DataView(n, r, i);
                this._swapDataView(a);
              } else if (n instanceof Uint8Array || n instanceof DataView || n instanceof e) {
                if ((void 0 === i && (i = n.byteLength - r), (r += n.byteOffset) + i > n.byteOffset + n.byteLength)) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"e"},');

                  throw T("Creating view outside of available memory in ArrayBuffer");
                }
                var u = new DataView(n.buffer, r, i);
                this._swapDataView(u);
              } else {
                if ("number" != typeof n) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"e"},');

                  throw T("Invalid input argument for BufferView: " + n);
                }
                var o = new DataView(new ArrayBuffer(n));
                this._swapDataView(o);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"e","paramsNumber":1},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E"},');

            return (r(e, null, [{
              key: "from",
              value: function (t, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value"},');

                return t instanceof this && t.le === n ? t : new e(t, void 0, void 0, n);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value"},');

              }
            }]), r(e, [{
              key: "_swapArrayBuffer",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                this._swapDataView(new DataView(e));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "_swapBuffer",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                this._swapDataView(new DataView(e.buffer, e.byteOffset, e.byteLength));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###3"},');

              }
            }, {
              key: "_swapDataView",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                (this.dataView = e, this.buffer = e.buffer, this.byteOffset = e.byteOffset, this.byteLength = e.byteLength);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###4"},');

              }
            }, {
              key: "_lengthToEnd",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###5"},');

                return this.byteLength - e;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###5"},');

              }
            }, {
              key: "set",
              value: function (t, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e;
                if ((t instanceof DataView || t instanceof e ? t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t instanceof ArrayBuffer && (t = new Uint8Array(t)), !(t instanceof Uint8Array))) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###6"},');

                  throw T("BufferView.set(): Invalid data argument.");
                }
                var i = this.toUint8();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###6"},');

                return (i.set(t, n), new r(this, n, t.byteLength));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###6"},');

              }
            }, {
              key: "subarray",
              value: function (t, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###7"},');

                return new e(this, t, n = n || this._lengthToEnd(t));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###7"},');

              }
            }, {
              key: "toUint8",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###8"},');

                return new Uint8Array(this.buffer, this.byteOffset, this.byteLength);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###8"},');

              }
            }, {
              key: "getUint8Array",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###9"},');

                return new Uint8Array(this.buffer, this.byteOffset + e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###9"},');

              }
            }, {
              key: "getString",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.byteLength, n = this.getUint8Array(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###10"},');

                return F(n);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###10"},');

              }
            }, {
              key: "getUnicodeString",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.byteLength, n = [], r = 0; r < t && e + r < this.byteLength; r += 2) n.push(this.getUint16(e + r));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###11"},');

                return n.map(function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value.ReturnStatement.n.map.join.n.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value.ReturnStatement.n.map.join.n.map"},');

                  return String.fromCharCode(e);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value.ReturnStatement.n.map.join.n.map"},');

                }).join("");
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###11"},');

              }
            }, {
              key: "getInt8",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###12"},');

                return this.dataView.getInt8(e);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###12"},');

              }
            }, {
              key: "getUint8",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###13"},');

                return this.dataView.getUint8(e);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###13"},');

              }
            }, {
              key: "getInt16",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###14","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###14"},');

                return this.dataView.getInt16(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###14"},');

              }
            }, {
              key: "getInt32",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###15","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###15"},');

                return this.dataView.getInt32(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###15"},');

              }
            }, {
              key: "getUint16",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###16","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###16"},');

                return this.dataView.getUint16(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###16"},');

              }
            }, {
              key: "getUint32",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###17","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###17"},');

                return this.dataView.getUint32(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###17"},');

              }
            }, {
              key: "getFloat32",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###18","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###18"},');

                return this.dataView.getFloat32(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###18"},');

              }
            }, {
              key: "getFloat64",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###19","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###19"},');

                return this.dataView.getFloat64(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###19"},');

              }
            }, {
              key: "getFloat",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###20","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###20"},');

                return this.dataView.getFloat32(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###20"},');

              }
            }, {
              key: "getDouble",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###21","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###21"},');

                return this.dataView.getFloat64(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###21"},');

              }
            }, {
              key: "getUint64",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###22","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = this.getUint32(e), n = this.getUint32(e + 4);
                if (t < 1048575) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###22"},');

                  return t << 32 | n;
                }
                if (void 0 !== typeof j) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###22"},');

                  return (console.warn("Using BigInt because of type 64uint but JS can only handle 53b numbers."), j(t) << j(32) | j(n));
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###22"},');

                throw T("Trying to read 64b value but JS can only handle 53b numbers.");
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###22"},');

              }
            }, {
              key: "getUintBytes",
              value: function (e, t, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###23","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                switch (t) {
                  case 1:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###23"},');

                    return this.getUint8(e, n);
                  case 2:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###23"},');

                    return this.getUint16(e, n);
                  case 4:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###23"},');

                    return this.getUint32(e, n);
                  case 8:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###23"},');

                    return this.getUint64(e, n);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###23"},');

              }
            }, {
              key: "getUint",
              value: function (e, t, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###24","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                switch (t) {
                  case 8:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###24"},');

                    return this.getUint8(e, n);
                  case 16:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###24"},');

                    return this.getUint16(e, n);
                  case 32:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###24"},');

                    return this.getUint32(e, n);
                  case 64:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###24"},');

                    return this.getUint64(e, n);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###24"},');

              }
            }, {
              key: "toString",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###25","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###25"},');

                return this.dataView.toString(e, this.constructor.name);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###25"},');

              }
            }, {
              key: "ensureChunk",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.E.ReturnStatement.r.value###26","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E.ReturnStatement.r.value###26"},');

              }
            }]), e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.E"},');

          })();
          function D(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"D","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"D"},');

            throw T(("").concat(e, " '").concat(t, "' was not loaded, try using full build of exifr."));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"D","paramsNumber":2},');

          }
          var M = (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.M","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n(e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var r;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return (t(this, n), (r = l(this, a(n).call(this))).kind = e, r);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":1},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.M"},');

            return (s(n, e), r(n, [{
              key: "get",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.M.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.M.ReturnStatement.r.value"},');

                return (this.has(e) || D(this.kind, e), t && ((e in t) || (function (e, t) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.M.ReturnStatement.r.value.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.M.ReturnStatement.r.value.ReturnStatement"},');

                  throw T(("Unknown ").concat(e, " '").concat(t, "'."));
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.M.ReturnStatement.r.value.ReturnStatement"},');

                })(this.kind, e), t[e].enabled || D(this.kind, e)), d(a(n.prototype), "get", this).call(this, e));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.M.ReturnStatement.r.value"},');

              }
            }, {
              key: "keyList",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.M.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.M.ReturnStatement.r.value###2"},');

                return k(this.keys());
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.M.ReturnStatement.r.value###2"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.M"},');

          })(h(S)), N = new M("file parser"), R = new M("segment parser"), W = new M("file reader");
          function K(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"K","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"K"},');

            return function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###195","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
              try {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###195"},');

                return Promise.resolve(e.apply(this, t));
              } catch (e) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###195"},');

                return Promise.reject(e);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###195"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"K","paramsNumber":1},');

          }
          function X(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"X","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"X"},');

            return n ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"X","paramsNumber":3},');

          }
          var H = K(function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.H.K","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.H.K"},');

            return new Promise(function (t, n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.H.K.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var r = new FileReader();
              (r.onloadend = function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.H.K.ReturnStatement.NewExpression.r.onloadend","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.H.K.ReturnStatement.NewExpression.r.onloadend"},');

                return t(r.result || new ArrayBuffer());
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.H.K.ReturnStatement.NewExpression.r.onloadend"},');

              }, r.onerror = n, r.readAsArrayBuffer(e));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.H.K.ReturnStatement.NewExpression"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.H.K"},');

          }), Y = K(function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Y.K","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Y.K"},');

            return w(e).then(function (e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Y.K.ReturnStatement.w.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Y.K.ReturnStatement.w.then"},');

              return e.arrayBuffer();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Y.K.ReturnStatement.w.then"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Y.K"},');

          }), G = K(function (e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.G.K","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.G.K"},');

            return X(t(e), function (e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.G.K.ReturnStatement.X","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.G.K.ReturnStatement.X"},');

              return new E(e);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.G.K.ReturnStatement.X"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.G.K"},');

          }), J = K(function (e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.J.K","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var r = new (W.get(n))(e, t);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.J.K"},');

            return X(r.read(), function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.J.K.ReturnStatement.X","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.J.K.ReturnStatement.X"},');

              return r;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.J.K.ReturnStatement.X"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.J.K"},');

          }), q = K(function (e, t, n, r) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.q.K","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

            if (W.has(n)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.q.K"},');

              return J(e, t, n);
            }
            if (r) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.q.K"},');

              return G(e, r);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.q.K"},');

            throw T(("Parser ").concat(n, " is not loaded"));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.q.K"},');

          });
          function Q(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Q","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if ((n = e).startsWith("data:") || n.length > 1e4) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Q"},');

              return J(e, t, "base64");
            }
            if (U) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Q"},');

              return q(e, t, "url", Y);
            }
            if (C) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Q"},');

              return J(e, t, "fs");
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Q"},');

            throw T("Invalid input argument");
            var n;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Q","paramsNumber":2},');

          }
          var Z = (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Z","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return (t(this, n), l(this, a(n).apply(this, arguments)));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Z"},');

            return (s(n, e), r(n, [{
              key: "tagKeys",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Z.ReturnStatement.r.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Z.ReturnStatement.r.get"},');

                return (this.allKeys || (this.allKeys = k(this.keys())), this.allKeys);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Z.ReturnStatement.r.get"},');

              }
            }, {
              key: "tagValues",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Z.ReturnStatement.r.get###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Z.ReturnStatement.r.get###2"},');

                return (this.allValues || (this.allValues = k(this.values())), this.allValues);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Z.ReturnStatement.r.get###2"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Z"},');

          })(h(S));
          function $(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"$","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var r = new Z(), i = n;
            Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = k(i));
            for (var s = 0; s < i.length; s++) {
              var a = i[s], u = a[0], o = a[1];
              r.set(u, o);
            }
            if (Array.isArray(t)) {
              var f = t;
              Array.isArray(f) || ("function" == typeof f.entries && (f = f.entries()), f = k(f));
              for (var h = 0; h < f.length; h++) {
                var c = f[h];
                e.set(c, r);
              }
            } else e.set(t, r);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"$"},');

            return r;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"$","paramsNumber":3},');

          }
          function ee(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ee","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var r, i = e.get(t), s = n;
            Array.isArray(s) || ("function" == typeof s.entries && (s = s.entries()), s = k(s));
            for (var a = 0; a < s.length; a++) (r = s[a], i.set(r[0], r[1]));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ee","paramsNumber":3},');

          }
          var te = O(), ne = O(), re = O(), ie = ["chunked", "firstChunkSize", "firstChunkSizeNode", "firstChunkSizeBrowser", "chunkSize", "chunkLimit"], se = ["jfif", "xmp", "icc", "iptc"], ae = ["tiff"].concat(se), ue = ["ifd0", "ifd1", "exif", "gps", "interop"], oe = [].concat(ae, ue), fe = ["makerNote", "userComment"], he = ["translateKeys", "translateValues", "reviveValues", "multiSegment"], ce = [].concat(he, ["sanitize", "mergeOutput"]), le = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.le","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function e() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              t(this, e);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"e","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.le"},');

            return (r(e, [{
              key: "translate",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.le.ReturnStatement.r.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.le.ReturnStatement.r.get"},');

                return this.translateKeys || this.translateValues || this.reviveValues;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.le.ReturnStatement.r.get"},');

              }
            }]), e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.le"},');

          })(), de = (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.de","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n(e, r, s, u) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

              var o;
              if ((t(this, n), i(c(o = l(this, a(n).call(this))), "enabled", !1), i(c(o), "skip", A()), i(c(o), "pick", A()), i(c(o), "deps", A()), i(c(o), "translateKeys", !1), i(c(o), "translateValues", !1), i(c(o), "reviveValues", !1), o.key = e, o.enabled = r, o.parse = o.enabled, o.applyInheritables(u), o.canBeFiltered = ue.includes(e), o.canBeFiltered && (o.dict = te.get(e)), void 0 !== s)) if (Array.isArray(s)) (o.parse = o.enabled = !0, o.canBeFiltered && s.length > 0 && o.translateTagSet(s, o.pick)); else if ("object" == typeof s) {
                if ((o.enabled = !0, o.parse = !1 !== s.parse, o.canBeFiltered)) {
                  var f = s.pick, h = s.skip;
                  (f && f.length > 0 && o.translateTagSet(f, o.pick), h && h.length > 0 && o.translateTagSet(h, o.skip));
                }
                o.applyInheritables(s);
              } else {
                if (!0 !== s && !1 !== s) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

                  throw T(("Invalid options argument: ").concat(s));
                }
                o.parse = o.enabled = s;
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return o;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":4},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.de"},');

            return (s(n, e), r(n, [{
              key: "needed",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.de.ReturnStatement.r.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.de.ReturnStatement.r.get"},');

                return this.enabled || this.deps.size > 0;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.de.ReturnStatement.r.get"},');

              }
            }]), r(n, [{
              key: "applyInheritables",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.de.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t, n, r = he;
                Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = k(r));
                for (var i = 0; i < r.length; i++) void 0 !== (n = e[t = r[i]]) && (this[t] = n);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.de.ReturnStatement.r.value"},');

              }
            }, {
              key: "translateTagSet",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.de.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                if (this.dict) {
                  var n, r, i = this.dict, s = i.tagKeys, a = i.tagValues, u = e;
                  Array.isArray(u) || ("function" == typeof u.entries && (u = u.entries()), u = k(u));
                  for (var o = 0; o < u.length; o++) "string" == typeof (n = u[o]) ? (-1 === (r = a.indexOf(n)) && (r = s.indexOf(Number(n))), -1 !== r && t.add(Number(s[r]))) : t.add(n);
                } else {
                  var f = e;
                  Array.isArray(f) || ("function" == typeof f.entries && (f = f.entries()), f = k(f));
                  for (var h = 0; h < f.length; h++) {
                    var c = f[h];
                    t.add(c);
                  }
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.de.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "finalizeFilters",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.de.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                !this.enabled && this.deps.size > 0 ? (this.enabled = !0, me(this.pick, this.deps)) : this.enabled && this.pick.size > 0 && me(this.pick, this.deps);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.de.ReturnStatement.r.value###3"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.de"},');

          })(le), pe = {
            jfif: !1,
            tiff: !0,
            xmp: !1,
            icc: !1,
            iptc: !1,
            ifd0: !0,
            ifd1: !1,
            exif: !0,
            gps: !0,
            interop: !1,
            makerNote: !1,
            userComment: !1,
            multiSegment: !1,
            skip: [],
            pick: [],
            translateKeys: !0,
            translateValues: !0,
            reviveValues: !0,
            sanitize: !0,
            mergeOutput: !0,
            silentErrors: !0,
            chunked: !0,
            firstChunkSize: void 0,
            firstChunkSizeNode: 512,
            firstChunkSizeBrowser: 65536,
            chunkSize: 65536,
            chunkLimit: 5
          }, ve = O(), ye = (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n(e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var r;
              if ((t(this, n), r = l(this, a(n).call(this)), !0 === e)) r.setupFromTrue(); else if (void 0 === e) r.setupFromUndefined(); else if (Array.isArray(e)) r.setupFromArray(e); else {
                if ("object" != typeof e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

                  throw T(("Invalid options argument ").concat(e));
                }
                r.setupFromObject(e);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return (void 0 === r.firstChunkSize && (r.firstChunkSize = U ? r.firstChunkSizeBrowser : r.firstChunkSizeNode), r.mergeOutput && (r.ifd1.enabled = !1), r.filterNestedSegmentTags(), r.traverseTiffDependencyTree(), r.checkLoadedPlugins(), r);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":1},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye"},');

            return (s(n, e), r(n, null, [{
              key: "useCached",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = ve.get(e);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value"},');

                return void 0 !== t ? t : (t = new this(e), ve.set(e, t), t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value"},');

              }
            }]), r(n, [{
              key: "setupFromUndefined",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e, t = ie;
                Array.isArray(t) || ("function" == typeof t.entries && (t = t.entries()), t = k(t));
                for (var n = 0; n < t.length; n++) this[e = t[n]] = pe[e];
                var r = ce;
                Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = k(r));
                for (var i = 0; i < r.length; i++) this[e = r[i]] = pe[e];
                var s = fe;
                Array.isArray(s) || ("function" == typeof s.entries && (s = s.entries()), s = k(s));
                for (var a = 0; a < s.length; a++) this[e = s[a]] = pe[e];
                var u = oe;
                Array.isArray(u) || ("function" == typeof u.entries && (u = u.entries()), u = k(u));
                for (var o = 0; o < u.length; o++) this[e = u[o]] = new de(e, pe[e], void 0, this);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "setupFromTrue",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e, t = ie;
                Array.isArray(t) || ("function" == typeof t.entries && (t = t.entries()), t = k(t));
                for (var n = 0; n < t.length; n++) this[e = t[n]] = pe[e];
                var r = ce;
                Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = k(r));
                for (var i = 0; i < r.length; i++) this[e = r[i]] = pe[e];
                var s = fe;
                Array.isArray(s) || ("function" == typeof s.entries && (s = s.entries()), s = k(s));
                for (var a = 0; a < s.length; a++) this[e = s[a]] = !0;
                var u = oe;
                Array.isArray(u) || ("function" == typeof u.entries && (u = u.entries()), u = k(u));
                for (var o = 0; o < u.length; o++) this[e = u[o]] = new de(e, !0, void 0, this);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###3"},');

              }
            }, {
              key: "setupFromArray",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t, n = ie;
                Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = k(n));
                for (var r = 0; r < n.length; r++) this[t = n[r]] = pe[t];
                var i = ce;
                Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = k(i));
                for (var s = 0; s < i.length; s++) this[t = i[s]] = pe[t];
                var a = fe;
                Array.isArray(a) || ("function" == typeof a.entries && (a = a.entries()), a = k(a));
                for (var u = 0; u < a.length; u++) this[t = a[u]] = pe[t];
                var o = oe;
                Array.isArray(o) || ("function" == typeof o.entries && (o = o.entries()), o = k(o));
                for (var f = 0; f < o.length; f++) this[t = o[f]] = new de(t, !1, void 0, this);
                this.setupGlobalFilters(e, void 0, ue);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###4"},');

              }
            }, {
              key: "setupFromObject",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t;
                (ue.ifd0 = ue.ifd0 || ue.image, ue.ifd1 = ue.ifd1 || ue.thumbnail, y(this, e));
                var n = ie;
                Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = k(n));
                for (var r = 0; r < n.length; r++) this[t = n[r]] = ke(e[t], pe[t]);
                var i = ce;
                Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = k(i));
                for (var s = 0; s < i.length; s++) this[t = i[s]] = ke(e[t], pe[t]);
                var a = fe;
                Array.isArray(a) || ("function" == typeof a.entries && (a = a.entries()), a = k(a));
                for (var u = 0; u < a.length; u++) this[t = a[u]] = ke(e[t], pe[t]);
                var o = ae;
                Array.isArray(o) || ("function" == typeof o.entries && (o = o.entries()), o = k(o));
                for (var f = 0; f < o.length; f++) this[t = o[f]] = new de(t, pe[t], e[t], this);
                var h = ue;
                Array.isArray(h) || ("function" == typeof h.entries && (h = h.entries()), h = k(h));
                for (var c = 0; c < h.length; c++) this[t = h[c]] = new de(t, pe[t], e[t], this.tiff);
                (this.setupGlobalFilters(e.pick, e.skip, ue, oe), !0 === e.tiff ? this.batchEnableWithBool(ue, !0) : !1 === e.tiff ? this.batchEnableWithUserValue(ue, e) : Array.isArray(e.tiff) ? this.setupGlobalFilters(e.tiff, void 0, ue) : "object" == typeof e.tiff && this.setupGlobalFilters(e.tiff.pick, e.tiff.skip, ue));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###5"},');

              }
            }, {
              key: "batchEnableWithBool",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = e;
                Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = k(n));
                for (var r = 0; r < n.length; r++) {
                  this[n[r]].enabled = t;
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###6"},');

              }
            }, {
              key: "batchEnableWithUserValue",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = e;
                Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = k(n));
                for (var r = 0; r < n.length; r++) {
                  var i = n[r], s = t[i];
                  this[i].enabled = !1 !== s && void 0 !== s;
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###7"},');

              }
            }, {
              key: "setupGlobalFilters",
              value: function (e, t, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : n;
                if (e && e.length) {
                  var i = r;
                  Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = k(i));
                  for (var s = 0; s < i.length; s++) {
                    var a = i[s];
                    this[a].enabled = !1;
                  }
                  var u = ge(e, n), o = u;
                  Array.isArray(o) || ("function" == typeof o.entries && (o = o.entries()), o = k(o));
                  for (var f = 0; f < o.length; f++) {
                    var h = o[f], c = h[0], l = h[1];
                    (me(this[c].pick, l), this[c].enabled = !0);
                  }
                } else if (t && t.length) {
                  var d = ge(t, n), p = d;
                  Array.isArray(p) || ("function" == typeof p.entries && (p = p.entries()), p = k(p));
                  for (var v = 0; v < p.length; v++) {
                    var y = p[v], g = y[0], m = y[1];
                    me(this[g].skip, m);
                  }
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###8"},');

              }
            }, {
              key: "filterNestedSegmentTags",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = this.ifd0, t = this.exif, n = this.xmp, r = this.iptc, i = this.icc;
                (this.makerNote ? t.deps.add(37500) : t.skip.add(37500), this.userComment ? t.deps.add(37510) : t.skip.add(37510), n.enabled || e.skip.add(700), r.enabled || e.skip.add(33723), i.enabled || e.skip.add(34675));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###9"},');

              }
            }, {
              key: "traverseTiffDependencyTree",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = this, t = this.ifd0, n = this.exif, r = this.gps;
                (this.interop.needed && (n.deps.add(40965), t.deps.add(40965)), n.needed && t.deps.add(34665), r.needed && t.deps.add(34853), this.tiff.enabled = ue.some(function (t) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value.tiff.enabled.ue.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value.tiff.enabled.ue.some"},');

                  return !0 === e[t].enabled;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value.tiff.enabled.ue.some"},');

                }) || this.makerNote || this.userComment);
                var i = ue;
                Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = k(i));
                for (var s = 0; s < i.length; s++) {
                  this[i[s]].finalizeFilters();
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###10"},');

              }
            }, {
              key: "checkLoadedPlugins",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.value###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = ae;
                Array.isArray(e) || ("function" == typeof e.entries && (e = e.entries()), e = k(e));
                for (var t = 0; t < e.length; t++) {
                  var n = e[t];
                  this[n].enabled && !R.has(n) && D("segment parser", n);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.value###11"},');

              }
            }, {
              key: "onlyTiff",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = this;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.get"},');

                return !se.map(function (t) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.get.ReturnStatement.se.map.some.se.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.get.ReturnStatement.se.map.some.se.map"},');

                  return e[t].enabled;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.get.ReturnStatement.se.map.some.se.map"},');

                }).some(function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ye.ReturnStatement.r.get.ReturnStatement.se.map.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.get.ReturnStatement.se.map.some"},');

                  return !0 === e;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.get.ReturnStatement.se.map.some"},');

                }) && this.tiff.enabled;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye.ReturnStatement.r.get"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ye"},');

          })(le);
          function ge(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ge","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var n, r, i, s = [], a = t;
            Array.isArray(a) || ("function" == typeof a.entries && (a = a.entries()), a = k(a));
            for (var u = 0; u < a.length; u++) {
              (r = a[u], n = []);
              var o = te.get(r);
              Array.isArray(o) || ("function" == typeof o.entries && (o = o.entries()), o = k(o));
              for (var f = 0; f < o.length; f++) (i = o[f], (e.includes(i[0]) || e.includes(i[1])) && n.push(i[0]));
              n.length && s.push([r, n]);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ge"},');

            return s;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ge","paramsNumber":2},');

          }
          function ke(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ke","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ke"},');

            return void 0 !== e ? e : void 0 !== t ? t : void 0;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ke","paramsNumber":2},');

          }
          function me(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"me","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var n = t;
            Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = k(n));
            for (var r = 0; r < n.length; r++) {
              var i = n[r];
              e.add(i);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"me","paramsNumber":2},');

          }
          i(ye, "default", pe);
          var be = {
            ifd0: !1,
            ifd1: !1,
            exif: !1,
            gps: !1,
            interop: !1,
            sanitize: !1,
            reviveValues: !0,
            translateKeys: !1,
            translateValues: !1,
            mergeOutput: !1
          }, we = y({}, be, {
            firstChunkSize: 4e4,
            gps: [1, 2, 3, 4]
          }), Ae = y({}, be, {
            firstChunkSize: 4e4,
            ifd0: [274]
          }), Oe = y({}, be, {
            tiff: !1,
            ifd1: !0,
            mergeOutput: !1
          });
          function Se(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Se","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Se"},');

            return n ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Se","paramsNumber":3},');

          }
          function Pe(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Pe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var n = e();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Pe"},');

            return n && n.then ? n.then(t) : t(n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Pe","paramsNumber":2},');

          }
          function Ue() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Ue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Ue","paramsNumber":0},');

          }
          var xe = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function e(n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              (t(this, e), i(this, "parsers", {}), this.options = ye.useCached(n));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"e","paramsNumber":1},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe"},');

            return (r(e, [{
              key: "setup",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                if (!this.fileParser) {
                  var e, t = this.file.getUint16(0);
                  if (18761 === t || 19789 === t) (this.file.isTiff = !0, e = N.get("tiff")); else if (65496 === t) (this.file.isJpeg = !0, e = N.get("jpeg")); else {
                    if (!(function (e) {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                      if (0 !== e.getUint16(0)) {
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value"},');

                        return !1;
                      }
                      var t = e.getUint16(2);
                      if (t > 50) {
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value"},');

                        return !1;
                      }
                      for (var n = 16, r = []; n < t; ) (r.push(e.getString(n, 4)), n += 4);
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value"},');

                      return r.includes("heic");
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value"},');

                    })(this.file)) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###2"},');

                      throw T("Unknown file format");
                    }
                    (this.file.isHeic = !0, e = N.get("heic"));
                  }
                  this.fileParser = new e(this.options, this.file, this.parsers);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "read",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                try {
                  var t = this;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###3"},');

                  return Se((function (e, t) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    if ("string" == typeof e) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se"},');

                      return Q(e, t);
                    }
                    if (U && !x && e instanceof HTMLImageElement) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se"},');

                      return Q(e.src, t);
                    }
                    if (e instanceof Uint8Array || e instanceof ArrayBuffer || e instanceof DataView) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se"},');

                      return new E(e);
                    }
                    if (U && e instanceof Blob) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se"},');

                      return q(e, t, "blob", H);
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se"},');

                    throw T("Invalid input argument");
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se"},');

                  })(e, t.options), function (e) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    t.file = e;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se###2"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###3"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###3"},');

              }
            }, {
              key: "parse",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###4"},');

                  return (e.setup(), Se(e.fileParser.parse(), function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    var t, n = {}, r = [], i = p(e.parsers).map((t = function (t) {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                      var i;
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t"},');

                      return Pe(function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe"},');

                        return e.options.silentErrors ? (n = (function (e, t) {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                          try {
                            var n = e();
                          } catch (e) {
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n"},');

                            return t(e);
                          }
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n"},');

                          return n && n.then ? n.then(void 0, t) : n;
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n"},');

                        })(function () {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n###2"},');

                          return Se(t.parse(), function (e) {
                                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n.ReturnStatement.Se","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            i = e;
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n.ReturnStatement.Se"},');

                          });
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n###2"},');

                        }, function (e) {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                          r.push(e);
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.n###3"},');

                        }), s = function () {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.s","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                          t.errors.length && r.push.apply(r, t.errors);
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.s"},');

                        }, n && n.then ? n.then(s) : s(n)) : Se(t.parse(), function (e) {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.Se","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                          i = e;
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe.ReturnStatement.Se"},');

                        });
                        var n, s;
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe"},');

                      }, function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        t.assignToOutput(n, i);
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t.ReturnStatement.Pe###2"},');

                      });
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map.t"},');

                    }, function () {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                      for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
                      try {
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map"},');

                        return Promise.resolve(t.apply(this, e));
                      } catch (e) {
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map"},');

                        return Promise.reject(e);
                      }
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.i.p.map"},');

                    }));
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se###3"},');

                    return Se(Promise.all(i), function () {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.ReturnStatement.Se","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                      var t;
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.ReturnStatement.Se"},');

                      return (e.options.silentErrors && r.length > 0 && (n.errors = r), n = V(t = n) ? void 0 : t, e.file.close && e.file.close(), n);
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se.ReturnStatement.Se"},');

                    });
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Se###3"},');

                  }));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###4"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###4"},');

              }
            }, {
              key: "extractThumbnail",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                  e.setup();
                  var t, n = R.get("tiff", e.options);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###5"},');

                  return Pe(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (!e.file.isTiff) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe"},');

                      return (function (e) {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        var t = e();
                        if (t && t.then) {
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement"},');

                          return t.then(Ue);
                        }
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement"},');

                      })(function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        if (e.file.isJpeg) {
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement###2"},');

                          return Se(e.fileParser.getOrFindSegment("tiff"), function (e) {
                                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement.ReturnStatement.Se","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            t = e;
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement.ReturnStatement.Se"},');

                          });
                        }
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement###2"},');

                      });
                    }
                    t = {
                      start: 0,
                      type: "tiff"
                    };
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (void 0 !== t) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe###2"},');

                      return Se(e.fileParser.ensureSegmentChunk(t), function (t) {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement.Se","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement.Se"},');

                        return Se((e.parsers.tiff = new n(t, e.options, e.file)).extractThumbnail(), function (t) {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement.Se.ReturnStatement.Se","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement.Se.ReturnStatement.Se"},');

                          return (e.file.close && e.file.close(), t);
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement.Se.ReturnStatement.Se"},');

                        });
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe.ReturnStatement.Se"},');

                      });
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value.ReturnStatement.Pe###2"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###5"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe.ReturnStatement.r.value###5"},');

              }
            }]), e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.xe"},');

          })();
          function Ce(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Ce"},');

            return n ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Ce","paramsNumber":3},');

          }
          function Be(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Be","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Be"},');

            return function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###196","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
              try {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###196"},');

                return Promise.resolve(e.apply(this, t));
              } catch (e) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###196"},');

                return Promise.reject(e);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###196"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Be","paramsNumber":1},');

          }
          var je = function (t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"je","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"je"},');

            return Ce(_e(t), function (t) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.je.ReturnStatement.Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.je.ReturnStatement.Ce"},');

              return y({
                canvas: e.rotateCanvas,
                css: e.rotateCss
              }, ze[t]);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.je.ReturnStatement.Ce"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"je"},');

          }, _e = Be(function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call._e.Be","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = new xe(Ae);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._e.Be"},');

            return Ce(t.read(e), function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call._e.Be.ReturnStatement.Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._e.Be.ReturnStatement.Ce"},');

              return Ce(t.parse(), function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call._e.Be.ReturnStatement.Ce.ReturnStatement.Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (e && e.ifd0) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._e.Be.ReturnStatement.Ce.ReturnStatement.Ce"},');

                  return e.ifd0[274];
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._e.Be.ReturnStatement.Ce.ReturnStatement.Ce"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._e.Be.ReturnStatement.Ce"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call._e.Be"},');

          }), Ie = Be(function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ie.Be","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = new xe(we);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ie.Be"},');

            return Ce(t.read(e), function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ie.Be.ReturnStatement.Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ie.Be.ReturnStatement.Ce"},');

              return Ce(t.parse(), function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ie.Be.ReturnStatement.Ce.ReturnStatement.Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (e && e.gps) {
                  var t = e.gps;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ie.Be.ReturnStatement.Ce.ReturnStatement.Ce"},');

                  return {
                    latitude: t.latitude,
                    longitude: t.longitude
                  };
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ie.Be.ReturnStatement.Ce.ReturnStatement.Ce"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ie.Be.ReturnStatement.Ce"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ie.Be"},');

          }), Ve = Be(function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ve.Be","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ve.Be"},');

            return Ce(this.thumbnail(e), function (e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ve.Be.ReturnStatement.Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (void 0 !== e) {
                var t = new Blob([e]);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ve.Be.ReturnStatement.Ce"},');

                return URL.createObjectURL(t);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ve.Be.ReturnStatement.Ce"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ve.Be"},');

          }), Te = Be(function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Te.Be","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = new xe(Oe);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Te.Be"},');

            return Ce(t.read(e), function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Te.Be.ReturnStatement.Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Te.Be.ReturnStatement.Ce"},');

              return Ce(t.extractThumbnail(), function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Te.Be.ReturnStatement.Ce.ReturnStatement.Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Te.Be.ReturnStatement.Ce.ReturnStatement.Ce"},');

                return e && _ ? B.from(e) : e;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Te.Be.ReturnStatement.Ce.ReturnStatement.Ce"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Te.Be.ReturnStatement.Ce"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Te.Be"},');

          }), Le = Be(function (e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Le.Be","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var n = new xe(t);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Le.Be"},');

            return Ce(n.read(e), function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Le.Be.ReturnStatement.Ce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Le.Be.ReturnStatement.Ce"},');

              return n.parse();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Le.Be.ReturnStatement.Ce"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Le.Be"},');

          }), ze = {
            1: {
              dimensionSwapped: !1,
              scaleX: 1,
              scaleY: 1,
              deg: 0,
              rad: 0
            },
            2: {
              dimensionSwapped: !1,
              scaleX: -1,
              scaleY: 1,
              deg: 0,
              rad: 0
            },
            3: {
              dimensionSwapped: !1,
              scaleX: 1,
              scaleY: 1,
              deg: 180,
              rad: 180 * Math.PI / 180
            },
            4: {
              dimensionSwapped: !1,
              scaleX: -1,
              scaleY: 1,
              deg: 180,
              rad: 180 * Math.PI / 180
            },
            5: {
              dimensionSwapped: !0,
              scaleX: 1,
              scaleY: -1,
              deg: 90,
              rad: 90 * Math.PI / 180
            },
            6: {
              dimensionSwapped: !0,
              scaleX: 1,
              scaleY: 1,
              deg: 90,
              rad: 90 * Math.PI / 180
            },
            7: {
              dimensionSwapped: !0,
              scaleX: 1,
              scaleY: -1,
              deg: 270,
              rad: 270 * Math.PI / 180
            },
            8: {
              dimensionSwapped: !0,
              scaleX: 1,
              scaleY: 1,
              deg: 270,
              rad: 270 * Math.PI / 180
            }
          };
          if ((e.rotateCanvas = !0, e.rotateCss = !0, "object" == typeof navigator)) {
            var Fe = navigator.userAgent;
            if (Fe.includes("iPad") || Fe.includes("iPhone")) {
              var Ee = Fe.match(/OS (\d+)_(\d+)/), De = (Ee[0], Ee[1]), Me = Ee[2], Ne = Number(De) + .1 * Number(Me);
              (e.rotateCanvas = Ne < 13.4, e.rotateCss = !1);
            }
          }
          var Re = Object.freeze({
            __proto__: null,
            rotation: je,
            orientation: _e,
            gps: Ie,
            thumbnailUrl: Ve,
            thumbnail: Te,
            parse: Le,
            rotations: ze,
            get rotateCanvas() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Re.Object.freeze.rotateCanvas","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Re.Object.freeze.rotateCanvas"},');

              return e.rotateCanvas;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Re.Object.freeze.rotateCanvas"},');

            },
            get rotateCss() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Re.Object.freeze.rotateCss","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Re.Object.freeze.rotateCss"},');

              return e.rotateCss;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Re.Object.freeze.rotateCss"},');

            },
            Exifr: xe,
            fileParsers: N,
            segmentParsers: R,
            fileReaders: W,
            tagKeys: te,
            tagValues: ne,
            tagRevivers: re,
            createDictionary: $,
            extendDictionary: ee,
            fetchUrlAsArrayBuffer: Y,
            readBlobAsArrayBuffer: H,
            chunkedProps: ie,
            otherSegments: se,
            segments: ae,
            tiffBlocks: ue,
            segmentsAndBlocks: oe,
            tiffExtractables: fe,
            inheritables: he,
            allFormatters: ce,
            Options: ye,
            disableAllOptions: be,
            gpsOnlyOptions: we,
            orientationOnlyOptions: Ae,
            thumbnailOnlyOptions: Oe
          });
          function We() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"We","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"We","paramsNumber":0},');

          }
          var Ke = (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ke","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var e, r;
              t(this, n);
              for (var s = arguments.length, u = new Array(s), o = 0; o < s; o++) u[o] = arguments[o];
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return (i(c(r = l(this, (e = a(n)).call.apply(e, [this].concat(u)))), "ranges", new Xe()), 0 !== r.byteLength && r.ranges.add(0, r.byteLength), r);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke"},');

            return (s(n, e), r(n, [{
              key: "_tryExtend",
              value: function (e, t, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ke.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                if (0 === e && 0 === this.byteLength && n) {
                  var r = new DataView(n.buffer || n, n.byteOffset, n.byteLength);
                  this._swapDataView(r);
                } else {
                  var i = e + t;
                  if (i > this.byteLength) {
                    var s = this._extend(i).dataView;
                    this._swapDataView(s);
                  }
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value"},');

              }
            }, {
              key: "_extend",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ke.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t;
                t = _ ? B.allocUnsafe(e) : new Uint8Array(e);
                var n = new DataView(t.buffer, t.byteOffset, t.byteLength);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###2"},');

                return (t.set(new Uint8Array(this.buffer, this.byteOffset, this.byteLength), 0), {
                  uintView: t,
                  dataView: n
                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "subarray",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ke.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###3"},');

                return (t = t || this._lengthToEnd(e), r && this._tryExtend(e, t), this.ranges.add(e, t), d(a(n.prototype), "subarray", this).call(this, e, t));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###3"},');

              }
            }, {
              key: "set",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ke.ReturnStatement.r.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                r && this._tryExtend(t, e.byteLength, e);
                var i = d(a(n.prototype), "set", this).call(this, e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###4"},');

                return (this.ranges.add(t, i.byteLength), i);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###4"},');

              }
            }, {
              key: "ensureChunk",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ke.ReturnStatement.r.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                try {
                  if (!this.chunked) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###5"},');

                    return;
                  }
                  if (this.ranges.available(e, t)) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###5"},');

                    return;
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###5"},');

                  return (function (e, t) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ke.ReturnStatement.r.value.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    if (!t) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value.ReturnStatement"},');

                      return e && e.then ? e.then(We) : Promise.resolve();
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value.ReturnStatement"},');

                  })(this.readChunk(e, t));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###5"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###5"},');

              }
            }, {
              key: "available",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ke.ReturnStatement.r.value###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###6"},');

                return this.ranges.available(e, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke.ReturnStatement.r.value###6"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ke"},');

          })(E), Xe = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Xe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function e() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              (t(this, e), i(this, "list", []));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"e","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe"},');

            return (r(e, [{
              key: "add",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Xe.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = e + t, r = this.list.filter(function (t) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Xe.ReturnStatement.r.value.r.list.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.r.list.filter"},');

                  return He(e, t.offset, n) || He(e, t.end, n);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.r.list.filter"},');

                });
                if (r.length > 0) {
                  (e = Math.min.apply(Math, [e].concat(r.map(function (e) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Xe.ReturnStatement.r.value.e.Math.min.apply.concat.r.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.e.Math.min.apply.concat.r.map"},');

                    return e.offset;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.e.Math.min.apply.concat.r.map"},');

                  }))), t = (n = Math.max.apply(Math, [n].concat(r.map(function (e) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Xe.ReturnStatement.r.value.t.n.Math.max.apply.concat.r.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.t.n.Math.max.apply.concat.r.map"},');

                    return e.end;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.t.n.Math.max.apply.concat.r.map"},');

                  })))) - e);
                  var i = r.shift();
                  (i.offset = e, i.length = t, i.end = n, this.list = this.list.filter(function (e) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Xe.ReturnStatement.r.value.list.list.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.list.list.filter"},');

                    return !r.includes(e);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.list.list.filter"},');

                  }));
                } else this.list.push({
                  offset: e,
                  length: t,
                  end: n
                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value"},');

              }
            }, {
              key: "available",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Xe.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = e + t;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value###2"},');

                return this.list.some(function (t) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Xe.ReturnStatement.r.value.ReturnStatement.list.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.ReturnStatement.list.some"},');

                  return t.offset <= e && n <= t.end;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value.ReturnStatement.list.some"},');

                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "length",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Xe.ReturnStatement.r.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.get"},');

                return this.list.length;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe.ReturnStatement.r.get"},');

              }
            }]), e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Xe"},');

          })();
          function He(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"He","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"He"},');

            return e <= t && t <= n;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"He","paramsNumber":3},');

          }
          function Ye() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Ye","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Ye","paramsNumber":0},');

          }
          function Ge(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Ge","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (!t) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"Ge"},');

              return e && e.then ? e.then(Ye) : Promise.resolve();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Ge","paramsNumber":2},');

          }
          function Je(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Je","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Je"},');

            return n ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Je","paramsNumber":3},');

          }
          var qe = (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return (t(this, n), l(this, a(n).apply(this, arguments)));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe"},');

            return (s(n, e), r(n, [{
              key: "readWhole",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value"},');

                  return (e.chunked = !1, Je(H(e.input), function (t) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value.ReturnStatement.Je","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    e._swapArrayBuffer(t);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value.ReturnStatement.Je"},');

                  }));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value"},');

              }
            }, {
              key: "readChunked",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###2"},');

                return (this.chunked = !0, this.size = this.input.size, d(a(n.prototype), "readChunked", this).call(this));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "_readChunk",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                try {
                  var n = this, r = t ? e + t : void 0, i = n.input.slice(e, r);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###3"},');

                  return Je(H(i), function (t) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value.ReturnStatement.Je###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value.ReturnStatement.Je###2"},');

                    return n.set(t, e, !0);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value.ReturnStatement.Je###2"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###3"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###3"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe"},');

          })((function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n(e, r) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var s;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return (t(this, n), i(c(s = l(this, a(n).call(this, 0))), "chunksRead", 0), s.input = e, s.options = r, s);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":2},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe###2"},');

            return (s(n, e), r(n, [{
              key: "readWhole",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###4"},');

                  return (this.chunked = !1, Ge(this.readChunk(this.nextChunkOffset)));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###4"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###4"},');

              }
            }, {
              key: "readChunked",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###5"},');

                  return (this.chunked = !0, Ge(this.readChunk(0, this.options.firstChunkSize)));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###5"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###5"},');

              }
            }, {
              key: "readNextChunk",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                try {
                  if ((void 0 === e && (e = this.nextChunkOffset), this.fullyRead)) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###6"},');

                    return (this.chunksRead++, !1);
                  }
                  var t = this.options.chunkSize;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###6"},');

                  return (n = this.readChunk(e, t), r = function (e) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value.ReturnStatement.r","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value.ReturnStatement.r"},');

                    return !!e && e.byteLength === t;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value.ReturnStatement.r"},');

                  }, i ? r ? r(n) : n : (n && n.then || (n = Promise.resolve(n)), r ? n.then(r) : n));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###6"},');

                  return Promise.reject(e);
                }
                var n, r, i;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###6"},');

              }
            }, {
              key: "readChunk",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                try {
                  if ((this.chunksRead++, 0 === (t = this.safeWrapAddress(e, t)))) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###7"},');

                    return;
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###7"},');

                  return this._readChunk(e, t);
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###7"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###7"},');

              }
            }, {
              key: "safeWrapAddress",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###8"},');

                return void 0 !== this.size && e + t > this.size ? Math.max(0, this.size - e) : t;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###8"},');

              }
            }, {
              key: "read",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###9"},');

                return this.options.chunked ? this.readChunked() : this.readWhole();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###9"},');

              }
            }, {
              key: "close",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.value###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.value###10"},');

              }
            }, {
              key: "nextChunkOffset",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                if (0 !== this.ranges.list.length) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.get"},');

                  return this.ranges.list[0].length;
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.get"},');

              }
            }, {
              key: "canReadNextChunk",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.get###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.get###2"},');

                return this.chunksRead < this.options.chunkLimit;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.get###2"},');

              }
            }, {
              key: "fullyRead",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.qe.ReturnStatement.r.get###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.get###3"},');

                return void 0 !== this.size && this.nextChunkOffset === this.size;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe.ReturnStatement.r.get###3"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.qe###2"},');

          })(Ke));
          W.set("blob", qe);
          var Qe = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Qe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function e(n, r, s) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

              var a, u = this;
              (t(this, e), i(this, "ensureSegmentChunk", (a = function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i.a","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t, n, r, i = e.start, s = e.size || 65536;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"i.a"},');

                return (t = function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i.a.ReturnStatement.t","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                  if (u.file.chunked) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t"},');

                    return (function () {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i.a.ReturnStatement.t.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                      if (!u.file.available(i, s)) {
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement"},');

                        return (function (e, t) {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                          try {
                            var n = e();
                          } catch (e) {
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement"},');

                            return t(e);
                          }
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement"},');

                          return n && n.then ? n.then(void 0, t) : n;
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement"},');

                        })(function () {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement###2"},');

                          return (t = u.file.readChunk(i, s), n = function (t) {
                                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement.ReturnStatement.n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            e.chunk = t;
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement.ReturnStatement.n"},');

                          }, r ? n ? n(t) : t : (t && t.then || (t = Promise.resolve(t)), n ? t.then(n) : t));
                          var t, n, r;
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement###2"},');

                        }, function (t) {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement###3"},');

                          throw T(("Couldn't read segment: ").concat(JSON.stringify(e), ". ").concat(t.message));
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement.ReturnStatement###3"},');

                        });
                      }
                      e.chunk = u.file.subarray(i, s);
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t.ReturnStatement"},');

                    })();
                  }
                  if (u.file.byteLength > i + s) e.chunk = u.file.subarray(i, s); else {
                    if (void 0 !== e.size) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t"},');

                      throw T("Segment unreachable: " + JSON.stringify(e));
                    }
                    e.chunk = u.file.subarray(i);
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.t"},');

                }, n = function (t) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i.a.ReturnStatement.n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.n"},');

                  return e.chunk;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i.a.ReturnStatement.n"},');

                }, (r = t()) && r.then ? r.then(n) : n(r));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"i.a"},');

              }, function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                try {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i"},');

                  return Promise.resolve(a.apply(this, e));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"i"},');

              })), this.extendOptions && this.extendOptions(n), this.options = n, this.file = r, this.parsers = s);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"e","paramsNumber":3},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Qe"},');

            return (r(e, [{
              key: "createParser",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Qe.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = new (R.get(e))(t, this.options, this.file);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Qe.ReturnStatement.r.value"},');

                return this.parsers[e] = n;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Qe.ReturnStatement.r.value"},');

              }
            }]), e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Qe"},');

          })(), Ze = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function e(n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var r = this, s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, a = arguments.length > 2 ? arguments[2] : void 0;
              (t(this, e), i(this, "errors", []), i(this, "raw", O()), i(this, "handleError", function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"i###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                if (!r.options.silentErrors) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"i###2"},');

                  throw e;
                }
                r.errors.push(e.message);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"i###2"},');

              }), this.chunk = this.normalizeInput(n), this.file = a, this.type = this.constructor.type, this.globalOptions = this.options = s, this.localOptions = s[this.type], this.canTranslate = this.localOptions && this.localOptions.translate);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"e","paramsNumber":1},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze"},');

            return (r(e, [{
              key: "normalizeInput",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value"},');

                return e instanceof E ? e : new E(e);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value"},');

              }
            }], [{
              key: "findPosition",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = e.getUint16(t + 2) + 2, r = "function" == typeof this.headerLength ? this.headerLength(e, t, n) : this.headerLength, i = t + r, s = n - r;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###2"},');

                return {
                  offset: t,
                  length: n,
                  headerLength: r,
                  start: i,
                  size: s,
                  end: i + s
                };
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "parse",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = new ye(i({}, this.type, t)), r = new this(e, n);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###3"},');

                return r.parse();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###3"},');

              }
            }]), r(e, [{
              key: "translate",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze.ReturnStatement.r.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                this.canTranslate && (this.translated = this.translateBlock(this.raw, this.type));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###4"},');

              }
            }, {
              key: "translateBlock",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze.ReturnStatement.r.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = re.get(t), r = ne.get(t), i = te.get(t), s = this.options[t], a = s.reviveValues && !!n, u = s.translateValues && !!r, o = s.translateKeys && !!i, f = {}, h = e;
                Array.isArray(h) || ("function" == typeof h.entries && (h = h.entries()), h = k(h));
                for (var c = 0; c < h.length; c++) {
                  var l = h[c], d = l[0], p = l[1];
                  (a && n.has(d) ? p = n.get(d)(p) : u && r.has(d) && (p = this.translateValue(p, r.get(d))), o && i.has(d) && (d = i.get(d) || d), f[d] = p);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###5"},');

                return f;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###5"},');

              }
            }, {
              key: "translateValue",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze.ReturnStatement.r.value###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###6"},');

                return t[e] || e;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###6"},');

              }
            }, {
              key: "assignToOutput",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze.ReturnStatement.r.value###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                this.assignObjectToOutput(e, this.constructor.type, t);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###7"},');

              }
            }, {
              key: "assignObjectToOutput",
              value: function (e, t, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze.ReturnStatement.r.value###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                if (this.globalOptions.mergeOutput) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###8"},');

                  return y(e, n);
                }
                e[t] ? y(e[t], n) : e[t] = n;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.value###8"},');

              }
            }, {
              key: "output",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.Ze.ReturnStatement.r.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.get"},');

                return this.translated ? this.translated : this.raw ? g(this.raw) : void 0;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze.ReturnStatement.r.get"},');

              }
            }]), e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.Ze"},');

          })();
          function $e(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"$e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"$e"},');

            return n ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"$e","paramsNumber":3},');

          }
          (i(Ze, "headerLength", 4), i(Ze, "type", void 0), i(Ze, "multiSegment", !1), i(Ze, "canHandle", function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.i","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.i"},');

            return !1;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.i"},');

          }));
          function et() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"et","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"et","paramsNumber":0},');

          }
          function tt(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"tt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (!t) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"tt"},');

              return e && e.then ? e.then(et) : Promise.resolve();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"tt","paramsNumber":2},');

          }
          function nt(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"nt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var t = e();
            if (t && t.then) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"nt"},');

              return t.then(et);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"nt","paramsNumber":1},');

          }
          function rt(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"rt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var n = e();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"rt"},');

            return n && n.then ? n.then(t) : t(n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"rt","paramsNumber":2},');

          }
          function it(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"it","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            if (!e.s) {
              if (n instanceof st) {
                if (!n.s) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"it"},');

                  return void (n.o = it.bind(null, e, t));
                }
                (1 & t && (t = n.s), n = n.v);
              }
              if (n && n.then) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"it"},');

                return void n.then(it.bind(null, e, t), it.bind(null, e, 2));
              }
              (e.s = t, e.v = n);
              var r = e.o;
              r && r(e);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"it","paramsNumber":3},');

          }
          var st = (function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.st","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            function e() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"e","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.st"},');

            return (e.prototype.then = function (t, n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.st.ReturnStatement.e.prototype.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              var r = new e(), i = this.s;
              if (i) {
                var s = 1 & i ? t : n;
                if (s) {
                  try {
                    it(r, 1, s(this.v));
                  } catch (e) {
                    it(r, 2, e);
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.st.ReturnStatement.e.prototype.then"},');

                  return r;
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.st.ReturnStatement.e.prototype.then"},');

                return this;
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.st.ReturnStatement.e.prototype.then"},');

              return (this.o = function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.st.ReturnStatement.e.prototype.then.ReturnStatement.o","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                try {
                  var i = e.v;
                  1 & e.s ? it(r, 1, t ? t(i) : i) : n ? it(r, 1, n(i)) : it(r, 2, i);
                } catch (e) {
                  it(r, 2, e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.st.ReturnStatement.e.prototype.then.ReturnStatement.o"},');

              }, r);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.st.ReturnStatement.e.prototype.then"},');

            }, e);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.st"},');

          })();
          function at(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"at","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"at"},');

            return e instanceof st && 1 & e.s;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"at","paramsNumber":1},');

          }
          function ut(e, t, n) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ut","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            for (var r; ; ) {
              var i = e();
              if ((at(i) && (i = i.v), !i)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ut"},');

                return s;
              }
              if (i.then) {
                r = 0;
                break;
              }
              var s = n();
              if (s && s.then) {
                if (!at(s)) {
                  r = 1;
                  break;
                }
                s = s.s;
              }
              if (t) {
                var a = t();
                if (a && a.then && !at(a)) {
                  r = 2;
                  break;
                }
              }
            }
            var u = new st(), o = it.bind(null, u, 2);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ut"},');

            return ((0 === r ? i.then(h) : 1 === r ? s.then(f) : a.then(c)).then(void 0, o), u);
            function f(r) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"f","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              s = r;
              do {
                if (t && (a = t()) && a.then && !at(a)) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"f"},');

                  return void a.then(c).then(void 0, o);
                }
                if (!(i = e()) || at(i) && !i.v) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"f"},');

                  return void it(u, 1, s);
                }
                if (i.then) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"f"},');

                  return void i.then(h).then(void 0, o);
                }
                at(s = n()) && (s = s.v);
              } while (!s || !s.then);
              s.then(f).then(void 0, o);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"f","paramsNumber":1},');

            }
            function h(e) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"h","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              e ? (s = n()) && s.then ? s.then(f).then(void 0, o) : f(s) : it(u, 1, s);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"h","paramsNumber":1},');

            }
            function c() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"c","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              (i = e()) ? i.then ? i.then(h).then(void 0, o) : h(i) : it(u, 1, s);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"c","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ut","paramsNumber":3},');

          }
          function ot(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ot","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ot"},');

            return 192 === e || 194 === e || 196 === e || 219 === e || 221 === e || 218 === e || 254 === e;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ot","paramsNumber":1},');

          }
          function ft(e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ft","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ft"},');

            return e >= 224 && e <= 239;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ft","paramsNumber":1},');

          }
          function ht(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"ht","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var n = R;
            Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = k(n));
            for (var r = 0; r < n.length; r++) {
              var i = n[r], s = i[0];
              if (i[1].canHandle(e, t)) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ht"},');

                return s;
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ht","paramsNumber":2},');

          }
          var ct = (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var e, r;
              t(this, n);
              for (var s = arguments.length, u = new Array(s), o = 0; o < s; o++) u[o] = arguments[o];
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return (i(c(r = l(this, (e = a(n)).call.apply(e, [this].concat(u)))), "appSegments", []), i(c(r), "jpegSegments", []), i(c(r), "unknownSegments", []), r);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct"},');

            return (s(n, e), r(n, [{
              key: "parse",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value"},');

                  return $e(e.findAppSegments(), function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.$e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.$e"},');

                    return $e(e.readSegments(), function () {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.$e.ReturnStatement.$e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                      (e.mergeMultiSegments(), e.createParsers());
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.$e.ReturnStatement.$e"},');

                    });
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.$e"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value"},');

              }
            }, {
              key: "readSegments",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this.appSegments.map(this.ensureSegmentChunk);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###2"},');

                  return tt(Promise.all(e));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###2"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "setupSegmentFinderArgs",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var t = this;
                (!0 === e ? (this.findAll = !0, this.wanted = A(R.keyList())) : (e = void 0 === e ? R.keyList().filter(function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.e.R.keyList.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.e.R.keyList.filter"},');

                  return t.options[e].enabled;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.e.R.keyList.filter"},');

                }) : e.filter(function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.e.e.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.e.e.filter"},');

                  return t.options[e].enabled && R.has(e);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.e.e.filter"},');

                }), this.findAll = !1, this.remaining = A(e), this.wanted = A(e)), this.unfinishedMultiSegment = !1);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###3"},');

              }
            }, {
              key: "findAppSegments",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, t = arguments.length > 1 ? arguments[1] : void 0;
                try {
                  var n = this;
                  n.setupSegmentFinderArgs(t);
                  var r = n.file, i = n.findAll, s = n.wanted, a = n.remaining;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###4"},');

                  return rt(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (!i && n.file.chunked) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt"},');

                      return (i = k(s).some(function (e) {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.i.k.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        var t = R.get(e), r = n.options[e];
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.i.k.some"},');

                        return t.multiSegment && r.multiSegment;
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.i.k.some"},');

                      }), nt(function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.nt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        if (i) {
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.nt"},');

                          return tt(n.file.readWhole());
                        }
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.nt"},');

                      }));
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    var t = !1;
                    if ((e = n._findAppSegments(e, r.byteLength, i, s, a), !n.options.onlyTiff)) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt###2"},');

                      return (function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        if (r.chunked) {
                          var i = !1;
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement"},');

                          return ut(function () {
                                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut"},');

                            return !t && a.size > 0 && !i && (!!r.canReadNextChunk || !!n.unfinishedMultiSegment);
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut"},');

                          }, void 0, function () {
                                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            var s = r.nextChunkOffset, a = n.appSegments.some(function (e) {
                                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.a.n.appSegments.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.a.n.appSegments.some"},');

                              return !n.file.available(e.offset || e.start, e.length || e.size);
                                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.a.n.appSegments.some"},');

                            });
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut###2"},');

                            return rt(function () {
                                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.ReturnStatement.rt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.ReturnStatement.rt"},');

                              return e > s && !a ? $e(r.readNextChunk(e), function (e) {
                                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.ReturnStatement.rt.ReturnStatement.$e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                i = !e;
                                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.ReturnStatement.rt.ReturnStatement.$e"},');

                              }) : $e(r.readNextChunk(s), function (e) {
                                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.ReturnStatement.rt.ReturnStatement.$e###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                i = !e;
                                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.ReturnStatement.rt.ReturnStatement.$e###2"},');

                              });
                                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.ReturnStatement.rt"},');

                            }, function () {
                                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.ReturnStatement.rt###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                              void 0 === (e = n._findAppSegments(e, r.byteLength)) && (t = !0);
                                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut.ReturnStatement.rt###2"},');

                            });
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.ReturnStatement.ut###2"},');

                          });
                        }
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement"},');

                      })();
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt###2"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###4"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###4"},');

              }
            }, {
              key: "_findAppSegments",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                for (var n, r, i, s, a, u, o = this.file, f = this.findAll, h = this.wanted, c = this.remaining, l = this.options; e < t; e++) if (255 === o.getUint8(e)) if (ft(n = o.getUint8(e + 1))) {
                  if ((r = o.getUint16(e + 2), (i = ht(o, e)) && h.has(i) && (a = (s = R.get(i)).findPosition(o, e), u = l[i], a.type = i, this.appSegments.push(a), !f && (s.multiSegment && u.multiSegment ? (this.unfinishedMultiSegment = a.chunkNumber < a.chunkCount, this.unfinishedMultiSegment || c.delete(i)) : c.delete(i), 0 === c.size)))) break;
                  (l.recordUnknownSegments && ((a = Ze.findPosition(o, e)).marker = n, this.unknownSegments.push(a)), e += r + 1);
                } else if (ot(n)) {
                  if ((r = o.getUint16(e + 2), 218 === n && !1 !== l.stopAfterSos)) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###5"},');

                    return;
                  }
                  (l.recordJpegSegments && this.jpegSegments.push({
                    offset: e,
                    length: r,
                    marker: n
                  }), e += r + 1);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###5"},');

                return e;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###5"},');

              }
            }, {
              key: "mergeMultiSegments",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = this;
                if (this.appSegments.some(function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.appSegments.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.appSegments.some"},');

                  return e.multiSegment;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.appSegments.some"},');

                })) {
                  var t = (function (e, t) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.t","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    for (var n, r, i, s = O(), a = 0; a < e.length; a++) (n = e[a], r = n[t], s.has(r) ? i = s.get(r) : s.set(r, i = []), i.push(n));
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.t"},');

                    return k(s);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.t"},');

                  })(this.appSegments, "type");
                  this.mergedAppSegments = t.map(function (t) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.mergedAppSegments.t.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    var n = t[0], r = t[1], i = R.get(n, e.options);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.mergedAppSegments.t.map"},');

                    return i.handleMultiSegments ? {
                      type: n,
                      chunk: i.handleMultiSegments(r)
                    } : r[0];
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.mergedAppSegments.t.map"},');

                  });
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###6"},');

              }
            }, {
              key: "createParsers",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this.mergedAppSegments || this.appSegments;
                  Array.isArray(e) || ("function" == typeof e.entries && (e = e.entries()), e = k(e));
                  for (var t = 0; t < e.length; t++) {
                    var n = e[t], r = n.type, i = n.chunk;
                    if (this.options[r].enabled) {
                      var s = this.parsers[r];
                      if (s && s.append) ; else if (!s) {
                        var a = new (R.get(r, this.options))(i, this.options, this.file);
                        this.parsers[r] = a;
                      }
                    }
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###7"},');

                  return $e();
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###7"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###7"},');

              }
            }, {
              key: "getSegment",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###8"},');

                return this.appSegments.find(function (t) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.appSegments.find","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.appSegments.find"},');

                  return t.type === e;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.appSegments.find"},');

                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###8"},');

              }
            }, {
              key: "getOrFindSegment",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                try {
                  var t = this, n = t.getSegment(e);
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###9"},');

                  return rt(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (void 0 === n) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt###3"},');

                      return $e(t.findAppSegments(0, [e]), function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.$e","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        n = t.getSegment(e);
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt.ReturnStatement.$e"},');

                      });
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt###3"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt###4"},');

                    return n;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value.ReturnStatement.rt###4"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###9"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct.ReturnStatement.r.value###9"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.ct"},');

          })(Qe);
          function lt() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"lt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"lt","paramsNumber":0},');

          }
          N.set("jpeg", ct);
          function dt(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"dt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (!t) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"dt"},');

              return e && e.then ? e.then(lt) : Promise.resolve();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"dt","paramsNumber":2},');

          }
          function pt(e, t) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"pt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var n = e();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"pt"},');

            return n && n.then ? n.then(t) : t(n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"pt","paramsNumber":2},');

          }
          var vt = [void 0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8, 4];
          var yt = (function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return (t(this, n), l(this, a(n).apply(this, arguments)));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt"},');

            return (s(n, e), r(n, [{
              key: "parse",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value"},');

                  return (e.parseHeader(), pt(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (e.options.ifd0.enabled) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt"},');

                      return dt(e.parseIfd0Block());
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###2"},');

                    return pt(function () {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                      if (e.options.exif.enabled) {
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt"},');

                        return dt(e.saveParseBlock("parseExifBlock"));
                      }
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt"},');

                    }, function () {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###2"},');

                      return pt(function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        if (e.options.gps.enabled) {
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt"},');

                          return dt(e.saveParseBlock("parseGpsBlock"));
                        }
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt"},');

                      }, function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt###2"},');

                        return pt(function () {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                          if (e.options.interop.enabled) {
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt"},');

                            return dt(e.saveParseBlock("parseInteropBlock"));
                          }
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt"},');

                        }, function () {
                                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt###2"},');

                          return pt(function () {
                                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            if (e.options.ifd1.enabled) {
                                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt"},');

                              return dt(e.saveParseBlock("parseThumbnailBlock"));
                            }
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt"},');

                          }, function () {
                                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt###2"},');

                            return e.createOutput();
                                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt###2"},');

                          });
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt###2"},');

                        });
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt.ReturnStatement.pt###2"},');

                      });
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###2"},');

                    });
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###2"},');

                  }));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value"},');

              }
            }, {
              key: "saveParseBlock",
              value: function (e) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                try {
                  var t = this;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###2"},');

                  return (function (e, t) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    try {
                      var n = e();
                    } catch (e) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement"},');

                      return t(e);
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement"},');

                    return n && n.then ? n.then(void 0, t) : n;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement"},');

                  })(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement###2"},');

                    return (n = t[e](), i ? r ? r(n) : n : (n && n.then || (n = Promise.resolve(n)), r ? n.then(r) : n));
                    var n, r, i;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement###2"},');

                  }, function (e) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    t.handleError(e);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement###3"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###2"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###2"},');

              }
            }, {
              key: "findIfd0Offset",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                void 0 === this.ifd0Offset && (this.ifd0Offset = this.chunk.getUint32(4));
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###3"},');

              }
            }, {
              key: "findIfd1Offset",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                if (void 0 === this.ifd1Offset) {
                  this.findIfd0Offset();
                  var e = this.chunk.getUint16(this.ifd0Offset), t = this.ifd0Offset + 2 + 12 * e;
                  this.ifd1Offset = this.chunk.getUint32(t);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###4"},');

              }
            }, {
              key: "parseBlock",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = O();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###5"},');

                return (this[t] = n, this.parseTags(e, t, n), n);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###5"},');

              }
            }, {
              key: "parseIfd0Block",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                  if (e.ifd0) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###6"},');

                    return;
                  }
                  if ((e.findIfd0Offset(), e.ifd0Offset < 8)) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###6"},');

                    throw T("Invalid EXIF data: IFD0 offset should be less than 8");
                  }
                  if (!e.file.chunked && e.ifd0Offset > e.file.byteLength) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###6"},');

                    throw T(("IFD0 offset points to outside of file.\nthis.ifd0Offset: ").concat(e.ifd0Offset, ", file.byteLength: ").concat(e.file.byteLength));
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###6"},');

                  return pt(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (e.file.isTiff) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###3"},');

                      return dt(e.file.ensureChunk(e.ifd0Offset, L(e.options)));
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###3"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    var t = e.parseBlock(e.ifd0Offset, "ifd0");
                    if (0 !== t.size) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###4"},');

                      return (e.exifOffset = t.get(34665), e.interopOffset = t.get(40965), e.gpsOffset = t.get(34853), e.xmp = t.get(700), e.iptc = t.get(33723), e.icc = t.get(34675), e.options.sanitize && (t.delete(34665), t.delete(40965), t.delete(34853), t.delete(700), t.delete(33723), t.delete(34675)), t);
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###4"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###6"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###6"},');

              }
            }, {
              key: "ensureBlockChunk",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                try {
                  var n = this;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###7"},');

                  return pt(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (n.file.isTiff) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###5"},');

                      return dt(n.file.ensureChunk(e, t));
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###5"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    e > n.chunk.byteLength && (n.chunk = E.from(n.file, n.le));
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###6"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###7"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###7"},');

              }
            }, {
              key: "parseExifBlock",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                  if (e.exif) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###8"},');

                    return;
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###8"},');

                  return pt(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (!e.ifd0) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###7"},');

                      return dt(e.parseIfd0Block());
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###7"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (void 0 !== e.exifOffset) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###8"},');

                      return pt(function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        if (e.file.isTiff) {
                                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###3"},');

                          return dt(e.file.ensureChunk(e.exifOffset, L(e.options)));
                        }
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###3"},');

                      }, function () {
                                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        var t = e.parseBlock(e.exifOffset, "exif");
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###4"},');

                        return (e.interopOffset || (e.interopOffset = t.get(40965)), e.makerNote = t.get(37500), e.userComment = t.get(37510), e.options.sanitize && (t.delete(40965), t.delete(37500), t.delete(37510)), e.unpack(t, 41728), e.unpack(t, 41729), t);
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###4"},');

                      });
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###8"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###8"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###8"},');

              }
            }, {
              key: "unpack",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = e.get(t);
                n && 1 === n.length && e.set(t, n[0]);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###9"},');

              }
            }, {
              key: "parseGpsBlock",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                  if (e.gps) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###10"},');

                    return;
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###10"},');

                  return pt(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (!e.ifd0) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###9"},');

                      return dt(e.parseIfd0Block());
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###9"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (void 0 !== e.gpsOffset) {
                      var t = e.parseBlock(e.gpsOffset, "gps");
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###10"},');

                      return (t && t.has(2) && t.has(4) && (t.set("latitude", gt.apply(void 0, t.get(2).concat([t.get(1)]))), t.set("longitude", gt.apply(void 0, t.get(4).concat([t.get(3)])))), t);
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###10"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###10"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###10"},');

              }
            }, {
              key: "parseInteropBlock",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                  if (e.interop) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###11"},');

                    return;
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###11"},');

                  return pt(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (!e.ifd0) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###11"},');

                      return dt(e.parseIfd0Block());
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###11"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###12"},');

                    return pt(function () {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                      if (void 0 === e.interopOffset && !e.exif) {
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###5"},');

                        return dt(e.parseExifBlock());
                      }
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###5"},');

                    }, function () {
                                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                      if (void 0 !== e.interopOffset) {
                                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###6"},');

                        return e.parseBlock(e.interopOffset, "interop");
                      }
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt.ReturnStatement.pt###6"},');

                    });
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###12"},');

                  });
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###11"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###11"},');

              }
            }, {
              key: "parseThumbnailBlock",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                try {
                  var t = this;
                  if (t.ifd1 || t.ifd1Parsed) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###12"},');

                    return;
                  }
                  if (t.options.mergeOutput && !e) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###12"},');

                    return;
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###12"},');

                  return (t.findIfd1Offset(), t.ifd1Offset > 0 && (t.parseBlock(t.ifd1Offset, "ifd1"), t.ifd1Parsed = !0), t.ifd1);
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###12"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###12"},');

              }
            }, {
              key: "extractThumbnail",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                try {
                  var e = this;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###13"},');

                  return (e.headerParsed || e.parseHeader(), pt(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (!e.ifd1Parsed) {
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###13"},');

                      return dt(e.parseThumbnailBlock(!0));
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###13"},');

                  }, function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###14","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    if (void 0 !== e.ifd1) {
                      var t = e.ifd1.get(513), n = e.ifd1.get(514);
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###14"},');

                      return e.chunk.getUint8Array(t, n);
                    }
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.pt###14"},');

                  }));
                } catch (e) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###13"},');

                  return Promise.reject(e);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###13"},');

              }
            }, {
              key: "createOutput",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###14","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e, t, n, r = {}, i = ue;
                Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = k(i));
                for (var s = 0; s < i.length; s++) if (!V(e = this[t = i[s]])) if ((n = this.canTranslate ? this.translateBlock(e, t) : g(e), this.options.mergeOutput)) {
                  if ("ifd1" === t) continue;
                  y(r, n);
                } else r[t] = n;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###14"},');

                return (this.makerNote && (r.makerNote = this.makerNote), this.userComment && (r.userComment = this.userComment), r);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###14"},');

              }
            }, {
              key: "assignToOutput",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###15","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                if (this.globalOptions.mergeOutput) y(e, t); else {
                  var n = v(t);
                  Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = k(n));
                  for (var r = 0; r < n.length; r++) {
                    var i = n[r], s = i[0], a = i[1];
                    this.assignObjectToOutput(e, s, a);
                  }
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###15"},');

              }
            }, {
              key: "image",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.get","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.get"},');

                return this.ifd0;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.get"},');

              }
            }, {
              key: "thumbnail",
              get: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.get###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.get###2"},');

                return this.ifd1;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.get###2"},');

              }
            }], [{
              key: "canHandle",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###16","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###16"},');

                return 225 === e.getUint8(t + 1) && 1165519206 === e.getUint32(t + 4) && 0 === e.getUint16(t + 8);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###16"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt"},');

          })((function (e) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            function n() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"n","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"n"},');

              return (t(this, n), l(this, a(n).apply(this, arguments)));
                            SRTlib.send('{"type":"FUNCTIONEND","function":"n","paramsNumber":0},');

            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt###2"},');

            return (s(n, e), r(n, [{
              key: "parseHeader",
              value: function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###17","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var e = this.chunk.getUint16();
                if (18761 === e) this.le = !0; else {
                  if (19789 !== e) {
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###17"},');

                    throw T("Invalid EXIF data: expected byte order marker (0x4949 or 0x4D4D).");
                  }
                  this.le = !1;
                }
                if ((this.chunk.le = this.le, 42 !== this.chunk.getUint16(2))) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###17"},');

                  throw T("Invalid EXIF data: expected 0x002A.");
                }
                this.headerParsed = !0;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###17"},');

              }
            }, {
              key: "parseTags",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###18","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : O(), r = this.options[t], i = r.pick, s = r.skip, a = (i = A(i)).size > 0, u = 0 === s.size, o = this.chunk.getUint16(e);
                e += 2;
                for (var f = 0; f < o; f++) {
                  var h = this.chunk.getUint16(e);
                  if (a) {
                    if (i.has(h) && (n.set(h, this.parseTag(e, h, t)), i.delete(h), 0 === i.size)) break;
                  } else !u && s.has(h) || n.set(h, this.parseTag(e, h, t));
                  e += 12;
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###18"},');

                return n;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###18"},');

              }
            }, {
              key: "parseTag",
              value: function (e, t, n) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###19","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                var r, i = this.chunk.getUint16(e + 2), s = this.chunk.getUint32(e + 4), a = vt[i];
                if ((a * s <= 4 ? e += 8 : e = this.chunk.getUint32(e + 8), i < 1 || i > 13)) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                  throw T(("Invalid TIFF value type. block: ").concat(n.toUpperCase(), ", tag: ").concat(t.toString(16), ", type: ").concat(i, ", offset ").concat(e));
                }
                if (e > this.chunk.byteLength) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                  throw T(("Invalid TIFF value offset. block: ").concat(n.toUpperCase(), ", tag: ").concat(t.toString(16), ", type: ").concat(i, ", offset ").concat(e, " is outside of chunk size ").concat(this.chunk.byteLength));
                }
                if (1 === i) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                  return this.chunk.getUint8Array(e, s);
                }
                if (2 === i) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                  return "" === (r = (function (e) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.r.trim","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    for (; e.endsWith("\0"); ) e = e.slice(0, -1);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.r.trim"},');

                    return e;
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.ReturnStatement.r.trim"},');

                  })(r = this.chunk.getString(e, s)).trim()) ? void 0 : r;
                }
                if (7 === i) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                  return this.chunk.getUint8Array(e, s);
                }
                if (1 === s) {
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                  return this.parseTagValue(i, e);
                }
                for (var u = new ((function (e) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  switch (e) {
                    case 1:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Uint8Array;
                    case 3:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Uint16Array;
                    case 4:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Uint32Array;
                    case 5:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Array;
                    case 6:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Int8Array;
                    case 8:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Int16Array;
                    case 9:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Int32Array;
                    case 10:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Array;
                    case 11:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Float32Array;
                    case 12:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Float64Array;
                    default:
                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                      return Array;
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value.u.NewExpression"},');

                })(i))(s), o = a, f = 0; f < s; f++) (u[f] = this.parseTagValue(i, e), e += o);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

                return u;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###19"},');

              }
            }, {
              key: "parseTagValue",
              value: function (e, t) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.call.yt.ReturnStatement.r.value###20","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                switch (e) {
                  case 1:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getUint8(t);
                  case 3:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getUint16(t);
                  case 4:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getUint32(t);
                  case 5:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getUint32(t) / this.chunk.getUint32(t + 4);
                  case 6:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getInt8(t);
                  case 8:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getInt16(t);
                  case 9:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getInt32(t);
                  case 10:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getInt32(t) / this.chunk.getInt32(t + 4);
                  case 11:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getFloat(t);
                  case 12:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getDouble(t);
                  case 13:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    return this.chunk.getUint32(t);
                  default:
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

                    throw T(("Invalid tiff type ").concat(e));
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt.ReturnStatement.r.value###20"},');

              }
            }]), n);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call.yt###2"},');

          })(Ze));
          function gt(e, t, n, r) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"gt","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

            var i = e + t / 60 + n / 3600;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"gt"},');

            return ("S" !== r && "W" !== r || (i *= -1), i);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"gt","paramsNumber":4},');

          }
          (i(yt, "type", "tiff"), i(yt, "headerLength", 10), R.set("tiff", yt), e.Exifr = xe, e.Options = ye, e.allFormatters = ce, e.chunkedProps = ie, e.createDictionary = $, e.default = Re, e.disableAllOptions = be, e.extendDictionary = ee, e.fetchUrlAsArrayBuffer = Y, e.fileParsers = N, e.fileReaders = W, e.gps = Ie, e.gpsOnlyOptions = we, e.inheritables = he, e.orientation = _e, e.orientationOnlyOptions = Ae, e.otherSegments = se, e.parse = Le, e.readBlobAsArrayBuffer = H, e.rotation = je, e.rotations = ze, e.segmentParsers = R, e.segments = ae, e.segmentsAndBlocks = oe, e.tagKeys = te, e.tagRevivers = re, e.tagValues = ne, e.thumbnail = Te, e.thumbnailOnlyOptions = Oe, e.thumbnailUrl = Ve, e.tiffBlocks = ue, e.tiffExtractables = fe, Object.defineProperty(e, "__esModule", {
            value: !0
          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###22"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.call###23"},');

      }).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, require("buffer").Buffer);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###197"},');

    }, {
      "_process": 52,
      "buffer": 8
    }],
    181: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###198","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/thumbnail-generator",
        "description": "Uppy plugin that generates small previews of images to show on your upload UI.",
        "version": "1.6.0",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "thumbnail", "preview", "resize"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/utils": "file:../utils",
          "exifr": "^5.0.1",
          "math-log2": "^1.0.1"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###198"},');

    }, {}],
    182: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###199","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###27","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###27"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###27"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var io = requireSocketIo;
      var Emitter = require('component-emitter');
      var has = require('@uppy/utils/lib/hasProperty');
      var parseUrl = require('./parseUrl');
      var socketIo;
      function requireSocketIo() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"requireSocketIo","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (!socketIo) {
          socketIo = require('socket.io-client');
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"requireSocketIo"},');

        return socketIo;
                SRTlib.send('{"type":"FUNCTIONEND","function":"requireSocketIo","paramsNumber":0},');

      }
      var ASSEMBLY_UPLOADING = 'ASSEMBLY_UPLOADING';
      var ASSEMBLY_EXECUTING = 'ASSEMBLY_EXECUTING';
      var ASSEMBLY_COMPLETED = 'ASSEMBLY_COMPLETED';
      var statusOrder = [ASSEMBLY_UPLOADING, ASSEMBLY_EXECUTING, ASSEMBLY_COMPLETED];
      function isStatus(status, test) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isStatus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"isStatus"},');

        return statusOrder.indexOf(status) >= statusOrder.indexOf(test);
                SRTlib.send('{"type":"FUNCTIONEND","function":"isStatus","paramsNumber":2},');

      }
      var TransloaditAssembly = (function (_Emitter) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(TransloaditAssembly, _Emitter);
        function TransloaditAssembly(assembly) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"TransloaditAssembly","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this;
          _this = _Emitter.call(this) || this;
          _this.status = assembly;
          _this.socket = null;
          _this.pollInterval = null;
          _this.closed = false;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"TransloaditAssembly"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"TransloaditAssembly","paramsNumber":1},');

        }
        var _proto = TransloaditAssembly.prototype;
        _proto.connect = function connect() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto.connect","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this._connectSocket();
          this._beginPolling();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto.connect"},');

        };
        _proto._onFinished = function _onFinished() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._onFinished","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.emit('finished');
          this.close();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._onFinished"},');

        };
        _proto._connectSocket = function _connectSocket() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._connectSocket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this2 = this;
          var parsed = parseUrl(this.status.websocket_url);
          var socket = io().connect(parsed.origin, {
            transports: ['websocket'],
            path: parsed.pathname
          });
          socket.on('connect', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            socket.emit('assembly_connect', {
              id: _this2.status.assembly_id
            });
            _this2.emit('connect');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on"},');

          });
          socket.on('error', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            socket.disconnect();
            _this2.socket = null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###2"},');

          });
          socket.on('assembly_finished', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this2._onFinished();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###3"},');

          });
          socket.on('assembly_upload_finished', function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this2.emit('upload', file);
            _this2.status.uploads.push(file);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###4"},');

          });
          socket.on('assembly_uploading_finished', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this2.emit('executing');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###5"},');

          });
          socket.on('assembly_upload_meta_data_extracted', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this2.emit('metadata');
            _this2._fetchStatus({
              diff: false
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###6"},');

          });
          socket.on('assembly_result_finished', function (stepName, result) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this2.emit('result', stepName, result);
            if (!_this2.status.results[stepName]) {
              _this2.status.results[stepName] = [];
            }
            _this2.status.results[stepName].push(result);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###7"},');

          });
          socket.on('assembly_error', function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this2._onError(err);
            _this2._fetchStatus({
              diff: false
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._connectSocket._connectSocket.socket.on###8"},');

          });
          this.socket = socket;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._connectSocket"},');

        };
        _proto._onError = function _onError(err) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._onError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this.emit('error', _extends(new Error(err.message), err));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._onError"},');

        };
        _proto._beginPolling = function _beginPolling() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._beginPolling","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this3 = this;
          this.pollInterval = setInterval(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._beginPolling._beginPolling.pollInterval.setInterval","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (!_this3.socket || !_this3.socket.connected) {
              _this3._fetchStatus();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._beginPolling._beginPolling.pollInterval.setInterval"},');

          }, 2000);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._beginPolling"},');

        };
        _proto._fetchStatus = function _fetchStatus(_temp) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._fetchStatus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this4 = this;
          var _ref = _temp === void 0 ? {} : _temp, _ref$diff = _ref.diff, diff = _ref$diff === void 0 ? true : _ref$diff;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._fetchStatus"},');

          return fetch(this.status.assembly_ssl_url).then(function (response) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._fetchStatus._fetchStatus.ReturnStatement.fetch.then.then.fetch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._fetchStatus._fetchStatus.ReturnStatement.fetch.then.then.fetch.then"},');

            return response.json();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._fetchStatus._fetchStatus.ReturnStatement.fetch.then.then.fetch.then"},');

          }).then(function (status) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._fetchStatus._fetchStatus.ReturnStatement.fetch.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (_this4.closed) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._fetchStatus._fetchStatus.ReturnStatement.fetch.then.then"},');

              return;
            }
            _this4.emit('status', status);
            if (diff) {
              _this4.updateStatus(status);
            } else {
              _this4.status = status;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._fetchStatus._fetchStatus.ReturnStatement.fetch.then.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._fetchStatus"},');

        };
        _proto.update = function update() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto.update","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto.update"},');

          return this._fetchStatus({
            diff: true
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto.update"},');

        };
        _proto.updateStatus = function updateStatus(next) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto.updateStatus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this._diffStatus(this.status, next);
          this.status = next;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto.updateStatus"},');

        };
        _proto._diffStatus = function _diffStatus(prev, next) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._diffStatus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this5 = this;
          var prevStatus = prev.ok;
          var nextStatus = next.ok;
          if (next.error && !prev.error) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus"},');

            return this._onError(next);
          }
          var nowExecuting = isStatus(nextStatus, ASSEMBLY_EXECUTING) && !isStatus(prevStatus, ASSEMBLY_EXECUTING);
          if (nowExecuting) {
            this.emit('executing');
          }
          Object.keys(next.uploads).filter(function (upload) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.filter.map.forEach.Object.keys.filter.map.Object.keys.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.filter.map.forEach.Object.keys.filter.map.Object.keys.filter"},');

            return !has(prev.uploads, upload);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.filter.map.forEach.Object.keys.filter.map.Object.keys.filter"},');

          }).map(function (upload) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.filter.map.forEach.Object.keys.filter.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.filter.map.forEach.Object.keys.filter.map"},');

            return next.uploads[upload];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.filter.map.forEach.Object.keys.filter.map"},');

          }).forEach(function (upload) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.filter.map.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this5.emit('upload', upload);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.filter.map.forEach"},');

          });
          if (nowExecuting) {
            this.emit('metadata');
          }
          Object.keys(next.results).forEach(function (stepName) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var nextResults = next.results[stepName];
            var prevResults = prev.results[stepName];
            nextResults.filter(function (n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach.nextResults.filter.forEach.nextResults.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach.nextResults.filter.forEach.nextResults.filter"},');

              return !prevResults || !prevResults.some(function (p) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach.nextResults.filter.forEach.nextResults.filter.ReturnStatement.prevResults.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach.nextResults.filter.forEach.nextResults.filter.ReturnStatement.prevResults.some"},');

                return p.id === n.id;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach.nextResults.filter.forEach.nextResults.filter.ReturnStatement.prevResults.some"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach.nextResults.filter.forEach.nextResults.filter"},');

            }).forEach(function (result) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach.nextResults.filter.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this5.emit('result', stepName, result);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach.nextResults.filter.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus._diffStatus.Object.keys.forEach"},');

          });
          if (isStatus(nextStatus, ASSEMBLY_COMPLETED) && !isStatus(prevStatus, ASSEMBLY_COMPLETED)) {
            this.emit('finished');
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto._diffStatus"},');

        };
        _proto.close = function close() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssembly._proto.close","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.closed = true;
          if (this.socket) {
            this.socket.disconnect();
            this.socket = null;
          }
          clearInterval(this.pollInterval);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly._proto.close"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly"},');

        return TransloaditAssembly;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssembly"},');

      })(Emitter);
      module.exports = TransloaditAssembly;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###199"},');

    }, {
      "./parseUrl": 187,
      "@uppy/utils/lib/hasProperty": 219,
      "component-emitter": 11,
      "socket.io-client": 56
    }],
    183: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###200","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function validateParams(params) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"validateParams","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!params) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"validateParams"},');

          throw new Error('Transloadit: The `params` option is required.');
        }
        if (typeof params === 'string') {
          try {
            params = JSON.parse(params);
          } catch (err) {
            err.message = 'Transloadit: The `params` option is a malformed JSON string: ' + err.message;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"validateParams"},');

            throw err;
          }
        }
        if (!params.auth || !params.auth.key) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"validateParams"},');

          throw new Error('Transloadit: The `params.auth.key` option is required. ' + 'You can find your Transloadit API key at https://transloadit.com/account/api-settings.');
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"validateParams","paramsNumber":1},');

      }
      var AssemblyOptions = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function AssemblyOptions(files, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"AssemblyOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.files = files;
          this.opts = opts;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"AssemblyOptions","paramsNumber":2},');

        }
        var _proto = AssemblyOptions.prototype;
        _proto._normalizeAssemblyOptions = function _normalizeAssemblyOptions(file, assemblyOptions) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto._normalizeAssemblyOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (Array.isArray(assemblyOptions.fields)) {
            var fieldNames = assemblyOptions.fields;
            assemblyOptions.fields = {};
            fieldNames.forEach(function (fieldName) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto._normalizeAssemblyOptions._normalizeAssemblyOptions.fieldNames.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              assemblyOptions.fields[fieldName] = file.meta[fieldName];
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._normalizeAssemblyOptions._normalizeAssemblyOptions.fieldNames.forEach"},');

            });
          }
          if (!assemblyOptions.fields) {
            assemblyOptions.fields = {};
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._normalizeAssemblyOptions"},');

          return assemblyOptions;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._normalizeAssemblyOptions"},');

        };
        _proto._getAssemblyOptions = function _getAssemblyOptions(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this = this;
          var options = this.opts;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions"},');

          return Promise.resolve().then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions._getAssemblyOptions.ReturnStatement.Promise.resolve.then.then.then.Promise.resolve.then.then.Promise.resolve.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions._getAssemblyOptions.ReturnStatement.Promise.resolve.then.then.then.Promise.resolve.then.then.Promise.resolve.then"},');

            return options.getAssemblyOptions(file, options);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions._getAssemblyOptions.ReturnStatement.Promise.resolve.then.then.then.Promise.resolve.then.then.Promise.resolve.then"},');

          }).then(function (assemblyOptions) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions._getAssemblyOptions.ReturnStatement.Promise.resolve.then.then.then.Promise.resolve.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions._getAssemblyOptions.ReturnStatement.Promise.resolve.then.then.then.Promise.resolve.then.then"},');

            return _this._normalizeAssemblyOptions(file, assemblyOptions);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions._getAssemblyOptions.ReturnStatement.Promise.resolve.then.then.then.Promise.resolve.then.then"},');

          }).then(function (assemblyOptions) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions._getAssemblyOptions.ReturnStatement.Promise.resolve.then.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            validateParams(assemblyOptions.params);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions._getAssemblyOptions.ReturnStatement.Promise.resolve.then.then.then"},');

            return {
              fileIDs: [file.id],
              options: assemblyOptions
            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions._getAssemblyOptions.ReturnStatement.Promise.resolve.then.then.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._getAssemblyOptions"},');

        };
        _proto._dedupe = function _dedupe(list) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto._dedupe","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var dedupeMap = Object.create(null);
          list.forEach(function (_ref) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto._dedupe._dedupe.list.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var fileIDs = _ref.fileIDs, options = _ref.options;
            var id = JSON.stringify(options);
            if (dedupeMap[id]) {
              var _dedupeMap$id$fileIDs;
              (_dedupeMap$id$fileIDs = dedupeMap[id].fileIDs).push.apply(_dedupeMap$id$fileIDs, fileIDs);
            } else {
              dedupeMap[id] = {
                options: options,
                fileIDs: [].concat(fileIDs)
              };
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._dedupe._dedupe.list.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._dedupe"},');

          return Object.keys(dedupeMap).map(function (id) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto._dedupe._dedupe.ReturnStatement.Object.keys.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._dedupe._dedupe.ReturnStatement.Object.keys.map"},');

            return dedupeMap[id];
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._dedupe._dedupe.ReturnStatement.Object.keys.map"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto._dedupe"},');

        };
        _proto.build = function build() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto.build","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this2 = this;
          var options = this.opts;
          if (this.files.length > 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build"},');

            return Promise.all(this.files.map(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.all.then.Promise.all.files.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.all.then.Promise.all.files.map"},');

              return _this2._getAssemblyOptions(file);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.all.then.Promise.all.files.map"},');

            })).then(function (list) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.all.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.all.then"},');

              return _this2._dedupe(list);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.all.then"},');

            });
          }
          if (options.alwaysRunAssembly) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build"},');

            return Promise.resolve(options.getAssemblyOptions(null, options)).then(function (assemblyOptions) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.resolve.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              validateParams(assemblyOptions.params);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.resolve.then"},');

              return [{
                fileIDs: _this2.files.map(function (file) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.resolve.then.ReturnStatement.fileIDs._this2.files.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.resolve.then.ReturnStatement.fileIDs._this2.files.map"},');

                  return file.id;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.resolve.then.ReturnStatement.fileIDs._this2.files.map"},');

                }),
                options: assemblyOptions
              }];
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build.build.ReturnStatement.Promise.resolve.then"},');

            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build"},');

          return Promise.resolve([]);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions._proto.build"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions"},');

        return AssemblyOptions;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.AssemblyOptions"},');

      })();
      module.exports = AssemblyOptions;
      module.exports.validateParams = validateParams;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###200"},');

    }, {}],
    184: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###201","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var Emitter = require('component-emitter');
      var TransloaditAssemblyWatcher = (function (_Emitter) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssemblyWatcher","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(TransloaditAssemblyWatcher, _Emitter);
        function TransloaditAssemblyWatcher(uppy, assemblyIDs) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"TransloaditAssemblyWatcher","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Emitter.call(this) || this;
          _this._uppy = uppy;
          _this._assemblyIDs = assemblyIDs;
          _this._remaining = assemblyIDs.length;
          _this.promise = new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.promise.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this._resolve = resolve;
            _this._reject = reject;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.promise.NewExpression"},');

          });
          _this._onAssemblyComplete = _this._onAssemblyComplete.bind(_assertThisInitialized(_this));
          _this._onAssemblyCancel = _this._onAssemblyCancel.bind(_assertThisInitialized(_this));
          _this._onAssemblyError = _this._onAssemblyError.bind(_assertThisInitialized(_this));
          _this._onImportError = _this._onImportError.bind(_assertThisInitialized(_this));
          _this._addListeners();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"TransloaditAssemblyWatcher"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"TransloaditAssemblyWatcher","paramsNumber":2},');

        }
        var _proto = TransloaditAssemblyWatcher.prototype;
        _proto._watching = function _watching(id) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssemblyWatcher._proto._watching","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._watching"},');

          return this._assemblyIDs.indexOf(id) !== -1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._watching"},');

        };
        _proto._onAssemblyComplete = function _onAssemblyComplete(assembly) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onAssemblyComplete","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (!this._watching(assembly.assembly_id)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onAssemblyComplete"},');

            return;
          }
          this._uppy.log("[Transloadit] AssemblyWatcher: Got Assembly finish " + assembly.assembly_id);
          this.emit('assembly-complete', assembly.assembly_id);
          this._checkAllComplete();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onAssemblyComplete"},');

        };
        _proto._onAssemblyCancel = function _onAssemblyCancel(assembly) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onAssemblyCancel","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (!this._watching(assembly.assembly_id)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onAssemblyCancel"},');

            return;
          }
          this._checkAllComplete();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onAssemblyCancel"},');

        };
        _proto._onAssemblyError = function _onAssemblyError(assembly, error) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onAssemblyError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (!this._watching(assembly.assembly_id)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onAssemblyError"},');

            return;
          }
          this._uppy.log("[Transloadit] AssemblyWatcher: Got Assembly error " + assembly.assembly_id);
          this._uppy.log(error);
          this.emit('assembly-error', assembly.assembly_id, error);
          this._checkAllComplete();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onAssemblyError"},');

        };
        _proto._onImportError = function _onImportError(assembly, fileID, error) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onImportError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (!this._watching(assembly.assembly_id)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onImportError"},');

            return;
          }
          this._onAssemblyError(assembly, error);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._onImportError"},');

        };
        _proto._checkAllComplete = function _checkAllComplete() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssemblyWatcher._proto._checkAllComplete","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this._remaining -= 1;
          if (this._remaining === 0) {
            this._removeListeners();
            this._resolve();
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._checkAllComplete"},');

        };
        _proto._removeListeners = function _removeListeners() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssemblyWatcher._proto._removeListeners","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this._uppy.off('transloadit:complete', this._onAssemblyComplete);
          this._uppy.off('transloadit:assembly-cancel', this._onAssemblyCancel);
          this._uppy.off('transloadit:assembly-error', this._onAssemblyError);
          this._uppy.off('transloadit:import-error', this._onImportError);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._removeListeners"},');

        };
        _proto._addListeners = function _addListeners() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.TransloaditAssemblyWatcher._proto._addListeners","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this._uppy.on('transloadit:complete', this._onAssemblyComplete);
          this._uppy.on('transloadit:assembly-cancel', this._onAssemblyCancel);
          this._uppy.on('transloadit:assembly-error', this._onAssemblyError);
          this._uppy.on('transloadit:import-error', this._onImportError);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher._proto._addListeners"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher"},');

        return TransloaditAssemblyWatcher;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.TransloaditAssemblyWatcher"},');

      })(Emitter);
      module.exports = TransloaditAssemblyWatcher;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###201"},');

    }, {
      "component-emitter": 11
    }],
    185: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###202","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###52","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function Client(opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Client","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (opts === void 0) {
            opts = {};
          }
          this.opts = opts;
          this._reportError = this._reportError.bind(this);
          this._headers = {
            'Transloadit-Client': this.opts.client
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Client","paramsNumber":1},');

        }
        var _proto = Client.prototype;
        _proto.createAssembly = function createAssembly(_ref) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.createAssembly","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this = this;
          var templateId = _ref.templateId, params = _ref.params, fields = _ref.fields, signature = _ref.signature, expectedFiles = _ref.expectedFiles;
          var data = new FormData();
          data.append('params', typeof params === 'string' ? params : JSON.stringify(params));
          if (signature) {
            data.append('signature', signature);
          }
          Object.keys(fields).forEach(function (key) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            data.append(key, fields[key]);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.Object.keys.forEach"},');

          });
          data.append('num_expected_upload_files', expectedFiles);
          var url = this.opts.service + "/assemblies";
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly"},');

          return fetch(url, {
            method: 'post',
            headers: this._headers,
            body: data
          }).then(function (response) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch.fetch.then.then.fetch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch.fetch.then.then.fetch.then"},');

            return response.json();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch.fetch.then.then.fetch.then"},');

          }).then(function (assembly) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch.fetch.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (assembly.error) {
              var error = new Error(assembly.error);
              error.details = assembly.message;
              error.assembly = assembly;
              if (assembly.assembly_id) {
                error.details += ' ' + ("Assembly ID: " + assembly.assembly_id);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch.fetch.then.then"},');

              throw error;
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch.fetch.then.then"},');

            return assembly;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch.fetch.then.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch"},');

            return _this._reportError(err, {
              url: url,
              type: 'API_ERROR'
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly.createAssembly.ReturnStatement.fetch.then.then.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.createAssembly"},');

        };
        _proto.reserveFile = function reserveFile(assembly, file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.reserveFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this2 = this;
          var size = encodeURIComponent(file.size);
          var url = assembly.assembly_ssl_url + "/reserve_file?size=" + size;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.reserveFile"},');

          return fetch(url, {
            method: 'post',
            headers: this._headers
          }).then(function (response) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.reserveFile.reserveFile.ReturnStatement.fetch.then.catch.fetch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.reserveFile.reserveFile.ReturnStatement.fetch.then.catch.fetch.then"},');

            return response.json();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.reserveFile.reserveFile.ReturnStatement.fetch.then.catch.fetch.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.reserveFile.reserveFile.ReturnStatement.fetch.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.reserveFile.reserveFile.ReturnStatement.fetch.then.catch"},');

            return _this2._reportError(err, {
              assembly: assembly,
              file: file,
              url: url,
              type: 'API_ERROR'
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.reserveFile.reserveFile.ReturnStatement.fetch.then.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.reserveFile"},');

        };
        _proto.addFile = function addFile(assembly, file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.addFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this3 = this;
          if (!file.uploadURL) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.addFile"},');

            return Promise.reject(new Error('File does not have an `uploadURL`.'));
          }
          var size = encodeURIComponent(file.size);
          var uploadUrl = encodeURIComponent(file.uploadURL);
          var filename = encodeURIComponent(file.name);
          var fieldname = 'file';
          var qs = "size=" + size + "&filename=" + filename + "&fieldname=" + fieldname + "&s3Url=" + uploadUrl;
          var url = assembly.assembly_ssl_url + "/add_file?" + qs;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.addFile"},');

          return fetch(url, {
            method: 'post',
            headers: this._headers
          }).then(function (response) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.addFile.addFile.ReturnStatement.fetch.then.catch.fetch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.addFile.addFile.ReturnStatement.fetch.then.catch.fetch.then"},');

            return response.json();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.addFile.addFile.ReturnStatement.fetch.then.catch.fetch.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.addFile.addFile.ReturnStatement.fetch.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.addFile.addFile.ReturnStatement.fetch.then.catch"},');

            return _this3._reportError(err, {
              assembly: assembly,
              file: file,
              url: url,
              type: 'API_ERROR'
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.addFile.addFile.ReturnStatement.fetch.then.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.addFile"},');

        };
        _proto.cancelAssembly = function cancelAssembly(assembly) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.cancelAssembly","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this4 = this;
          var url = assembly.assembly_ssl_url;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.cancelAssembly"},');

          return fetch(url, {
            method: 'delete',
            headers: this._headers
          }).then(function (response) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.cancelAssembly.cancelAssembly.ReturnStatement.fetch.then.catch.fetch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.cancelAssembly.cancelAssembly.ReturnStatement.fetch.then.catch.fetch.then"},');

            return response.json();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.cancelAssembly.cancelAssembly.ReturnStatement.fetch.then.catch.fetch.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.cancelAssembly.cancelAssembly.ReturnStatement.fetch.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.cancelAssembly.cancelAssembly.ReturnStatement.fetch.then.catch"},');

            return _this4._reportError(err, {
              url: url,
              type: 'API_ERROR'
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.cancelAssembly.cancelAssembly.ReturnStatement.fetch.then.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.cancelAssembly"},');

        };
        _proto.getAssemblyStatus = function getAssemblyStatus(url) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.getAssemblyStatus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this5 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getAssemblyStatus"},');

          return fetch(url, {
            headers: this._headers
          }).then(function (response) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.getAssemblyStatus.getAssemblyStatus.ReturnStatement.fetch.then.catch.fetch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getAssemblyStatus.getAssemblyStatus.ReturnStatement.fetch.then.catch.fetch.then"},');

            return response.json();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getAssemblyStatus.getAssemblyStatus.ReturnStatement.fetch.then.catch.fetch.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.getAssemblyStatus.getAssemblyStatus.ReturnStatement.fetch.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getAssemblyStatus.getAssemblyStatus.ReturnStatement.fetch.then.catch"},');

            return _this5._reportError(err, {
              url: url,
              type: 'STATUS_ERROR'
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getAssemblyStatus.getAssemblyStatus.ReturnStatement.fetch.then.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.getAssemblyStatus"},');

        };
        _proto.submitError = function submitError(err, _ref2) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.submitError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var endpoint = _ref2.endpoint, instance = _ref2.instance, assembly = _ref2.assembly;
          var message = err.details ? err.message + " (" + err.details + ")" : err.message;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.submitError"},');

          return fetch('https://status.transloadit.com/client_error', {
            method: 'post',
            body: JSON.stringify({
              endpoint: endpoint,
              instance: instance,
              assembly_id: assembly,
              agent: typeof navigator !== 'undefined' ? navigator.userAgent : '',
              client: this.opts.client,
              error: message
            })
          }).then(function (response) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.submitError.submitError.ReturnStatement.fetch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.submitError.submitError.ReturnStatement.fetch.then"},');

            return response.json();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.submitError.submitError.ReturnStatement.fetch.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.submitError"},');

        };
        _proto._reportError = function _reportError(err, params) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._reportError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (this.opts.errorReporting === false) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._reportError"},');

            throw err;
          }
          var opts = {
            type: params.type
          };
          if (params.assembly) {
            opts.assembly = params.assembly.assembly_id;
            opts.instance = params.assembly.instance;
          }
          if (params.url) {
            opts.endpoint = params.url;
          }
          this.submitError(err, opts).catch(function (_) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._reportError._reportError.submitError.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._reportError._reportError.submitError.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._reportError"},');

          throw err;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._reportError"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###52"},');

        return Client;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###52"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###202"},');

    }, {}],
    186: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###203","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###28","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###28"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###28"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var Translator = require('@uppy/utils/lib/Translator');
      var hasProperty = require('@uppy/utils/lib/hasProperty');
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var Tus = require('@uppy/tus');
      var Assembly = require('./Assembly');
      var Client = require('./Client');
      var AssemblyOptions = require('./AssemblyOptions');
      var AssemblyWatcher = require('./AssemblyWatcher');
      function defaultGetAssemblyOptions(file, options) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"defaultGetAssemblyOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"defaultGetAssemblyOptions"},');

        return {
          params: options.params,
          signature: options.signature,
          fields: options.fields
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"defaultGetAssemblyOptions","paramsNumber":2},');

      }
      var COMPANION = 'https://api2.transloadit.com/companion';
      var ALLOWED_COMPANION_PATTERN = /\.transloadit\.com$/;
      var TL_COMPANION = /https?:\/\/api2(?:-\w+)?\.transloadit\.com\/companion/;
      var TL_UPPY_SERVER = /https?:\/\/api2(?:-\w+)?\.transloadit\.com\/uppy-server/;
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Transloadit, _Plugin);
        function Transloadit(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Transloadit","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.type = 'uploader';
          _this.id = _this.opts.id || 'Transloadit';
          _this.title = 'Transloadit';
          _this.defaultLocale = {
            strings: {
              creatingAssembly: 'Preparing upload...',
              creatingAssemblyFailed: 'Transloadit: Could not create Assembly',
              encoding: 'Encoding...'
            }
          };
          var defaultOptions = {
            service: 'https://api2.transloadit.com',
            errorReporting: true,
            waitForEncoding: false,
            waitForMetadata: false,
            alwaysRunAssembly: false,
            importFromUploadURLs: false,
            signature: null,
            params: null,
            fields: {},
            getAssemblyOptions: defaultGetAssemblyOptions,
            limit: 0
          };
          _this.opts = _extends({}, defaultOptions, {}, opts);
          _this.i18nInit();
          _this._prepareUpload = _this._prepareUpload.bind(_assertThisInitialized(_this));
          _this._afterUpload = _this._afterUpload.bind(_assertThisInitialized(_this));
          _this._onError = _this._onError.bind(_assertThisInitialized(_this));
          _this._onTusError = _this._onTusError.bind(_assertThisInitialized(_this));
          _this._onCancelAll = _this._onCancelAll.bind(_assertThisInitialized(_this));
          _this._onFileUploadURLAvailable = _this._onFileUploadURLAvailable.bind(_assertThisInitialized(_this));
          _this._onRestored = _this._onRestored.bind(_assertThisInitialized(_this));
          _this._getPersistentData = _this._getPersistentData.bind(_assertThisInitialized(_this));
          var hasCustomAssemblyOptions = _this.opts.getAssemblyOptions !== defaultOptions.getAssemblyOptions;
          if (_this.opts.params) {
            AssemblyOptions.validateParams(_this.opts.params);
          } else if (!hasCustomAssemblyOptions) {
            AssemblyOptions.validateParams(null);
          }
          _this.client = new Client({
            service: _this.opts.service,
            client: _this._getClientVersion(),
            errorReporting: _this.opts.errorReporting
          });
          _this.activeAssemblies = {};
          _this.assemblyWatchers = {};
          _this.completedFiles = Object.create(null);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Transloadit"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Transloadit","paramsNumber":2},');

        }
        var _proto = Transloadit.prototype;
        _proto.setOptions = function setOptions(newOpts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.setOptions###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          _Plugin.prototype.setOptions.call(this, newOpts);
          this.i18nInit();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.setOptions###3"},');

        };
        _proto.i18nInit = function i18nInit() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.i18nInit###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale]);
          this.i18n = this.translator.translate.bind(this.translator);
          this.i18nArray = this.translator.translateArray.bind(this.translator);
          this.setPluginState();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.i18nInit###3"},');

        };
        _proto._getClientVersion = function _getClientVersion() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getClientVersion","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this2 = this;
          var list = ["uppy-core:" + this.uppy.constructor.VERSION, "uppy-transloadit:" + this.constructor.VERSION, "uppy-tus:" + Tus.VERSION];
          var addPluginVersion = function addPluginVersion(pluginName, versionName) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"addPluginVersion","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var plugin = _this2.uppy.getPlugin(pluginName);
            if (plugin) {
              list.push(versionName + ":" + plugin.constructor.VERSION);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"addPluginVersion"},');

          };
          if (this.opts.importFromUploadURLs) {
            addPluginVersion('XHRUpload', 'uppy-xhr-upload');
            addPluginVersion('AwsS3', 'uppy-aws-s3');
            addPluginVersion('AwsS3Multipart', 'uppy-aws-s3-multipart');
          }
          addPluginVersion('Dropbox', 'uppy-dropbox');
          addPluginVersion('Facebook', 'uppy-facebook');
          addPluginVersion('GoogleDrive', 'uppy-google-drive');
          addPluginVersion('Instagram', 'uppy-instagram');
          addPluginVersion('OneDrive', 'uppy-onedrive');
          addPluginVersion('Url', 'uppy-url');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getClientVersion"},');

          return list.join(',');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getClientVersion"},');

        };
        _proto._attachAssemblyMetadata = function _attachAssemblyMetadata(file, status) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._attachAssemblyMetadata","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var meta = _extends({}, file.meta, {
            assembly_url: status.assembly_url,
            filename: file.name,
            fieldname: 'file'
          });
          var tus = _extends({}, file.tus, {
            endpoint: status.tus_url
          });
          var remote = file.remote;
          if (file.remote && TL_UPPY_SERVER.test(file.remote.companionUrl)) {
            var err = new Error('The https://api2.transloadit.com/uppy-server endpoint was renamed to ' + 'https://api2.transloadit.com/companion, please update your `companionUrl` ' + 'options accordingly.');
            this.uppy.log(err);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._attachAssemblyMetadata"},');

            throw err;
          }
          if (file.remote && TL_COMPANION.test(file.remote.companionUrl)) {
            var newHost = status.companion_url.replace(/\/$/, '');
            var path = file.remote.url.replace(file.remote.companionUrl, '').replace(/^\//, '');
            remote = _extends({}, file.remote, {
              companionUrl: newHost,
              url: newHost + "/" + path
            });
          }
          var newFile = _extends({}, file, {
            transloadit: {
              assembly: status.assembly_id
            }
          });
          if (!this.opts.importFromUploadURLs) {
            _extends(newFile, {
              meta: meta,
              tus: tus,
              remote: remote
            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._attachAssemblyMetadata"},');

          return newFile;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._attachAssemblyMetadata"},');

        };
        _proto._createAssembly = function _createAssembly(fileIDs, uploadID, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._createAssembly","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var _this3 = this;
          this.uppy.log('[Transloadit] Create Assembly');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssembly"},');

          return this.client.createAssembly({
            params: options.params,
            fields: options.fields,
            expectedFiles: fileIDs.length,
            signature: options.signature
          }).then(function (newAssembly) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._createAssembly._createAssembly.ReturnStatement.client.createAssembly.then.catch.client.createAssembly.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _extends2, _extends3;
            var assembly = new Assembly(newAssembly);
            var status = assembly.status;
            var assemblyID = status.assembly_id;
            var _this3$getPluginState = _this3.getPluginState(), assemblies = _this3$getPluginState.assemblies, uploadsAssemblies = _this3$getPluginState.uploadsAssemblies;
            _this3.setPluginState({
              assemblies: _extends({}, assemblies, (_extends2 = {}, _extends2[assemblyID] = status, _extends2)),
              uploadsAssemblies: _extends({}, uploadsAssemblies, (_extends3 = {}, _extends3[uploadID] = [].concat(uploadsAssemblies[uploadID], [assemblyID]), _extends3))
            });
            var _this3$uppy$getState = _this3.uppy.getState(), files = _this3$uppy$getState.files;
            var updatedFiles = {};
            fileIDs.forEach(function (id) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._createAssembly._createAssembly.ReturnStatement.client.createAssembly.then.catch.client.createAssembly.then.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              updatedFiles[id] = _this3._attachAssemblyMetadata(_this3.uppy.getFile(id), status);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssembly._createAssembly.ReturnStatement.client.createAssembly.then.catch.client.createAssembly.then.fileIDs.forEach"},');

            });
            _this3.uppy.setState({
              files: _extends({}, files, {}, updatedFiles)
            });
            _this3.uppy.emit('transloadit:assembly-created', status, fileIDs);
            _this3.uppy.log("[Transloadit] Created Assembly " + assemblyID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssembly._createAssembly.ReturnStatement.client.createAssembly.then.catch.client.createAssembly.then"},');

            return assembly;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssembly._createAssembly.ReturnStatement.client.createAssembly.then.catch.client.createAssembly.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._createAssembly._createAssembly.ReturnStatement.client.createAssembly.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            err.message = _this3.i18n('creatingAssemblyFailed') + ": " + err.message;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssembly._createAssembly.ReturnStatement.client.createAssembly.then.catch"},');

            throw err;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssembly._createAssembly.ReturnStatement.client.createAssembly.then.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssembly"},');

        };
        _proto._createAssemblyWatcher = function _createAssemblyWatcher(assemblyID, fileIDs, uploadID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var _this4 = this;
          var watcher = new AssemblyWatcher(this.uppy, assemblyID);
          watcher.on('assembly-complete', function (id) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher._createAssemblyWatcher.watcher.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var files = _this4.getAssemblyFiles(id);
            files.forEach(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher._createAssemblyWatcher.watcher.on.files.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this4.completedFiles[file.id] = true;
              _this4.uppy.emit('postprocess-complete', file);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher._createAssemblyWatcher.watcher.on.files.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher._createAssemblyWatcher.watcher.on"},');

          });
          watcher.on('assembly-error', function (id, error) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher._createAssemblyWatcher.watcher.on###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var files = _this4.getAssemblyFiles(id);
            files.forEach(function (file) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher._createAssemblyWatcher.watcher.on.files.forEach###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this4.uppy.emit('upload-error', file, error);
              _this4.uppy.emit('postprocess-complete', file);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher._createAssemblyWatcher.watcher.on.files.forEach###2"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher._createAssemblyWatcher.watcher.on###2"},');

          });
          this.assemblyWatchers[uploadID] = watcher;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._createAssemblyWatcher"},');

        };
        _proto._shouldWaitAfterUpload = function _shouldWaitAfterUpload() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._shouldWaitAfterUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._shouldWaitAfterUpload"},');

          return this.opts.waitForEncoding || this.opts.waitForMetadata;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._shouldWaitAfterUpload"},');

        };
        _proto._reserveFiles = function _reserveFiles(assembly, fileIDs) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._reserveFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this5 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._reserveFiles"},');

          return Promise.all(fileIDs.map(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._reserveFiles._reserveFiles.ReturnStatement.Promise.all.fileIDs.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var file = _this5.uppy.getFile(fileID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._reserveFiles._reserveFiles.ReturnStatement.Promise.all.fileIDs.map"},');

            return _this5.client.reserveFile(assembly, file);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._reserveFiles._reserveFiles.ReturnStatement.Promise.all.fileIDs.map"},');

          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._reserveFiles"},');

        };
        _proto._onFileUploadURLAvailable = function _onFileUploadURLAvailable(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onFileUploadURLAvailable","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this6 = this;
          if (!file || !file.transloadit || !file.transloadit.assembly) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onFileUploadURLAvailable"},');

            return;
          }
          var _this$getPluginState = this.getPluginState(), assemblies = _this$getPluginState.assemblies;
          var assembly = assemblies[file.transloadit.assembly];
          this.client.addFile(assembly, file).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onFileUploadURLAvailable._onFileUploadURLAvailable.client.addFile.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this6.uppy.log(err);
            _this6.uppy.emit('transloadit:import-error', assembly, file.id, err);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onFileUploadURLAvailable._onFileUploadURLAvailable.client.addFile.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onFileUploadURLAvailable"},');

        };
        _proto._findFile = function _findFile(uploadedFile) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._findFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var files = this.uppy.getFiles();
          for (var i = 0; i < files.length; i++) {
            var file = files[i];
            if (file.uploadURL === uploadedFile.tus_upload_url) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._findFile"},');

              return file;
            }
            if (file.tus && file.tus.uploadUrl === uploadedFile.tus_upload_url) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._findFile"},');

              return file;
            }
            if (!uploadedFile.is_tus_file) {
              if (file.name === uploadedFile.name && file.size === uploadedFile.size) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._findFile"},');

                return file;
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._findFile"},');

        };
        _proto._onFileUploadComplete = function _onFileUploadComplete(assemblyId, uploadedFile) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onFileUploadComplete","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _extends4;
          var state = this.getPluginState();
          var file = this._findFile(uploadedFile);
          if (!file) {
            this.uppy.log('[Transloadit] Couldn’t file the file, it was likely removed in the process');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onFileUploadComplete"},');

            return;
          }
          this.setPluginState({
            files: _extends({}, state.files, (_extends4 = {}, _extends4[uploadedFile.id] = {
              assembly: assemblyId,
              id: file.id,
              uploadedFile: uploadedFile
            }, _extends4))
          });
          this.uppy.emit('transloadit:upload', uploadedFile, this.getAssembly(assemblyId));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onFileUploadComplete"},');

        };
        _proto._onResult = function _onResult(assemblyId, stepName, result) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onResult","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var state = this.getPluginState();
          var file = state.files[result.original_id];
          result.localId = file ? file.id : null;
          var entry = {
            result: result,
            stepName: stepName,
            id: result.id,
            assembly: assemblyId
          };
          this.setPluginState({
            results: [].concat(state.results, [entry])
          });
          this.uppy.emit('transloadit:result', stepName, result, this.getAssembly(assemblyId));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onResult"},');

        };
        _proto._onAssemblyFinished = function _onAssemblyFinished(status) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onAssemblyFinished","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this7 = this;
          var url = status.assembly_ssl_url;
          this.client.getAssemblyStatus(url).then(function (finalStatus) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onAssemblyFinished._onAssemblyFinished.client.getAssemblyStatus.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _extends5;
            var assemblyId = finalStatus.assembly_id;
            var state = _this7.getPluginState();
            _this7.setPluginState({
              assemblies: _extends({}, state.assemblies, (_extends5 = {}, _extends5[assemblyId] = finalStatus, _extends5))
            });
            _this7.uppy.emit('transloadit:complete', finalStatus);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onAssemblyFinished._onAssemblyFinished.client.getAssemblyStatus.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onAssemblyFinished"},');

        };
        _proto._cancelAssembly = function _cancelAssembly(assembly) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._cancelAssembly","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this8 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._cancelAssembly"},');

          return this.client.cancelAssembly(assembly).then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._cancelAssembly._cancelAssembly.ReturnStatement.client.cancelAssembly.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this8.uppy.emit('transloadit:assembly-cancelled', assembly);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._cancelAssembly._cancelAssembly.ReturnStatement.client.cancelAssembly.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._cancelAssembly"},');

        };
        _proto._onCancelAll = function _onCancelAll() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this9 = this;
          var _this$getPluginState2 = this.getPluginState(), uploadsAssemblies = _this$getPluginState2.uploadsAssemblies;
          var assemblyIDs = Object.keys(uploadsAssemblies).reduce(function (acc, uploadID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll._onCancelAll.assemblyIDs.Object.keys.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            acc.push.apply(acc, uploadsAssemblies[uploadID]);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll._onCancelAll.assemblyIDs.Object.keys.reduce"},');

            return acc;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll._onCancelAll.assemblyIDs.Object.keys.reduce"},');

          }, []);
          var cancelPromises = assemblyIDs.map(function (assemblyID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll._onCancelAll.cancelPromises.assemblyIDs.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var assembly = _this9.getAssembly(assemblyID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll._onCancelAll.cancelPromises.assemblyIDs.map"},');

            return _this9._cancelAssembly(assembly);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll._onCancelAll.cancelPromises.assemblyIDs.map"},');

          });
          Promise.all(cancelPromises).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll._onCancelAll.Promise.all.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this9.uppy.log(err);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll._onCancelAll.Promise.all.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onCancelAll"},');

        };
        _proto._getPersistentData = function _getPersistentData(setData) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getPersistentData","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _setData;
          var state = this.getPluginState();
          var assemblies = state.assemblies;
          var uploadsAssemblies = state.uploadsAssemblies;
          setData((_setData = {}, _setData[this.id] = {
            assemblies: assemblies,
            uploadsAssemblies: uploadsAssemblies
          }, _setData));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getPersistentData"},');

        };
        _proto._onRestored = function _onRestored(pluginData) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this10 = this;
          var savedState = pluginData && pluginData[this.id] ? pluginData[this.id] : {};
          var previousAssemblies = savedState.assemblies || ({});
          var uploadsAssemblies = savedState.uploadsAssemblies || ({});
          if (Object.keys(uploadsAssemblies).length === 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored"},');

            return;
          }
          var restoreState = function restoreState(assemblies) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"restoreState","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var files = {};
            var results = [];
            Object.keys(assemblies).forEach(function (id) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreState.restoreState.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var status = assemblies[id];
              status.uploads.forEach(function (uploadedFile) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreState.restoreState.Object.keys.forEach.status.uploads.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var file = _this10._findFile(uploadedFile);
                files[uploadedFile.id] = {
                  id: file.id,
                  assembly: id,
                  uploadedFile: uploadedFile
                };
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreState.restoreState.Object.keys.forEach.status.uploads.forEach"},');

              });
              var state = _this10.getPluginState();
              Object.keys(status.results).forEach(function (stepName) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreState.restoreState.Object.keys.forEach.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                status.results[stepName].forEach(function (result) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreState.restoreState.Object.keys.forEach.Object.keys.forEach.status.results.stepName.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  var file = state.files[result.original_id];
                  result.localId = file ? file.id : null;
                  results.push({
                    id: result.id,
                    result: result,
                    stepName: stepName,
                    assembly: id
                  });
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreState.restoreState.Object.keys.forEach.Object.keys.forEach.status.results.stepName.forEach"},');

                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreState.restoreState.Object.keys.forEach.Object.keys.forEach"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreState.restoreState.Object.keys.forEach"},');

            });
            _this10.setPluginState({
              assemblies: assemblies,
              files: files,
              results: results,
              uploadsAssemblies: uploadsAssemblies
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"restoreState"},');

          };
          var restoreAssemblies = function restoreAssemblies() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"restoreAssemblies","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this10$getPluginStat = _this10.getPluginState(), assemblies = _this10$getPluginStat.assemblies, uploadsAssemblies = _this10$getPluginStat.uploadsAssemblies;
            Object.keys(uploadsAssemblies).forEach(function (uploadID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var assemblyIDs = uploadsAssemblies[uploadID];
              var fileIDsInUpload = assemblyIDs.reduce(function (acc, assemblyID) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.Object.keys.forEach.fileIDsInUpload.assemblyIDs.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                var fileIDsInAssembly = _this10.getAssemblyFiles(assemblyID).map(function (file) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.Object.keys.forEach.fileIDsInUpload.assemblyIDs.reduce.fileIDsInAssembly._this10.getAssemblyFiles.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.Object.keys.forEach.fileIDsInUpload.assemblyIDs.reduce.fileIDsInAssembly._this10.getAssemblyFiles.map"},');

                  return file.id;
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.Object.keys.forEach.fileIDsInUpload.assemblyIDs.reduce.fileIDsInAssembly._this10.getAssemblyFiles.map"},');

                });
                acc.push.apply(acc, fileIDsInAssembly);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.Object.keys.forEach.fileIDsInUpload.assemblyIDs.reduce"},');

                return acc;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.Object.keys.forEach.fileIDsInUpload.assemblyIDs.reduce"},');

              }, []);
              _this10._createAssemblyWatcher(assemblyIDs, fileIDsInUpload, uploadID);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.Object.keys.forEach"},');

            });
            var allAssemblyIDs = Object.keys(assemblies);
            allAssemblyIDs.forEach(function (id) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.allAssemblyIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var assembly = new Assembly(assemblies[id]);
              _this10._connectAssembly(assembly);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restoreAssemblies.restoreAssemblies.allAssemblyIDs.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"restoreAssemblies"},');

          };
          var updateAssemblies = function updateAssemblies() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"updateAssemblies","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var _this10$getPluginStat2 = _this10.getPluginState(), assemblies = _this10$getPluginStat2.assemblies;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"updateAssemblies"},');

            return Promise.all(Object.keys(assemblies).map(function (id) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.updateAssemblies.updateAssemblies.ReturnStatement.Promise.all.Object.keys.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.updateAssemblies.updateAssemblies.ReturnStatement.Promise.all.Object.keys.map"},');

              return _this10.activeAssemblies[id].update();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.updateAssemblies.updateAssemblies.ReturnStatement.Promise.all.Object.keys.map"},');

            }));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"updateAssemblies"},');

          };
          this.restored = Promise.resolve().then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restored.Promise.resolve.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            restoreState(previousAssemblies);
            restoreAssemblies();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restored.Promise.resolve.then"},');

            return updateAssemblies();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restored.Promise.resolve.then"},');

          });
          this.restored.then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restored.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this10.restored = null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored._onRestored.restored.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onRestored"},');

        };
        _proto._connectAssembly = function _connectAssembly(assembly) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this11 = this;
          var status = assembly.status;
          var id = status.assembly_id;
          this.activeAssemblies[id] = assembly;
          assembly.on('status', function (newStatus) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var _extends6;
            var _this11$getPluginStat = _this11.getPluginState(), assemblies = _this11$getPluginStat.assemblies;
            _this11.setPluginState({
              assemblies: _extends({}, assemblies, (_extends6 = {}, _extends6[id] = newStatus, _extends6))
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on"},');

          });
          assembly.on('upload', function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this11._onFileUploadComplete(id, file);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###2"},');

          });
          assembly.on('error', function (error) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            error.assembly = assembly.status;
            _this11.uppy.emit('transloadit:assembly-error', assembly.status, error);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###3"},');

          });
          assembly.on('executing', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this11.uppy.emit('transloadit:assembly-executing', assembly.status);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###4"},');

          });
          if (this.opts.waitForEncoding) {
            assembly.on('result', function (stepName, result) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              _this11._onResult(id, stepName, result);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###5"},');

            });
          }
          if (this.opts.waitForEncoding) {
            assembly.on('finished', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              _this11._onAssemblyFinished(assembly.status);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###6"},');

            });
          } else if (this.opts.waitForMetadata) {
            assembly.on('metadata', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              _this11._onAssemblyFinished(assembly.status);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.assembly.on###7"},');

            });
          }
          if (assembly.ok === 'ASSEMBLY_COMPLETE') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly"},');

            return assembly;
          }
          var connected = new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.connected.then.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            assembly.once('connect', resolve);
            assembly.once('status', resolve);
            assembly.once('error', reject);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.connected.then.NewExpression"},');

          }).then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.connected.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this11.uppy.log('[Transloadit] Socket is ready');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly._connectAssembly.connected.then"},');

          });
          assembly.connect();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly"},');

          return assembly;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._connectAssembly"},');

        };
        _proto._prepareUpload = function _prepareUpload(fileIDs, uploadID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this12 = this, _extends7;
          fileIDs = fileIDs.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.fileIDs.fileIDs.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.fileIDs.fileIDs.filter"},');

            return !file.error;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.fileIDs.fileIDs.filter"},');

          });
          fileIDs.forEach(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var file = _this12.uppy.getFile(fileID);
            _this12.uppy.emit('preprocess-progress', file, {
              mode: 'indeterminate',
              message: _this12.i18n('creatingAssembly')
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.fileIDs.forEach"},');

          });
          var createAssembly = function createAssembly(_ref) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createAssembly","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var fileIDs = _ref.fileIDs, options = _ref.options;
            var createdAssembly;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"createAssembly"},');

            return _this12._createAssembly(fileIDs, uploadID, options).then(function (assembly) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch._this12._createAssembly.then.then._this12._createAssembly.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              createdAssembly = assembly;
              if (_this12.opts.importFromUploadURLs) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch._this12._createAssembly.then.then._this12._createAssembly.then"},');

                return _this12._reserveFiles(assembly, fileIDs);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch._this12._createAssembly.then.then._this12._createAssembly.then"},');

            }).then(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch._this12._createAssembly.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              fileIDs.forEach(function (fileID) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch._this12._createAssembly.then.then.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var file = _this12.uppy.getFile(fileID);
                _this12.uppy.emit('preprocess-complete', file);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch._this12._createAssembly.then.then.fileIDs.forEach"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch._this12._createAssembly.then.then"},');

              return createdAssembly;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch._this12._createAssembly.then.then"},');

            }).catch(function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              fileIDs.forEach(function (fileID) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                var file = _this12.uppy.getFile(fileID);
                _this12.uppy.emit('preprocess-complete', file);
                _this12.uppy.emit('upload-error', file, err);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch.fileIDs.forEach"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch"},');

              throw err;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.createAssembly.createAssembly.ReturnStatement._this12._createAssembly.then.then.catch"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"createAssembly"},');

          };
          var _this$getPluginState3 = this.getPluginState(), uploadsAssemblies = _this$getPluginState3.uploadsAssemblies;
          this.setPluginState({
            uploadsAssemblies: _extends({}, uploadsAssemblies, (_extends7 = {}, _extends7[uploadID] = [], _extends7))
          });
          var files = fileIDs.map(function (id) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.files.fileIDs.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.files.fileIDs.map"},');

            return _this12.uppy.getFile(id);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.files.fileIDs.map"},');

          });
          var assemblyOptions = new AssemblyOptions(files, this.opts);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload"},');

          return assemblyOptions.build().then(function (assemblies) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then"},');

            return Promise.all(assemblies.map(createAssembly)).then(function (createdAssemblies) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.ReturnStatement.Promise.all.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var assemblyIDs = createdAssemblies.map(function (assembly) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.ReturnStatement.Promise.all.then.assemblyIDs.createdAssemblies.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.ReturnStatement.Promise.all.then.assemblyIDs.createdAssemblies.map"},');

                return assembly.status.assembly_id;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.ReturnStatement.Promise.all.then.assemblyIDs.createdAssemblies.map"},');

              });
              _this12._createAssemblyWatcher(assemblyIDs, fileIDs, uploadID);
              createdAssemblies.map(function (assembly) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.ReturnStatement.Promise.all.then.createdAssemblies.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.ReturnStatement.Promise.all.then.createdAssemblies.map"},');

                return _this12._connectAssembly(assembly);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.ReturnStatement.Promise.all.then.createdAssemblies.map"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.ReturnStatement.Promise.all.then"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then"},');

          }, function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            fileIDs.forEach(function (fileID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.fileIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var file = _this12.uppy.getFile(fileID);
              _this12.uppy.emit('preprocess-complete', file);
              _this12.uppy.emit('upload-error', file, err);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then.fileIDs.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then###2"},');

            throw err;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload._prepareUpload.ReturnStatement.assemblyOptions.build.then###2"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._prepareUpload"},');

        };
        _proto._afterUpload = function _afterUpload(fileIDs, uploadID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this13 = this;
          var files = fileIDs.map(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.files.fileIDs.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.files.fileIDs.map"},');

            return _this13.uppy.getFile(fileID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.files.fileIDs.map"},');

          });
          fileIDs = files.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.fileIDs.files.filter.map.files.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.fileIDs.files.filter.map.files.filter"},');

            return !file.error;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.fileIDs.files.filter.map.files.filter"},');

          }).map(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.fileIDs.files.filter.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.fileIDs.files.filter.map"},');

            return file.id;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.fileIDs.files.filter.map"},');

          });
          var state = this.getPluginState();
          if (this.restored) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload"},');

            return this.restored.then(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.ReturnStatement.restored.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.ReturnStatement.restored.then"},');

              return _this13._afterUpload(fileIDs, uploadID);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.ReturnStatement.restored.then"},');

            });
          }
          var assemblyIDs = state.uploadsAssemblies[uploadID];
          if (!this._shouldWaitAfterUpload()) {
            assemblyIDs.forEach(function (assemblyID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.assemblyIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var assembly = _this13.activeAssemblies[assemblyID];
              assembly.close();
              delete _this13.activeAssemblies[assemblyID];
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.assemblyIDs.forEach"},');

            });
            var assemblies = assemblyIDs.map(function (id) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.assemblies.assemblyIDs.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.assemblies.assemblyIDs.map"},');

              return _this13.getAssembly(id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.assemblies.assemblyIDs.map"},');

            });
            this.uppy.addResultData(uploadID, {
              transloadit: assemblies
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload"},');

            return Promise.resolve();
          }
          if (assemblyIDs.length === 0) {
            this.uppy.addResultData(uploadID, {
              transloadit: []
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload"},');

            return Promise.resolve();
          }
          var incompleteFiles = files.filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.incompleteFiles.files.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.incompleteFiles.files.filter"},');

            return !hasProperty(_this13.completedFiles, file.id);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.incompleteFiles.files.filter"},');

          });
          incompleteFiles.forEach(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.incompleteFiles.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this13.uppy.emit('postprocess-progress', file, {
              mode: 'indeterminate',
              message: _this13.i18n('encoding')
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.incompleteFiles.forEach"},');

          });
          var watcher = this.assemblyWatchers[uploadID];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload"},');

          return watcher.promise.then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.ReturnStatement.watcher.promise.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            var assemblies = assemblyIDs.map(function (id) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.ReturnStatement.watcher.promise.then.assemblies.assemblyIDs.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.ReturnStatement.watcher.promise.then.assemblies.assemblyIDs.map"},');

              return _this13.getAssembly(id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.ReturnStatement.watcher.promise.then.assemblies.assemblyIDs.map"},');

            });
            var state = _this13.getPluginState();
            var uploadsAssemblies = _extends({}, state.uploadsAssemblies);
            delete uploadsAssemblies[uploadID];
            _this13.setPluginState({
              uploadsAssemblies: uploadsAssemblies
            });
            _this13.uppy.addResultData(uploadID, {
              transloadit: assemblies
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload._afterUpload.ReturnStatement.watcher.promise.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._afterUpload"},');

        };
        _proto._onError = function _onError(err, uploadID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this14 = this;
          if (err === void 0) {
            err = null;
          }
          var state = this.getPluginState();
          var assemblyIDs = state.uploadsAssemblies[uploadID];
          assemblyIDs.forEach(function (assemblyID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onError._onError.assemblyIDs.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (_this14.activeAssemblies[assemblyID]) {
              _this14.activeAssemblies[assemblyID].close();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onError._onError.assemblyIDs.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onError"},');

        };
        _proto._onTusError = function _onTusError(err) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onTusError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (err && (/^tus: /).test(err.message)) {
            var url = err.originalRequest && err.originalRequest.responseURL ? err.originalRequest.responseURL : null;
            this.client.submitError(err, {
              url: url,
              type: 'TUS_ERROR'
            }).then(function (_) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._onTusError._onTusError.client.submitError.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onTusError._onTusError.client.submitError.then"},');

            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._onTusError"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.uppy.addPreProcessor(this._prepareUpload);
          this.uppy.addPostProcessor(this._afterUpload);
          this.uppy.on('error', this._onError);
          this.uppy.on('cancel-all', this._onCancelAll);
          this.uppy.on('upload-error', this._onTusError);
          if (this.opts.importFromUploadURLs) {
            this.uppy.on('upload-success', this._onFileUploadURLAvailable);
          } else {
            this.uppy.use(Tus, {
              resume: false,
              useFastRemoteRetry: false,
              metaFields: ['assembly_url', 'filename', 'fieldname'],
              limit: this.opts.limit
            });
          }
          this.uppy.on('restore:get-data', this._getPersistentData);
          this.uppy.on('restored', this._onRestored);
          this.setPluginState({
            assemblies: {},
            uploadsAssemblies: {},
            files: {},
            results: []
          });
          var _this$uppy$getState = this.uppy.getState(), capabilities = _this$uppy$getState.capabilities;
          this.uppy.setState({
            capabilities: _extends({}, capabilities, {
              individualCancellation: false
            })
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###10"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###9","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.uppy.removePreProcessor(this._prepareUpload);
          this.uppy.removePostProcessor(this._afterUpload);
          this.uppy.off('error', this._onError);
          if (this.opts.importFromUploadURLs) {
            this.uppy.off('upload-success', this._onFileUploadURLAvailable);
          }
          var _this$uppy$getState2 = this.uppy.getState(), capabilities = _this$uppy$getState2.capabilities;
          this.uppy.setState({
            capabilities: _extends({}, capabilities, {
              individualCancellation: true
            })
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###9"},');

        };
        _proto.getAssembly = function getAssembly(id) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getAssembly","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this$getPluginState4 = this.getPluginState(), assemblies = _this$getPluginState4.assemblies;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getAssembly"},');

          return assemblies[id];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getAssembly"},');

        };
        _proto.getAssemblyFiles = function getAssemblyFiles(assemblyID) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getAssemblyFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getAssemblyFiles"},');

          return this.uppy.getFiles().filter(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getAssemblyFiles.getAssemblyFiles.ReturnStatement.uppy.getFiles.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getAssemblyFiles.getAssemblyFiles.ReturnStatement.uppy.getFiles.filter"},');

            return file && file.transloadit && file.transloadit.assembly === assemblyID;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getAssemblyFiles.getAssemblyFiles.ReturnStatement.uppy.getFiles.filter"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getAssemblyFiles"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###13"},');

        return Transloadit;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###13"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
      module.exports.COMPANION = COMPANION;
      module.exports.UPPY_SERVER = COMPANION;
      module.exports.COMPANION_PATTERN = ALLOWED_COMPANION_PATTERN;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###203"},');

    }, {
      "../package.json": 188,
      "./Assembly": 182,
      "./AssemblyOptions": 183,
      "./AssemblyWatcher": 184,
      "./Client": 185,
      "@uppy/core": 97,
      "@uppy/tus": 190,
      "@uppy/utils/lib/Translator": 200,
      "@uppy/utils/lib/hasProperty": 219
    }],
    187: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###204","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function parseUrl(url) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###53","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var scheme = (/^\w+:\/\//).exec(url);
        var i = 0;
        if (scheme) {
          i = scheme[0].length + 1;
        }
        var slashIndex = url.indexOf('/', i);
        if (slashIndex === -1) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###53"},');

          return {
            origin: url,
            pathname: '/'
          };
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###53"},');

        return {
          origin: url.slice(0, slashIndex),
          pathname: url.slice(slashIndex)
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###53"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###204"},');

    }, {}],
    188: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###205","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/transloadit",
        "description": "The Transloadit plugin can be used to upload files to Transloadit for all kinds of processing, such as transcoding video, resizing images, zipping/unzipping, and more",
        "version": "1.5.11",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "transloadit", "file encoding", "encoding", "file processing", "video encoding", "crop", "resize", "watermark", "uppy", "uppy-plugin"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/companion-client": "file:../companion-client",
          "@uppy/provider-views": "file:../provider-views",
          "@uppy/tus": "file:../tus",
          "@uppy/utils": "file:../utils",
          "component-emitter": "^1.2.1",
          "socket.io-client": "~2.2.0"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###205"},');

    }, {}],
    189: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###206","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var tus = require('tus-js-client');
      function isCordova() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isCordova","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"isCordova"},');

        return typeof window !== 'undefined' && (typeof window.PhoneGap !== 'undefined' || typeof window.Cordova !== 'undefined' || typeof window.cordova !== 'undefined');
                SRTlib.send('{"type":"FUNCTIONEND","function":"isCordova","paramsNumber":0},');

      }
      function isReactNative() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isReactNative","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"isReactNative"},');

        return typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative';
                SRTlib.send('{"type":"FUNCTIONEND","function":"isReactNative","paramsNumber":0},');

      }
      module.exports = function getFingerprint(uppyFileObj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###54","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###54"},');

        return function (file, options, callback) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.getFingerprint.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          if (isCordova() || isReactNative()) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.getFingerprint.ReturnStatement"},');

            return tus.Upload.defaultOptions.fingerprint(file, options, callback);
          }
          var uppyFingerprint = ['tus', uppyFileObj.id, options.endpoint].join('-');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.getFingerprint.ReturnStatement"},');

          return callback(null, uppyFingerprint);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.getFingerprint.ReturnStatement"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###54"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###206"},');

    }, {
      "tus-js-client": 83
    }],
    190: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###207","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###29","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###29"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###29"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var tus = require('tus-js-client');
      var _require2 = require('@uppy/companion-client'), Provider = _require2.Provider, RequestClient = _require2.RequestClient, Socket = _require2.Socket;
      var emitSocketProgress = require('@uppy/utils/lib/emitSocketProgress');
      var getSocketHost = require('@uppy/utils/lib/getSocketHost');
      var settle = require('@uppy/utils/lib/settle');
      var EventTracker = require('@uppy/utils/lib/EventTracker');
      var NetworkError = require('@uppy/utils/lib/NetworkError');
      var isNetworkError = require('@uppy/utils/lib/isNetworkError');
      var RateLimitedQueue = require('@uppy/utils/lib/RateLimitedQueue');
      var hasProperty = require('@uppy/utils/lib/hasProperty');
      var getFingerprint = require('./getFingerprint');
      var tusDefaultOptions = {
        endpoint: '',
        resume: true,
        onProgress: null,
        onChunkComplete: null,
        onSuccess: null,
        onError: null,
        headers: {},
        chunkSize: Infinity,
        withCredentials: false,
        uploadUrl: null,
        uploadSize: null,
        overridePatchMethod: false,
        retryDelays: null
      };
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###14","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Tus, _Plugin);
        function Tus(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Tus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.type = 'uploader';
          _this.id = _this.opts.id || 'Tus';
          _this.title = 'Tus';
          var defaultOptions = {
            resume: true,
            autoRetry: true,
            useFastRemoteRetry: true,
            limit: 0,
            retryDelays: [0, 1000, 3000, 5000]
          };
          _this.opts = _extends({}, defaultOptions, opts);
          _this.requests = new RateLimitedQueue(_this.opts.limit);
          _this.uploaders = Object.create(null);
          _this.uploaderEvents = Object.create(null);
          _this.uploaderSockets = Object.create(null);
          _this.handleResetProgress = _this.handleResetProgress.bind(_assertThisInitialized(_this));
          _this.handleUpload = _this.handleUpload.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Tus"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Tus","paramsNumber":2},');

        }
        var _proto = Tus.prototype;
        _proto.handleResetProgress = function handleResetProgress() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleResetProgress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var files = _extends({}, this.uppy.getState().files);
          Object.keys(files).forEach(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleResetProgress.handleResetProgress.Object.keys.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (files[fileID].tus && files[fileID].tus.uploadUrl) {
              var tusState = _extends({}, files[fileID].tus);
              delete tusState.uploadUrl;
              files[fileID] = _extends({}, files[fileID], {
                tus: tusState
              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleResetProgress.handleResetProgress.Object.keys.forEach"},');

          });
          this.uppy.setState({
            files: files
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleResetProgress"},');

        };
        _proto.resetUploaderReferences = function resetUploaderReferences(fileID, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.resetUploaderReferences","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (opts === void 0) {
            opts = {};
          }
          if (this.uploaders[fileID]) {
            var uploader = this.uploaders[fileID];
            uploader.abort();
            if (opts.abort) {
              setTimeout(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.resetUploaderReferences.resetUploaderReferences.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.resetUploaderReferences.resetUploaderReferences.setTimeout"},');

                return uploader.abort(true);
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.resetUploaderReferences.resetUploaderReferences.setTimeout"},');

              }, 1000);
            }
            this.uploaders[fileID] = null;
          }
          if (this.uploaderEvents[fileID]) {
            this.uploaderEvents[fileID].remove();
            this.uploaderEvents[fileID] = null;
          }
          if (this.uploaderSockets[fileID]) {
            this.uploaderSockets[fileID].close();
            this.uploaderSockets[fileID] = null;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.resetUploaderReferences"},');

        };
        _proto.upload = function upload(file, current, total) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var _this2 = this;
          this.resetUploaderReferences(file.id);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this2.uppy.emit('upload-started', file);
            var optsTus = _extends({}, tusDefaultOptions, _this2.opts, file.tus || ({}));
            optsTus.fingerprint = getFingerprint(file);
            optsTus.onError = function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.optsTus.onError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this2.uppy.log(err);
              if (isNetworkError(err.originalRequest)) {
                err = new NetworkError(err, err.originalRequest);
              }
              _this2.resetUploaderReferences(file.id);
              queuedRequest.done();
              _this2.uppy.emit('upload-error', file, err);
              reject(err);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.optsTus.onError"},');

            };
            optsTus.onProgress = function (bytesUploaded, bytesTotal) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.optsTus.onProgress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              _this2.onReceiveUploadUrl(file, upload.url);
              _this2.uppy.emit('upload-progress', file, {
                uploader: _this2,
                bytesUploaded: bytesUploaded,
                bytesTotal: bytesTotal
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.optsTus.onProgress"},');

            };
            optsTus.onSuccess = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.optsTus.onSuccess","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var uploadResp = {
                uploadURL: upload.url
              };
              _this2.resetUploaderReferences(file.id);
              queuedRequest.done();
              _this2.uppy.emit('upload-success', file, uploadResp);
              if (upload.url) {
                _this2.uppy.log('Download ' + upload.file.name + ' from ' + upload.url);
              }
              resolve(upload);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.optsTus.onSuccess"},');

            };
            var copyProp = function copyProp(obj, srcProp, destProp) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"copyProp","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

              if (hasProperty(obj, srcProp) && !hasProperty(obj, destProp)) {
                obj[destProp] = obj[srcProp];
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"copyProp"},');

            };
            var meta = {};
            var metaFields = Array.isArray(optsTus.metaFields) ? optsTus.metaFields : Object.keys(file.meta);
            metaFields.forEach(function (item) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.metaFields.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              meta[item] = file.meta[item];
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.metaFields.forEach"},');

            });
            copyProp(meta, 'type', 'filetype');
            copyProp(meta, 'name', 'filename');
            optsTus.metadata = meta;
            var upload = new tus.Upload(file.data, optsTus);
            _this2.uploaders[file.id] = upload;
            _this2.uploaderEvents[file.id] = new EventTracker(_this2.uppy);
            var queuedRequest = _this2.requests.run(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.queuedRequest._this2.requests.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (!file.isPaused) {
                upload.start();
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.queuedRequest._this2.requests.run"},');

              return function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.queuedRequest._this2.requests.run.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.queuedRequest._this2.requests.run.ReturnStatement"},');

              };
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression.queuedRequest._this2.requests.run"},');

            });
            _this2.onFileRemove(file.id, function (targetFileID) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onFileRemove","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              queuedRequest.abort();
              _this2.resetUploaderReferences(file.id, {
                abort: !!upload.url
              });
              resolve("upload " + targetFileID + " was removed");
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onFileRemove"},');

            });
            _this2.onPause(file.id, function (isPaused) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onPause","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (isPaused) {
                queuedRequest.abort();
                upload.abort();
              } else {
                queuedRequest.abort();
                queuedRequest = _this2.requests.run(function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onPause.queuedRequest._this2.requests.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                  upload.start();
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onPause.queuedRequest._this2.requests.run"},');

                  return function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onPause.queuedRequest._this2.requests.run.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onPause.queuedRequest._this2.requests.run.ReturnStatement"},');

                  };
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onPause.queuedRequest._this2.requests.run"},');

                });
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onPause"},');

            });
            _this2.onPauseAll(file.id, function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onPauseAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              queuedRequest.abort();
              upload.abort();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onPauseAll"},');

            });
            _this2.onCancelAll(file.id, function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onCancelAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              queuedRequest.abort();
              _this2.resetUploaderReferences(file.id, {
                abort: !!upload.url
              });
              resolve("upload " + file.id + " was canceled");
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onCancelAll"},');

            });
            _this2.onResumeAll(file.id, function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onResumeAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              queuedRequest.abort();
              if (file.error) {
                upload.abort();
              }
              queuedRequest = _this2.requests.run(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onResumeAll.queuedRequest._this2.requests.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                upload.start();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onResumeAll.queuedRequest._this2.requests.run"},');

                return function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onResumeAll.queuedRequest._this2.requests.run.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onResumeAll.queuedRequest._this2.requests.run.ReturnStatement"},');

                };
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onResumeAll.queuedRequest._this2.requests.run"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression._this2.onResumeAll"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch.NewExpression"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this2.uppy.emit('upload-error', file, err);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch"},');

            throw err;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload.upload.ReturnStatement.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.upload"},');

        };
        _proto.uploadRemote = function uploadRemote(file, current, total) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

          var _this3 = this;
          this.resetUploaderReferences(file.id);
          var opts = _extends({}, this.opts);
          if (file.tus) {
            _extends(opts, file.tus);
          }
          this.uppy.emit('upload-started', file);
          this.uppy.log(file.remote.url);
          if (file.serverToken) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote"},');

            return this.connectToServerSocket(file);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote.uploadRemote.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var Client = file.remote.providerOptions.provider ? Provider : RequestClient;
            var client = new Client(_this3.uppy, file.remote.providerOptions);
            client.post(file.remote.url, _extends({}, file.remote.body, {
              endpoint: opts.endpoint,
              uploadUrl: opts.uploadUrl,
              protocol: 'tus',
              size: file.data.size,
              metadata: file.meta
            })).then(function (res) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote.uploadRemote.ReturnStatement.NewExpression.client.post.then.then.catch.client.post.then.then.client.post.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this3.uppy.setFileState(file.id, {
                serverToken: res.token
              });
              file = _this3.uppy.getFile(file.id);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote.uploadRemote.ReturnStatement.NewExpression.client.post.then.then.catch.client.post.then.then.client.post.then"},');

              return _this3.connectToServerSocket(file);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote.uploadRemote.ReturnStatement.NewExpression.client.post.then.then.catch.client.post.then.then.client.post.then"},');

            }).then(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote.uploadRemote.ReturnStatement.NewExpression.client.post.then.then.catch.client.post.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              resolve();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote.uploadRemote.ReturnStatement.NewExpression.client.post.then.then.catch.client.post.then.then"},');

            }).catch(function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote.uploadRemote.ReturnStatement.NewExpression.client.post.then.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this3.uppy.emit('upload-error', file, err);
              reject(err);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote.uploadRemote.ReturnStatement.NewExpression.client.post.then.then.catch"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote.uploadRemote.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadRemote"},');

        };
        _proto.connectToServerSocket = function connectToServerSocket(file) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this4 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var token = file.serverToken;
            var host = getSocketHost(file.remote.companionUrl);
            var socket = new Socket({
              target: host + "/api/" + token,
              autoOpen: false
            });
            _this4.uploaderSockets[file.id] = socket;
            _this4.uploaderEvents[file.id] = new EventTracker(_this4.uppy);
            _this4.onFileRemove(file.id, function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onFileRemove","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              queuedRequest.abort();
              socket.send('pause', {});
              socket.send('cancel', {});
              _this4.resetUploaderReferences(file.id);
              resolve("upload " + file.id + " was removed");
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onFileRemove"},');

            });
            _this4.onPause(file.id, function (isPaused) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onPause","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (isPaused) {
                queuedRequest.abort();
                socket.send('pause', {});
              } else {
                queuedRequest.abort();
                queuedRequest = _this4.requests.run(function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onPause.queuedRequest._this4.requests.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                  socket.send('resume', {});
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onPause.queuedRequest._this4.requests.run"},');

                  return function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onPause.queuedRequest._this4.requests.run.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onPause.queuedRequest._this4.requests.run.ReturnStatement"},');

                  };
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onPause.queuedRequest._this4.requests.run"},');

                });
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onPause"},');

            });
            _this4.onPauseAll(file.id, function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onPauseAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              queuedRequest.abort();
              socket.send('pause', {});
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onPauseAll"},');

            });
            _this4.onCancelAll(file.id, function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onCancelAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              queuedRequest.abort();
              socket.send('pause', {});
              socket.send('cancel', {});
              _this4.resetUploaderReferences(file.id);
              resolve("upload " + file.id + " was canceled");
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onCancelAll"},');

            });
            _this4.onResumeAll(file.id, function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onResumeAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              queuedRequest.abort();
              if (file.error) {
                socket.send('pause', {});
              }
              queuedRequest = _this4.requests.run(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onResumeAll.queuedRequest._this4.requests.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                socket.send('resume', {});
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onResumeAll.queuedRequest._this4.requests.run"},');

                return function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onResumeAll.queuedRequest._this4.requests.run.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onResumeAll.queuedRequest._this4.requests.run.ReturnStatement"},');

                };
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onResumeAll.queuedRequest._this4.requests.run"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onResumeAll"},');

            });
            _this4.onRetry(file.id, function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onRetry","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (socket.isOpen) {
                socket.send('pause', {});
                socket.send('resume', {});
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onRetry"},');

            });
            _this4.onRetryAll(file.id, function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onRetryAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (socket.isOpen) {
                socket.send('pause', {});
                socket.send('resume', {});
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression._this4.onRetryAll"},');

            });
            socket.on('progress', function (progressData) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.socket.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.socket.on"},');

              return emitSocketProgress(_this4, progressData, file);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.socket.on"},');

            });
            socket.on('error', function (errData) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.socket.on###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var message = errData.error.message;
              var error = _extends(new Error(message), {
                cause: errData.error
              });
              if (!_this4.opts.useFastRemoteRetry) {
                _this4.resetUploaderReferences(file.id);
                _this4.uppy.setFileState(file.id, {
                  serverToken: null
                });
              } else {
                socket.close();
              }
              _this4.uppy.emit('upload-error', file, error);
              queuedRequest.done();
              reject(error);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.socket.on###2"},');

            });
            socket.on('success', function (data) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.socket.on###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              var uploadResp = {
                uploadURL: data.url
              };
              _this4.uppy.emit('upload-success', file, uploadResp);
              _this4.resetUploaderReferences(file.id);
              queuedRequest.done();
              resolve();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.socket.on###3"},');

            });
            var queuedRequest = _this4.requests.run(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.queuedRequest._this4.requests.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              socket.open();
              if (file.isPaused) {
                socket.send('pause', {});
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.queuedRequest._this4.requests.run"},');

              return function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.queuedRequest._this4.requests.run.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.queuedRequest._this4.requests.run.ReturnStatement"},');

              };
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression.queuedRequest._this4.requests.run"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket.connectToServerSocket.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.connectToServerSocket"},');

        };
        _proto.onReceiveUploadUrl = function onReceiveUploadUrl(file, uploadURL) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onReceiveUploadUrl","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var currentFile = this.uppy.getFile(file.id);
          if (!currentFile) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onReceiveUploadUrl"},');

            return;
          }
          if (!currentFile.tus || currentFile.tus.uploadUrl !== uploadURL) {
            this.uppy.log('[Tus] Storing upload url');
            this.uppy.setFileState(currentFile.id, {
              tus: _extends({}, currentFile.tus, {
                uploadUrl: uploadURL
              })
            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onReceiveUploadUrl"},');

        };
        _proto.onFileRemove = function onFileRemove(fileID, cb) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onFileRemove","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.uploaderEvents[fileID].on('file-removed', function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onFileRemove.onFileRemove.uploaderEvents.fileID.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (fileID === file.id) cb(file.id);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFileRemove.onFileRemove.uploaderEvents.fileID.on"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onFileRemove"},');

        };
        _proto.onPause = function onPause(fileID, cb) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onPause","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.uploaderEvents[fileID].on('upload-pause', function (targetFileID, isPaused) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onPause.onPause.uploaderEvents.fileID.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            if (fileID === targetFileID) {
              cb(isPaused);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onPause.onPause.uploaderEvents.fileID.on"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onPause"},');

        };
        _proto.onRetry = function onRetry(fileID, cb) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onRetry","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this.uploaderEvents[fileID].on('upload-retry', function (targetFileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onRetry.onRetry.uploaderEvents.fileID.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (fileID === targetFileID) {
              cb();
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onRetry.onRetry.uploaderEvents.fileID.on"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onRetry"},');

        };
        _proto.onRetryAll = function onRetryAll(fileID, cb) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onRetryAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this5 = this;
          this.uploaderEvents[fileID].on('retry-all', function (filesToRetry) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onRetryAll.onRetryAll.uploaderEvents.fileID.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (!_this5.uppy.getFile(fileID)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onRetryAll.onRetryAll.uploaderEvents.fileID.on"},');

              return;
            }
            cb();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onRetryAll.onRetryAll.uploaderEvents.fileID.on"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onRetryAll"},');

        };
        _proto.onPauseAll = function onPauseAll(fileID, cb) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onPauseAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this6 = this;
          this.uploaderEvents[fileID].on('pause-all', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onPauseAll.onPauseAll.uploaderEvents.fileID.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (!_this6.uppy.getFile(fileID)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onPauseAll.onPauseAll.uploaderEvents.fileID.on"},');

              return;
            }
            cb();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onPauseAll.onPauseAll.uploaderEvents.fileID.on"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onPauseAll"},');

        };
        _proto.onCancelAll = function onCancelAll(fileID, cb) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onCancelAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this7 = this;
          this.uploaderEvents[fileID].on('cancel-all', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onCancelAll.onCancelAll.uploaderEvents.fileID.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (!_this7.uppy.getFile(fileID)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onCancelAll.onCancelAll.uploaderEvents.fileID.on"},');

              return;
            }
            cb();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onCancelAll.onCancelAll.uploaderEvents.fileID.on"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onCancelAll"},');

        };
        _proto.onResumeAll = function onResumeAll(fileID, cb) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onResumeAll","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this8 = this;
          this.uploaderEvents[fileID].on('resume-all', function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.onResumeAll.onResumeAll.uploaderEvents.fileID.on","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            if (!_this8.uppy.getFile(fileID)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onResumeAll.onResumeAll.uploaderEvents.fileID.on"},');

              return;
            }
            cb();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onResumeAll.onResumeAll.uploaderEvents.fileID.on"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.onResumeAll"},');

        };
        _proto.uploadFiles = function uploadFiles(files) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uploadFiles","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this9 = this;
          var promises = files.map(function (file, i) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uploadFiles.uploadFiles.promises.files.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var current = i + 1;
            var total = files.length;
            if (('error' in file) && file.error) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadFiles.uploadFiles.promises.files.map"},');

              return Promise.reject(new Error(file.error));
            } else if (file.isRemote) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadFiles.uploadFiles.promises.files.map"},');

              return _this9.uploadRemote(file, current, total);
            } else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadFiles.uploadFiles.promises.files.map"},');

              return _this9.upload(file, current, total);
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadFiles.uploadFiles.promises.files.map"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadFiles"},');

          return settle(promises);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uploadFiles"},');

        };
        _proto.handleUpload = function handleUpload(fileIDs) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleUpload","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this10 = this;
          if (fileIDs.length === 0) {
            this.uppy.log('[Tus] No files to upload');
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleUpload"},');

            return Promise.resolve();
          }
          if (this.opts.limit === 0) {
            this.uppy.log('[Tus] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/tus/#limit-0', 'warning');
          }
          this.uppy.log('[Tus] Uploading...');
          var filesToUpload = fileIDs.map(function (fileID) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleUpload.handleUpload.filesToUpload.fileIDs.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleUpload.handleUpload.filesToUpload.fileIDs.map"},');

            return _this10.uppy.getFile(fileID);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleUpload.handleUpload.filesToUpload.fileIDs.map"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleUpload"},');

          return this.uploadFiles(filesToUpload).then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleUpload.handleUpload.ReturnStatement.uploadFiles.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleUpload.handleUpload.ReturnStatement.uploadFiles.then"},');

            return null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleUpload.handleUpload.ReturnStatement.uploadFiles.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleUpload"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.uppy.setState({
            capabilities: _extends({}, this.uppy.getState().capabilities, {
              resumableUploads: true
            })
          });
          this.uppy.addUploader(this.handleUpload);
          this.uppy.on('reset-progress', this.handleResetProgress);
          if (this.opts.autoRetry) {
            this.uppy.on('back-online', this.uppy.retryAll);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###11"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###10","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.uppy.setState({
            capabilities: _extends({}, this.uppy.getState().capabilities, {
              resumableUploads: false
            })
          });
          this.uppy.removeUploader(this.handleUpload);
          if (this.opts.autoRetry) {
            this.uppy.off('back-online', this.uppy.retryAll);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###10"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###14"},');

        return Tus;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###14"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###207"},');

    }, {
      "../package.json": 191,
      "./getFingerprint": 189,
      "@uppy/companion-client": 93,
      "@uppy/core": 97,
      "@uppy/utils/lib/EventTracker": 196,
      "@uppy/utils/lib/NetworkError": 198,
      "@uppy/utils/lib/RateLimitedQueue": 199,
      "@uppy/utils/lib/emitSocketProgress": 203,
      "@uppy/utils/lib/getSocketHost": 216,
      "@uppy/utils/lib/hasProperty": 219,
      "@uppy/utils/lib/isNetworkError": 222,
      "@uppy/utils/lib/settle": 228,
      "tus-js-client": 83
    }],
    191: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###208","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/tus",
        "description": "Resumable uploads for Uppy using Tus.io",
        "version": "1.5.13",
        "license": "MIT",
        "main": "lib/index.js",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "upload", "resumable", "tus"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@types/tus-js-client": "^1.8.0",
          "@uppy/companion-client": "file:../companion-client",
          "@uppy/utils": "file:../utils",
          "tus-js-client": "^1.8.0"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###208"},');

    }, {}],
    192: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###209","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('preact'), h = _require.h, Component = _require.Component;
      var UrlUI = (function (_Component) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.UrlUI","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(UrlUI, _Component);
        function UrlUI(props) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"UrlUI","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this;
          _this = _Component.call(this, props) || this;
          _this.handleKeyPress = _this.handleKeyPress.bind(_assertThisInitialized(_this));
          _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"UrlUI"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"UrlUI","paramsNumber":1},');

        }
        var _proto = UrlUI.prototype;
        _proto.componentDidMount = function componentDidMount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.UrlUI._proto.componentDidMount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.input.value = '';
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.UrlUI._proto.componentDidMount"},');

        };
        _proto.handleKeyPress = function handleKeyPress(ev) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.UrlUI._proto.handleKeyPress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (ev.keyCode === 13) {
            this.props.addFile(this.input.value);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.UrlUI._proto.handleKeyPress"},');

        };
        _proto.handleClick = function handleClick() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.UrlUI._proto.handleClick","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.props.addFile(this.input.value);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.UrlUI._proto.handleClick"},');

        };
        _proto.render = function render() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.UrlUI._proto.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this2 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.UrlUI._proto.render"},');

          return h("div", {
            class: "uppy-Url"
          }, h("input", {
            class: "uppy-u-reset uppy-c-textInput uppy-Url-input",
            type: "text",
            "aria-label": this.props.i18n('enterUrlToImport'),
            placeholder: this.props.i18n('enterUrlToImport'),
            onkeyup: this.handleKeyPress,
            ref: function ref(input) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.UrlUI._proto.render.render.ReturnStatement.h.h.ref","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this2.input = input;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.UrlUI._proto.render.render.ReturnStatement.h.h.ref"},');

            },
            "data-uppy-super-focusable": true
          }), h("button", {
            class: "uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Url-importButton",
            type: "button",
            onclick: this.handleClick
          }, this.props.i18n('import')));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.UrlUI._proto.render"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.UrlUI"},');

        return UrlUI;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.UrlUI"},');

      })(Component);
      module.exports = UrlUI;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###209"},');

    }, {
      "preact": 51
    }],
    193: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###210","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###30","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###30"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###30"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('@uppy/core'), Plugin = _require.Plugin;
      var Translator = require('@uppy/utils/lib/Translator');
      var _require2 = require('preact'), h = _require2.h;
      var _require3 = require('@uppy/companion-client'), RequestClient = _require3.RequestClient;
      var UrlUI = require('./UrlUI.js');
      var forEachDroppedOrPastedUrl = require('./utils/forEachDroppedOrPastedUrl');
      function UrlIcon() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"UrlIcon","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"UrlIcon"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "32",
          height: "32",
          viewBox: "0 0 32 32",
          xmlns: "http://www.w3.org/2000/svg"
        }, h("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, h("rect", {
          fill: "#FF753E",
          width: "32",
          height: "32",
          rx: "16"
        }), h("path", {
          d: "M22.788 15.389l-2.199 2.19a3.184 3.184 0 0 1-.513.437c-.806.584-1.686.876-2.638.876a4.378 4.378 0 0 1-3.519-1.752c-.22-.292-.146-.802.147-1.021.293-.22.806-.146 1.026.146.953 1.313 2.785 1.532 4.105.583a.571.571 0 0 0 .293-.292l2.199-2.189c1.1-1.167 1.1-2.992-.073-4.086a2.976 2.976 0 0 0-4.105 0l-1.246 1.24a.71.71 0 0 1-1.026 0 .703.703 0 0 1 0-1.022l1.246-1.24a4.305 4.305 0 0 1 6.083 0c1.833 1.605 1.906 4.451.22 6.13zm-7.183 5.035l-1.246 1.24a2.976 2.976 0 0 1-4.105 0c-1.172-1.094-1.172-2.991-.073-4.086l2.2-2.19.292-.291c.66-.438 1.393-.657 2.2-.584.805.146 1.465.51 1.905 1.168.22.292.733.365 1.026.146.293-.22.367-.73.147-1.022-.733-.949-1.76-1.532-2.859-1.678-1.1-.22-2.272.073-3.225.802l-.44.438-2.199 2.19c-1.686 1.75-1.612 4.524.074 6.202.88.803 1.979 1.241 3.078 1.241 1.1 0 2.199-.438 3.079-1.24l1.246-1.241a.703.703 0 0 0 0-1.022c-.294-.292-.807-.365-1.1-.073z",
          fill: "#FFF",
          "fill-rule": "nonzero"
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"UrlIcon","paramsNumber":0},');

      }
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###15","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Url, _Plugin);
        function Url(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Url","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.id = _this.opts.id || 'Url';
          _this.title = _this.opts.title || 'Link';
          _this.type = 'acquirer';
          _this.icon = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.icon###6","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###6"},');

            return h(UrlIcon, null);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###6"},');

          };
          _this.defaultLocale = {
            strings: {
              import: 'Import',
              enterUrlToImport: 'Enter URL to import a file',
              failedToFetch: 'Companion failed to fetch this URL, please make sure it’s correct',
              enterCorrectUrl: 'Incorrect URL: Please make sure you are entering a direct link to a file'
            }
          };
          var defaultOptions = {};
          _this.opts = _extends({}, defaultOptions, {}, opts);
          _this.i18nInit();
          _this.hostname = _this.opts.companionUrl;
          if (!_this.hostname) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Url"},');

            throw new Error('Companion hostname is required, please consult https://uppy.io/docs/companion');
          }
          _this.getMeta = _this.getMeta.bind(_assertThisInitialized(_this));
          _this.addFile = _this.addFile.bind(_assertThisInitialized(_this));
          _this.handleRootDrop = _this.handleRootDrop.bind(_assertThisInitialized(_this));
          _this.handleRootPaste = _this.handleRootPaste.bind(_assertThisInitialized(_this));
          _this.client = new RequestClient(uppy, {
            companionUrl: _this.opts.companionUrl,
            companionHeaders: _this.opts.companionHeaders || _this.opts.serverHeaders
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Url"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Url","paramsNumber":2},');

        }
        var _proto = Url.prototype;
        _proto.setOptions = function setOptions(newOpts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.setOptions###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          _Plugin.prototype.setOptions.call(this, newOpts);
          this.i18nInit();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.setOptions###4"},');

        };
        _proto.i18nInit = function i18nInit() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.i18nInit###4","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale]);
          this.i18n = this.translator.translate.bind(this.translator);
          this.i18nArray = this.translator.translateArray.bind(this.translator);
          this.setPluginState();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.i18nInit###4"},');

        };
        _proto.getFileNameFromUrl = function getFileNameFromUrl(url) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getFileNameFromUrl","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getFileNameFromUrl"},');

          return url.substring(url.lastIndexOf('/') + 1);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getFileNameFromUrl"},');

        };
        _proto.checkIfCorrectURL = function checkIfCorrectURL(url) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.checkIfCorrectURL","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (!url) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.checkIfCorrectURL"},');

            return false;
          }
          var protocol = url.match(/^([a-z0-9]+):\/\//)[1];
          if (protocol !== 'http' && protocol !== 'https') {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.checkIfCorrectURL"},');

            return false;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.checkIfCorrectURL"},');

          return true;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.checkIfCorrectURL"},');

        };
        _proto.addProtocolToURL = function addProtocolToURL(url) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.addProtocolToURL","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var protocolRegex = /^[a-z0-9]+:\/\//;
          var defaultProtocol = 'http://';
          if (protocolRegex.test(url)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addProtocolToURL"},');

            return url;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addProtocolToURL"},');

          return defaultProtocol + url;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addProtocolToURL"},');

        };
        _proto.getMeta = function getMeta(url) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getMeta","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this2 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getMeta"},');

          return this.client.post('url/meta', {
            url: url
          }).then(function (res) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getMeta.getMeta.ReturnStatement.client.post.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (res.error) {
              _this2.uppy.log('[URL] Error:');
              _this2.uppy.log(res.error);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getMeta.getMeta.ReturnStatement.client.post.then"},');

              throw new Error('Failed to fetch the file');
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getMeta.getMeta.ReturnStatement.client.post.then"},');

            return res;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getMeta.getMeta.ReturnStatement.client.post.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getMeta"},');

        };
        _proto.addFile = function addFile(url) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.addFile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this3 = this;
          url = this.addProtocolToURL(url);
          if (!this.checkIfCorrectURL(url)) {
            this.uppy.log("[URL] Incorrect URL entered: " + url);
            this.uppy.info(this.i18n('enterCorrectUrl'), 'error', 4000);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addFile"},');

            return;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addFile"},');

          return this.getMeta(url).then(function (meta) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.addFile.addFile.ReturnStatement.getMeta.then.then.catch.getMeta.then.then.getMeta.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var tagFile = {
              source: _this3.id,
              name: _this3.getFileNameFromUrl(url),
              type: meta.type,
              data: {
                size: meta.size
              },
              isRemote: true,
              body: {
                url: url
              },
              remote: {
                companionUrl: _this3.opts.companionUrl,
                url: _this3.hostname + "/url/get",
                body: {
                  fileId: url,
                  url: url
                },
                providerOptions: _this3.client.opts
              }
            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addFile.addFile.ReturnStatement.getMeta.then.then.catch.getMeta.then.then.getMeta.then"},');

            return tagFile;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addFile.addFile.ReturnStatement.getMeta.then.then.catch.getMeta.then.then.getMeta.then"},');

          }).then(function (tagFile) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.addFile.addFile.ReturnStatement.getMeta.then.then.catch.getMeta.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this3.uppy.log('[Url] Adding remote file');
            try {
              _this3.uppy.addFile(tagFile);
            } catch (err) {
              if (!err.isRestriction) {
                _this3.uppy.log(err);
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addFile.addFile.ReturnStatement.getMeta.then.then.catch.getMeta.then.then"},');

          }).catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.addFile.addFile.ReturnStatement.getMeta.then.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this3.uppy.log(err);
            _this3.uppy.info({
              message: _this3.i18n('failedToFetch'),
              details: err
            }, 'error', 4000);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addFile.addFile.ReturnStatement.getMeta.then.then.catch"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.addFile"},');

        };
        _proto.handleRootDrop = function handleRootDrop(e) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleRootDrop","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this4 = this;
          forEachDroppedOrPastedUrl(e.dataTransfer, 'drop', function (url) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleRootDrop.handleRootDrop.forEachDroppedOrPastedUrl","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this4.uppy.log("[URL] Adding file from dropped url: " + url);
            _this4.addFile(url);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleRootDrop.handleRootDrop.forEachDroppedOrPastedUrl"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleRootDrop"},');

        };
        _proto.handleRootPaste = function handleRootPaste(e) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleRootPaste","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this5 = this;
          forEachDroppedOrPastedUrl(e.clipboardData, 'paste', function (url) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.handleRootPaste.handleRootPaste.forEachDroppedOrPastedUrl","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this5.uppy.log("[URL] Adding file from pasted url: " + url);
            _this5.addFile(url);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleRootPaste.handleRootPaste.forEachDroppedOrPastedUrl"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.handleRootPaste"},');

        };
        _proto.render = function render(state) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###7"},');

          return h(UrlUI, {
            i18n: this.i18n,
            addFile: this.addFile
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###7"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var target = this.opts.target;
          if (target) {
            this.mount(target, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###12"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###11","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.unmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###11"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###15"},');

        return Url;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###15"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###210"},');

    }, {
      "../package.json": 195,
      "./UrlUI.js": 192,
      "./utils/forEachDroppedOrPastedUrl": 194,
      "@uppy/companion-client": 93,
      "@uppy/core": 97,
      "@uppy/utils/lib/Translator": 200,
      "preact": 51
    }],
    194: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###211","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var toArray = require('@uppy/utils/lib/toArray');
      module.exports = function forEachDroppedOrPastedUrl(dataTransfer, isDropOrPaste, callback) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###55","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var items = toArray(dataTransfer.items);
        var urlItems;
        switch (isDropOrPaste) {
          case 'paste':
            {
              var atLeastOneFileIsDragged = items.some(function (item) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.atLeastOneFileIsDragged.items.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.atLeastOneFileIsDragged.items.some"},');

                return item.kind === 'file';
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.atLeastOneFileIsDragged.items.some"},');

              });
              if (atLeastOneFileIsDragged) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###55"},');

                return;
              } else {
                urlItems = items.filter(function (item) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.items.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.items.filter"},');

                  return item.kind === 'string' && item.type === 'text/plain';
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.items.filter"},');

                });
              }
              break;
            }
          case 'drop':
            {
              urlItems = items.filter(function (item) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.items.filter###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.items.filter###2"},');

                return item.kind === 'string' && item.type === 'text/uri-list';
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.items.filter###2"},');

              });
              break;
            }
          default:
            {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###55"},');

              throw new Error("isDropOrPaste must be either 'drop' or 'paste', but it's " + isDropOrPaste);
            }
        }
        urlItems.forEach(function (item) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          item.getAsString(function (urlString) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.forEach.item.getAsString","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.forEach.item.getAsString"},');

            return callback(urlString);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.forEach.item.getAsString"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.forEachDroppedOrPastedUrl.urlItems.forEach"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###55"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###211"},');

    }, {
      "@uppy/utils/lib/toArray": 229
    }],
    195: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###212","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/url",
        "description": "The Url plugin lets users import files from the Internet. Paste any URL and it’ll be added!",
        "version": "1.5.6",
        "license": "MIT",
        "main": "lib/index.js",
        "style": "dist/style.min.css",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "url", "import from url", "uppy", "uppy-plugin"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/companion-client": "file:../companion-client",
          "@uppy/utils": "file:../utils",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###212"},');

    }, {}],
    196: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###213","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###56","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function EventTracker(emitter) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"EventTracker","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          this._events = [];
          this._emitter = emitter;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"EventTracker","paramsNumber":1},');

        }
        var _proto = EventTracker.prototype;
        _proto.on = function on(event, fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.on###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          this._events.push([event, fn]);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.on###2"},');

          return this._emitter.on(event, fn);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.on###2"},');

        };
        _proto.remove = function remove() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.remove","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this = this;
          this._events.forEach(function (_ref) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.remove.remove._events.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var event = _ref[0], fn = _ref[1];
            _this._emitter.off(event, fn);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.remove.remove._events.forEach"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.remove"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###56"},');

        return EventTracker;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###56"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###213"},');

    }, {}],
    197: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###214","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = ['a[href]:not([tabindex^="-"]):not([inert]):not([aria-hidden])', 'area[href]:not([tabindex^="-"]):not([inert]):not([aria-hidden])', 'input:not([disabled]):not([inert]):not([aria-hidden])', 'select:not([disabled]):not([inert]):not([aria-hidden])', 'textarea:not([disabled]):not([inert]):not([aria-hidden])', 'button:not([disabled]):not([inert]):not([aria-hidden])', 'iframe:not([tabindex^="-"]):not([inert]):not([aria-hidden])', 'object:not([tabindex^="-"]):not([inert]):not([aria-hidden])', 'embed:not([tabindex^="-"]):not([inert]):not([aria-hidden])', '[contenteditable]:not([tabindex^="-"]):not([inert]):not([aria-hidden])', '[tabindex]:not([tabindex^="-"]):not([inert]):not([aria-hidden])'];
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###214"},');

    }, {}],
    198: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###215","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      function _wrapNativeSuper(Class) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_wrapNativeSuper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var _cache = typeof Map === "function" ? new Map() : undefined;
        _wrapNativeSuper = function _wrapNativeSuper(Class) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_wrapNativeSuper###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (Class === null || !_isNativeFunction(Class)) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###3"},');

            return Class;
          }
          if (typeof Class !== "function") {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###3"},');

            throw new TypeError("Super expression must either be null or a function");
          }
          if (typeof _cache !== "undefined") {
            if (_cache.has(Class)) {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###3"},');

              return _cache.get(Class);
            }
            _cache.set(Class, Wrapper);
          }
          function Wrapper() {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Wrapper","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Wrapper"},');

            return _construct(Class, arguments, _getPrototypeOf(this).constructor);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"Wrapper","paramsNumber":0},');

          }
          Wrapper.prototype = Object.create(Class.prototype, {
            constructor: {
              value: Wrapper,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###3"},');

          return _setPrototypeOf(Wrapper, Class);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper###3"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper"},');

        return _wrapNativeSuper(Class);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_wrapNativeSuper","paramsNumber":1},');

      }
      function _construct(Parent, args, Class) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_construct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (_isNativeReflectConstruct()) {
          _construct = Reflect.construct;
        } else {
          _construct = function _construct(Parent, args, Class) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_construct###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var a = [null];
            a.push.apply(a, args);
            var Constructor = Function.bind.apply(Parent, a);
            var instance = new Constructor();
            if (Class) _setPrototypeOf(instance, Class.prototype);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_construct###3"},');

            return instance;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_construct###3"},');

          };
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_construct"},');

        return _construct.apply(null, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_construct","paramsNumber":3},');

      }
      function _isNativeReflectConstruct() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_isNativeReflectConstruct","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (typeof Reflect === "undefined" || !Reflect.construct) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return false;
        }
        if (Reflect.construct.sham) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return false;
        }
        if (typeof Proxy === "function") {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return true;
        }
        try {
          Date.prototype.toString.call(Reflect.construct(Date, [], function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"Date.prototype.toString.call.Reflect.construct###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"Date.prototype.toString.call.Reflect.construct###3"},');

          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return true;
        } catch (e) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeReflectConstruct","paramsNumber":0},');

      }
      function _isNativeFunction(fn) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_isNativeFunction","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeFunction"},');

        return Function.toString.call(fn).indexOf("[native code]") !== -1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_isNativeFunction","paramsNumber":1},');

      }
      function _setPrototypeOf(o, p) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_setPrototypeOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        _setPrototypeOf = Object.setPrototypeOf || (function _setPrototypeOf(o, p) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_setPrototypeOf###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          o.__proto__ = p;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf###3"},');

          return o;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf###3"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf"},');

        return _setPrototypeOf(o, p);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_setPrototypeOf","paramsNumber":2},');

      }
      function _getPrototypeOf(o) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_getPrototypeOf","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_getPrototypeOf###3","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf###3"},');

          return o.__proto__ || Object.getPrototypeOf(o);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf###3"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf"},');

        return _getPrototypeOf(o);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_getPrototypeOf","paramsNumber":1},');

      }
      var NetworkError = (function (_Error) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.NetworkError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(NetworkError, _Error);
        function NetworkError(error, xhr) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"NetworkError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          if (xhr === void 0) {
            xhr = null;
          }
          _this = _Error.call(this, "This looks like a network error, the endpoint might be blocked by an internet provider or a firewall.\n\nSource error: [" + error + "]") || this;
          _this.isNetworkError = true;
          _this.request = xhr;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"NetworkError"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"NetworkError","paramsNumber":2},');

        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NetworkError"},');

        return NetworkError;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.NetworkError"},');

      })(_wrapNativeSuper(Error));
      module.exports = NetworkError;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###215"},');

    }, {}],
    199: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###216","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function findIndex(array, predicate) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"findIndex","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        for (var i = 0; i < array.length; i++) {
          if (predicate(array[i])) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"findIndex"},');

            return i;
          }
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"findIndex"},');

        return -1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"findIndex","paramsNumber":2},');

      }
      function createCancelError() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createCancelError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"createCancelError"},');

        return new Error('Cancelled');
                SRTlib.send('{"type":"FUNCTIONEND","function":"createCancelError","paramsNumber":0},');

      }
      module.exports = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###57","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function RateLimitedQueue(limit) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"RateLimitedQueue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (typeof limit !== 'number' || limit === 0) {
            this.limit = Infinity;
          } else {
            this.limit = limit;
          }
          this.activeRequests = 0;
          this.queuedHandlers = [];
                    SRTlib.send('{"type":"FUNCTIONEND","function":"RateLimitedQueue","paramsNumber":1},');

        }
        var _proto = RateLimitedQueue.prototype;
        _proto._call = function _call(fn) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._call","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this = this;
          this.activeRequests += 1;
          var _done = false;
          var cancelActive;
          try {
            cancelActive = fn();
          } catch (err) {
            this.activeRequests -= 1;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._call"},');

            throw err;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._call"},');

          return {
            abort: function abort() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._call._call.ReturnStatement.abort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (_done) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._call._call.ReturnStatement.abort"},');

                return;
              }
              _done = true;
              _this.activeRequests -= 1;
              cancelActive();
              _this._queueNext();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._call._call.ReturnStatement.abort"},');

            },
            done: function done() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._call._call.ReturnStatement.done","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (_done) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._call._call.ReturnStatement.done"},');

                return;
              }
              _done = true;
              _this.activeRequests -= 1;
              _this._queueNext();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._call._call.ReturnStatement.done"},');

            }
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._call"},');

        };
        _proto._queueNext = function _queueNext() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._queueNext","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this2 = this;
          Promise.resolve().then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._queueNext._queueNext.Promise.resolve.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this2._next();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._queueNext._queueNext.Promise.resolve.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._queueNext"},');

        };
        _proto._next = function _next() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._next","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (this.activeRequests >= this.limit) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._next"},');

            return;
          }
          if (this.queuedHandlers.length === 0) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._next"},');

            return;
          }
          var next = this.queuedHandlers.shift();
          var handler = this._call(next.fn);
          next.abort = handler.abort;
          next.done = handler.done;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._next"},');

        };
        _proto._queue = function _queue(fn, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._queue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this3 = this;
          if (options === void 0) {
            options = {};
          }
          var handler = {
            fn: fn,
            priority: options.priority || 0,
            abort: function abort() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._queue._queue.handler.abort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              _this3._dequeue(handler);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._queue._queue.handler.abort"},');

            },
            done: function done() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._queue._queue.handler.done","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._queue._queue.handler.done"},');

              throw new Error('Cannot mark a queued request as done: this indicates a bug');
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._queue._queue.handler.done"},');

            }
          };
          var index = findIndex(this.queuedHandlers, function (other) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._queue._queue.index.findIndex","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._queue._queue.index.findIndex"},');

            return handler.priority > other.priority;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._queue._queue.index.findIndex"},');

          });
          if (index === -1) {
            this.queuedHandlers.push(handler);
          } else {
            this.queuedHandlers.splice(index, 0, handler);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._queue"},');

          return handler;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._queue"},');

        };
        _proto._dequeue = function _dequeue(handler) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._dequeue","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var index = this.queuedHandlers.indexOf(handler);
          if (index !== -1) {
            this.queuedHandlers.splice(index, 1);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._dequeue"},');

        };
        _proto.run = function run(fn, queueOptions) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          if (this.activeRequests < this.limit) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.run"},');

            return this._call(fn);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.run"},');

          return this._queue(fn, queueOptions);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.run"},');

        };
        _proto.wrapPromiseFunction = function wrapPromiseFunction(fn, queueOptions) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.wrapPromiseFunction","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this4 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction"},');

          return function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            var queuedRequest;
            var outerPromise = new Promise(function (resolve, reject) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              queuedRequest = _this4.run(function () {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression.queuedRequest._this4.run","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                var cancelError;
                var innerPromise;
                try {
                  innerPromise = Promise.resolve(fn.apply(void 0, args));
                } catch (err) {
                  innerPromise = Promise.reject(err);
                }
                innerPromise.then(function (result) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression.queuedRequest._this4.run.innerPromise.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  if (cancelError) {
                    reject(cancelError);
                  } else {
                    queuedRequest.done();
                    resolve(result);
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression.queuedRequest._this4.run.innerPromise.then"},');

                }, function (err) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression.queuedRequest._this4.run.innerPromise.then###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  if (cancelError) {
                    reject(cancelError);
                  } else {
                    queuedRequest.done();
                    reject(err);
                  }
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression.queuedRequest._this4.run.innerPromise.then###2"},');

                });
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression.queuedRequest._this4.run"},');

                return function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression.queuedRequest._this4.run.ReturnStatement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                  cancelError = createCancelError();
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression.queuedRequest._this4.run.ReturnStatement"},');

                };
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression.queuedRequest._this4.run"},');

              }, queueOptions);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.NewExpression"},');

            });
            outerPromise.abort = function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.abort","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              queuedRequest.abort();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement.outerPromise.abort"},');

            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement"},');

            return outerPromise;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction.wrapPromiseFunction.ReturnStatement"},');

          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.wrapPromiseFunction"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###57"},');

        return RateLimitedQueue;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###57"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###216"},');

    }, {}],
    200: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###217","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###31","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###31"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###31"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      var has = require('./hasProperty');
      module.exports = (function () {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###58","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        function Translator(locales) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Translator","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var _this = this;
          this.locale = {
            strings: {},
            pluralize: function pluralize(n) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"locale.pluralize","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (n === 1) {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"locale.pluralize"},');

                return 0;
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"locale.pluralize"},');

              return 1;
                            SRTlib.send('{"type":"FUNCTIONEND","function":"locale.pluralize"},');

            }
          };
          if (Array.isArray(locales)) {
            locales.forEach(function (locale) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"locales.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"locales.forEach"},');

              return _this._apply(locale);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"locales.forEach"},');

            });
          } else {
            this._apply(locales);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Translator","paramsNumber":1},');

        }
        var _proto = Translator.prototype;
        _proto._apply = function _apply(locale) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto._apply","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          if (!locale || !locale.strings) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._apply"},');

            return;
          }
          var prevLocale = this.locale;
          this.locale = _extends({}, prevLocale, {
            strings: _extends({}, prevLocale.strings, locale.strings)
          });
          this.locale.pluralize = locale.pluralize || prevLocale.pluralize;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto._apply"},');

        };
        _proto.interpolate = function interpolate(phrase, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.interpolate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _String$prototype = String.prototype, split = _String$prototype.split, replace = _String$prototype.replace;
          var dollarRegex = /\$/g;
          var dollarBillsYall = '$$$$';
          var interpolated = [phrase];
          for (var arg in options) {
            if (arg !== '_' && has(options, arg)) {
              var replacement = options[arg];
              if (typeof replacement === 'string') {
                replacement = replace.call(options[arg], dollarRegex, dollarBillsYall);
              }
              interpolated = insertReplacement(interpolated, new RegExp('%\\{' + arg + '\\}', 'g'), replacement);
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.interpolate"},');

          return interpolated;
          function insertReplacement(source, rx, replacement) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"insertReplacement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

            var newParts = [];
            source.forEach(function (chunk) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"source.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              if (typeof chunk !== 'string') {
                                SRTlib.send('{"type":"FUNCTIONEND","function":"source.forEach"},');

                return newParts.push(chunk);
              }
              split.call(chunk, rx).forEach(function (raw, i, list) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"source.forEach.split.call.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

                if (raw !== '') {
                  newParts.push(raw);
                }
                if (i < list.length - 1) {
                  newParts.push(replacement);
                }
                                SRTlib.send('{"type":"FUNCTIONEND","function":"source.forEach.split.call.forEach"},');

              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"source.forEach"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"insertReplacement"},');

            return newParts;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"insertReplacement","paramsNumber":3},');

          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.interpolate"},');

        };
        _proto.translate = function translate(key, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.translate","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.translate"},');

          return this.translateArray(key, options).join('');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.translate"},');

        };
        _proto.translateArray = function translateArray(key, options) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._proto.translateArray","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var string = this.locale.strings[key];
          var hasPluralForms = typeof string === 'object';
          if (hasPluralForms) {
            if (options && typeof options.smart_count !== 'undefined') {
              var plural = this.locale.pluralize(options.smart_count);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.translateArray"},');

              return this.interpolate(string[plural], options);
            } else {
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.translateArray"},');

              throw new Error('Attempted to use a string with plural forms, but no value was given for %{smart_count}');
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.translateArray"},');

          return this.interpolate(string, options);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._proto.translateArray"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###58"},');

        return Translator;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###58"},');

      })();
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###217"},');

    }, {
      "./hasProperty": 219
    }],
    201: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###218","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var dataURItoBlob = require('./dataURItoBlob');
      module.exports = function canvasToBlob(canvas, type, quality) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###59","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        if (canvas.toBlob) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###59"},');

          return new Promise(function (resolve) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.canvasToBlob.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            canvas.toBlob(resolve, type, quality);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.canvasToBlob.ReturnStatement.NewExpression"},');

          });
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###59"},');

        return Promise.resolve().then(function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.canvasToBlob.ReturnStatement.Promise.resolve.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.canvasToBlob.ReturnStatement.Promise.resolve.then"},');

          return dataURItoBlob(canvas.toDataURL(type, quality), {});
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.canvasToBlob.ReturnStatement.Promise.resolve.then"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###59"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###218"},');

    }, {
      "./dataURItoBlob": 202
    }],
    202: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###219","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function dataURItoBlob(dataURI, opts, toFile) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###60","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var data = dataURI.split(',')[1];
        var mimeType = opts.mimeType || dataURI.split(',')[0].split(':')[1].split(';')[0];
        if (mimeType == null) {
          mimeType = 'plain/text';
        }
        var binary = atob(data);
        var array = [];
        for (var i = 0; i < binary.length; i++) {
          array.push(binary.charCodeAt(i));
        }
        var bytes;
        try {
          bytes = new Uint8Array(array);
        } catch (err) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###60"},');

          return null;
        }
        if (toFile) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###60"},');

          return new File([bytes], opts.name || '', {
            type: mimeType
          });
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###60"},');

        return new Blob([bytes], {
          type: mimeType
        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###60"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###219"},');

    }, {}],
    203: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###220","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var throttle = require('lodash.throttle');
      function _emitSocketProgress(uploader, progressData, file) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_emitSocketProgress","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

        var progress = progressData.progress, bytesUploaded = progressData.bytesUploaded, bytesTotal = progressData.bytesTotal;
        if (progress) {
          uploader.uppy.log("Upload progress: " + progress);
          uploader.uppy.emit('upload-progress', file, {
            uploader: uploader,
            bytesUploaded: bytesUploaded,
            bytesTotal: bytesTotal
          });
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_emitSocketProgress","paramsNumber":3},');

      }
      module.exports = throttle(_emitSocketProgress, 300, {
        leading: true,
        trailing: true
      });
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###220"},');

    }, {
      "lodash.throttle": 43
    }],
    204: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###221","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var isDOMElement = require('./isDOMElement');
      module.exports = function findAllDOMElements(element) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###61","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (typeof element === 'string') {
          var elements = [].slice.call(document.querySelectorAll(element));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###61"},');

          return elements.length > 0 ? elements : null;
        }
        if (typeof element === 'object' && isDOMElement(element)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###61"},');

          return [element];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###61"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###221"},');

    }, {
      "./isDOMElement": 220
    }],
    205: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###222","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var isDOMElement = require('./isDOMElement');
      module.exports = function findDOMElement(element, context) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###62","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        if (context === void 0) {
          context = document;
        }
        if (typeof element === 'string') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###62"},');

          return context.querySelector(element);
        }
        if (isDOMElement(element)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###62"},');

          return element;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###62"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###222"},');

    }, {
      "./isDOMElement": 220
    }],
    206: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###223","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function generateFileID(file) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###63","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var id = 'uppy';
        if (typeof file.name === 'string') {
          id += '-' + encodeFilename(file.name.toLowerCase());
        }
        if (file.type !== undefined) {
          id += '-' + file.type;
        }
        if (file.meta && typeof file.meta.relativePath === 'string') {
          id += '-' + encodeFilename(file.meta.relativePath.toLowerCase());
        }
        if (file.data.size !== undefined) {
          id += '-' + file.data.size;
        }
        if (file.data.lastModified !== undefined) {
          id += '-' + file.data.lastModified;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###63"},');

        return id;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###63"},');

      };
      function encodeFilename(name) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeFilename","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var suffix = '';
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeFilename"},');

        return name.replace(/[^A-Z0-9]/ig, function (character) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.name.replace","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          suffix += '-' + encodeCharacter(character);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.name.replace"},');

          return '/';
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.name.replace"},');

        }) + suffix;
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeFilename","paramsNumber":1},');

      }
      function encodeCharacter(character) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"encodeCharacter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeCharacter"},');

        return character.charCodeAt(0).toString(32);
                SRTlib.send('{"type":"FUNCTIONEND","function":"encodeCharacter","paramsNumber":1},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###223"},');

    }, {}],
    207: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###224","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function getBytesRemaining(fileProgress) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###64","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###64"},');

        return fileProgress.bytesTotal - fileProgress.bytesUploaded;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###64"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###224"},');

    }, {}],
    208: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###225","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var webkitGetAsEntryApi = require('./utils/webkitGetAsEntryApi/index');
      var fallbackApi = require('./utils/fallbackApi');
      module.exports = function getDroppedFiles(dataTransfer, _temp) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###65","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var _ref = _temp === void 0 ? {} : _temp, _ref$logDropError = _ref.logDropError, logDropError = _ref$logDropError === void 0 ? function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.getDroppedFiles.logDropError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.getDroppedFiles.logDropError"},');

        } : _ref$logDropError;
        if (dataTransfer.items && dataTransfer.items[0] && ('webkitGetAsEntry' in dataTransfer.items[0])) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###65"},');

          return webkitGetAsEntryApi(dataTransfer, logDropError);
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###65"},');

          return fallbackApi(dataTransfer);
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###65"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###225"},');

    }, {
      "./utils/fallbackApi": 209,
      "./utils/webkitGetAsEntryApi/index": 212
    }],
    209: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###226","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var toArray = require('../../toArray');
      module.exports = function fallbackApi(dataTransfer) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###66","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var files = toArray(dataTransfer.files);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###66"},');

        return Promise.resolve(files);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###66"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###226"},');

    }, {
      "../../toArray": 229
    }],
    210: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###227","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function getFilesAndDirectoriesFromDirectory(directoryReader, oldEntries, logDropError, _ref) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###67","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":4},`);

        var onSuccess = _ref.onSuccess;
        directoryReader.readEntries(function (entries) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.getFilesAndDirectoriesFromDirectory.directoryReader.readEntries","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var newEntries = [].concat(oldEntries, entries);
          if (entries.length) {
            setTimeout(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.getFilesAndDirectoriesFromDirectory.directoryReader.readEntries.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              getFilesAndDirectoriesFromDirectory(directoryReader, newEntries, logDropError, {
                onSuccess: onSuccess
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.getFilesAndDirectoriesFromDirectory.directoryReader.readEntries.setTimeout"},');

            }, 0);
          } else {
            onSuccess(newEntries);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.getFilesAndDirectoriesFromDirectory.directoryReader.readEntries"},');

        }, function (error) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.getFilesAndDirectoriesFromDirectory.directoryReader.readEntries###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          logDropError(error);
          onSuccess(oldEntries);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.getFilesAndDirectoriesFromDirectory.directoryReader.readEntries###2"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###67"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###227"},');

    }, {}],
    211: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###228","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function getRelativePath(fileEntry) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###68","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!fileEntry.fullPath || fileEntry.fullPath === '/' + fileEntry.name) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###68"},');

          return null;
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###68"},');

          return fileEntry.fullPath;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###68"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###228"},');

    }, {}],
    212: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###229","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var toArray = require('../../../toArray');
      var getRelativePath = require('./getRelativePath');
      var getFilesAndDirectoriesFromDirectory = require('./getFilesAndDirectoriesFromDirectory');
      module.exports = function webkitGetAsEntryApi(dataTransfer, logDropError) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###69","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        var files = [];
        var rootPromises = [];
        var createPromiseToAddFileOrParseDirectory = function createPromiseToAddFileOrParseDirectory(entry) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"createPromiseToAddFileOrParseDirectory","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"createPromiseToAddFileOrParseDirectory"},');

          return new Promise(function (resolve) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            if (entry.isFile) {
              entry.file(function (file) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.entry.file","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                file.relativePath = getRelativePath(entry);
                files.push(file);
                resolve();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.entry.file"},');

              }, function (error) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.entry.file###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                logDropError(error);
                resolve();
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.entry.file###2"},');

              });
            } else if (entry.isDirectory) {
              var directoryReader = entry.createReader();
              getFilesAndDirectoriesFromDirectory(directoryReader, [], logDropError, {
                onSuccess: function onSuccess(entries) {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.getFilesAndDirectoriesFromDirectory.onSuccess","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                  var promises = entries.map(function (entry) {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.getFilesAndDirectoriesFromDirectory.onSuccess.onSuccess.promises.entries.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.getFilesAndDirectoriesFromDirectory.onSuccess.onSuccess.promises.entries.map"},');

                    return createPromiseToAddFileOrParseDirectory(entry);
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.getFilesAndDirectoriesFromDirectory.onSuccess.onSuccess.promises.entries.map"},');

                  });
                  Promise.all(promises).then(function () {
                                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.getFilesAndDirectoriesFromDirectory.onSuccess.onSuccess.Promise.all.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.getFilesAndDirectoriesFromDirectory.onSuccess.onSuccess.Promise.all.then"},');

                    return resolve();
                                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.getFilesAndDirectoriesFromDirectory.onSuccess.onSuccess.Promise.all.then"},');

                  });
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression.getFilesAndDirectoriesFromDirectory.onSuccess"},');

                }
              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.createPromiseToAddFileOrParseDirectory.createPromiseToAddFileOrParseDirectory.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"createPromiseToAddFileOrParseDirectory"},');

        };
        toArray(dataTransfer.items).forEach(function (item) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.webkitGetAsEntryApi.toArray.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          var entry = item.webkitGetAsEntry();
          if (entry) {
            rootPromises.push(createPromiseToAddFileOrParseDirectory(entry));
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.toArray.forEach"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###69"},');

        return Promise.all(rootPromises).then(function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.webkitGetAsEntryApi.ReturnStatement.Promise.all.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.ReturnStatement.Promise.all.then"},');

          return files;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.webkitGetAsEntryApi.ReturnStatement.Promise.all.then"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###69"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###229"},');

    }, {
      "../../../toArray": 229,
      "./getFilesAndDirectoriesFromDirectory": 210,
      "./getRelativePath": 211
    }],
    213: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###230","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function getFileNameAndExtension(fullFileName) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###70","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var lastDot = fullFileName.lastIndexOf('.');
        if (lastDot === -1 || lastDot === fullFileName.length - 1) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###70"},');

          return {
            name: fullFileName,
            extension: undefined
          };
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###70"},');

          return {
            name: fullFileName.slice(0, lastDot),
            extension: fullFileName.slice(lastDot + 1)
          };
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###70"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###230"},');

    }, {}],
    214: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###231","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var getFileNameAndExtension = require('./getFileNameAndExtension');
      var mimeTypes = require('./mimeTypes');
      module.exports = function getFileType(file) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###71","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null;
        fileExtension = fileExtension ? fileExtension.toLowerCase() : null;
        if (file.type) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###71"},');

          return file.type;
        } else if (fileExtension && mimeTypes[fileExtension]) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###71"},');

          return mimeTypes[fileExtension];
        } else {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###71"},');

          return 'application/octet-stream';
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###71"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###231"},');

    }, {
      "./getFileNameAndExtension": 213,
      "./mimeTypes": 225
    }],
    215: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###232","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var mimeToExtensions = {
        'audio/mp3': 'mp3',
        'audio/ogg': 'ogg',
        'audio/webm': 'webm',
        'image/gif': 'gif',
        'image/heic': 'heic',
        'image/heif': 'heif',
        'image/jpeg': 'jpg',
        'image/png': 'png',
        'image/svg+xml': 'svg',
        'video/mp4': 'mp4',
        'video/ogg': 'ogv',
        'video/quicktime': 'mov',
        'video/webm': 'webm',
        'video/x-matroska': 'mkv',
        'video/x-msvideo': 'avi'
      };
      module.exports = function getFileTypeExtension(mimeType) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###72","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        mimeType = mimeType.replace(/;.*$/, '');
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###72"},');

        return mimeToExtensions[mimeType] || null;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###72"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###232"},');

    }, {}],
    216: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###233","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function getSocketHost(url) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###73","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var regex = /^(?:https?:\/\/|\/\/)?(?:[^@\n]+@)?(?:www\.)?([^\n]+)/i;
        var host = regex.exec(url)[1];
        var socketProtocol = (/^http:\/\//i).test(url) ? 'ws' : 'wss';
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###73"},');

        return socketProtocol + "://" + host;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###73"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###233"},');

    }, {}],
    217: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###234","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function getSpeed(fileProgress) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###74","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!fileProgress.bytesUploaded) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###74"},');

          return 0;
        }
        var timeElapsed = new Date() - fileProgress.uploadStarted;
        var uploadSpeed = fileProgress.bytesUploaded / (timeElapsed / 1000);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###74"},');

        return uploadSpeed;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###74"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###234"},');

    }, {}],
    218: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###235","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function getTimeStamp() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###75","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var date = new Date();
        var hours = pad(date.getHours().toString());
        var minutes = pad(date.getMinutes().toString());
        var seconds = pad(date.getSeconds().toString());
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###75"},');

        return hours + ':' + minutes + ':' + seconds;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###75"},');

      };
      function pad(str) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"pad","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"pad"},');

        return str.length !== 2 ? 0 + str : str;
                SRTlib.send('{"type":"FUNCTIONEND","function":"pad","paramsNumber":1},');

      }
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###235"},');

    }, {}],
    219: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###236","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function has(object, key) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###76","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###76"},');

        return Object.prototype.hasOwnProperty.call(object, key);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###76"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###236"},');

    }, {}],
    220: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###237","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function isDOMElement(obj) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###77","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###77"},');

        return obj && typeof obj === 'object' && obj.nodeType === Node.ELEMENT_NODE;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###77"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###237"},');

    }, {}],
    221: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###238","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function isDragDropSupported() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###78","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        var div = document.createElement('div');
        if (!(('draggable' in div)) || !(('ondragstart' in div) && ('ondrop' in div))) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###78"},');

          return false;
        }
        if (!(('FormData' in window))) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###78"},');

          return false;
        }
        if (!(('FileReader' in window))) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###78"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###78"},');

        return true;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###78"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###238"},');

    }, {}],
    222: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###239","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function isNetworkError(xhr) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isNetworkError","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!xhr) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"isNetworkError"},');

          return false;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"isNetworkError"},');

        return xhr.readyState !== 0 && xhr.readyState !== 4 || xhr.status === 0;
                SRTlib.send('{"type":"FUNCTIONEND","function":"isNetworkError","paramsNumber":1},');

      }
      module.exports = isNetworkError;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###239"},');

    }, {}],
    223: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###240","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function isObjectURL(url) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###79","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###79"},');

        return url.indexOf('blob:') === 0;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###79"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###240"},');

    }, {}],
    224: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###241","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function isPreviewSupported(fileType) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###80","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (!fileType) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###80"},');

          return false;
        }
        var fileTypeSpecific = fileType.split('/')[1];
        if ((/^(jpe?g|gif|png|svg|svg\+xml|bmp|webp)$/).test(fileTypeSpecific)) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###80"},');

          return true;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###80"},');

        return false;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###80"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###241"},');

    }, {}],
    225: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###242","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        md: 'text/markdown',
        markdown: 'text/markdown',
        mp4: 'video/mp4',
        mp3: 'audio/mp3',
        svg: 'image/svg+xml',
        jpg: 'image/jpeg',
        png: 'image/png',
        gif: 'image/gif',
        heic: 'image/heic',
        heif: 'image/heif',
        yaml: 'text/yaml',
        yml: 'text/yaml',
        csv: 'text/csv',
        tsv: 'text/tab-separated-values',
        tab: 'text/tab-separated-values',
        avi: 'video/x-msvideo',
        mks: 'video/x-matroska',
        mkv: 'video/x-matroska',
        mov: 'video/quicktime',
        doc: 'application/msword',
        docm: 'application/vnd.ms-word.document.macroenabled.12',
        docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        dot: 'application/msword',
        dotm: 'application/vnd.ms-word.template.macroenabled.12',
        dotx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.template',
        xla: 'application/vnd.ms-excel',
        xlam: 'application/vnd.ms-excel.addin.macroenabled.12',
        xlc: 'application/vnd.ms-excel',
        xlf: 'application/x-xliff+xml',
        xlm: 'application/vnd.ms-excel',
        xls: 'application/vnd.ms-excel',
        xlsb: 'application/vnd.ms-excel.sheet.binary.macroenabled.12',
        xlsm: 'application/vnd.ms-excel.sheet.macroenabled.12',
        xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
        xlt: 'application/vnd.ms-excel',
        xltm: 'application/vnd.ms-excel.template.macroenabled.12',
        xltx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.template',
        xlw: 'application/vnd.ms-excel',
        txt: 'text/plain',
        text: 'text/plain',
        conf: 'text/plain',
        log: 'text/plain',
        pdf: 'application/pdf'
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###242"},');

    }, {}],
    226: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###243","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var secondsToTime = require('./secondsToTime');
      module.exports = function prettyETA(seconds) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###81","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var time = secondsToTime(seconds);
        var hoursStr = time.hours ? time.hours + 'h ' : '';
        var minutesVal = time.hours ? ('0' + time.minutes).substr(-2) : time.minutes;
        var minutesStr = minutesVal ? minutesVal + 'm' : '';
        var secondsVal = minutesVal ? ('0' + time.seconds).substr(-2) : time.seconds;
        var secondsStr = time.hours ? '' : minutesVal ? ' ' + secondsVal + 's' : secondsVal + 's';
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###81"},');

        return "" + hoursStr + minutesStr + secondsStr;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###81"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###243"},');

    }, {
      "./secondsToTime": 227
    }],
    227: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###244","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function secondsToTime(rawSeconds) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###82","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var hours = Math.floor(rawSeconds / 3600) % 24;
        var minutes = Math.floor(rawSeconds / 60) % 60;
        var seconds = Math.floor(rawSeconds % 60);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###82"},');

        return {
          hours: hours,
          minutes: minutes,
          seconds: seconds
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###82"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###244"},');

    }, {}],
    228: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###245","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function settle(promises) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###83","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var resolutions = [];
        var rejections = [];
        function resolved(value) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"resolved","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          resolutions.push(value);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"resolved","paramsNumber":1},');

        }
        function rejected(error) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"rejected","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          rejections.push(error);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"rejected","paramsNumber":1},');

        }
        var wait = Promise.all(promises.map(function (promise) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.settle.wait.Promise.all.promises.map","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.settle.wait.Promise.all.promises.map"},');

          return promise.then(resolved, rejected);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.settle.wait.Promise.all.promises.map"},');

        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###83"},');

        return wait.then(function () {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports.settle.ReturnStatement.wait.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.settle.ReturnStatement.wait.then"},');

          return {
            successful: resolutions,
            failed: rejections
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports.settle.ReturnStatement.wait.then"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###83"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###245"},');

    }, {}],
    229: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###246","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function toArray(list) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###84","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###84"},');

        return Array.prototype.slice.call(list || [], 0);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###84"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###246"},');

    }, {}],
    230: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###247","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###85","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###85"},');

        return h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          fill: "#0097DC",
          width: "66",
          height: "55",
          viewBox: "0 0 66 55"
        }, h("path", {
          d: "M57.3 8.433c4.59 0 8.1 3.51 8.1 8.1v29.7c0 4.59-3.51 8.1-8.1 8.1H8.7c-4.59 0-8.1-3.51-8.1-8.1v-29.7c0-4.59 3.51-8.1 8.1-8.1h9.45l4.59-7.02c.54-.54 1.35-1.08 2.16-1.08h16.2c.81 0 1.62.54 2.16 1.08l4.59 7.02h9.45zM33 14.64c-8.62 0-15.393 6.773-15.393 15.393 0 8.62 6.773 15.393 15.393 15.393 8.62 0 15.393-6.773 15.393-15.393 0-8.62-6.773-15.393-15.393-15.393zM33 40c-5.648 0-9.966-4.319-9.966-9.967 0-5.647 4.318-9.966 9.966-9.966s9.966 4.319 9.966 9.966C42.966 35.681 38.648 40 33 40z",
          "fill-rule": "evenodd"
        }));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###85"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###247"},');

    }, {
      "preact": 51
    }],
    231: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###248","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('preact'), h = _require.h, Component = _require.Component;
      var SnapshotButton = require('./SnapshotButton');
      var RecordButton = require('./RecordButton');
      var RecordingLength = require('./RecordingLength');
      function isModeAvailable(modes, mode) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isModeAvailable","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"isModeAvailable"},');

        return modes.indexOf(mode) !== -1;
                SRTlib.send('{"type":"FUNCTIONEND","function":"isModeAvailable","paramsNumber":2},');

      }
      var CameraScreen = (function (_Component) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CameraScreen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(CameraScreen, _Component);
        function CameraScreen() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"CameraScreen","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"CameraScreen"},');

          return _Component.apply(this, arguments) || this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"CameraScreen","paramsNumber":0},');

        }
        var _proto = CameraScreen.prototype;
        _proto.componentDidMount = function componentDidMount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CameraScreen._proto.componentDidMount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.props.onFocus();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CameraScreen._proto.componentDidMount"},');

        };
        _proto.componentWillUnmount = function componentWillUnmount() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CameraScreen._proto.componentWillUnmount","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.props.onStop();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CameraScreen._proto.componentWillUnmount"},');

        };
        _proto.render = function render() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.CameraScreen._proto.render","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var shouldShowRecordButton = this.props.supportsRecording && (isModeAvailable(this.props.modes, 'video-only') || isModeAvailable(this.props.modes, 'audio-only') || isModeAvailable(this.props.modes, 'video-audio'));
          var shouldShowSnapshotButton = isModeAvailable(this.props.modes, 'picture');
          var shouldShowRecordingLength = this.props.supportsRecording && this.props.showRecordingLength;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CameraScreen._proto.render"},');

          return h("div", {
            class: "uppy uppy-Webcam-container"
          }, h("div", {
            class: "uppy-Webcam-videoContainer"
          }, h("video", {
            class: "uppy-Webcam-video  " + (this.props.mirror ? 'uppy-Webcam-video--mirrored' : ''),
            autoplay: true,
            muted: true,
            playsinline: true,
            srcObject: this.props.src || ''
          })), h("div", {
            class: "uppy-Webcam-buttonContainer"
          }, shouldShowRecordingLength ? RecordingLength(this.props) : null, ' ', shouldShowSnapshotButton ? SnapshotButton(this.props) : null, ' ', shouldShowRecordButton ? RecordButton(this.props) : null));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CameraScreen._proto.render"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CameraScreen"},');

        return CameraScreen;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.CameraScreen"},');

      })(Component);
      module.exports = CameraScreen;
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###248"},');

    }, {
      "./RecordButton": 233,
      "./RecordingLength": 234,
      "./SnapshotButton": 235,
      "preact": 51
    }],
    232: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###249","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      module.exports = function (props) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###86","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###86"},');

        return h("div", {
          class: "uppy-Webcam-permissons"
        }, h("div", {
          class: "uppy-Webcam-permissonsIcon"
        }, props.icon()), h("h1", {
          class: "uppy-Webcam-title"
        }, props.hasCamera ? props.i18n('allowAccessTitle') : props.i18n('noCameraTitle')), h("p", null, props.hasCamera ? props.i18n('allowAccessDescription') : props.i18n('noCameraDescription')));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###86"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###249"},');

    }, {
      "preact": 51
    }],
    233: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###250","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      module.exports = function RecordButton(_ref) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###87","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var recording = _ref.recording, onStartRecording = _ref.onStartRecording, onStopRecording = _ref.onStopRecording, i18n = _ref.i18n;
        if (recording) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###87"},');

          return h("button", {
            class: "uppy-u-reset uppy-c-btn uppy-Webcam-button uppy-Webcam-button--video",
            type: "button",
            title: i18n('stopRecording'),
            "aria-label": i18n('stopRecording'),
            onclick: onStopRecording,
            "data-uppy-super-focusable": true
          }, h("svg", {
            "aria-hidden": "true",
            focusable: "false",
            class: "UppyIcon",
            width: "100",
            height: "100",
            viewBox: "0 0 100 100"
          }, h("rect", {
            x: "15",
            y: "15",
            width: "70",
            height: "70"
          })));
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###87"},');

        return h("button", {
          class: "uppy-u-reset uppy-c-btn uppy-Webcam-button uppy-Webcam-button--video",
          type: "button",
          title: i18n('startRecording'),
          "aria-label": i18n('startRecording'),
          onclick: onStartRecording,
          "data-uppy-super-focusable": true
        }, h("svg", {
          "aria-hidden": "true",
          focusable: "false",
          class: "UppyIcon",
          width: "100",
          height: "100",
          viewBox: "0 0 100 100"
        }, h("circle", {
          cx: "50",
          cy: "50",
          r: "40"
        })));
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###87"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###250"},');

    }, {
      "preact": 51
    }],
    234: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###251","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var formatSeconds = require('./formatSeconds');
      module.exports = function RecordingLength(_ref) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###88","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var recordingLengthSeconds = _ref.recordingLengthSeconds, i18n = _ref.i18n;
        var formattedRecordingLengthSeconds = formatSeconds(recordingLengthSeconds);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###88"},');

        return h("div", {
          class: "uppy-Webcam-recordingLength",
          "aria-label": i18n('recordingLength', {
            recording_length: formattedRecordingLengthSeconds
          })
        }, formattedRecordingLengthSeconds);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###88"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###251"},');

    }, {
      "./formatSeconds": 236,
      "preact": 51
    }],
    235: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###252","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _require = require('preact'), h = _require.h;
      var CameraIcon = require('./CameraIcon');
      module.exports = function (_ref) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###89","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        var onSnapshot = _ref.onSnapshot, i18n = _ref.i18n;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###89"},');

        return h("button", {
          class: "uppy-u-reset uppy-c-btn uppy-Webcam-button uppy-Webcam-button--picture",
          type: "button",
          title: i18n('takePicture'),
          "aria-label": i18n('takePicture'),
          onclick: onSnapshot,
          "data-uppy-super-focusable": true
        }, CameraIcon());
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###89"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###252"},');

    }, {
      "./CameraIcon": 230,
      "preact": 51
    }],
    236: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###253","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function formatSeconds(seconds) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###90","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###90"},');

        return Math.floor(seconds / 60) + ":" + String(seconds % 60).padStart(2, 0);
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###90"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###253"},');

    }, {}],
    237: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###254","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      var _class, _temp;
      function _extends() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_extends","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        _extends = Object.assign || (function (target) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_extends###32","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###32"},');

          return target;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_extends###32"},');

        });
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends"},');

        return _extends.apply(this, arguments);
                SRTlib.send('{"type":"FUNCTIONEND","function":"_extends","paramsNumber":0},');

      }
      function _assertThisInitialized(self) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_assertThisInitialized","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (self === void 0) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized"},');

        return self;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_assertThisInitialized","paramsNumber":1},');

      }
      function _inheritsLoose(subClass, superClass) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"_inheritsLoose","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
                SRTlib.send('{"type":"FUNCTIONEND","function":"_inheritsLoose","paramsNumber":2},');

      }
      var _require = require('preact'), h = _require.h;
      var _require2 = require('@uppy/core'), Plugin = _require2.Plugin;
      var Translator = require('@uppy/utils/lib/Translator');
      var getFileTypeExtension = require('@uppy/utils/lib/getFileTypeExtension');
      var mimeTypes = require('@uppy/utils/lib/mimeTypes');
      var canvasToBlob = require('@uppy/utils/lib/canvasToBlob');
      var supportsMediaRecorder = require('./supportsMediaRecorder');
      var CameraIcon = require('./CameraIcon');
      var CameraScreen = require('./CameraScreen');
      var PermissionsScreen = require('./PermissionsScreen');
      function toMimeType(fileType) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"toMimeType","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        if (fileType[0] === '.') {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"toMimeType"},');

          return mimeTypes[fileType.slice(1)];
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"toMimeType"},');

        return fileType;
                SRTlib.send('{"type":"FUNCTIONEND","function":"toMimeType","paramsNumber":1},');

      }
      function isVideoMimeType(mimeType) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isVideoMimeType","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"isVideoMimeType"},');

        return (/^video\/[^*]+$/).test(mimeType);
                SRTlib.send('{"type":"FUNCTIONEND","function":"isVideoMimeType","paramsNumber":1},');

      }
      function isImageMimeType(mimeType) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"isImageMimeType","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"isImageMimeType"},');

        return (/^image\/[^*]+$/).test(mimeType);
                SRTlib.send('{"type":"FUNCTIONEND","function":"isImageMimeType","paramsNumber":1},');

      }
      function getMediaDevices() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"getMediaDevices","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getMediaDevices"},');

          return navigator.mediaDevices;
        }
        var _getUserMedia = navigator.mozGetUserMedia || navigator.webkitGetUserMedia;
        if (!_getUserMedia) {
                    SRTlib.send('{"type":"FUNCTIONEND","function":"getMediaDevices"},');

          return null;
        }
                SRTlib.send('{"type":"FUNCTIONEND","function":"getMediaDevices"},');

        return {
          getUserMedia: function getUserMedia(opts) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.getUserMedia","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.getUserMedia"},');

            return new Promise(function (resolve, reject) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.getUserMedia.getUserMedia.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

              _getUserMedia.call(navigator, opts, resolve, reject);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.getUserMedia.getUserMedia.ReturnStatement.NewExpression"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.getUserMedia"},');

          }
        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"getMediaDevices","paramsNumber":0},');

      }
      module.exports = (_temp = _class = (function (_Plugin) {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class###16","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

        _inheritsLoose(Webcam, _Plugin);
        function Webcam(uppy, opts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":false,"function":"Webcam","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

          var _this;
          _this = _Plugin.call(this, uppy, opts) || this;
          _this.mediaDevices = getMediaDevices();
          _this.supportsUserMedia = !!_this.mediaDevices;
          _this.protocol = location.protocol.match(/https/i) ? 'https' : 'http';
          _this.id = _this.opts.id || 'Webcam';
          _this.title = _this.opts.title || 'Camera';
          _this.type = 'acquirer';
          _this.icon = function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"_this.icon###7","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###7"},');

            return h("svg", {
              "aria-hidden": "true",
              focusable: "false",
              width: "32",
              height: "32",
              viewBox: "0 0 32 32",
              xmlns: "http://www.w3.org/2000/svg"
            }, h("g", {
              fill: "none",
              "fill-rule": "evenodd"
            }, h("rect", {
              fill: "#03BFEF",
              width: "32",
              height: "32",
              rx: "16"
            }), h("path", {
              d: "M22 11c1.133 0 2 .867 2 2v7.333c0 1.134-.867 2-2 2H10c-1.133 0-2-.866-2-2V13c0-1.133.867-2 2-2h2.333l1.134-1.733C13.6 9.133 13.8 9 14 9h4c.2 0 .4.133.533.267L19.667 11H22zm-6 1.533a3.764 3.764 0 0 0-3.8 3.8c0 2.129 1.672 3.801 3.8 3.801s3.8-1.672 3.8-3.8c0-2.13-1.672-3.801-3.8-3.801zm0 6.261c-1.395 0-2.46-1.066-2.46-2.46 0-1.395 1.065-2.461 2.46-2.461s2.46 1.066 2.46 2.46c0 1.395-1.065 2.461-2.46 2.461z",
              fill: "#FFF",
              "fill-rule": "nonzero"
            })));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"_this.icon###7"},');

          };
          _this.defaultLocale = {
            strings: {
              smile: 'Smile!',
              takePicture: 'Take a picture',
              startRecording: 'Begin video recording',
              stopRecording: 'Stop video recording',
              allowAccessTitle: 'Please allow access to your camera',
              allowAccessDescription: 'In order to take pictures or record video with your camera, please allow camera access for this site.',
              noCameraTitle: 'Camera Not Available',
              noCameraDescription: 'In order to take pictures or record video, please connect a camera device',
              recordingStoppedMaxSize: 'Recording stopped because the file size is about to exceed the limit',
              recordingLength: 'Recording length %{recording_length}'
            }
          };
          var defaultOptions = {
            onBeforeSnapshot: function onBeforeSnapshot() {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"defaultOptions.onBeforeSnapshot","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"defaultOptions.onBeforeSnapshot"},');

              return Promise.resolve();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"defaultOptions.onBeforeSnapshot"},');

            },
            countdown: false,
            modes: ['video-audio', 'video-only', 'audio-only', 'picture'],
            mirror: true,
            facingMode: 'user',
            preferredImageMimeType: null,
            preferredVideoMimeType: null,
            showRecordingLength: false
          };
          _this.opts = _extends({}, defaultOptions, {}, opts);
          _this.i18nInit();
          _this.install = _this.install.bind(_assertThisInitialized(_this));
          _this.setPluginState = _this.setPluginState.bind(_assertThisInitialized(_this));
          _this.render = _this.render.bind(_assertThisInitialized(_this));
          _this._start = _this._start.bind(_assertThisInitialized(_this));
          _this._stop = _this._stop.bind(_assertThisInitialized(_this));
          _this._takeSnapshot = _this._takeSnapshot.bind(_assertThisInitialized(_this));
          _this._startRecording = _this._startRecording.bind(_assertThisInitialized(_this));
          _this._stopRecording = _this._stopRecording.bind(_assertThisInitialized(_this));
          _this._oneTwoThreeSmile = _this._oneTwoThreeSmile.bind(_assertThisInitialized(_this));
          _this._focus = _this._focus.bind(_assertThisInitialized(_this));
          _this.webcamActive = false;
          if (_this.opts.countdown) {
            _this.opts.onBeforeSnapshot = _this._oneTwoThreeSmile;
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Webcam"},');

          return _this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"Webcam","paramsNumber":2},');

        }
        var _proto = Webcam.prototype;
        _proto.setOptions = function setOptions(newOpts) {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.setOptions###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

          _Plugin.prototype.setOptions.call(this, newOpts);
          this.i18nInit();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.setOptions###5"},');

        };
        _proto.i18nInit = function i18nInit() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.i18nInit###5","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale]);
          this.i18n = this.translator.translate.bind(this.translator);
          this.i18nArray = this.translator.translateArray.bind(this.translator);
          this.setPluginState();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.i18nInit###5"},');

        };
        _proto.hasCameraCheck = function hasCameraCheck() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (!this.mediaDevices) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck"},');

            return Promise.resolve(false);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck"},');

          return this.mediaDevices.enumerateDevices().then(function (devices) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck.hasCameraCheck.ReturnStatement.mediaDevices.enumerateDevices.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck.hasCameraCheck.ReturnStatement.mediaDevices.enumerateDevices.then"},');

            return devices.some(function (device) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck.hasCameraCheck.ReturnStatement.mediaDevices.enumerateDevices.then.ReturnStatement.devices.some","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck.hasCameraCheck.ReturnStatement.mediaDevices.enumerateDevices.then.ReturnStatement.devices.some"},');

              return device.kind === 'videoinput';
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck.hasCameraCheck.ReturnStatement.mediaDevices.enumerateDevices.then.ReturnStatement.devices.some"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck.hasCameraCheck.ReturnStatement.mediaDevices.enumerateDevices.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.hasCameraCheck"},');

        };
        _proto.getConstraints = function getConstraints() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getConstraints","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var acceptsAudio = this.opts.modes.indexOf('video-audio') !== -1 || this.opts.modes.indexOf('audio-only') !== -1;
          var acceptsVideo = this.opts.modes.indexOf('video-audio') !== -1 || this.opts.modes.indexOf('video-only') !== -1 || this.opts.modes.indexOf('picture') !== -1;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getConstraints"},');

          return {
            audio: acceptsAudio,
            video: acceptsVideo ? {
              facingMode: this.opts.facingMode
            } : false
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getConstraints"},');

        };
        _proto._start = function _start() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._start","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this2 = this;
          if (!this.supportsUserMedia) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._start"},');

            return Promise.reject(new Error('Webcam access not supported'));
          }
          this.webcamActive = true;
          var constraints = this.getConstraints();
          this.hasCameraCheck().then(function (hasCamera) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._start._start.hasCameraCheck.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this2.setPluginState({
              hasCamera: hasCamera
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._start._start.hasCameraCheck.then"},');

            return _this2.mediaDevices.getUserMedia(constraints).then(function (stream) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._start._start.hasCameraCheck.then.ReturnStatement._this2.mediaDevices.getUserMedia.then.catch._this2.mediaDevices.getUserMedia.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this2.stream = stream;
              _this2.setPluginState({
                cameraReady: true
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._start._start.hasCameraCheck.then.ReturnStatement._this2.mediaDevices.getUserMedia.then.catch._this2.mediaDevices.getUserMedia.then"},');

            }).catch(function (err) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._start._start.hasCameraCheck.then.ReturnStatement._this2.mediaDevices.getUserMedia.then.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

              _this2.setPluginState({
                cameraError: err
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._start._start.hasCameraCheck.then.ReturnStatement._this2.mediaDevices.getUserMedia.then.catch"},');

            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._start._start.hasCameraCheck.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._start"},');

        };
        _proto._getMediaRecorderOptions = function _getMediaRecorderOptions() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getMediaRecorderOptions","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var options = {};
          if (MediaRecorder.isTypeSupported) {
            var restrictions = this.uppy.opts.restrictions;
            var preferredVideoMimeTypes = [];
            if (this.opts.preferredVideoMimeType) {
              preferredVideoMimeTypes = [this.opts.preferredVideoMimeType];
            } else if (restrictions.allowedFileTypes) {
              preferredVideoMimeTypes = restrictions.allowedFileTypes.map(toMimeType).filter(isVideoMimeType);
            }
            var acceptableMimeTypes = preferredVideoMimeTypes.filter(function (candidateType) {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getMediaRecorderOptions._getMediaRecorderOptions.acceptableMimeTypes.preferredVideoMimeTypes.filter","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getMediaRecorderOptions._getMediaRecorderOptions.acceptableMimeTypes.preferredVideoMimeTypes.filter"},');

              return MediaRecorder.isTypeSupported(candidateType) && getFileTypeExtension(candidateType);
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getMediaRecorderOptions._getMediaRecorderOptions.acceptableMimeTypes.preferredVideoMimeTypes.filter"},');

            });
            if (acceptableMimeTypes.length > 0) {
              options.mimeType = acceptableMimeTypes[0];
            }
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getMediaRecorderOptions"},');

          return options;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getMediaRecorderOptions"},');

        };
        _proto._startRecording = function _startRecording() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._startRecording","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this3 = this;
          this.recorder = new MediaRecorder(this.stream, this._getMediaRecorderOptions());
          this.recordingChunks = [];
          var stoppingBecauseOfMaxSize = false;
          this.recorder.addEventListener('dataavailable', function (event) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._startRecording._startRecording.recorder.addEventListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this3.recordingChunks.push(event.data);
            var restrictions = _this3.uppy.opts.restrictions;
            if (_this3.recordingChunks.length > 1 && restrictions.maxFileSize != null && !stoppingBecauseOfMaxSize) {
              var totalSize = _this3.recordingChunks.reduce(function (acc, chunk) {
                                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._startRecording._startRecording.recorder.addEventListener.totalSize._this3.recordingChunks.reduce","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._startRecording._startRecording.recorder.addEventListener.totalSize._this3.recordingChunks.reduce"},');

                return acc + chunk.size;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._startRecording._startRecording.recorder.addEventListener.totalSize._this3.recordingChunks.reduce"},');

              }, 0);
              var averageChunkSize = (totalSize - _this3.recordingChunks[0].size) / (_this3.recordingChunks.length - 1);
              var expectedEndChunkSize = averageChunkSize * 3;
              var maxSize = Math.max(0, restrictions.maxFileSize - expectedEndChunkSize);
              if (totalSize > maxSize) {
                stoppingBecauseOfMaxSize = true;
                _this3.uppy.info(_this3.i18n('recordingStoppedMaxSize'), 'warning', 4000);
                _this3._stopRecording();
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._startRecording._startRecording.recorder.addEventListener"},');

          });
          this.recorder.start(500);
          if (this.opts.showRecordingLength) {
            this.recordingLengthTimer = setInterval(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._startRecording._startRecording.recordingLengthTimer.setInterval","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              var currentRecordingLength = _this3.getPluginState().recordingLengthSeconds;
              _this3.setPluginState({
                recordingLengthSeconds: currentRecordingLength + 1
              });
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._startRecording._startRecording.recordingLengthTimer.setInterval"},');

            }, 1000);
          }
          this.setPluginState({
            isRecording: true
          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._startRecording"},');

        };
        _proto._stopRecording = function _stopRecording() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stopRecording","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this4 = this;
          var stopped = new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.stopped.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            _this4.recorder.addEventListener('stop', function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.stopped.NewExpression._this4.recorder.addEventListener","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              resolve();
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.stopped.NewExpression._this4.recorder.addEventListener"},');

            });
            _this4.recorder.stop();
            if (_this4.opts.showRecordingLength) {
              clearInterval(_this4.recordingLengthTimer);
              _this4.setPluginState({
                recordingLengthSeconds: 0
              });
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.stopped.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording"},');

          return stopped.then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then.stopped.then.then.stopped.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this4.setPluginState({
              isRecording: false
            });
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then.stopped.then.then.stopped.then"},');

            return _this4.getVideo();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then.stopped.then.then.stopped.then"},');

          }).then(function (file) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then.stopped.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            try {
              _this4.uppy.addFile(file);
            } catch (err) {
              if (!err.isRestriction) {
                _this4.uppy.log(err);
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then.stopped.then.then"},');

          }).then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this4.recordingChunks = null;
            _this4.recorder = null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then"},');

          }, function (error) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this4.recordingChunks = null;
            _this4.recorder = null;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then###2"},');

            throw error;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording._stopRecording.ReturnStatement.stopped.then.then.then###2"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stopRecording"},');

        };
        _proto._stop = function _stop() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stop","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.stream.getAudioTracks().forEach(function (track) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stop._stop.stream.getAudioTracks.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            track.stop();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stop._stop.stream.getAudioTracks.forEach"},');

          });
          this.stream.getVideoTracks().forEach(function (track) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._stop._stop.stream.getVideoTracks.forEach","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            track.stop();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stop._stop.stream.getVideoTracks.forEach"},');

          });
          this.webcamActive = false;
          this.stream = null;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._stop"},');

        };
        _proto._getVideoElement = function _getVideoElement() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getVideoElement","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getVideoElement"},');

          return this.el.querySelector('.uppy-Webcam-video');
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getVideoElement"},');

        };
        _proto._oneTwoThreeSmile = function _oneTwoThreeSmile() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this5 = this;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile"},');

          return new Promise(function (resolve, reject) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile._oneTwoThreeSmile.ReturnStatement.NewExpression","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":2},`);

            var count = _this5.opts.countdown;
            var countDown = setInterval(function () {
                            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile._oneTwoThreeSmile.ReturnStatement.NewExpression.countDown.setInterval","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

              if (!_this5.webcamActive) {
                clearInterval(countDown);
                _this5.captureInProgress = false;
                                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile._oneTwoThreeSmile.ReturnStatement.NewExpression.countDown.setInterval"},');

                return reject(new Error('Webcam is not active'));
              }
              if (count > 0) {
                _this5.uppy.info(count + "...", 'warning', 800);
                count--;
              } else {
                clearInterval(countDown);
                _this5.uppy.info(_this5.i18n('smile'), 'success', 1500);
                setTimeout(function () {
                                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile._oneTwoThreeSmile.ReturnStatement.NewExpression.countDown.setInterval.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile._oneTwoThreeSmile.ReturnStatement.NewExpression.countDown.setInterval.setTimeout"},');

                  return resolve();
                                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile._oneTwoThreeSmile.ReturnStatement.NewExpression.countDown.setInterval.setTimeout"},');

                }, 1500);
              }
                            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile._oneTwoThreeSmile.ReturnStatement.NewExpression.countDown.setInterval"},');

            }, 1000);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile._oneTwoThreeSmile.ReturnStatement.NewExpression"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._oneTwoThreeSmile"},');

        };
        _proto._takeSnapshot = function _takeSnapshot() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this6 = this;
          if (this.captureInProgress) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot"},');

            return;
          }
          this.captureInProgress = true;
          this.opts.onBeforeSnapshot().catch(function (err) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then.opts.onBeforeSnapshot.catch.then.opts.onBeforeSnapshot.catch","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            var message = typeof err === 'object' ? err.message : err;
            _this6.uppy.info(message, 'error', 5000);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then.opts.onBeforeSnapshot.catch.then.opts.onBeforeSnapshot.catch"},');

            return Promise.reject(new Error("onBeforeSnapshot: " + message));
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then.opts.onBeforeSnapshot.catch.then.opts.onBeforeSnapshot.catch"},');

          }).then(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then.opts.onBeforeSnapshot.catch.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then.opts.onBeforeSnapshot.catch.then"},');

            return _this6._getImage();
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then.opts.onBeforeSnapshot.catch.then"},');

          }).then(function (tagFile) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this6.captureInProgress = false;
            try {
              _this6.uppy.addFile(tagFile);
            } catch (err) {
              if (!err.isRestriction) {
                _this6.uppy.log(err);
              }
            }
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then"},');

          }, function (error) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then###2","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

            _this6.captureInProgress = false;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then###2"},');

            throw error;
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot._takeSnapshot.opts.onBeforeSnapshot.catch.then.then###2"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._takeSnapshot"},');

        };
        _proto._getImage = function _getImage() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getImage","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this7 = this;
          var video = this._getVideoElement();
          if (!video) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getImage"},');

            return Promise.reject(new Error('No video element found, likely due to the Webcam tab being closed.'));
          }
          var width = video.videoWidth;
          var height = video.videoHeight;
          var canvas = document.createElement('canvas');
          canvas.width = width;
          canvas.height = height;
          var ctx = canvas.getContext('2d');
          ctx.drawImage(video, 0, 0);
          var restrictions = this.uppy.opts.restrictions;
          var preferredImageMimeTypes = [];
          if (this.opts.preferredImageMimeType) {
            preferredImageMimeTypes = [this.opts.preferredImageMimeType];
          } else if (restrictions.allowedFileTypes) {
            preferredImageMimeTypes = restrictions.allowedFileTypes.map(toMimeType).filter(isImageMimeType);
          }
          var mimeType = preferredImageMimeTypes[0] || 'image/jpeg';
          var ext = getFileTypeExtension(mimeType) || 'jpg';
          var name = "cam-" + Date.now() + "." + ext;
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getImage"},');

          return canvasToBlob(canvas, mimeType).then(function (blob) {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._getImage._getImage.ReturnStatement.canvasToBlob.then","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":1},`);

                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getImage._getImage.ReturnStatement.canvasToBlob.then"},');

            return {
              source: _this7.id,
              name: name,
              data: new Blob([blob], {
                type: mimeType
              }),
              type: mimeType
            };
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getImage._getImage.ReturnStatement.canvasToBlob.then"},');

          });
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._getImage"},');

        };
        _proto.getVideo = function getVideo() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.getVideo","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var mimeType = this.recordingChunks[0].type;
          var fileExtension = getFileTypeExtension(mimeType);
          if (!fileExtension) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getVideo"},');

            return Promise.reject(new Error("Could not retrieve recording: Unsupported media type \"" + mimeType + "\""));
          }
          var name = "webcam-" + Date.now() + "." + fileExtension;
          var blob = new Blob(this.recordingChunks, {
            type: mimeType
          });
          var file = {
            source: this.id,
            name: name,
            data: new Blob([blob], {
              type: mimeType
            }),
            type: mimeType
          };
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getVideo"},');

          return Promise.resolve(file);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.getVideo"},');

        };
        _proto._focus = function _focus() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._focus","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          var _this8 = this;
          if (!this.opts.countdown) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._focus"},');

            return;
          }
          setTimeout(function () {
                        SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto._focus._focus.setTimeout","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

            _this8.uppy.info(_this8.i18n('smile'), 'success', 1500);
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._focus._focus.setTimeout"},');

          }, 1000);
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto._focus"},');

        };
        _proto.render = function render() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.render###8","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (!this.webcamActive) {
            this._start();
          }
          var webcamState = this.getPluginState();
          if (!webcamState.cameraReady || !webcamState.hasCamera) {
                        SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###8"},');

            return h(PermissionsScreen, {
              icon: CameraIcon,
              i18n: this.i18n,
              hasCamera: webcamState.hasCamera
            });
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###8"},');

          return h(CameraScreen, _extends({}, webcamState, {
            onSnapshot: this._takeSnapshot,
            onStartRecording: this._startRecording,
            onStopRecording: this._stopRecording,
            onFocus: this._focus,
            onStop: this._stop,
            i18n: this.i18n,
            modes: this.opts.modes,
            showRecordingLength: this.opts.showRecordingLength,
            supportsRecording: supportsMediaRecorder(),
            recording: webcamState.isRecording,
            mirror: this.opts.mirror,
            src: this.stream
          }));
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.render###8"},');

        };
        _proto.install = function install() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.install###13","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          this.setPluginState({
            cameraReady: false,
            recordingLengthSeconds: 0
          });
          var target = this.opts.target;
          if (target) {
            this.mount(target, this);
          }
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.install###13"},');

        };
        _proto.uninstall = function uninstall() {
                    SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports._temp._class._proto.uninstall###12","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

          if (this.stream) {
            this._stop();
          }
          this.unmount();
                    SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class._proto.uninstall###12"},');

        };
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###16"},');

        return Webcam;
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports._temp._class###16"},');

      })(Plugin), _class.VERSION = require('../package.json').version, _temp);
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###254"},');

    }, {
      "../package.json": 239,
      "./CameraIcon": 230,
      "./CameraScreen": 231,
      "./PermissionsScreen": 232,
      "./supportsMediaRecorder": 238,
      "@uppy/core": 97,
      "@uppy/utils/lib/Translator": 200,
      "@uppy/utils/lib/canvasToBlob": 201,
      "@uppy/utils/lib/getFileTypeExtension": 215,
      "@uppy/utils/lib/mimeTypes": 225,
      "preact": 51
    }],
    238: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###255","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = function supportsMediaRecorder() {
                SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement.module.exports###91","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":0},`);

                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###91"},');

        return typeof MediaRecorder === 'function' && !!MediaRecorder.prototype && typeof MediaRecorder.prototype.start === 'function';
                SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement.module.exports###91"},');

      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###255"},');

    }, {}],
    239: [function (require, module, exports) {
            SRTlib.send(`{"type":"FUNCTIONSTART","anonymous":true,"function":"ReturnStatement###256","fileName":"/website/themes/uppy/source/uppy/robodog.js","paramsNumber":3},`);

      module.exports = {
        "name": "@uppy/webcam",
        "description": "Uppy plugin that takes photos or records videos using the device's camera.",
        "version": "1.6.6",
        "license": "MIT",
        "main": "lib/index.js",
        "style": "dist/style.min.css",
        "types": "types/index.d.ts",
        "keywords": ["file uploader", "uppy", "uppy-plugin", "webcam", "picture", "photo", "video", "record", "mediarecorder"],
        "homepage": "https://uppy.io",
        "bugs": {
          "url": "https://github.com/transloadit/uppy/issues"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/transloadit/uppy.git"
        },
        "dependencies": {
          "@uppy/utils": "file:../utils",
          "preact": "8.2.9"
        },
        "peerDependencies": {
          "@uppy/core": "^1.0.0"
        }
      };
            SRTlib.send('{"type":"FUNCTIONEND","function":"ReturnStatement###256"},');

    }, {}]
  }, {}, [156])(156);
    SRTlib.send('{"type":"FUNCTIONEND","function":"emptyKey###3"},');

});
