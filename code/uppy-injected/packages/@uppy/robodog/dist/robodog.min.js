var SRTlib = require('SRT-util');
!(function (e) {
    SRTlib.send(`{ "anonymous": true, "function": "emptyKey", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

  if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
    ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).Robodog = e();
  }
    SRTlib.send("]},");

})(function () {
    SRTlib.send(`{ "anonymous": true, "function": "emptyKey36", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

  var define, module, exports, createModuleFactory = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "createModuleFactory", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t;
        SRTlib.send("]},");

    return function (r) {
            SRTlib.send(`{ "anonymous": true, "function": "createModuleFactory.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return (t || e(t = {
        exports: {},
        parent: r
      }, t.exports), t.exports);
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  }, _$lib_56 = createModuleFactory(function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_56.createModuleFactory", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = _$browser_62("socket.io-client");
    e.exports = t = i;
    var n = t.managers = {};
    function i(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      ("object" == typeof e && (t = e, e = void 0), t = t || ({}));
      var i, o = _$url_60(e), s = o.source, a = o.id, u = o.path, l = n[a] && (u in n[a].nsps);
            SRTlib.send("]},");

      return (t.forceNew || t["force new connection"] || !1 === t.multiplex || l ? (r("ignoring socket cache for %s", s), i = _$manager_57(s, t)) : (n[a] || (r("new io instance for %s", s), n[a] = _$manager_57(s, t)), i = n[a]), o.query && !t.query && (t.query = o.query), i.socket(o.path, t));
            SRTlib.send("]},");

    }
    (t.protocol = _$socketIoParser_66.protocol, t.connect = i, t.Manager = _$manager_57, t.Socket = _$socket_59);
        SRTlib.send("]},");

  }), _$empty_7 = createModuleFactory(function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$empty_7.createModuleFactory", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

  }), _$buffer_8 = createModuleFactory(function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      "use strict";
      (t.Buffer = e, t.INSPECT_MAX_BYTES = 50);
      var r = 2147483647;
      function n(t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (t > r) throw new RangeError('The value "' + t + '" is invalid for option "size"');
        var n = new Uint8Array(t);
                SRTlib.send("]},");

        return (n.__proto__ = e.prototype, n);
                SRTlib.send("]},");

      }
      function e(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        if ("number" == typeof e) {
          if ("string" == typeof t) throw new TypeError('The "string" argument must be of type string. Received type number');
                    SRTlib.send("]},");

          return s(e);
        }
                SRTlib.send("]},");

        return i(e, t, r);
                SRTlib.send("]},");

      }
      function i(t, r, i) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        if ("string" == typeof t) {
                    SRTlib.send("]},");

          return (function (t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            if (("string" == typeof r && "" !== r || (r = "utf8"), !e.isEncoding(r))) throw new TypeError("Unknown encoding: " + r);
            var i = 0 | l(t, r), o = n(i), s = o.write(t, r);
                        SRTlib.send("]},");

            return (s !== i && (o = o.slice(0, s)), o);
                        SRTlib.send("]},");

          })(t, r);
        }
        if (ArrayBuffer.isView(t)) {
                    SRTlib.send("]},");

          return a(t);
        }
        if (null == t) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t);
        if (B(t, ArrayBuffer) || t && B(t.buffer, ArrayBuffer)) {
                    SRTlib.send("]},");

          return (function (t, r, n) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            if (r < 0 || t.byteLength < r) throw new RangeError('"offset" is outside of buffer bounds');
            if (t.byteLength < r + (n || 0)) throw new RangeError('"length" is outside of buffer bounds');
            var i;
                        SRTlib.send("]},");

            return ((i = void 0 === r && void 0 === n ? new Uint8Array(t) : void 0 === n ? new Uint8Array(t, r) : new Uint8Array(t, r, n)).__proto__ = e.prototype, i);
                        SRTlib.send("]},");

          })(t, r, i);
        }
        if ("number" == typeof t) throw new TypeError('The "value" argument must not be of type number. Received type number');
        var o = t.valueOf && t.valueOf();
        if (null != o && o !== t) {
                    SRTlib.send("]},");

          return e.from(o, r, i);
        }
        var s = (function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "s", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if (e.isBuffer(t)) {
            var r = 0 | u(t.length), i = n(r);
                        SRTlib.send("]},");

            return 0 === i.length ? i : (t.copy(i, 0, 0, r), i);
          }
                    SRTlib.send("]},");

          return void 0 !== t.length ? "number" != typeof t.length || I(t.length) ? n(0) : a(t) : "Buffer" === t.type && Array.isArray(t.data) ? a(t.data) : void 0;
                    SRTlib.send("]},");

        })(t);
        if (s) {
                    SRTlib.send("]},");

          return s;
        }
        if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t[Symbol.toPrimitive]) {
                    SRTlib.send("]},");

          return e.from(t[Symbol.toPrimitive]("string"), r, i);
        }
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t);
                SRTlib.send("]},");

      }
      function o(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if ("number" != typeof e) throw new TypeError('"size" argument must be of type number');
        if (e < 0) throw new RangeError('The value "' + e + '" is invalid for option "size"');
                SRTlib.send("]},");

      }
      function s(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return (o(e), n(e < 0 ? 0 : 0 | u(e)));
                SRTlib.send("]},");

      }
      function a(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var t = e.length < 0 ? 0 : 0 | u(e.length), r = n(t), i = 0; i < t; i += 1) r[i] = 255 & e[i];
                SRTlib.send("]},");

        return r;
                SRTlib.send("]},");

      }
      function u(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e >= r) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + r.toString(16) + " bytes");
                SRTlib.send("]},");

        return 0 | e;
                SRTlib.send("]},");

      }
      function l(t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (e.isBuffer(t)) {
                    SRTlib.send("]},");

          return t.length;
        }
        if (ArrayBuffer.isView(t) || B(t, ArrayBuffer)) {
                    SRTlib.send("]},");

          return t.byteLength;
        }
        if ("string" != typeof t) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t);
        var n = t.length, i = arguments.length > 2 && !0 === arguments[2];
        if (!i && 0 === n) {
                    SRTlib.send("]},");

          return 0;
        }
        for (var o = !1; ; ) switch (r) {
          case "ascii":
          case "latin1":
          case {
                            SRTlib.send("]},");

              return n;
            }:
            return n;
          case "utf8":
          case {
                            SRTlib.send("]},");

              return x(t).length;
            }:
            return x(t).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case {
                            SRTlib.send("]},");

              return 2 * n;
            }:
            return 2 * n;
          case {
                            SRTlib.send("]},");

              return n >>> 1;
            }:
            return n >>> 1;
          case {
                            SRTlib.send("]},");

              return R(t).length;
            }:
            return R(t).length;
          default:
            if (o) {
                            SRTlib.send("]},");

              return i ? -1 : x(t).length;
            }
            (r = ("" + r).toLowerCase(), o = !0);
        }
                SRTlib.send("]},");

      }
      function c(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n = e[t];
        (e[t] = e[r], e[r] = n);
                SRTlib.send("]},");

      }
      function p(t, r, n, i, o) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

        if (0 === t.length) {
                    SRTlib.send("]},");

          return -1;
        }
        if (("string" == typeof n ? (i = n, n = 0) : n > 2147483647 ? n = 2147483647 : n < -2147483648 && (n = -2147483648), I(n = +n) && (n = o ? 0 : t.length - 1), n < 0 && (n = t.length + n), n >= t.length)) {
          if (o) {
                        SRTlib.send("]},");

            return -1;
          }
          n = t.length - 1;
        } else if (n < 0) {
          if (!o) {
                        SRTlib.send("]},");

            return -1;
          }
          n = 0;
        }
        if (("string" == typeof r && (r = e.from(r, i)), e.isBuffer(r))) {
                    SRTlib.send("]},");

          return 0 === r.length ? -1 : h(t, r, n, i, o);
        }
        if ("number" == typeof r) {
                    SRTlib.send("]},");

          return (r &= 255, "function" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(t, r, n) : Uint8Array.prototype.lastIndexOf.call(t, r, n) : h(t, [r], n, i, o));
        }
        throw new TypeError("val must be string, number or Buffer");
                SRTlib.send("]},");

      }
      function h(e, t, r, n, i) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

        var o, s = 1, a = e.length, u = t.length;
        if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
          if (e.length < 2 || t.length < 2) {
                        SRTlib.send("]},");

            return -1;
          }
          (s = 2, a /= 2, u /= 2, r /= 2);
        }
        function l(e, t) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                    SRTlib.send("]},");

          return 1 === s ? e[t] : e.readUInt16BE(t * s);
                    SRTlib.send("]},");

        }
        if (i) {
          var c = -1;
          for (o = r; o < a; o++) if (l(e, o) === l(t, -1 === c ? 0 : o - c)) {
            if ((-1 === c && (c = o), o - c + 1 === u)) {
                            SRTlib.send("]},");

              return c * s;
            }
          } else (-1 !== c && (o -= o - c), c = -1);
        } else for ((r + u > a && (r = a - u), o = r); o >= 0; o--) {
          for (var p = !0, h = 0; h < u; h++) if (l(e, o + h) !== l(t, h)) {
            p = !1;
            break;
          }
          if (p) {
                        SRTlib.send("]},");

            return o;
          }
        }
                SRTlib.send("]},");

        return -1;
                SRTlib.send("]},");

      }
      function d(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        r = Number(r) || 0;
        var i = e.length - r;
        n ? (n = Number(n)) > i && (n = i) : n = i;
        var o = t.length;
        n > o / 2 && (n = o / 2);
        for (var s = 0; s < n; ++s) {
          var a = parseInt(t.substr(2 * s, 2), 16);
          if (I(a)) {
                        SRTlib.send("]},");

            return s;
          }
          e[r + s] = a;
        }
                SRTlib.send("]},");

        return s;
                SRTlib.send("]},");

      }
      function f(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

                SRTlib.send("]},");

        return U(x(t, e.length - r), e, r, n);
                SRTlib.send("]},");

      }
      function _(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

                SRTlib.send("]},");

        return U((function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.U", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          for (var t = [], r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r));
                    SRTlib.send("]},");

          return t;
                    SRTlib.send("]},");

        })(t), e, r, n);
                SRTlib.send("]},");

      }
      function g(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

                SRTlib.send("]},");

        return _(e, t, r, n);
                SRTlib.send("]},");

      }
      function y(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

                SRTlib.send("]},");

        return U(R(t), e, r, n);
                SRTlib.send("]},");

      }
      function m(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

                SRTlib.send("]},");

        return U((function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.U2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          for (var r, n, i, o = [], s = 0; s < e.length && !((t -= 2) < 0); ++s) (n = (r = e.charCodeAt(s)) >> 8, i = r % 256, o.push(i), o.push(n));
                    SRTlib.send("]},");

          return o;
                    SRTlib.send("]},");

        })(t, e.length - r), e, r, n);
                SRTlib.send("]},");

      }
      function v(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return 0 === t && r === e.length ? _$base64Js_5.fromByteArray(e) : _$base64Js_5.fromByteArray(e.slice(t, r));
                SRTlib.send("]},");

      }
      function b(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        r = Math.min(e.length, r);
        for (var n = [], i = t; i < r; ) {
          var o, s, a, u, l = e[i], c = null, p = l > 239 ? 4 : l > 223 ? 3 : l > 191 ? 2 : 1;
          if (i + p <= r) switch (p) {
            case 1:
              l < 128 && (c = l);
              break;
            case 2:
              128 == (192 & (o = e[i + 1])) && (u = (31 & l) << 6 | 63 & o) > 127 && (c = u);
              break;
            case 3:
              (o = e[i + 1], s = e[i + 2], 128 == (192 & o) && 128 == (192 & s) && (u = (15 & l) << 12 | (63 & o) << 6 | 63 & s) > 2047 && (u < 55296 || u > 57343) && (c = u));
              break;
            case 4:
              (o = e[i + 1], s = e[i + 2], a = e[i + 3], 128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && (u = (15 & l) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) > 65535 && u < 1114112 && (c = u));
          }
          (null === c ? (c = 65533, p = 1) : c > 65535 && (c -= 65536, n.push(c >>> 10 & 1023 | 55296), c = 56320 | 1023 & c), n.push(c), i += p);
        }
                SRTlib.send("]},");

        return (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = e.length;
          if (t <= w) {
                        SRTlib.send("]},");

            return String.fromCharCode.apply(String, e);
          }
          for (var r = "", n = 0; n < t; ) r += String.fromCharCode.apply(String, e.slice(n, n += w));
                    SRTlib.send("]},");

          return r;
                    SRTlib.send("]},");

        })(n);
                SRTlib.send("]},");

      }
      (e.TYPED_ARRAY_SUPPORT = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.TYPED_ARRAY_SUPPORT", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        try {
          var e = new Uint8Array(1);
                    SRTlib.send("]},");

          return (e.__proto__ = {
            __proto__: Uint8Array.prototype,
            foo: function () {
                            SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.TYPED_ARRAY_SUPPORT.ReturnStatement.e.__proto__.foo", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                            SRTlib.send("]},");

              return 42;
                            SRTlib.send("]},");

            }
          }, 42 === e.foo());
        } catch (t) {
                    SRTlib.send("]},");

          return !1;
        }
                SRTlib.send("]},");

      })(), e.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(e.prototype, "parent", {
        enumerable: !0,
        get: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          if (e.isBuffer(this)) {
                        SRTlib.send("]},");

            return this.buffer;
          }
                    SRTlib.send("]},");

        }
      }), Object.defineProperty(e.prototype, "offset", {
        enumerable: !0,
        get: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.get2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          if (e.isBuffer(this)) {
                        SRTlib.send("]},");

            return this.byteOffset;
          }
                    SRTlib.send("]},");

        }
      }), "undefined" != typeof Symbol && null != Symbol.species && e[Symbol.species] === e && Object.defineProperty(e, Symbol.species, {
        value: null,
        configurable: !0,
        enumerable: !1,
        writable: !1
      }), e.poolSize = 8192, e.from = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.from", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return i(e, t, r);
                SRTlib.send("]},");

      }, e.prototype.__proto__ = Uint8Array.prototype, e.__proto__ = Uint8Array, e.alloc = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.alloc", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (function (e, t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.alloc.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                    SRTlib.send("]},");

          return (o(e), e <= 0 ? n(e) : void 0 !== t ? "string" == typeof r ? n(e).fill(t, r) : n(e).fill(t) : n(e));
                    SRTlib.send("]},");

        })(e, t, r);
                SRTlib.send("]},");

      }, e.allocUnsafe = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.allocUnsafe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return s(e);
                SRTlib.send("]},");

      }, e.allocUnsafeSlow = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.allocUnsafeSlow", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return s(e);
                SRTlib.send("]},");

      }, e.isBuffer = function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.isBuffer", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return null != t && !0 === t._isBuffer && t !== e.prototype;
                SRTlib.send("]},");

      }, e.compare = function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.compare", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if ((B(t, Uint8Array) && (t = e.from(t, t.offset, t.byteLength)), B(r, Uint8Array) && (r = e.from(r, r.offset, r.byteLength)), !e.isBuffer(t) || !e.isBuffer(r))) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        if (t === r) {
                    SRTlib.send("]},");

          return 0;
        }
        for (var n = t.length, i = r.length, o = 0, s = Math.min(n, i); o < s; ++o) if (t[o] !== r[o]) {
          (n = t[o], i = r[o]);
          break;
        }
                SRTlib.send("]},");

        return n < i ? -1 : i < n ? 1 : 0;
                SRTlib.send("]},");

      }, e.isEncoding = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.isEncoding", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        switch (String(e).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case {
                            SRTlib.send("]},");

              return !0;
            }:
            return !0;
          default:
        }
                SRTlib.send("]},");

      }, e.concat = function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.concat", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (!Array.isArray(t)) throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === t.length) {
                    SRTlib.send("]},");

          return e.alloc(0);
        }
        var n;
        if (void 0 === r) for ((r = 0, n = 0); n < t.length; ++n) r += t[n].length;
        var i = e.allocUnsafe(r), o = 0;
        for (n = 0; n < t.length; ++n) {
          var s = t[n];
          if ((B(s, Uint8Array) && (s = e.from(s)), !e.isBuffer(s))) throw new TypeError('"list" argument must be an Array of Buffers');
          (s.copy(i, o), o += s.length);
        }
                SRTlib.send("]},");

        return i;
                SRTlib.send("]},");

      }, e.byteLength = l, e.prototype._isBuffer = !0, e.prototype.swap16 = function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.swap16", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this.length;
        if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (var t = 0; t < e; t += 2) c(this, t, t + 1);
                SRTlib.send("]},");

        return this;
                SRTlib.send("]},");

      }, e.prototype.swap32 = function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.swap32", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this.length;
        if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (var t = 0; t < e; t += 4) (c(this, t, t + 3), c(this, t + 1, t + 2));
                SRTlib.send("]},");

        return this;
                SRTlib.send("]},");

      }, e.prototype.swap64 = function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.swap64", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this.length;
        if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (var t = 0; t < e; t += 8) (c(this, t, t + 7), c(this, t + 1, t + 6), c(this, t + 2, t + 5), c(this, t + 3, t + 4));
                SRTlib.send("]},");

        return this;
                SRTlib.send("]},");

      }, e.prototype.toString = function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.toString", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this.length;
                SRTlib.send("]},");

        return 0 === e ? "" : 0 === arguments.length ? b(this, 0, e) : (function (e, t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.toString.ReturnStatement.apply", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          var n = !1;
          if (((void 0 === t || t < 0) && (t = 0), t > this.length)) {
                        SRTlib.send("]},");

            return "";
          }
          if (((void 0 === r || r > this.length) && (r = this.length), r <= 0)) {
                        SRTlib.send("]},");

            return "";
          }
          if ((r >>>= 0) <= (t >>>= 0)) {
                        SRTlib.send("]},");

            return "";
          }
          for (e || (e = "utf8"); ; ) switch (e) {
            case {
                                SRTlib.send("]},");

                return S(this, t, r);
              }:
              return S(this, t, r);
            case "utf8":
            case {
                                SRTlib.send("]},");

                return b(this, t, r);
              }:
              return b(this, t, r);
            case {
                                SRTlib.send("]},");

                return k(this, t, r);
              }:
              return k(this, t, r);
            case "latin1":
            case {
                                SRTlib.send("]},");

                return C(this, t, r);
              }:
              return C(this, t, r);
            case {
                                SRTlib.send("]},");

                return v(this, t, r);
              }:
              return v(this, t, r);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case {
                                SRTlib.send("]},");

                return P(this, t, r);
              }:
              return P(this, t, r);
            default:
              if (n) throw new TypeError("Unknown encoding: " + e);
              (e = (e + "").toLowerCase(), n = !0);
          }
                    SRTlib.send("]},");

        }).apply(this, arguments);
                SRTlib.send("]},");

      }, e.prototype.toLocaleString = e.prototype.toString, e.prototype.equals = function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.equals", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (!e.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                SRTlib.send("]},");

        return this === t || 0 === e.compare(this, t);
                SRTlib.send("]},");

      }, e.prototype.inspect = function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.inspect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = "", r = t.INSPECT_MAX_BYTES;
                SRTlib.send("]},");

        return (e = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (e += " ... "), "<Buffer " + e + ">");
                SRTlib.send("]},");

      }, e.prototype.compare = function (t, r, n, i, o) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.compare", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

        if ((B(t, Uint8Array) && (t = e.from(t, t.offset, t.byteLength)), !e.isBuffer(t))) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t);
        if ((void 0 === r && (r = 0), void 0 === n && (n = t ? t.length : 0), void 0 === i && (i = 0), void 0 === o && (o = this.length), r < 0 || n > t.length || i < 0 || o > this.length)) throw new RangeError("out of range index");
        if (i >= o && r >= n) {
                    SRTlib.send("]},");

          return 0;
        }
        if (i >= o) {
                    SRTlib.send("]},");

          return -1;
        }
        if (r >= n) {
                    SRTlib.send("]},");

          return 1;
        }
        if (this === t) {
                    SRTlib.send("]},");

          return 0;
        }
        for (var s = (o >>>= 0) - (i >>>= 0), a = (n >>>= 0) - (r >>>= 0), u = Math.min(s, a), l = this.slice(i, o), c = t.slice(r, n), p = 0; p < u; ++p) if (l[p] !== c[p]) {
          (s = l[p], a = c[p]);
          break;
        }
                SRTlib.send("]},");

        return s < a ? -1 : a < s ? 1 : 0;
                SRTlib.send("]},");

      }, e.prototype.includes = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.includes", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return -1 !== this.indexOf(e, t, r);
                SRTlib.send("]},");

      }, e.prototype.indexOf = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.indexOf", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return p(this, e, t, r, !0);
                SRTlib.send("]},");

      }, e.prototype.lastIndexOf = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.lastIndexOf", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return p(this, e, t, r, !1);
                SRTlib.send("]},");

      }, e.prototype.write = function (e, t, r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.write", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        if (void 0 === t) (n = "utf8", r = this.length, t = 0); else if (void 0 === r && "string" == typeof t) (n = t, r = this.length, t = 0); else {
          if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          (t >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0));
        }
        var i = this.length - t;
        if (((void 0 === r || r > i) && (r = i), e.length > 0 && (r < 0 || t < 0) || t > this.length)) throw new RangeError("Attempt to write outside buffer bounds");
        n || (n = "utf8");
        for (var o = !1; ; ) switch (n) {
          case {
                            SRTlib.send("]},");

              return d(this, e, t, r);
            }:
            return d(this, e, t, r);
          case "utf8":
          case {
                            SRTlib.send("]},");

              return f(this, e, t, r);
            }:
            return f(this, e, t, r);
          case {
                            SRTlib.send("]},");

              return _(this, e, t, r);
            }:
            return _(this, e, t, r);
          case "latin1":
          case {
                            SRTlib.send("]},");

              return g(this, e, t, r);
            }:
            return g(this, e, t, r);
          case {
                            SRTlib.send("]},");

              return y(this, e, t, r);
            }:
            return y(this, e, t, r);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case {
                            SRTlib.send("]},");

              return m(this, e, t, r);
            }:
            return m(this, e, t, r);
          default:
            if (o) throw new TypeError("Unknown encoding: " + n);
            (n = ("" + n).toLowerCase(), o = !0);
        }
                SRTlib.send("]},");

      }, e.prototype.toJSON = function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.toJSON", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
                SRTlib.send("]},");

      });
      var w = 4096;
      function k(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n = "";
        r = Math.min(e.length, r);
        for (var i = t; i < r; ++i) n += String.fromCharCode(127 & e[i]);
                SRTlib.send("]},");

        return n;
                SRTlib.send("]},");

      }
      function C(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n = "";
        r = Math.min(e.length, r);
        for (var i = t; i < r; ++i) n += String.fromCharCode(e[i]);
                SRTlib.send("]},");

        return n;
                SRTlib.send("]},");

      }
      function S(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n, i = e.length;
        ((!t || t < 0) && (t = 0), (!r || r < 0 || r > i) && (r = i));
        for (var o = "", s = t; s < r; ++s) o += (n = e[s]) < 16 ? "0" + n.toString(16) : n.toString(16);
                SRTlib.send("]},");

        return o;
                SRTlib.send("]},");

      }
      function P(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        for (var n = e.slice(t, r), i = "", o = 0; o < n.length; o += 2) i += String.fromCharCode(n[o] + 256 * n[o + 1]);
                SRTlib.send("]},");

        return i;
                SRTlib.send("]},");

      }
      function A(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
        if (e + t > r) throw new RangeError("Trying to access beyond buffer length");
                SRTlib.send("]},");

      }
      function E(t, r, n, i, o, s) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 6, "calls" : [`);

        if (!e.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (r > o || r < s) throw new RangeError('"value" argument is out of bounds');
        if (n + i > t.length) throw new RangeError("Index out of range");
                SRTlib.send("]},");

      }
      function $(e, t, r, n, i, o) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 6, "calls" : [`);

        if (r + n > e.length) throw new RangeError("Index out of range");
        if (r < 0) throw new RangeError("Index out of range");
                SRTlib.send("]},");

      }
      function F(e, t, r, n, i) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

                SRTlib.send("]},");

        return (t = +t, r >>>= 0, i || $(e, 0, r, 4), _$ieee754_38.write(e, t, r, n, 23, 4), r + 4);
                SRTlib.send("]},");

      }
      function T(e, t, r, n, i) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

                SRTlib.send("]},");

        return (t = +t, r >>>= 0, i || $(e, 0, r, 8), _$ieee754_38.write(e, t, r, n, 52, 8), r + 8);
                SRTlib.send("]},");

      }
      (e.prototype.slice = function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.slice", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var n = this.length;
        ((t = ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), (r = void 0 === r ? n : ~~r) < 0 ? (r += n) < 0 && (r = 0) : r > n && (r = n), r < t && (r = t));
        var i = this.subarray(t, r);
                SRTlib.send("]},");

        return (i.__proto__ = e.prototype, i);
                SRTlib.send("]},");

      }, e.prototype.readUIntLE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readUIntLE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        (e >>>= 0, t >>>= 0, r || A(e, t, this.length));
        for (var n = this[e], i = 1, o = 0; ++o < t && (i *= 256); ) n += this[e + o] * i;
                SRTlib.send("]},");

        return n;
                SRTlib.send("]},");

      }, e.prototype.readUIntBE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readUIntBE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        (e >>>= 0, t >>>= 0, r || A(e, t, this.length));
        for (var n = this[e + --t], i = 1; t > 0 && (i *= 256); ) n += this[e + --t] * i;
                SRTlib.send("]},");

        return n;
                SRTlib.send("]},");

      }, e.prototype.readUInt8 = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readUInt8", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 1, this.length), this[e]);
                SRTlib.send("]},");

      }, e.prototype.readUInt16LE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readUInt16LE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 2, this.length), this[e] | this[e + 1] << 8);
                SRTlib.send("]},");

      }, e.prototype.readUInt16BE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readUInt16BE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 2, this.length), this[e] << 8 | this[e + 1]);
                SRTlib.send("]},");

      }, e.prototype.readUInt32LE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readUInt32LE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]);
                SRTlib.send("]},");

      }, e.prototype.readUInt32BE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readUInt32BE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]));
                SRTlib.send("]},");

      }, e.prototype.readIntLE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readIntLE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        (e >>>= 0, t >>>= 0, r || A(e, t, this.length));
        for (var n = this[e], i = 1, o = 0; ++o < t && (i *= 256); ) n += this[e + o] * i;
                SRTlib.send("]},");

        return (n >= (i *= 128) && (n -= Math.pow(2, 8 * t)), n);
                SRTlib.send("]},");

      }, e.prototype.readIntBE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readIntBE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        (e >>>= 0, t >>>= 0, r || A(e, t, this.length));
        for (var n = t, i = 1, o = this[e + --n]; n > 0 && (i *= 256); ) o += this[e + --n] * i;
                SRTlib.send("]},");

        return (o >= (i *= 128) && (o -= Math.pow(2, 8 * t)), o);
                SRTlib.send("]},");

      }, e.prototype.readInt8 = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readInt8", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]);
                SRTlib.send("]},");

      }, e.prototype.readInt16LE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readInt16LE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (e >>>= 0, t || A(e, 2, this.length));
        var r = this[e] | this[e + 1] << 8;
                SRTlib.send("]},");

        return 32768 & r ? 4294901760 | r : r;
                SRTlib.send("]},");

      }, e.prototype.readInt16BE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readInt16BE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (e >>>= 0, t || A(e, 2, this.length));
        var r = this[e + 1] | this[e] << 8;
                SRTlib.send("]},");

        return 32768 & r ? 4294901760 | r : r;
                SRTlib.send("]},");

      }, e.prototype.readInt32LE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readInt32LE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24);
                SRTlib.send("]},");

      }, e.prototype.readInt32BE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readInt32BE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
                SRTlib.send("]},");

      }, e.prototype.readFloatLE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readFloatLE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 4, this.length), _$ieee754_38.read(this, e, !0, 23, 4));
                SRTlib.send("]},");

      }, e.prototype.readFloatBE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readFloatBE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 4, this.length), _$ieee754_38.read(this, e, !1, 23, 4));
                SRTlib.send("]},");

      }, e.prototype.readDoubleLE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readDoubleLE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 8, this.length), _$ieee754_38.read(this, e, !0, 52, 8));
                SRTlib.send("]},");

      }, e.prototype.readDoubleBE = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.readDoubleBE", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e >>>= 0, t || A(e, 8, this.length), _$ieee754_38.read(this, e, !1, 52, 8));
                SRTlib.send("]},");

      }, e.prototype.writeUIntLE = function (e, t, r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeUIntLE", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        (e = +e, t >>>= 0, r >>>= 0, n || E(this, e, t, r, Math.pow(2, 8 * r) - 1, 0));
        var i = 1, o = 0;
        for (this[t] = 255 & e; ++o < r && (i *= 256); ) this[t + o] = e / i & 255;
                SRTlib.send("]},");

        return t + r;
                SRTlib.send("]},");

      }, e.prototype.writeUIntBE = function (e, t, r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeUIntBE", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        (e = +e, t >>>= 0, r >>>= 0, n || E(this, e, t, r, Math.pow(2, 8 * r) - 1, 0));
        var i = r - 1, o = 1;
        for (this[t + i] = 255 & e; --i >= 0 && (o *= 256); ) this[t + i] = e / o & 255;
                SRTlib.send("]},");

        return t + r;
                SRTlib.send("]},");

      }, e.prototype.writeUInt8 = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeUInt8", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 1, 255, 0), this[t] = 255 & e, t + 1);
                SRTlib.send("]},");

      }, e.prototype.writeUInt16LE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeUInt16LE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 2, 65535, 0), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2);
                SRTlib.send("]},");

      }, e.prototype.writeUInt16BE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeUInt16BE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2);
                SRTlib.send("]},");

      }, e.prototype.writeUInt32LE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeUInt32LE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e, t + 4);
                SRTlib.send("]},");

      }, e.prototype.writeUInt32BE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeUInt32BE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4);
                SRTlib.send("]},");

      }, e.prototype.writeIntLE = function (e, t, r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeIntLE", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        if ((e = +e, t >>>= 0, !n)) {
          var i = Math.pow(2, 8 * r - 1);
          E(this, e, t, r, i - 1, -i);
        }
        var o = 0, s = 1, a = 0;
        for (this[t] = 255 & e; ++o < r && (s *= 256); ) (e < 0 && 0 === a && 0 !== this[t + o - 1] && (a = 1), this[t + o] = (e / s >> 0) - a & 255);
                SRTlib.send("]},");

        return t + r;
                SRTlib.send("]},");

      }, e.prototype.writeIntBE = function (e, t, r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeIntBE", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        if ((e = +e, t >>>= 0, !n)) {
          var i = Math.pow(2, 8 * r - 1);
          E(this, e, t, r, i - 1, -i);
        }
        var o = r - 1, s = 1, a = 0;
        for (this[t + o] = 255 & e; --o >= 0 && (s *= 256); ) (e < 0 && 0 === a && 0 !== this[t + o + 1] && (a = 1), this[t + o] = (e / s >> 0) - a & 255);
                SRTlib.send("]},");

        return t + r;
                SRTlib.send("]},");

      }, e.prototype.writeInt8 = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeInt8", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1);
                SRTlib.send("]},");

      }, e.prototype.writeInt16LE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeInt16LE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 2, 32767, -32768), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2);
                SRTlib.send("]},");

      }, e.prototype.writeInt16BE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeInt16BE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2);
                SRTlib.send("]},");

      }, e.prototype.writeInt32LE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeInt32LE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 4, 2147483647, -2147483648), this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4);
                SRTlib.send("]},");

      }, e.prototype.writeInt32BE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeInt32BE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (e = +e, t >>>= 0, r || E(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4);
                SRTlib.send("]},");

      }, e.prototype.writeFloatLE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeFloatLE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return F(this, e, t, !0, r);
                SRTlib.send("]},");

      }, e.prototype.writeFloatBE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeFloatBE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return F(this, e, t, !1, r);
                SRTlib.send("]},");

      }, e.prototype.writeDoubleLE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeDoubleLE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return T(this, e, t, !0, r);
                SRTlib.send("]},");

      }, e.prototype.writeDoubleBE = function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.writeDoubleBE", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return T(this, e, t, !1, r);
                SRTlib.send("]},");

      }, e.prototype.copy = function (t, r, n, i) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.copy", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        if (!e.isBuffer(t)) throw new TypeError("argument should be a Buffer");
        if ((n || (n = 0), i || 0 === i || (i = this.length), r >= t.length && (r = t.length), r || (r = 0), i > 0 && i < n && (i = n), i === n)) {
                    SRTlib.send("]},");

          return 0;
        }
        if (0 === t.length || 0 === this.length) {
                    SRTlib.send("]},");

          return 0;
        }
        if (r < 0) throw new RangeError("targetStart out of bounds");
        if (n < 0 || n >= this.length) throw new RangeError("Index out of range");
        if (i < 0) throw new RangeError("sourceEnd out of bounds");
        (i > this.length && (i = this.length), t.length - r < i - n && (i = t.length - r + n));
        var o = i - n;
        if (this === t && "function" == typeof Uint8Array.prototype.copyWithin) this.copyWithin(r, n, i); else if (this === t && n < r && r < i) for (var s = o - 1; s >= 0; --s) t[s + r] = this[s + n]; else Uint8Array.prototype.set.call(t, this.subarray(n, i), r);
                SRTlib.send("]},");

        return o;
                SRTlib.send("]},");

      }, e.prototype.fill = function (t, r, n, i) {
                SRTlib.send(`{ "anonymous": true, "function": "_$buffer_8.createModuleFactory.call.e.prototype.fill", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        if ("string" == typeof t) {
          if (("string" == typeof r ? (i = r, r = 0, n = this.length) : "string" == typeof n && (i = n, n = this.length), void 0 !== i && "string" != typeof i)) throw new TypeError("encoding must be a string");
          if ("string" == typeof i && !e.isEncoding(i)) throw new TypeError("Unknown encoding: " + i);
          if (1 === t.length) {
            var o = t.charCodeAt(0);
            ("utf8" === i && o < 128 || "latin1" === i) && (t = o);
          }
        } else "number" == typeof t && (t &= 255);
        if (r < 0 || this.length < r || this.length < n) throw new RangeError("Out of range index");
        if (n <= r) {
                    SRTlib.send("]},");

          return this;
        }
        var s;
        if ((r >>>= 0, n = void 0 === n ? this.length : n >>> 0, t || (t = 0), "number" == typeof t)) for (s = r; s < n; ++s) this[s] = t; else {
          var a = e.isBuffer(t) ? t : e.from(t, i), u = a.length;
          if (0 === u) throw new TypeError('The value "' + t + '" is invalid for argument "value"');
          for (s = 0; s < n - r; ++s) this[s + r] = a[s % u];
        }
                SRTlib.send("]},");

        return this;
                SRTlib.send("]},");

      });
      var O = /[^+/0-9A-Za-z-_]/g;
      function x(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r;
        t = t || 1 / 0;
        for (var n = e.length, i = null, o = [], s = 0; s < n; ++s) {
          if ((r = e.charCodeAt(s)) > 55295 && r < 57344) {
            if (!i) {
              if (r > 56319) {
                (t -= 3) > -1 && o.push(239, 191, 189);
                continue;
              }
              if (s + 1 === n) {
                (t -= 3) > -1 && o.push(239, 191, 189);
                continue;
              }
              i = r;
              continue;
            }
            if (r < 56320) {
              ((t -= 3) > -1 && o.push(239, 191, 189), i = r);
              continue;
            }
            r = 65536 + (i - 55296 << 10 | r - 56320);
          } else i && (t -= 3) > -1 && o.push(239, 191, 189);
          if ((i = null, r < 128)) {
            if ((t -= 1) < 0) break;
            o.push(r);
          } else if (r < 2048) {
            if ((t -= 2) < 0) break;
            o.push(r >> 6 | 192, 63 & r | 128);
          } else if (r < 65536) {
            if ((t -= 3) < 0) break;
            o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
          } else {
            if (!(r < 1114112)) throw new Error("Invalid code point");
            if ((t -= 4) < 0) break;
            o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
          }
        }
                SRTlib.send("]},");

        return o;
                SRTlib.send("]},");

      }
      function R(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return _$base64Js_5.toByteArray((function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if ((e = (e = e.split("=")[0]).trim().replace(O, "")).length < 2) {
                        SRTlib.send("]},");

            return "";
          }
          for (; e.length % 4 != 0; ) e += "=";
                    SRTlib.send("]},");

          return e;
                    SRTlib.send("]},");

        })(e));
                SRTlib.send("]},");

      }
      function U(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        for (var i = 0; i < n && !(i + r >= t.length || i >= e.length); ++i) t[i + r] = e[i];
                SRTlib.send("]},");

        return i;
                SRTlib.send("]},");

      }
      function B(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name;
                SRTlib.send("]},");

      }
      function I(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e != e;
                SRTlib.send("]},");

      }
            SRTlib.send("]},");

    }).call(this, _$buffer_8({}).Buffer);
        SRTlib.send("]},");

  }), _$browser_52 = {}, cachedSetTimeout, cachedClearTimeout, process = _$browser_52 = {};
  function defaultSetTimout() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    throw new Error("setTimeout has not been defined");
        SRTlib.send("]},");

  }
  function defaultClearTimeout() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    throw new Error("clearTimeout has not been defined");
        SRTlib.send("]},");

  }
  function runTimeout(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (cachedSetTimeout === setTimeout) {
            SRTlib.send("]},");

      return setTimeout(e, 0);
    }
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
            SRTlib.send("]},");

      return (cachedSetTimeout = setTimeout, setTimeout(e, 0));
    }
    try {
            SRTlib.send("]},");

      return cachedSetTimeout(e, 0);
    } catch (t) {
      try {
                SRTlib.send("]},");

        return cachedSetTimeout.call(null, e, 0);
      } catch (t) {
                SRTlib.send("]},");

        return cachedSetTimeout.call(this, e, 0);
      }
    }
        SRTlib.send("]},");

  }
  !(function () {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    try {
      cachedSetTimeout = "function" == typeof setTimeout ? setTimeout : defaultSetTimout;
    } catch (e) {
      cachedSetTimeout = defaultSetTimout;
    }
    try {
      cachedClearTimeout = "function" == typeof clearTimeout ? clearTimeout : defaultClearTimeout;
    } catch (e) {
      cachedClearTimeout = defaultClearTimeout;
    }
        SRTlib.send("]},");

  })();
  var currentQueue, queue = [], draining = !1, queueIndex = -1;
  function cleanUpNextTick() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    draining && currentQueue && (draining = !1, currentQueue.length ? queue = currentQueue.concat(queue) : queueIndex = -1, queue.length && drainQueue());
        SRTlib.send("]},");

  }
  function drainQueue() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    if (!draining) {
      var e = runTimeout(cleanUpNextTick);
      draining = !0;
      for (var t = queue.length; t; ) {
        for ((currentQueue = queue, queue = []); ++queueIndex < t; ) currentQueue && currentQueue[queueIndex].run();
        (queueIndex = -1, t = queue.length);
      }
      (currentQueue = null, draining = !1, (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (cachedClearTimeout === clearTimeout) {
                    SRTlib.send("]},");

          return clearTimeout(e);
        }
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                    SRTlib.send("]},");

          return (cachedClearTimeout = clearTimeout, clearTimeout(e));
        }
        try {
          cachedClearTimeout(e);
        } catch (t) {
          try {
                        SRTlib.send("]},");

            return cachedClearTimeout.call(null, e);
          } catch (t) {
                        SRTlib.send("]},");

            return cachedClearTimeout.call(this, e);
          }
        }
                SRTlib.send("]},");

      })(e));
    }
        SRTlib.send("]},");

  }
  function Item(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    (this.fun = e, this.array = t);
        SRTlib.send("]},");

  }
  function noop() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

  }
  (process.nextTick = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "process.nextTick", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = new Array(arguments.length - 1);
    if (arguments.length > 1) for (var r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
    (queue.push(new Item(e, t)), 1 !== queue.length || draining || runTimeout(drainQueue));
        SRTlib.send("]},");

  }, Item.prototype.run = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Item.prototype.run", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    this.fun.apply(null, this.array);
        SRTlib.send("]},");

  }, process.title = "browser", process.browser = !0, process.env = {}, process.argv = [], process.version = "", process.versions = {}, process.on = noop, process.addListener = noop, process.once = noop, process.off = noop, process.removeListener = noop, process.removeAllListeners = noop, process.emit = noop, process.prependListener = noop, process.prependOnceListener = noop, process.listeners = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "process.listeners", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return [];
        SRTlib.send("]},");

  }, process.binding = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "process.binding", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    throw new Error("process.binding is not supported");
        SRTlib.send("]},");

  }, process.cwd = function () {
        SRTlib.send(`{ "anonymous": true, "function": "process.cwd", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return "/";
        SRTlib.send("]},");

  }, process.chdir = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "process.chdir", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    throw new Error("process.chdir is not supported");
        SRTlib.send("]},");

  }, process.umask = function () {
        SRTlib.send(`{ "anonymous": true, "function": "process.umask", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return 0;
        SRTlib.send("]},");

  });
  var _$es6Promise_170 = {
    exports: {}
  };
  ((function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "call7", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    !(function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "call", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      "object" == typeof _$es6Promise_170.exports ? _$es6Promise_170.exports = t() : "function" == typeof define && define.amd ? define(t) : e.ES6Promise = t();
            SRTlib.send("]},");

    })(this, function () {
            SRTlib.send(`{ "anonymous": true, "function": "call6", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      "use strict";
      function r(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return "function" == typeof e;
                SRTlib.send("]},");

      }
      var n = Array.isArray ? Array.isArray : function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.n", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return "[object Array]" === Object.prototype.toString.call(e);
                SRTlib.send("]},");

      }, i = 0, o = void 0, s = void 0, a = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.a", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (f[i] = e, f[i + 1] = t, 2 === (i += 2) && (s ? s(_) : b()));
                SRTlib.send("]},");

      }, u = "undefined" != typeof window ? window : void 0, l = u || ({}), c = l.MutationObserver || l.WebKitMutationObserver, p = "undefined" == typeof self && void 0 !== e && "[object process]" === ({}).toString.call(e), h = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;
      function d() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = setTimeout;
                SRTlib.send("]},");

        return function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return e(_, 1);
                    SRTlib.send("]},");

        };
                SRTlib.send("]},");

      }
      var f = new Array(1e3);
      function _() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        for (var e = 0; e < i; e += 2) ((0, f[e])(f[e + 1]), f[e] = void 0, f[e + 1] = void 0);
        i = 0;
                SRTlib.send("]},");

      }
      var g, y, m, v, b = void 0;
      function w(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = this, n = new this.constructor(S);
        void 0 === n[C] && M(n);
        var i = r._state;
        if (i) {
          var o = arguments[i - 1];
          a(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "a", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return D(i, n, o, r._result);
                        SRTlib.send("]},");

          });
        } else B(r, n, e, t);
                SRTlib.send("]},");

        return n;
                SRTlib.send("]},");

      }
      function k(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e && "object" == typeof e && e.constructor === this) {
                    SRTlib.send("]},");

          return e;
        }
        var t = new this(S);
                SRTlib.send("]},");

        return (O(t, e), t);
                SRTlib.send("]},");

      }
      p ? b = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return e.nextTick(_);
                SRTlib.send("]},");

      } : c ? (y = 0, m = new c(_), v = document.createTextNode(""), m.observe(v, {
        characterData: !0
      }), b = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        v.data = y = ++y % 2;
                SRTlib.send("]},");

      }) : h ? ((g = new MessageChannel()).port1.onmessage = _, b = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return g.port2.postMessage(0);
                SRTlib.send("]},");

      }) : b = void 0 === u ? (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        try {
          var e = Function("return this")().require("vertx");
                    SRTlib.send("]},");

          return void 0 !== (o = e.runOnLoop || e.runOnContext) ? function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            o(_);
                        SRTlib.send("]},");

          } : d();
        } catch (t) {
                    SRTlib.send("]},");

          return d();
        }
                SRTlib.send("]},");

      })() : d();
      var C = Math.random().toString(36).substring(2);
      function S() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

      }
      var P = void 0, A = 1, E = 2, $ = {
        error: null
      };
      function F(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        try {
                    SRTlib.send("]},");

          return e.then;
        } catch (error) {
                    SRTlib.send("]},");

          return ($.error = error, $);
        }
                SRTlib.send("]},");

      }
      function T(e, t, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        t.constructor === e.constructor && n === w && t.constructor.resolve === k ? (function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "emptyKey4", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          t._state === A ? R(e, t._result) : t._state === E ? U(e, t._result) : B(t, void 0, function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "B", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return O(e, t);
                        SRTlib.send("]},");

          }, function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "B2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return U(e, t);
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        })(e, t) : n === $ ? (U(e, $.error), $.error = null) : void 0 === n ? R(e, t) : r(n) ? (function (e, t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "emptyKey5", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          a(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "a2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var n = !1, i = (function (r, i, o, s) {
                            SRTlib.send(`{ "anonymous": true, "function": "a.i3", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

              try {
                r.call(i, function (r) {
                                    SRTlib.send(`{ "anonymous": true, "function": "a.i", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                  n || (n = !0, t !== r ? O(e, r) : R(e, r));
                                    SRTlib.send("]},");

                }, function (t) {
                                    SRTlib.send(`{ "anonymous": true, "function": "a.i2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                  n || (n = !0, U(e, t));
                                    SRTlib.send("]},");

                });
              } catch (a) {
                                SRTlib.send("]},");

                return a;
              }
                            SRTlib.send("]},");

            })(r, t, 0, 0, e._label);
            !n && i && (n = !0, U(e, i));
                        SRTlib.send("]},");

          }, e);
                    SRTlib.send("]},");

        })(e, t, n) : R(e, t);
                SRTlib.send("]},");

      }
      function O(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r, n;
        e === t ? U(e, new TypeError("You cannot resolve a promise with itself")) : (n = typeof (r = t), null === r || "object" !== n && "function" !== n ? R(e, t) : T(e, t, F(t)));
                SRTlib.send("]},");

      }
      function x(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e._onerror && e._onerror(e._result), I(e));
                SRTlib.send("]},");

      }
      function R(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e._state === P && (e._result = t, e._state = A, 0 !== e._subscribers.length && a(I, e));
                SRTlib.send("]},");

      }
      function U(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e._state === P && (e._state = E, e._result = t, a(x, e));
                SRTlib.send("]},");

      }
      function B(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        var i = e._subscribers, o = i.length;
        (e._onerror = null, i[o] = t, i[o + A] = r, i[o + E] = n, 0 === o && e._state && a(I, e));
                SRTlib.send("]},");

      }
      function I(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = e._subscribers, r = e._state;
        if (0 !== t.length) {
          for (var n = void 0, i = void 0, o = e._result, s = 0; s < t.length; s += 3) (n = t[s], i = t[s + r], n ? D(r, n, i, o) : i(o));
          e._subscribers.length = 0;
        }
                SRTlib.send("]},");

      }
      function D(e, t, n, i) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        var o = r(n), s = void 0, a = void 0, u = void 0, l = void 0;
        if (o) {
          if (((s = (function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "emptyKey6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            try {
                            SRTlib.send("]},");

              return e(t);
            } catch (r) {
                            SRTlib.send("]},");

              return ($.error = r, $);
            }
                        SRTlib.send("]},");

          })(n, i)) === $ ? (l = !0, a = s.error, s.error = null) : u = !0, t === s)) {
                        SRTlib.send("]},");

            return void U(t, new TypeError("A promises callback cannot return that same promise."));
          }
        } else (s = i, u = !0);
        t._state !== P || (o && u ? O(t, s) : l ? U(t, a) : e === A ? R(t, s) : e === E && U(t, s));
                SRTlib.send("]},");

      }
      var L = 0;
      function M(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e[C] = L++, e._state = void 0, e._result = void 0, e._subscribers = []);
                SRTlib.send("]},");

      }
      var j = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.j", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e(e, t) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          (this._instanceConstructor = e, this.promise = new e(S), this.promise[C] || M(this.promise), n(t) ? (this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 === this.length ? R(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(t), 0 === this._remaining && R(this.promise, this._result))) : U(this.promise, new Error("Array Methods must be provided an Array")));
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (e.prototype._enumerate = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.j.ReturnStatement.e.prototype._enumerate", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          for (var t = 0; this._state === P && t < e.length; t++) this._eachEntry(e[t], t);
                    SRTlib.send("]},");

        }, e.prototype._eachEntry = function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.j.ReturnStatement.e.prototype._eachEntry", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var r = this._instanceConstructor, n = r.resolve;
          if (n === k) {
            var i = F(e);
            if (i === w && e._state !== P) this._settledAt(e._state, t, e._result); else if ("function" != typeof i) (this._remaining--, this._result[t] = e); else if (r === N) {
              var o = new r(S);
              (T(o, e, i), this._willSettleAt(o, t));
            } else this._willSettleAt(new r(function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.j.ReturnStatement.e.prototype._eachEntry._willSettleAt", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return t(e);
                            SRTlib.send("]},");

            }), t);
          } else this._willSettleAt(n(e), t);
                    SRTlib.send("]},");

        }, e.prototype._settledAt = function (e, t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.j.ReturnStatement.e.prototype._settledAt", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          var n = this.promise;
          (n._state === P && (this._remaining--, e === E ? U(n, r) : this._result[t] = r), 0 === this._remaining && R(n, this._result));
                    SRTlib.send("]},");

        }, e.prototype._willSettleAt = function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.j.ReturnStatement.e.prototype._willSettleAt", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var r = this;
          B(e, void 0, function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.j.ReturnStatement.e.prototype._willSettleAt.B", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return r._settledAt(A, t, e);
                        SRTlib.send("]},");

          }, function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.j.ReturnStatement.e.prototype._willSettleAt.B2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return r._settledAt(E, t, e);
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        }, e);
                SRTlib.send("]},");

      })(), N = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.N", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e(t) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (this[C] = L++, this._result = this._state = void 0, this._subscribers = [], S !== t && ("function" != typeof t && (function () {
                        SRTlib.send(`{ "anonymous": true, "function": "emptyKey7", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
                        SRTlib.send("]},");

          })(), this instanceof e ? (function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "emptyKey8", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            try {
              t(function (t) {
                                SRTlib.send(`{ "anonymous": true, "function": "t", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                O(e, t);
                                SRTlib.send("]},");

              }, function (t) {
                                SRTlib.send(`{ "anonymous": true, "function": "t2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                U(e, t);
                                SRTlib.send("]},");

              });
            } catch (r) {
              U(e, r);
            }
                        SRTlib.send("]},");

          })(this, t) : (function () {
                        SRTlib.send(`{ "anonymous": true, "function": "emptyKey9", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                        SRTlib.send("]},");

          })()));
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (e.prototype.catch = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.N.ReturnStatement.e.prototype.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return this.then(null, e);
                    SRTlib.send("]},");

        }, e.prototype.finally = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.N.ReturnStatement.e.prototype.finally", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = this.constructor;
                    SRTlib.send("]},");

          return r(e) ? this.then(function (r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.N.ReturnStatement.e.prototype.finally.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return t.resolve(e()).then(function () {
                            SRTlib.send(`{ "anonymous": true, "function": "call.N.ReturnStatement.e.prototype.finally.ReturnStatement.then.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                            SRTlib.send("]},");

              return r;
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }, function (r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.N.ReturnStatement.e.prototype.finally.ReturnStatement.then2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return t.resolve(e()).then(function () {
                            SRTlib.send(`{ "anonymous": true, "function": "call.N.ReturnStatement.e.prototype.finally.ReturnStatement.then.ReturnStatement.then2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

              throw r;
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }) : this.then(e, e);
                    SRTlib.send("]},");

        }, e);
                SRTlib.send("]},");

      })();
            SRTlib.send("]},");

      return (N.prototype.then = w, N.all = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.N.all", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return new j(this, e).promise;
                SRTlib.send("]},");

      }, N.race = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.N.race", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = this;
                SRTlib.send("]},");

        return n(e) ? new t(function (r, n) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.N.race.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          for (var i = e.length, o = 0; o < i; o++) t.resolve(e[o]).then(r, n);
                    SRTlib.send("]},");

        }) : new t(function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.N.race.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                    SRTlib.send("]},");

          return t(new TypeError("You must pass an array to race."));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }, N.resolve = k, N.reject = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.N.reject", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = new this(S);
                SRTlib.send("]},");

        return (U(t, e), t);
                SRTlib.send("]},");

      }, N._setScheduler = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.N._setScheduler", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        s = e;
                SRTlib.send("]},");

      }, N._setAsap = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.N._setAsap", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        a = e;
                SRTlib.send("]},");

      }, N._asap = a, N.polyfill = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.N.polyfill", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = void 0;
        if (void 0 !== t) e = t; else if ("undefined" != typeof self) e = self; else try {
          e = Function("return this")();
        } catch (i) {
          throw new Error("polyfill failed because global object is unavailable in this environment");
        }
        var r = e.Promise;
        if (r) {
          var n = null;
          try {
            n = Object.prototype.toString.call(r.resolve());
          } catch (i) {}
          if ("[object Promise]" === n && !r.cast) {
                        SRTlib.send("]},");

            return;
          }
        }
        e.Promise = N;
                SRTlib.send("]},");

      }, N.Promise = N, N);
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }).call(this, _$browser_52, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}), _$es6Promise_170 = _$es6Promise_170.exports);
  var _$auto_169 = _$es6Promise_170.polyfill(), _$fetchUmd_86 = {
    exports: {}
  }, __global_86, factory;
  (__global_86 = this, factory = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey12", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    "use strict";
    var t = {
      searchParams: ("URLSearchParams" in self),
      iterable: ("Symbol" in self) && ("iterator" in Symbol),
      blob: ("FileReader" in self) && ("Blob" in self) && (function () {
                SRTlib.send(`{ "anonymous": true, "function": "t.blob", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        try {
                    SRTlib.send("]},");

          return (new Blob(), !0);
        } catch (e) {
                    SRTlib.send("]},");

          return !1;
        }
                SRTlib.send("]},");

      })(),
      formData: ("FormData" in self),
      arrayBuffer: ("ArrayBuffer" in self)
    };
    if (t.arrayBuffer) var r = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], n = ArrayBuffer.isView || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "n", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e && r.indexOf(Object.prototype.toString.call(e)) > -1;
            SRTlib.send("]},");

    });
    function i(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (("string" != typeof e && (e = String(e)), (/[^a-z0-9\-#$%&'*+.^_`|~]/i).test(e))) throw new TypeError("Invalid character in header field name");
            SRTlib.send("]},");

      return e.toLowerCase();
            SRTlib.send("]},");

    }
    function o(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return ("string" != typeof e && (e = String(e)), e);
            SRTlib.send("]},");

    }
    function s(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r = {
        next: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "r.next", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var t = e.shift();
                    SRTlib.send("]},");

          return {
            done: void 0 === t,
            value: t
          };
                    SRTlib.send("]},");

        }
      };
            SRTlib.send("]},");

      return (t.iterable && (r[Symbol.iterator] = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.r", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return r;
                SRTlib.send("]},");

      }), r);
            SRTlib.send("]},");

    }
    function a(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.map = {}, e instanceof a ? e.forEach(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey10", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        this.append(t, e);
                SRTlib.send("]},");

      }, this) : Array.isArray(e) ? e.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey11", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        this.append(e[0], e[1]);
                SRTlib.send("]},");

      }, this) : e && Object.getOwnPropertyNames(e).forEach(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        this.append(t, e[t]);
                SRTlib.send("]},");

      }, this));
            SRTlib.send("]},");

    }
    function u(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (e.bodyUsed) {
                SRTlib.send("]},");

        return Promise.reject(new TypeError("Already read"));
      }
      e.bodyUsed = !0;
            SRTlib.send("]},");

    }
    function l(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return new Promise(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (e.onload = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.e.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          t(e.result);
                    SRTlib.send("]},");

        }, e.onerror = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.e.onerror", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          r(e.error);
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }
    function c(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = new FileReader(), r = l(t);
            SRTlib.send("]},");

      return (t.readAsArrayBuffer(e), r);
            SRTlib.send("]},");

    }
    function p(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (e.slice) {
                SRTlib.send("]},");

        return e.slice(0);
      }
      var t = new Uint8Array(e.byteLength);
            SRTlib.send("]},");

      return (t.set(new Uint8Array(e)), t.buffer);
            SRTlib.send("]},");

    }
    function h() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return (this.bodyUsed = !1, this._initBody = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement._initBody", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r;
        (this._bodyInit = e, e ? "string" == typeof e ? this._bodyText = e : t.blob && Blob.prototype.isPrototypeOf(e) ? this._bodyBlob = e : t.formData && FormData.prototype.isPrototypeOf(e) ? this._bodyFormData = e : t.searchParams && URLSearchParams.prototype.isPrototypeOf(e) ? this._bodyText = e.toString() : t.arrayBuffer && t.blob && (r = e) && DataView.prototype.isPrototypeOf(r) ? (this._bodyArrayBuffer = p(e.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : t.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(e) || n(e)) ? this._bodyArrayBuffer = p(e) : this._bodyText = e = Object.prototype.toString.call(e) : this._bodyText = "", this.headers.get("content-type") || ("string" == typeof e ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t.searchParams && URLSearchParams.prototype.isPrototypeOf(e) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8")));
                SRTlib.send("]},");

      }, t.blob && (this.blob = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.blob", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = u(this);
        if (e) {
                    SRTlib.send("]},");

          return e;
        }
        if (this._bodyBlob) {
                    SRTlib.send("]},");

          return Promise.resolve(this._bodyBlob);
        }
        if (this._bodyArrayBuffer) {
                    SRTlib.send("]},");

          return Promise.resolve(new Blob([this._bodyArrayBuffer]));
        }
        if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                SRTlib.send("]},");

        return Promise.resolve(new Blob([this._bodyText]));
                SRTlib.send("]},");

      }, this.arrayBuffer = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.arrayBuffer", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return this._bodyArrayBuffer ? u(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(c);
                SRTlib.send("]},");

      }), this.text = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.text", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e, t, r, n = u(this);
        if (n) {
                    SRTlib.send("]},");

          return n;
        }
        if (this._bodyBlob) {
                    SRTlib.send("]},");

          return (e = this._bodyBlob, r = l(t = new FileReader()), t.readAsText(e), r);
        }
        if (this._bodyArrayBuffer) {
                    SRTlib.send("]},");

          return Promise.resolve((function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.text.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            for (var t = new Uint8Array(e), r = new Array(t.length), n = 0; n < t.length; n++) r[n] = String.fromCharCode(t[n]);
                        SRTlib.send("]},");

            return r.join("");
                        SRTlib.send("]},");

          })(this._bodyArrayBuffer));
        }
        if (this._bodyFormData) throw new Error("could not read FormData body as text");
                SRTlib.send("]},");

        return Promise.resolve(this._bodyText);
                SRTlib.send("]},");

      }, t.formData && (this.formData = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.formData", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return this.text().then(_);
                SRTlib.send("]},");

      }), this.json = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.json", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return this.text().then(JSON.parse);
                SRTlib.send("]},");

      }, this);
            SRTlib.send("]},");

    }
    (a.prototype.append = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "a.prototype.append", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (e = i(e), t = o(t));
      var r = this.map[e];
      this.map[e] = r ? r + ", " + t : t;
            SRTlib.send("]},");

    }, a.prototype.delete = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "a.prototype.delete", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      delete this.map[i(e)];
            SRTlib.send("]},");

    }, a.prototype.get = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "a.prototype.get", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return (e = i(e), this.has(e) ? this.map[e] : null);
            SRTlib.send("]},");

    }, a.prototype.has = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "a.prototype.has", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.map.hasOwnProperty(i(e));
            SRTlib.send("]},");

    }, a.prototype.set = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "a.prototype.set", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.map[i(e)] = o(t);
            SRTlib.send("]},");

    }, a.prototype.forEach = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "a.prototype.forEach", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      for (var r in this.map) this.map.hasOwnProperty(r) && e.call(t, this.map[r], r, this);
            SRTlib.send("]},");

    }, a.prototype.keys = function () {
            SRTlib.send(`{ "anonymous": true, "function": "a.prototype.keys", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = [];
            SRTlib.send("]},");

      return (this.forEach(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "a.prototype.keys.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e.push(r);
                SRTlib.send("]},");

      }), s(e));
            SRTlib.send("]},");

    }, a.prototype.values = function () {
            SRTlib.send(`{ "anonymous": true, "function": "a.prototype.values", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = [];
            SRTlib.send("]},");

      return (this.forEach(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "a.prototype.values.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.push(t);
                SRTlib.send("]},");

      }), s(e));
            SRTlib.send("]},");

    }, a.prototype.entries = function () {
            SRTlib.send(`{ "anonymous": true, "function": "a.prototype.entries", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = [];
            SRTlib.send("]},");

      return (this.forEach(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "a.prototype.entries.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e.push([r, t]);
                SRTlib.send("]},");

      }), s(e));
            SRTlib.send("]},");

    }, t.iterable && (a.prototype[Symbol.iterator] = a.prototype.entries));
    var d = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
    function f(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r, n, i = (t = t || ({})).body;
      if (e instanceof f) {
        if (e.bodyUsed) throw new TypeError("Already read");
        (this.url = e.url, this.credentials = e.credentials, t.headers || (this.headers = new a(e.headers)), this.method = e.method, this.mode = e.mode, this.signal = e.signal, i || null == e._bodyInit || (i = e._bodyInit, e.bodyUsed = !0));
      } else this.url = String(e);
      if ((this.credentials = t.credentials || this.credentials || "same-origin", !t.headers && this.headers || (this.headers = new a(t.headers)), this.method = (n = (r = t.method || this.method || "GET").toUpperCase(), d.indexOf(n) > -1 ? n : r), this.mode = t.mode || this.mode || null, this.signal = t.signal || this.signal, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && i)) throw new TypeError("Body not allowed for GET or HEAD requests");
      this._initBody(i);
            SRTlib.send("]},");

    }
    function _(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = new FormData();
            SRTlib.send("]},");

      return (e.trim().split("&").forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.split.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e) {
          var r = e.split("="), n = r.shift().replace(/\+/g, " "), i = r.join("=").replace(/\+/g, " ");
          t.append(decodeURIComponent(n), decodeURIComponent(i));
        }
                SRTlib.send("]},");

      }), t);
            SRTlib.send("]},");

    }
    function g(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (t || (t = {}), this.type = "default", this.status = void 0 === t.status ? 200 : t.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = ("statusText" in t) ? t.statusText : "OK", this.headers = new a(t.headers), this.url = t.url || "", this._initBody(e));
            SRTlib.send("]},");

    }
    (f.prototype.clone = function () {
            SRTlib.send(`{ "anonymous": true, "function": "f.prototype.clone", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return new f(this, {
        body: this._bodyInit
      });
            SRTlib.send("]},");

    }, h.call(f.prototype), h.call(g.prototype), g.prototype.clone = function () {
            SRTlib.send(`{ "anonymous": true, "function": "g.prototype.clone", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return new g(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new a(this.headers),
        url: this.url
      });
            SRTlib.send("]},");

    }, g.error = function () {
            SRTlib.send(`{ "anonymous": true, "function": "g.error", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = new g(null, {
        status: 0,
        statusText: ""
      });
            SRTlib.send("]},");

      return (e.type = "error", e);
            SRTlib.send("]},");

    });
    var y = [301, 302, 303, 307, 308];
    (g.redirect = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "g.redirect", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (-1 === y.indexOf(t)) throw new RangeError("Invalid status code");
            SRTlib.send("]},");

      return new g(null, {
        status: t,
        headers: {
          location: e
        }
      });
            SRTlib.send("]},");

    }, e.DOMException = self.DOMException);
    try {
      new e.DOMException();
    } catch (err) {
      (e.DOMException = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "e.DOMException", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (this.message = e, this.name = t);
        var r = Error(e);
        this.stack = r.stack;
                SRTlib.send("]},");

      }, e.DOMException.prototype = Object.create(Error.prototype), e.DOMException.prototype.constructor = e.DOMException);
    }
    function m(r, n) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return new Promise(function (i, o) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement7", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var s = new f(r, n);
        if (s.signal && s.signal.aborted) {
                    SRTlib.send("]},");

          return o(new e.DOMException("Aborted", "AbortError"));
        }
        var u = new XMLHttpRequest();
        function l() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          u.abort();
                    SRTlib.send("]},");

        }
        (u.onload = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.u.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e, t, r = {
            status: u.status,
            statusText: u.statusText,
            headers: (e = u.getAllResponseHeaders() || "", t = new a(), e.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.u.onload.r.headers.split.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              var r = e.split(":"), n = r.shift().trim();
              if (n) {
                var i = r.join(":").trim();
                t.append(n, i);
              }
                            SRTlib.send("]},");

            }), t)
          };
          r.url = ("responseURL" in u) ? u.responseURL : r.headers.get("X-Request-URL");
          var n = ("response" in u) ? u.response : u.responseText;
          i(new g(n, r));
                    SRTlib.send("]},");

        }, u.onerror = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.u.onerror", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          o(new TypeError("Network request failed"));
                    SRTlib.send("]},");

        }, u.ontimeout = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.u.ontimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          o(new TypeError("Network request failed"));
                    SRTlib.send("]},");

        }, u.onabort = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.u.onabort", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          o(new e.DOMException("Aborted", "AbortError"));
                    SRTlib.send("]},");

        }, u.open(s.method, s.url, !0), "include" === s.credentials ? u.withCredentials = !0 : "omit" === s.credentials && (u.withCredentials = !1), ("responseType" in u) && t.blob && (u.responseType = "blob"), s.headers.forEach(function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.s.headers.forEach", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          u.setRequestHeader(t, e);
                    SRTlib.send("]},");

        }), s.signal && (s.signal.addEventListener("abort", l), u.onreadystatechange = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.u.onreadystatechange", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          4 === u.readyState && s.signal.removeEventListener("abort", l);
                    SRTlib.send("]},");

        }), u.send(void 0 === s._bodyInit ? null : s._bodyInit));
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }
    (m.polyfill = !0, self.fetch || (self.fetch = m, self.Headers = a, self.Request = f, self.Response = g), e.Headers = a, e.Request = f, e.Response = g, e.fetch = m, Object.defineProperty(e, "__esModule", {
      value: !0
    }));
        SRTlib.send("]},");

  }, "object" == typeof _$fetchUmd_86.exports ? factory(_$fetchUmd_86.exports) : "function" == typeof define && define.amd ? define(["exports"], factory) : factory(__global_86.WHATWGFetch = {}), _$fetchUmd_86 = _$fetchUmd_86.exports);
  var _$hasProperty_219 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$hasProperty_219", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return Object.prototype.hasOwnProperty.call(e, t);
        SRTlib.send("]},");

  };
  function _extends() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (_extends = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var _$Translator_200 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$Translator_200", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      (this.locale = {
        strings: {},
        pluralize: function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "locale.pluralize", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return 1 === e ? 0 : 1;
                    SRTlib.send("]},");

        }
      }, Array.isArray(e) ? e.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey13", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t._apply(e);
                SRTlib.send("]},");

      }) : this._apply(e));
            SRTlib.send("]},");

    }
    var t = e.prototype;
        SRTlib.send("]},");

    return (t._apply = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Translator_200.ReturnStatement.t._apply", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (e && e.strings) {
        var t = this.locale;
        (this.locale = _extends({}, t, {
          strings: _extends({}, t.strings, e.strings)
        }), this.locale.pluralize = e.pluralize || t.pluralize);
      }
            SRTlib.send("]},");

    }, t.interpolate = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Translator_200.ReturnStatement.t.interpolate", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = String.prototype, n = r.split, i = r.replace, o = /\$/g, s = [e];
      for (var a in t) if ("_" !== a && _$hasProperty_219(t, a)) {
        var u = t[a];
        ("string" == typeof u && (u = i.call(t[a], o, "$$$$")), s = l(s, new RegExp("%\\{" + a + "\\}", "g"), u));
      }
            SRTlib.send("]},");

      return s;
      function l(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var i = [];
                SRTlib.send("]},");

        return (e.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement8", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if ("string" != typeof e) {
                        SRTlib.send("]},");

            return i.push(e);
          }
          n.call(e, t).forEach(function (e, t, n) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            ("" !== e && i.push(e), t < n.length - 1 && i.push(r));
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        }), i);
                SRTlib.send("]},");

      }
            SRTlib.send("]},");

    }, t.translate = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Translator_200.ReturnStatement.t.translate", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return this.translateArray(e, t).join("");
            SRTlib.send("]},");

    }, t.translateArray = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Translator_200.ReturnStatement.t.translateArray", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this.locale.strings[e];
      if ("object" == typeof r) {
        if (t && void 0 !== t.smart_count) {
          var n = this.locale.pluralize(t.smart_count);
                    SRTlib.send("]},");

          return this.interpolate(r[n], t);
        }
        throw new Error("Attempted to use a string with plural forms, but no value was given for %{smart_count}");
      }
            SRTlib.send("]},");

      return this.interpolate(r, t);
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  })(), _$namespaceEmitter_47 = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$namespaceEmitter_47", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = {}, t = e._fns = {};
        SRTlib.send("]},");

    return (e.emit = function (e, r, n, i, o, s, a) {
            SRTlib.send(`{ "anonymous": true, "function": "_$namespaceEmitter_47.ReturnStatement.e.emit2", "fileName": "${__filename}", "paramsNumber": 7, "calls" : [`);

      var u = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$namespaceEmitter_47.ReturnStatement.e.emit.u", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var r = t[e] ? t[e] : [], n = e.indexOf(":"), i = -1 === n ? [e] : [e.substring(0, n), e.substring(n + 1)], o = Object.keys(t), s = 0, a = o.length; s < a; s++) {
          var u = o[s];
          if (("*" === u && (r = r.concat(t[u])), 2 === i.length && i[0] === u)) {
            r = r.concat(t[u]);
            break;
          }
        }
                SRTlib.send("]},");

        return r;
                SRTlib.send("]},");

      })(e);
      u.length && (function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$namespaceEmitter_47.ReturnStatement.e.emit", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        for (var n = 0, i = t.length; n < i && t[n]; n++) (t[n].event = e, t[n].apply(t[n], r));
                SRTlib.send("]},");

      })(e, u, [r, n, i, o, s, a]);
            SRTlib.send("]},");

    }, e.on = function (e, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$namespaceEmitter_47.ReturnStatement.e.on", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (t[e] || (t[e] = []), t[e].push(r));
            SRTlib.send("]},");

    }, e.once = function (t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$namespaceEmitter_47.ReturnStatement.e.once", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.on(t, function n() {
                SRTlib.send(`{ "anonymous": true, "function": "_$namespaceEmitter_47.ReturnStatement.e.once.on.n", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (r.apply(this, arguments), e.off(t, n));
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, e.off = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$namespaceEmitter_47.ReturnStatement.e.off", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = [];
      if (e && t) for (var n = this._fns[e], i = 0, o = n ? n.length : 0; i < o; i++) n[i] !== t && r.push(n[i]);
      r.length ? this._fns[e] = r : delete this._fns[e];
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  }, _$pad_16 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$pad_16", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = "000000000" + e;
        SRTlib.send("]},");

    return r.substr(r.length - t);
        SRTlib.send("]},");

  }, env = "object" == typeof window ? window : self, globalCount = Object.keys(env).length, clientId = _$pad_16(((navigator.mimeTypes ? navigator.mimeTypes.length : 0) + navigator.userAgent.length).toString(36) + globalCount.toString(36), 4), _$fingerprintBrowser_14 = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$fingerprintBrowser_14", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return clientId;
        SRTlib.send("]},");

  }, getRandomValue, crypto = "undefined" != typeof window && (window.crypto || window.msCrypto) || "undefined" != typeof self && self.crypto;
  if (crypto) {
    var lim = Math.pow(2, 32) - 1;
    getRandomValue = function () {
            SRTlib.send(`{ "anonymous": true, "function": "emptyKey14", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);
            SRTlib.send("]},");

    };
  } else getRandomValue = Math.random;
  var _$getRandomValue_15 = getRandomValue, _$cuid_13 = {}, c = 0, blockSize = 4, base = 36, discreteValues = Math.pow(base, blockSize);
  function randomBlock() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return _$pad_16((_$getRandomValue_15() * discreteValues << 0).toString(base), blockSize);
        SRTlib.send("]},");

  }
  function safeCounter() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (c = c < discreteValues ? c : 0, ++c - 1);
        SRTlib.send("]},");

  }
  function cuid() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return "c" + new Date().getTime().toString(base) + _$pad_16(safeCounter().toString(base), blockSize) + _$fingerprintBrowser_14() + (randomBlock() + randomBlock());
        SRTlib.send("]},");

  }
  (cuid.slug = function () {
        SRTlib.send(`{ "anonymous": true, "function": "cuid.slug", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = new Date().getTime().toString(36), t = safeCounter().toString(36).slice(-4), r = _$fingerprintBrowser_14().slice(0, 1) + _$fingerprintBrowser_14().slice(-1), n = randomBlock().slice(-2);
        SRTlib.send("]},");

    return e.slice(-2) + t + r + n;
        SRTlib.send("]},");

  }, cuid.isCuid = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "cuid.isCuid", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return "string" == typeof e && !!e.startsWith("c");
        SRTlib.send("]},");

  }, cuid.isSlug = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "cuid.isSlug", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("string" != typeof e) {
            SRTlib.send("]},");

      return !1;
    }
    var t = e.length;
        SRTlib.send("]},");

    return t >= 7 && t <= 10;
        SRTlib.send("]},");

  }, cuid.fingerprint = _$fingerprintBrowser_14, _$cuid_13 = cuid);
  var _$lodashThrottle_43 = {};
  (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "call9", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = "Expected a function", r = NaN, n = "[object Symbol]", i = /^\s+|\s+$/g, o = /^[-+]0x[0-9a-f]+$/i, s = /^0b[01]+$/i, a = /^0o[0-7]+$/i, u = parseInt, l = "object" == typeof e && e && e.Object === Object && e, c = "object" == typeof self && self && self.Object === Object && self, p = l || c || Function("return this")(), h = Object.prototype.toString, d = Math.max, f = Math.min, _ = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call._", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return p.Date.now();
            SRTlib.send("]},");

    };
    function g(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = typeof e;
            SRTlib.send("]},");

      return !!e && ("object" == t || "function" == t);
            SRTlib.send("]},");

    }
    function y(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if ("number" == typeof e) {
                SRTlib.send("]},");

        return e;
      }
      if ((function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey15", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return "symbol" == typeof e || (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement9", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return !!e && "object" == typeof e;
                    SRTlib.send("]},");

        })(e) && h.call(e) == n;
                SRTlib.send("]},");

      })(e)) {
                SRTlib.send("]},");

        return r;
      }
      if (g(e)) {
        var t = "function" == typeof e.valueOf ? e.valueOf() : e;
        e = g(t) ? t + "" : t;
      }
      if ("string" != typeof e) {
                SRTlib.send("]},");

        return 0 === e ? e : +e;
      }
      e = e.replace(i, "");
      var l = s.test(e);
            SRTlib.send("]},");

      return l || a.test(e) ? u(e.slice(2), l ? 2 : 8) : o.test(e) ? r : +e;
            SRTlib.send("]},");

    }
    _$lodashThrottle_43 = function (e, r, n) {
            SRTlib.send(`{ "anonymous": true, "function": "call8", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var i = !0, o = !0;
      if ("function" != typeof e) throw new TypeError(t);
            SRTlib.send("]},");

      return (g(n) && (i = ("leading" in n) ? !!n.leading : i, o = ("trailing" in n) ? !!n.trailing : o), (function (e, r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var i, o, s, a, u, l, c = 0, p = !1, h = !1, m = !0;
        if ("function" != typeof e) throw new TypeError(t);
        function v(t) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r = i, n = o;
                    SRTlib.send("]},");

          return (i = o = void 0, c = t, a = e.apply(n, r));
                    SRTlib.send("]},");

        }
        function b(e) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = e - l;
                    SRTlib.send("]},");

          return void 0 === l || t >= r || t < 0 || h && e - c >= s;
                    SRTlib.send("]},");

        }
        function w() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e = _();
          if (b(e)) {
                        SRTlib.send("]},");

            return k(e);
          }
          u = setTimeout(w, (function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "setTimeout", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = r - (e - l);
                        SRTlib.send("]},");

            return h ? f(t, s - (e - c)) : t;
                        SRTlib.send("]},");

          })(e));
                    SRTlib.send("]},");

        }
        function k(e) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return (u = void 0, m && i ? v(e) : (i = o = void 0, a));
                    SRTlib.send("]},");

        }
        function C() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e = _(), t = b(e);
          if ((i = arguments, o = this, l = e, t)) {
            if (void 0 === u) {
                            SRTlib.send("]},");

              return (function (e) {
                                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement10", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                SRTlib.send("]},");

                return (c = e, u = setTimeout(w, r), p ? v(e) : a);
                                SRTlib.send("]},");

              })(l);
            }
            if (h) {
                            SRTlib.send("]},");

              return (u = setTimeout(w, r), v(l));
            }
          }
                    SRTlib.send("]},");

          return (void 0 === u && (u = setTimeout(w, r)), a);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (r = y(r) || 0, g(n) && (p = !!n.leading, s = (h = ("maxWait" in n)) ? d(y(n.maxWait) || 0, r) : s, m = ("trailing" in n) ? !!n.trailing : m), C.cancel = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.ReturnStatement.C.cancel", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (void 0 !== u && clearTimeout(u), c = 0, i = l = o = u = void 0);
                    SRTlib.send("]},");

        }, C.flush = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.ReturnStatement.C.flush", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return void 0 === u ? a : k(_());
                    SRTlib.send("]},");

        }, C);
                SRTlib.send("]},");

      })(e, r, {
        leading: i,
        maxWait: r,
        trailing: o
      }));
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
  var _$prettierBytes_100 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$prettierBytes_100", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("number" != typeof e || isNaN(e)) throw new TypeError("Expected a number, got " + typeof e);
    var t = e < 0, r = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
    if ((t && (e = -e), e < 1)) {
            SRTlib.send("]},");

      return (t ? "-" : "") + e + " B";
    }
    var n = Math.min(Math.floor(Math.log(e) / Math.log(1024)), r.length - 1);
    e = Number(e / Math.pow(1024, n));
    var i = r[n];
        SRTlib.send("]},");

    return e >= 10 || e % 1 == 0 ? (t ? "-" : "") + e.toFixed(0) + " " + i : (t ? "-" : "") + e.toFixed(1) + " " + i;
        SRTlib.send("]},");

  }, _$wildcard_87 = {};
  function WildcardMatcher(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    (this.text = e = e || "", this.hasWild = ~e.indexOf("*"), this.separator = t, this.parts = e.split(t));
        SRTlib.send("]},");

  }
  (WildcardMatcher.prototype.match = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "WildcardMatcher.prototype.match", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r, n = !0, i = this.parts, o = i.length;
    if ("string" == typeof e || e instanceof String) if (this.hasWild || this.text == e) {
      for ((r = (e || "").split(this.separator), t = 0); n && t < o; t++) "*" !== i[t] && (n = t < r.length && i[t] === r[t]);
      n = n && r;
    } else n = !1; else if ("function" == typeof e.splice) for ((n = [], t = e.length); t--; ) this.match(e[t]) && (n[n.length] = e[t]); else if ("object" == typeof e) for (var s in (n = {}, e)) this.match(s) && (n[s] = e[s]);
        SRTlib.send("]},");

    return n;
        SRTlib.send("]},");

  }, _$wildcard_87 = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey16", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    var n = new WildcardMatcher(e, r || /[\/\.]/);
        SRTlib.send("]},");

    return void 0 !== t ? n.match(t) : n;
        SRTlib.send("]},");

  });
  var reMimePartSplit = /[\/\+\.]/, _$mimeMatch_46 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$mimeMatch_46", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    function r(t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r = _$wildcard_87(t, e, reMimePartSplit);
            SRTlib.send("]},");

      return r && r.length >= 2;
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return t ? r(t.split(";")[0]) : r;
        SRTlib.send("]},");

  }, _$package_178 = {
    version: "1.2.1"
  }, _$lib_177 = {};
  function ___extends_177() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_177 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var DefaultStore = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "DefaultStore", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.state = {}, this.callbacks = []);
            SRTlib.send("]},");

    }
    var t = e.prototype;
        SRTlib.send("]},");

    return (t.getState = function () {
            SRTlib.send(`{ "anonymous": true, "function": "DefaultStore.ReturnStatement.t.getState", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.state;
            SRTlib.send("]},");

    }, t.setState = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "DefaultStore.ReturnStatement.t.setState", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = ___extends_177({}, this.state), r = ___extends_177({}, this.state, e);
      (this.state = r, this._publish(t, r, e));
            SRTlib.send("]},");

    }, t.subscribe = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "DefaultStore.ReturnStatement.t.subscribe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return (this.callbacks.push(e), function () {
                SRTlib.send(`{ "anonymous": true, "function": "DefaultStore.ReturnStatement.t.subscribe.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        t.callbacks.splice(t.callbacks.indexOf(e), 1);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t._publish = function () {
            SRTlib.send(`{ "anonymous": true, "function": "DefaultStore.ReturnStatement.t._publish", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
      this.callbacks.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "DefaultStore.ReturnStatement.t._publish.callbacks.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.apply(void 0, t);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  })();
  (DefaultStore.VERSION = _$package_178.version, _$lib_177 = function () {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey17", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return new DefaultStore();
        SRTlib.send("]},");

  });
  var _$getFileNameAndExtension_213 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getFileNameAndExtension_213", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.lastIndexOf(".");
        SRTlib.send("]},");

    return -1 === t || t === e.length - 1 ? {
      name: e,
      extension: void 0
    } : {
      name: e.slice(0, t),
      extension: e.slice(t + 1)
    };
        SRTlib.send("]},");

  }, _$mimeTypes_225 = {
    md: "text/markdown",
    markdown: "text/markdown",
    mp4: "video/mp4",
    mp3: "audio/mp3",
    svg: "image/svg+xml",
    jpg: "image/jpeg",
    png: "image/png",
    gif: "image/gif",
    heic: "image/heic",
    heif: "image/heif",
    yaml: "text/yaml",
    yml: "text/yaml",
    csv: "text/csv",
    tsv: "text/tab-separated-values",
    tab: "text/tab-separated-values",
    avi: "video/x-msvideo",
    mks: "video/x-matroska",
    mkv: "video/x-matroska",
    mov: "video/quicktime",
    doc: "application/msword",
    docm: "application/vnd.ms-word.document.macroenabled.12",
    docx: "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    dot: "application/msword",
    dotm: "application/vnd.ms-word.template.macroenabled.12",
    dotx: "application/vnd.openxmlformats-officedocument.wordprocessingml.template",
    xla: "application/vnd.ms-excel",
    xlam: "application/vnd.ms-excel.addin.macroenabled.12",
    xlc: "application/vnd.ms-excel",
    xlf: "application/x-xliff+xml",
    xlm: "application/vnd.ms-excel",
    xls: "application/vnd.ms-excel",
    xlsb: "application/vnd.ms-excel.sheet.binary.macroenabled.12",
    xlsm: "application/vnd.ms-excel.sheet.macroenabled.12",
    xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    xlt: "application/vnd.ms-excel",
    xltm: "application/vnd.ms-excel.template.macroenabled.12",
    xltx: "application/vnd.openxmlformats-officedocument.spreadsheetml.template",
    xlw: "application/vnd.ms-excel",
    txt: "text/plain",
    text: "text/plain",
    conf: "text/plain",
    log: "text/plain",
    pdf: "application/pdf"
  }, _$getFileType_214 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getFileType_214", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.name ? _$getFileNameAndExtension_213(e.name).extension : null;
        SRTlib.send("]},");

    return (t = t ? t.toLowerCase() : null, e.type ? e.type : t && _$mimeTypes_225[t] ? _$mimeTypes_225[t] : "application/octet-stream");
        SRTlib.send("]},");

  };
  function encodeFilename(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = "";
        SRTlib.send("]},");

    return e.replace(/[^A-Z0-9]/gi, function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement11", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return (t += "-" + (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.charCodeAt(0).toString(32);
                SRTlib.send("]},");

      })(e), "/");
            SRTlib.send("]},");

    }) + t;
        SRTlib.send("]},");

  }
  var _$generateFileID_206 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$generateFileID_206", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = "uppy";
        SRTlib.send("]},");

    return ("string" == typeof e.name && (t += "-" + encodeFilename(e.name.toLowerCase())), void 0 !== e.type && (t += "-" + e.type), e.meta && "string" == typeof e.meta.relativePath && (t += "-" + encodeFilename(e.meta.relativePath.toLowerCase())), void 0 !== e.data.size && (t += "-" + e.data.size), void 0 !== e.data.lastModified && (t += "-" + e.data.lastModified), t);
        SRTlib.send("]},");

  }, _$supportsUploadProgress_99 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$supportsUploadProgress_99", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ((null == e && (e = "undefined" != typeof navigator ? navigator.userAgent : null), !e)) {
            SRTlib.send("]},");

      return !0;
    }
    var t = (/Edge\/(\d+\.\d+)/).exec(e);
    if (!t) {
            SRTlib.send("]},");

      return !0;
    }
    var r = t[1].split("."), n = r[0], i = r[1];
        SRTlib.send("]},");

    return (n = parseInt(n, 10), i = parseInt(i, 10), n < 15 || 15 === n && i < 15063 || n > 18 || 18 === n && i >= 18218);
        SRTlib.send("]},");

  };
  function __pad_218(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return 2 !== e.length ? 0 + e : e;
        SRTlib.send("]},");

  }
  var _$getTimeStamp_218 = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$getTimeStamp_218", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = new Date();
        SRTlib.send("]},");

    return __pad_218(e.getHours().toString()) + ":" + __pad_218(e.getMinutes().toString()) + ":" + __pad_218(e.getSeconds().toString());
        SRTlib.send("]},");

  }, justErrorsLogger = {
    debug: function () {
            SRTlib.send(`{ "anonymous": true, "function": "justErrorsLogger.debug", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    },
    warn: function () {
            SRTlib.send(`{ "anonymous": true, "function": "justErrorsLogger.warn", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    },
    error: function () {
            SRTlib.send(`{ "anonymous": true, "function": "justErrorsLogger.error", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var e, t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];
            SRTlib.send("]},");

      return (e = console).error.apply(e, ["[Uppy] [" + _$getTimeStamp_218() + "]"].concat(r));
            SRTlib.send("]},");

    }
  }, debugLogger = {
    debug: function () {
            SRTlib.send(`{ "anonymous": true, "function": "debugLogger.debug", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var e = console.debug || console.log, t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];
      e.call.apply(e, [console, "[Uppy] [" + _$getTimeStamp_218() + "]"].concat(r));
            SRTlib.send("]},");

    },
    warn: function () {
            SRTlib.send(`{ "anonymous": true, "function": "debugLogger.warn", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var e, t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];
            SRTlib.send("]},");

      return (e = console).warn.apply(e, ["[Uppy] [" + _$getTimeStamp_218() + "]"].concat(r));
            SRTlib.send("]},");

    },
    error: function () {
            SRTlib.send(`{ "anonymous": true, "function": "debugLogger.error", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var e, t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];
            SRTlib.send("]},");

      return (e = console).error.apply(e, ["[Uppy] [" + _$getTimeStamp_218() + "]"].concat(r));
            SRTlib.send("]},");

    }
  }, _$loggers_98 = {
    justErrorsLogger: justErrorsLogger,
    debugLogger: debugLogger
  }, _$preact_51 = {
    exports: {}
  };
  (!(function () {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey20", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    "use strict";
    function e() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    }
    function t(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n, i, o, s, a = k;
      for (s = arguments.length; s-- > 2; ) w.push(arguments[s]);
      for (r && null != r.children && (w.length || w.push(r.children), delete r.children); w.length; ) if ((i = w.pop()) && void 0 !== i.pop) for (s = i.length; s--; ) w.push(i[s]); else ("boolean" == typeof i && (i = null), (o = "function" != typeof t) && (null == i ? i = "" : "number" == typeof i ? i = String(i) : "string" != typeof i && (o = !1)), o && n ? a[a.length - 1] += i : a === k ? a = [i] : a.push(i), n = o);
      var u = new e();
            SRTlib.send("]},");

      return (u.nodeName = t, u.children = a, u.attributes = null == r ? void 0 : r, u.key = null == r ? void 0 : r.key, void 0 !== b.vnode && b.vnode(u), u);
            SRTlib.send("]},");

    }
    function r(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      for (var r in t) e[r] = t[r];
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    }
    function n(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      !e.__d && (e.__d = !0) && 1 == P.push(e) && (b.debounceRendering || C)(i);
            SRTlib.send("]},");

    }
    function i() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e, t = P;
      for (P = []; e = t.pop(); ) e.__d && y(e);
            SRTlib.send("]},");

    }
    function o(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return e.__n === t || e.nodeName.toLowerCase() === t.toLowerCase();
            SRTlib.send("]},");

    }
    function s(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = r({}, e.attributes);
      t.children = e.children;
      var n = e.nodeName.defaultProps;
      if (void 0 !== n) for (var i in n) void 0 === t[i] && (t[i] = n[i]);
            SRTlib.send("]},");

      return t;
            SRTlib.send("]},");

    }
    function a(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = e.parentNode;
      t && t.removeChild(e);
            SRTlib.send("]},");

    }
    function u(e, t, r, n, i) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

      if (("className" === t && (t = "class"), "key" === t)) ; else if ("ref" === t) (r && r(null), n && n(e)); else if ("class" !== t || i) if ("style" === t) {
        if ((n && "string" != typeof n && "string" != typeof r || (e.style.cssText = n || ""), n && "object" == typeof n)) {
          if ("string" != typeof r) for (var o in r) (o in n) || (e.style[o] = "");
          for (var o in n) e.style[o] = "number" == typeof n[o] && !1 === S.test(o) ? n[o] + "px" : n[o];
        }
      } else if ("dangerouslySetInnerHTML" === t) n && (e.innerHTML = n.__html || ""); else if ("o" == t[0] && "n" == t[1]) {
        var s = t !== (t = t.replace(/Capture$/, ""));
        (t = t.toLowerCase().substring(2), n ? r || e.addEventListener(t, l, s) : e.removeEventListener(t, l, s), (e.__l || (e.__l = {}))[t] = n);
      } else if ("list" !== t && "type" !== t && !i && (t in e)) (!(function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey18", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        try {
          e[t] = r;
        } catch (n) {}
                SRTlib.send("]},");

      })(e, t, null == n ? "" : n), null != n && !1 !== n || e.removeAttribute(t)); else {
        var a = i && t !== (t = t.replace(/^xlink:?/, ""));
        null == n || !1 === n ? a ? e.removeAttributeNS("http://www.w3.org/1999/xlink", t.toLowerCase()) : e.removeAttribute(t) : "function" != typeof n && (a ? e.setAttributeNS("http://www.w3.org/1999/xlink", t.toLowerCase(), n) : e.setAttribute(t, n));
      } else e.className = n || "";
            SRTlib.send("]},");

    }
    function l(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.__l[e.type](b.event && b.event(e) || e);
            SRTlib.send("]},");

    }
    function c() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var e; e = A.pop(); ) (b.afterMount && b.afterMount(e), e.componentDidMount && e.componentDidMount());
            SRTlib.send("]},");

    }
    function p(e, t, r, n, i, l) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 6, "calls" : [`);

      E++ || ($ = null != i && void 0 !== i.ownerSVGElement, F = null != e && !(("__preactattr_" in e)));
      var p = (function e(t, r, n, i, l) {
                SRTlib.send(`{ "anonymous": true, "function": "p.e", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

        var c = t, p = $;
        if ((null != r && "boolean" != typeof r || (r = ""), "string" == typeof r || "number" == typeof r)) {
                    SRTlib.send("]},");

          return (t && void 0 !== t.splitText && t.parentNode && (!t._component || l) ? t.nodeValue != r && (t.nodeValue = r) : (c = document.createTextNode(r), t && (t.parentNode && t.parentNode.replaceChild(c, t), h(t, !0))), c.__preactattr_ = !0, c);
        }
        var d, _, y = r.nodeName;
        if ("function" == typeof y) {
                    SRTlib.send("]},");

          return (function (e, t, r, n) {
                        SRTlib.send(`{ "anonymous": true, "function": "p.e.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

            for (var i = e && e._component, o = i, a = e, u = i && e._componentConstructor === t.nodeName, l = u, c = s(t); i && !l && (i = i.__u); ) l = i.constructor === t.nodeName;
                        SRTlib.send("]},");

            return (i && l && (!n || i._component) ? (g(i, c, 3, r, n), e = i.base) : (o && !u && (m(o), e = a = null), i = f(t.nodeName, c, r), e && !i.__b && (i.__b = e, a = null), g(i, c, 1, r, n), e = i.base, a && e !== a && (a._component = null, h(a, !1))), e);
                        SRTlib.send("]},");

          })(t, r, n, i);
        }
        if (($ = "svg" === y || "foreignObject" !== y && $, y = String(y), (!t || !o(t, y)) && (d = y, (_ = $ ? document.createElementNS("http://www.w3.org/2000/svg", d) : document.createElement(d)).__n = d, c = _, t))) {
          for (; t.firstChild; ) c.appendChild(t.firstChild);
          (t.parentNode && t.parentNode.replaceChild(c, t), h(t, !0));
        }
        var v = c.firstChild, b = c.__preactattr_, w = r.children;
        if (null == b) {
          b = c.__preactattr_ = {};
          for (var k = c.attributes, C = k.length; C--; ) b[k[C].name] = k[C].value;
        }
                SRTlib.send("]},");

        return (!F && w && 1 === w.length && "string" == typeof w[0] && null != v && void 0 !== v.splitText && null == v.nextSibling ? v.nodeValue != w[0] && (v.nodeValue = w[0]) : (w && w.length || null != v) && (function (t, r, n, i, s) {
                    SRTlib.send(`{ "anonymous": true, "function": "p.e.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

          var u, l, c, p, d, f, _, g, y = t.childNodes, m = [], v = {}, b = 0, w = 0, k = y.length, C = 0, S = r ? r.length : 0;
          if (0 !== k) for (var P = 0; P < k; P++) {
            var A = y[P], E = A.__preactattr_, $ = S && E ? A._component ? A._component.__k : E.key : null;
            null != $ ? (b++, v[$] = A) : (E || (void 0 !== A.splitText ? !s || A.nodeValue.trim() : s)) && (m[C++] = A);
          }
          if (0 !== S) for (var P = 0; P < S; P++) {
            (p = r[P], d = null);
            var $ = p.key;
            if (null != $) b && void 0 !== v[$] && (d = v[$], v[$] = void 0, b--); else if (!d && w < C) for (u = w; u < C; u++) if (void 0 !== m[u] && (f = l = m[u], g = s, "string" == typeof (_ = p) || "number" == typeof _ ? void 0 !== f.splitText : "string" == typeof _.nodeName ? !f._componentConstructor && o(f, _.nodeName) : g || f._componentConstructor === _.nodeName)) {
              (d = l, m[u] = void 0, u === C - 1 && C--, u === w && w++);
              break;
            }
            (d = e(d, p, n, i), c = y[P], d && d !== t && d !== c && (null == c ? t.appendChild(d) : d === c.nextSibling ? a(c) : t.insertBefore(d, c)));
          }
          if (b) for (var P in v) void 0 !== v[P] && h(v[P], !1);
          for (; w <= C; ) void 0 !== (d = m[C--]) && h(d, !1);
                    SRTlib.send("]},");

        })(c, w, n, i, F || null != b.dangerouslySetInnerHTML), (function (e, t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "p.e.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          var n;
          for (n in r) t && null != t[n] || null == r[n] || u(e, n, r[n], r[n] = void 0, $);
          for (n in t) "children" === n || "innerHTML" === n || (n in r) && t[n] === ("value" === n || "checked" === n ? e[n] : r[n]) || u(e, n, r[n], r[n] = t[n], $);
                    SRTlib.send("]},");

        })(c, r.attributes, b), $ = p, c);
                SRTlib.send("]},");

      })(e, t, r, n, l);
            SRTlib.send("]},");

      return (i && p.parentNode !== i && i.appendChild(p), --E || (F = !1, l || c()), p);
            SRTlib.send("]},");

    }
    function h(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = e._component;
      r ? m(r) : (null != e.__preactattr_ && e.__preactattr_.ref && e.__preactattr_.ref(null), !1 !== t && null != e.__preactattr_ || a(e), d(e));
            SRTlib.send("]},");

    }
    function d(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (e = e.lastChild; e; ) {
        var t = e.previousSibling;
        (h(e, !0), e = t);
      }
            SRTlib.send("]},");

    }
    function f(e, t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n, i = T[e.name];
      if ((e.prototype && e.prototype.render ? (n = new e(t, r), v.call(n, t, r)) : ((n = new v(t, r)).constructor = e, n.render = _), i)) for (var o = i.length; o--; ) if (i[o].constructor === e) {
        (n.__b = i[o].__b, i.splice(o, 1));
        break;
      }
            SRTlib.send("]},");

      return n;
            SRTlib.send("]},");

    }
    function _(e, t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            SRTlib.send("]},");

      return this.constructor(e, r);
            SRTlib.send("]},");

    }
    function g(e, t, r, i, o) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

      e.__x || (e.__x = !0, (e.__r = t.ref) && delete t.ref, (e.__k = t.key) && delete t.key, !e.base || o ? e.componentWillMount && e.componentWillMount() : e.componentWillReceiveProps && e.componentWillReceiveProps(t, i), i && i !== e.context && (e.__c || (e.__c = e.context), e.context = i), e.__p || (e.__p = e.props), e.props = t, e.__x = !1, 0 !== r && (1 !== r && !1 === b.syncComponentUpdates && e.base ? n(e) : y(e, 1, o)), e.__r && e.__r(e));
            SRTlib.send("]},");

    }
    function y(e, t, n, i) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

      if (!e.__x) {
        var o, a, u, l = e.props, d = e.state, _ = e.context, v = e.__p || l, w = e.__s || d, k = e.__c || _, C = e.base, S = e.__b, P = C || S, $ = e._component, F = !1;
        if ((C && (e.props = v, e.state = w, e.context = k, 2 !== t && e.shouldComponentUpdate && !1 === e.shouldComponentUpdate(l, d, _) ? F = !0 : e.componentWillUpdate && e.componentWillUpdate(l, d, _), e.props = l, e.state = d, e.context = _), e.__p = e.__s = e.__c = e.__b = null, e.__d = !1, !F)) {
          (o = e.render(l, d, _), e.getChildContext && (_ = r(r({}, _), e.getChildContext())));
          var T, O, x = o && o.nodeName;
          if ("function" == typeof x) {
            var R = s(o);
            ((a = $) && a.constructor === x && R.key == a.__k ? g(a, R, 1, _, !1) : (T = a, e._component = a = f(x, R, _), a.__b = a.__b || S, a.__u = e, g(a, R, 0, _, !1), y(a, 1, n, !0)), O = a.base);
          } else (u = P, (T = $) && (u = e._component = null), (P || 1 === t) && (u && (u._component = null), O = p(u, o, _, n || !C, P && P.parentNode, !0)));
          if (P && O !== P && a !== $) {
            var U = P.parentNode;
            U && O !== U && (U.replaceChild(O, P), T || (P._component = null, h(P, !1)));
          }
          if ((T && m(T), e.base = O, O && !i)) {
            for (var B = e, I = e; I = I.__u; ) (B = I).base = O;
            (O._component = B, O._componentConstructor = B.constructor);
          }
        }
        if ((!C || n ? A.unshift(e) : F || (e.componentDidUpdate && e.componentDidUpdate(v, w, k), b.afterUpdate && b.afterUpdate(e)), null != e.__h)) for (; e.__h.length; ) e.__h.pop().call(e);
        E || i || c();
      }
            SRTlib.send("]},");

    }
    function m(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      b.beforeUnmount && b.beforeUnmount(e);
      var t = e.base;
      (e.__x = !0, e.componentWillUnmount && e.componentWillUnmount(), e.base = null);
      var r = e._component;
      (r ? m(r) : t && (t.__preactattr_ && t.__preactattr_.ref && t.__preactattr_.ref(null), e.__b = t, a(t), (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey19", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = e.constructor.name;
        (T[t] || (T[t] = [])).push(e);
                SRTlib.send("]},");

      })(e), d(t)), e.__r && e.__r(null));
            SRTlib.send("]},");

    }
    function v(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (this.__d = !0, this.context = t, this.props = e, this.state = this.state || ({}));
            SRTlib.send("]},");

    }
    var b = {}, w = [], k = [], C = "function" == typeof Promise ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout, S = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i, P = [], A = [], E = 0, $ = !1, F = !1, T = {};
    r(v.prototype, {
      setState: function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "r.setState", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var i = this.state;
        (this.__s || (this.__s = r({}, i)), r(i, "function" == typeof e ? e(i, this.props) : e), t && (this.__h = this.__h || []).push(t), n(this));
                SRTlib.send("]},");

      },
      forceUpdate: function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "r.forceUpdate", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e && (this.__h = this.__h || []).push(e), y(this, 2));
                SRTlib.send("]},");

      },
      render: function () {
                SRTlib.send(`{ "anonymous": true, "function": "r.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

      }
    });
    var O = {
      h: t,
      createElement: t,
      cloneElement: function (e, n) {
                SRTlib.send(`{ "anonymous": true, "function": "O.cloneElement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return t(e.nodeName, r(r({}, e.attributes), n), arguments.length > 2 ? [].slice.call(arguments, 2) : e.children);
                SRTlib.send("]},");

      },
      Component: v,
      render: function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "O.render", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return p(r, e, {}, !1, t, !1);
                SRTlib.send("]},");

      },
      rerender: i,
      options: b
    };
    _$preact_51.exports = O;
        SRTlib.send("]},");

  })(), _$preact_51 = _$preact_51.exports);
  var _$isDOMElement_220 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$isDOMElement_220", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e && "object" == typeof e && e.nodeType === Node.ELEMENT_NODE;
        SRTlib.send("]},");

  }, _$findDOMElement_205 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$findDOMElement_205", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (void 0 === t && (t = document), "string" == typeof e ? t.querySelector(e) : _$isDOMElement_220(e) ? e : void 0);
        SRTlib.send("]},");

  };
  function ___extends_96() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_96 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var _$Plugin_96 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (this.uppy = e, this.opts = t || ({}), this.update = this.update.bind(this), this.mount = this.mount.bind(this), this.install = this.install.bind(this), this.uninstall = this.uninstall.bind(this));
            SRTlib.send("]},");

    }
    var t = e.prototype;
        SRTlib.send("]},");

    return (t.getPluginState = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.getPluginState", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.uppy.getState().plugins[this.id] || ({});
            SRTlib.send("]},");

    }, t.setPluginState = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.setPluginState", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t, r = this.uppy.getState().plugins;
      this.uppy.setState({
        plugins: ___extends_96({}, r, (t = {}, t[this.id] = ___extends_96({}, r[this.id], {}, e), t))
      });
            SRTlib.send("]},");

    }, t.setOptions = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.setOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.opts = ___extends_96({}, this.opts, {}, e), this.setPluginState());
            SRTlib.send("]},");

    }, t.update = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.update", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      void 0 !== this.el && this._updateUI && this._updateUI(e);
            SRTlib.send("]},");

    }, t.afterUpdate = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.afterUpdate", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    }, t.onMount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.onMount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    }, t.mount = function (t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.mount", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n, i, o, s, a = this, u = r.id, l = _$findDOMElement_205(t);
      if (l) {
                SRTlib.send("]},");

        return (this.isTargetDOMEl = !0, this.rerender = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.mount.ReturnStatement.rerender", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          a.uppy.getPlugin(a.id) && (a.el = _$preact_51.render(a.render(e), l, a.el), a.afterUpdate());
                    SRTlib.send("]},");

        }, this._updateUI = (n = this.rerender, i = null, o = null, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.mount.ReturnStatement._updateUI", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                    SRTlib.send("]},");

          return (o = t, i || (i = Promise.resolve().then(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.mount.ReturnStatement._updateUI.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return (i = null, n.apply(void 0, o));
                        SRTlib.send("]},");

          })), i);
                    SRTlib.send("]},");

        }), this.uppy.log("Installing " + u + " to a DOM element '" + t + "'"), this.opts.replaceTargetContent && (l.innerHTML = ""), this.el = _$preact_51.render(this.render(this.uppy.getState()), l), this.onMount(), this.el);
      }
      if ("object" == typeof t && t instanceof e) s = t; else if ("function" == typeof t) {
        var c = t;
        this.uppy.iteratePlugins(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.mount.uppy.iteratePlugins", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if (e instanceof c) {
                        SRTlib.send("]},");

            return (s = e, !1);
          }
                    SRTlib.send("]},");

        });
      }
      if (s) {
                SRTlib.send("]},");

        return (this.uppy.log("Installing " + u + " to " + s.id), this.parent = s, this.el = s.addTarget(r), this.onMount(), this.el);
      }
      this.uppy.log("Not installing " + u);
      var p = "Invalid target option given to " + u + ".";
      throw new Error(p += "function" == typeof t ? " The given target is not a Plugin class. Please check that you're not specifying a React Component instead of a plugin. If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly." : "If you meant to target an HTML element, please make sure that the element exists. Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. (see https://github.com/transloadit/uppy/issues/1042)\n\nIf you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.");
            SRTlib.send("]},");

    }, t.render = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      throw new Error("Extend the render method to add your plugin to a DOM element");
            SRTlib.send("]},");

    }, t.addTarget = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.addTarget", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      throw new Error("Extend the addTarget method to add your plugin to another plugin's target");
            SRTlib.send("]},");

    }, t.unmount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.unmount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.isTargetDOMEl && this.el && this.el.parentNode && this.el.parentNode.removeChild(this.el);
            SRTlib.send("]},");

    }, t.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    }, t.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Plugin_96.ReturnStatement.t.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.unmount();
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  })(), _$package_101 = {
    version: "1.10.5"
  }, _$lib_97 = {};
  function ___extends_97() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_97 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  function _defineProperties(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    for (var r = 0; r < t.length; r++) {
      var n = t[r];
      (n.enumerable = n.enumerable || !1, n.configurable = !0, ("value" in n) && (n.writable = !0), Object.defineProperty(e, n.key, n));
    }
        SRTlib.send("]},");

  }
  function _wrapNativeSuper(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = "function" == typeof Map ? new Map() : void 0;
        SRTlib.send("]},");

    return (_wrapNativeSuper = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement12", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (null === e || (r = e, -1 === Function.toString.call(r).indexOf("[native code]"))) {
                SRTlib.send("]},");

        return e;
      }
      var r;
      if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
      if (void 0 !== t) {
        if (t.has(e)) {
                    SRTlib.send("]},");

          return t.get(e);
        }
        t.set(e, n);
      }
      function n() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return _construct(e, arguments, _getPrototypeOf(this).constructor);
                SRTlib.send("]},");

      }
            SRTlib.send("]},");

      return (n.prototype = Object.create(e.prototype, {
        constructor: {
          value: n,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      }), _setPrototypeOf(n, e));
            SRTlib.send("]},");

    })(e);
        SRTlib.send("]},");

  }
  function _construct(e, t, r) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        SRTlib.send("]},");

    return (_construct = (function () {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if ("undefined" == typeof Reflect || !Reflect.construct) {
                SRTlib.send("]},");

        return !1;
      }
      if (Reflect.construct.sham) {
                SRTlib.send("]},");

        return !1;
      }
      if ("function" == typeof Proxy) {
                SRTlib.send("]},");

        return !0;
      }
      try {
                SRTlib.send("]},");

        return (Date.prototype.toString.call(Reflect.construct(Date, [], function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply.ReturnStatement.Date.prototype.toString.call", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

        })), !0);
      } catch (e) {
                SRTlib.send("]},");

        return !1;
      }
            SRTlib.send("]},");

    })() ? Reflect.construct : function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply6", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = [null];
      n.push.apply(n, t);
      var i = new (Function.bind.apply(e, n))();
            SRTlib.send("]},");

      return (r && _setPrototypeOf(i, r.prototype), i);
            SRTlib.send("]},");

    }).apply(null, arguments);
        SRTlib.send("]},");

  }
  function _setPrototypeOf(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (_setPrototypeOf = Object.setPrototypeOf || (function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement13", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return (e.__proto__ = t, e);
            SRTlib.send("]},");

    }))(e, t);
        SRTlib.send("]},");

  }
  function _getPrototypeOf(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement14", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.__proto__ || Object.getPrototypeOf(e);
            SRTlib.send("]},");

    })(e);
        SRTlib.send("]},");

  }
  var __justErrorsLogger_97 = _$loggers_98.justErrorsLogger, __debugLogger_97 = _$loggers_98.debugLogger, RestrictionError = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "RestrictionError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var t, r = arguments.length, n = new Array(r), i = 0; i < r; i++) n[i] = arguments[i];
            SRTlib.send("]},");

      return ((t = e.call.apply(e, [this].concat(n)) || this).isRestriction = !0, t);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r, n);
        SRTlib.send("]},");

  })(_wrapNativeSuper(Error)), Uppy = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "Uppy", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      this.defaultLocale = {
        strings: {
          addBulkFilesFailed: {
            0: "Failed to add %{smart_count} file due to an internal error",
            1: "Failed to add %{smart_count} files due to internal errors"
          },
          youCanOnlyUploadX: {
            0: "You can only upload %{smart_count} file",
            1: "You can only upload %{smart_count} files"
          },
          youHaveToAtLeastSelectX: {
            0: "You have to select at least %{smart_count} file",
            1: "You have to select at least %{smart_count} files"
          },
          exceedsSize2: "%{backwardsCompat} %{size}",
          exceedsSize: "This file exceeds maximum allowed size of",
          youCanOnlyUploadFileTypes: "You can only upload: %{types}",
          noNewAlreadyUploading: "Cannot add new files: already uploading",
          noDuplicates: "Cannot add the duplicate file '%{fileName}', it already exists",
          companionError: "Connection with Companion failed",
          companionUnauthorizeHint: "To unauthorize to your %{provider} account, please go to %{url}",
          failedToUpload: "Failed to upload %{file}",
          noInternetConnection: "No Internet connection",
          connectedToInternet: "Connected to the Internet",
          noFilesFound: "You have no files or folders here",
          selectX: {
            0: "Select %{smart_count}",
            1: "Select %{smart_count}"
          },
          selectAllFilesFromFolderNamed: "Select all files from folder %{name}",
          unselectAllFilesFromFolderNamed: "Unselect all files from folder %{name}",
          selectFileNamed: "Select file %{name}",
          unselectFileNamed: "Unselect file %{name}",
          openFolderNamed: "Open folder %{name}",
          cancel: "Cancel",
          logOut: "Log out",
          filter: "Filter",
          resetFilter: "Reset filter",
          loading: "Loading...",
          authenticateWithTitle: "Please authenticate with %{pluginName} to select files",
          authenticateWith: "Connect to %{pluginName}",
          emptyFolderAdded: "No files were added from empty folder",
          folderAdded: {
            0: "Added %{smart_count} file from %{folder}",
            1: "Added %{smart_count} files from %{folder}"
          }
        }
      };
      var r = {
        id: "uppy",
        autoProceed: !1,
        allowMultipleUploads: !0,
        debug: !1,
        restrictions: {
          maxFileSize: null,
          maxNumberOfFiles: null,
          minNumberOfFiles: null,
          allowedFileTypes: null
        },
        meta: {},
        onBeforeFileAdded: function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "r.onBeforeFileAdded", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                    SRTlib.send("]},");

          return e;
                    SRTlib.send("]},");

        },
        onBeforeUpload: function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "r.onBeforeUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return e;
                    SRTlib.send("]},");

        },
        store: _$lib_177(),
        logger: __justErrorsLogger_97
      };
      if ((this.opts = ___extends_97({}, r, {}, e, {
        restrictions: ___extends_97({}, r.restrictions, {}, e && e.restrictions)
      }), e && e.logger && e.debug ? this.log("You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.", "warning") : e && e.debug && (this.opts.logger = __debugLogger_97), this.log("Using Core v" + this.constructor.VERSION), this.opts.restrictions.allowedFileTypes && null !== this.opts.restrictions.allowedFileTypes && !Array.isArray(this.opts.restrictions.allowedFileTypes))) throw new TypeError("`restrictions.allowedFileTypes` must be an array");
      (this.i18nInit(), this.plugins = {}, this.getState = this.getState.bind(this), this.getPlugin = this.getPlugin.bind(this), this.setFileMeta = this.setFileMeta.bind(this), this.setFileState = this.setFileState.bind(this), this.log = this.log.bind(this), this.info = this.info.bind(this), this.hideInfo = this.hideInfo.bind(this), this.addFile = this.addFile.bind(this), this.removeFile = this.removeFile.bind(this), this.pauseResume = this.pauseResume.bind(this), this._calculateProgress = _$lodashThrottle_43(this._calculateProgress.bind(this), 500, {
        leading: !0,
        trailing: !0
      }), this.updateOnlineStatus = this.updateOnlineStatus.bind(this), this.resetProgress = this.resetProgress.bind(this), this.pauseAll = this.pauseAll.bind(this), this.resumeAll = this.resumeAll.bind(this), this.retryAll = this.retryAll.bind(this), this.cancelAll = this.cancelAll.bind(this), this.retryUpload = this.retryUpload.bind(this), this.upload = this.upload.bind(this), this.emitter = _$namespaceEmitter_47(), this.on = this.on.bind(this), this.off = this.off.bind(this), this.once = this.emitter.once.bind(this.emitter), this.emit = this.emitter.emit.bind(this.emitter), this.preProcessors = [], this.uploaders = [], this.postProcessors = [], this.store = this.opts.store, this.setState({
        plugins: {},
        files: {},
        currentUploads: {},
        allowNewUpload: !0,
        capabilities: {
          uploadProgress: _$supportsUploadProgress_99(),
          individualCancellation: !0,
          resumableUploads: !1
        },
        totalProgress: 0,
        meta: ___extends_97({}, this.opts.meta),
        info: {
          isHidden: !0,
          type: "info",
          message: ""
        }
      }), this._storeUnsubscribe = this.store.subscribe(function (e, r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_storeUnsubscribe.store.subscribe", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        (t.emit("state-update", e, r, n), t.updateAll(r));
                SRTlib.send("]},");

      }), this.opts.debug && "undefined" != typeof window && (window[this.opts.id] = this), this._addListeners());
            SRTlib.send("]},");

    }
    var t, r, n = e.prototype;
        SRTlib.send("]},");

    return (n.on = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.on", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return (this.emitter.on(e, t), this);
            SRTlib.send("]},");

    }, n.off = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.off", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return (this.emitter.off(e, t), this);
            SRTlib.send("]},");

    }, n.updateAll = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.updateAll", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this.iteratePlugins(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.updateAll.iteratePlugins", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t.update(e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, n.setState = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.setState", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this.store.setState(e);
            SRTlib.send("]},");

    }, n.getState = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.getState", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.store.getState();
            SRTlib.send("]},");

    }, n.setFileState = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.setFileState", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r;
      if (!this.getState().files[e]) throw new Error("Can\u2019t set state for " + e + " (the file could have been removed)");
      this.setState({
        files: ___extends_97({}, this.getState().files, (r = {}, r[e] = ___extends_97({}, this.getState().files[e], t), r))
      });
            SRTlib.send("]},");

    }, n.i18nInit = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.i18nInit", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.translator = new _$Translator_200([this.defaultLocale, this.opts.locale]), this.locale = this.translator.locale, this.i18n = this.translator.translate.bind(this.translator), this.i18nArray = this.translator.translateArray.bind(this.translator));
            SRTlib.send("]},");

    }, n.setOptions = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.setOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.opts = ___extends_97({}, this.opts, {}, e, {
        restrictions: ___extends_97({}, this.opts.restrictions, {}, e && e.restrictions)
      }), e.meta && this.setMeta(e.meta), this.i18nInit(), e.locale && this.iteratePlugins(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.setOptions.iteratePlugins", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.setOptions();
                SRTlib.send("]},");

      }), this.setState());
            SRTlib.send("]},");

    }, n.resetProgress = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.resetProgress", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = {
        percentage: 0,
        bytesUploaded: 0,
        uploadComplete: !1,
        uploadStarted: null
      }, t = ___extends_97({}, this.getState().files), r = {};
      (Object.keys(t).forEach(function (n) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.resetProgress.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var i = ___extends_97({}, t[n]);
        (i.progress = ___extends_97({}, i.progress, e), r[n] = i);
                SRTlib.send("]},");

      }), this.setState({
        files: r,
        totalProgress: 0
      }), this.emit("reset-progress"));
            SRTlib.send("]},");

    }, n.addPreProcessor = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.addPreProcessor", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this.preProcessors.push(e);
            SRTlib.send("]},");

    }, n.removePreProcessor = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removePreProcessor", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.preProcessors.indexOf(e);
      -1 !== t && this.preProcessors.splice(t, 1);
            SRTlib.send("]},");

    }, n.addPostProcessor = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.addPostProcessor", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this.postProcessors.push(e);
            SRTlib.send("]},");

    }, n.removePostProcessor = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removePostProcessor", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.postProcessors.indexOf(e);
      -1 !== t && this.postProcessors.splice(t, 1);
            SRTlib.send("]},");

    }, n.addUploader = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.addUploader", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this.uploaders.push(e);
            SRTlib.send("]},");

    }, n.removeUploader = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removeUploader", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.uploaders.indexOf(e);
      -1 !== t && this.uploaders.splice(t, 1);
            SRTlib.send("]},");

    }, n.setMeta = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.setMeta", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = ___extends_97({}, this.getState().meta, e), r = ___extends_97({}, this.getState().files);
      (Object.keys(r).forEach(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.setMeta.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        r[t] = ___extends_97({}, r[t], {
          meta: ___extends_97({}, r[t].meta, e)
        });
                SRTlib.send("]},");

      }), this.log("Adding metadata:"), this.log(e), this.setState({
        meta: t,
        files: r
      }));
            SRTlib.send("]},");

    }, n.setFileMeta = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.setFileMeta", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = ___extends_97({}, this.getState().files);
      if (r[e]) {
        var n = ___extends_97({}, r[e].meta, t);
        (r[e] = ___extends_97({}, r[e], {
          meta: n
        }), this.setState({
          files: r
        }));
      } else this.log("Was trying to set metadata for a file that has been removed: ", e);
            SRTlib.send("]},");

    }, n.getFile = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.getFile", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.getState().files[e];
            SRTlib.send("]},");

    }, n.getFiles = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.getFiles", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.getState().files;
            SRTlib.send("]},");

      return Object.keys(e).map(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.getFiles.ReturnStatement.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e[t];
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, n._checkMinNumberOfFiles = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._checkMinNumberOfFiles", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.opts.restrictions.minNumberOfFiles;
      if (Object.keys(e).length < t) throw new RestrictionError("" + this.i18n("youHaveToAtLeastSelectX", {
        smart_count: t
      }));
            SRTlib.send("]},");

    }, n._checkRestrictions = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._checkRestrictions2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this.opts.restrictions, n = r.maxFileSize, i = r.maxNumberOfFiles, o = r.allowedFileTypes;
      if (i && Object.keys(e).length + 1 > i) throw new RestrictionError("" + this.i18n("youCanOnlyUploadX", {
        smart_count: i
      }));
      if (o && !o.some(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._checkRestrictions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.indexOf("/") > -1 ? !!t.type && _$mimeMatch_46(t.type.replace(/;.*?$/, ""), e) : "." === e[0] && t.extension.toLowerCase() === e.substr(1).toLowerCase();
                SRTlib.send("]},");

      })) {
        var s = o.join(", ");
        throw new RestrictionError(this.i18n("youCanOnlyUploadFileTypes", {
          types: s
        }));
      }
      if (n && null != t.data.size && t.data.size > n) throw new RestrictionError(this.i18n("exceedsSize2", {
        backwardsCompat: this.i18n("exceedsSize"),
        size: _$prettierBytes_100(n)
      }));
            SRTlib.send("]},");

    }, n._showOrLogErrorAndThrow = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._showOrLogErrorAndThrow", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = void 0 === t ? {} : t, n = r.showInformer, i = void 0 === n || n, o = r.file, s = void 0 === o ? null : o, a = r.throwErr, u = void 0 === a || a, l = "object" == typeof e ? e.message : e, c = "object" == typeof e && e.details ? e.details : "", p = l;
      if ((c && (p += " " + c), e.isRestriction ? (this.log(p), this.emit("restriction-failed", s, e)) : this.log(p, "error"), i && this.info({
        message: l,
        details: c
      }, "error", 5e3), u)) throw "object" == typeof e ? e : new Error(e);
            SRTlib.send("]},");

    }, n._assertNewUploadAllowed = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._assertNewUploadAllowed", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      !1 === this.getState().allowNewUpload && this._showOrLogErrorAndThrow(new RestrictionError(this.i18n("noNewAlreadyUploading")), {
        file: e
      });
            SRTlib.send("]},");

    }, n._checkAndCreateFileStateObject = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._checkAndCreateFileStateObject", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = _$getFileType_214(t);
      t.type = r;
      var n, i = this.opts.onBeforeFileAdded(t, e);
      (!1 === i && this._showOrLogErrorAndThrow(new RestrictionError("Cannot add the file because onBeforeFileAdded returned false."), {
        showInformer: !1,
        file: t
      }), "object" == typeof i && i && (t = i), n = t.name ? t.name : "image" === r.split("/")[0] ? r.split("/")[0] + "." + r.split("/")[1] : "noname");
      var o = _$getFileNameAndExtension_213(n).extension, s = t.isRemote || !1, a = _$generateFileID_206(t);
      e[a] && this._showOrLogErrorAndThrow(new RestrictionError(this.i18n("noDuplicates", {
        fileName: n
      })), {
        file: t
      });
      var u = t.meta || ({});
      (u.name = n, u.type = r);
      var l = isFinite(t.data.size) ? t.data.size : null, c = {
        source: t.source || "",
        id: a,
        name: n,
        extension: o || "",
        meta: ___extends_97({}, this.getState().meta, {}, u),
        type: r,
        data: t.data,
        progress: {
          percentage: 0,
          bytesUploaded: 0,
          bytesTotal: l,
          uploadComplete: !1,
          uploadStarted: null
        },
        size: l,
        isRemote: s,
        remote: t.remote || "",
        preview: t.preview
      };
      try {
        this._checkRestrictions(e, c);
      } catch (err) {
        this._showOrLogErrorAndThrow(err, {
          file: c
        });
      }
            SRTlib.send("]},");

      return c;
            SRTlib.send("]},");

    }, n._startIfAutoProceed = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._startIfAutoProceed", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      this.opts.autoProceed && !this.scheduledAutoProceed && (this.scheduledAutoProceed = setTimeout(function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._startIfAutoProceed.scheduledAutoProceed.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (e.scheduledAutoProceed = null, e.upload().catch(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._startIfAutoProceed.scheduledAutoProceed.setTimeout.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          t.isRestriction || e.log(t.stack || t.message || t);
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      }, 4));
            SRTlib.send("]},");

    }, n.addFile = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.addFile", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t;
      this._assertNewUploadAllowed(e);
      var r = this.getState().files, n = this._checkAndCreateFileStateObject(r, e);
            SRTlib.send("]},");

      return (this.setState({
        files: ___extends_97({}, r, (t = {}, t[n.id] = n, t))
      }), this.emit("file-added", n), this.log("Added file: " + n.name + ", " + n.id + ", mime type: " + n.type), this._startIfAutoProceed(), n.id);
            SRTlib.send("]},");

    }, n.addFiles = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.addFiles3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      this._assertNewUploadAllowed();
      for (var r = ___extends_97({}, this.getState().files), n = [], i = [], o = 0; o < e.length; o++) try {
        var s = this._checkAndCreateFileStateObject(r, e[o]);
        (n.push(s), r[s.id] = s);
      } catch (u) {
        u.isRestriction || i.push(u);
      }
      if ((this.setState({
        files: r
      }), n.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.addFiles", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t.emit("file-added", e);
                SRTlib.send("]},");

      }), n.length > 5 ? this.log("Added batch of " + n.length + " files") : Object.keys(n).forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.addFiles.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t.log("Added file: " + n[e].name + "\n id: " + n[e].id + "\n type: " + n[e].type);
                SRTlib.send("]},");

      }), n.length > 0 && this._startIfAutoProceed(), i.length > 0)) {
        var a = "Multiple errors occurred while adding files:\n";
        (i.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.addFiles2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          a += "\n * " + e.message;
                    SRTlib.send("]},");

        }), this.info({
          message: this.i18n("addBulkFilesFailed", {
            smart_count: i.length
          }),
          details: a
        }, "error", 5e3));
        var u = new Error(a);
        throw (u.errors = i, u);
      }
            SRTlib.send("]},");

    }, n.removeFiles = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removeFiles4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = this.getState(), n = r.files, i = r.currentUploads, o = ___extends_97({}, n), s = ___extends_97({}, i), a = Object.create(null);
      function u(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return void 0 === a[e];
                SRTlib.send("]},");

      }
      e.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removeFiles", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n[e] && (a[e] = n[e], delete o[e]);
                SRTlib.send("]},");

      });
      var l = [];
      (Object.keys(s).forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removeFiles.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = i[e].fileIDs.filter(u);
        0 !== t.length ? s[e] = ___extends_97({}, i[e], {
          fileIDs: t
        }) : l.push(e);
                SRTlib.send("]},");

      }), l.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removeFiles2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        delete s[e];
                SRTlib.send("]},");

      }));
      var c = {
        currentUploads: s,
        files: o
      };
      (0 === Object.keys(o).length && (c.allowNewUpload = !0, c.error = null), this.setState(c), this._calculateTotalProgress());
      var p = Object.keys(a);
      (p.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removeFiles3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t.emit("file-removed", a[e]);
                SRTlib.send("]},");

      }), p.length > 5 ? this.log("Removed " + p.length + " files") : this.log("Removed files: " + p.join(", ")));
            SRTlib.send("]},");

    }, n.removeFile = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removeFile", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this.removeFiles([e]);
            SRTlib.send("]},");

    }, n.pauseResume = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.pauseResume", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (this.getState().capabilities.resumableUploads && !this.getFile(e).uploadComplete) {
        var t = !this.getFile(e).isPaused;
                SRTlib.send("]},");

        return (this.setFileState(e, {
          isPaused: t
        }), this.emit("upload-pause", e, t), t);
      }
            SRTlib.send("]},");

    }, n.pauseAll = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.pauseAll", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = ___extends_97({}, this.getState().files);
      (Object.keys(e).filter(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.pauseAll.filter.forEach.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return !e[t].progress.uploadComplete && e[t].progress.uploadStarted;
                SRTlib.send("]},");

      }).forEach(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.pauseAll.filter.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = ___extends_97({}, e[t], {
          isPaused: !0
        });
        e[t] = r;
                SRTlib.send("]},");

      }), this.setState({
        files: e
      }), this.emit("pause-all"));
            SRTlib.send("]},");

    }, n.resumeAll = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.resumeAll", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = ___extends_97({}, this.getState().files);
      (Object.keys(e).filter(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.resumeAll.filter.forEach.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return !e[t].progress.uploadComplete && e[t].progress.uploadStarted;
                SRTlib.send("]},");

      }).forEach(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.resumeAll.filter.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = ___extends_97({}, e[t], {
          isPaused: !1,
          error: null
        });
        e[t] = r;
                SRTlib.send("]},");

      }), this.setState({
        files: e
      }), this.emit("resume-all"));
            SRTlib.send("]},");

    }, n.retryAll = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.retryAll2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = ___extends_97({}, this.getState().files), t = Object.keys(e).filter(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.retryAll.t.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e[t].error;
                SRTlib.send("]},");

      });
      (t.forEach(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.retryAll", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = ___extends_97({}, e[t], {
          isPaused: !1,
          error: null
        });
        e[t] = r;
                SRTlib.send("]},");

      }), this.setState({
        files: e,
        error: null
      }), this.emit("retry-all", t));
      var r = this._createUpload(t, {
        forceAllowNewUpload: !0
      });
            SRTlib.send("]},");

      return this._runUpload(r);
            SRTlib.send("]},");

    }, n.cancelAll = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.cancelAll", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.emit("cancel-all");
      var e = this.getState().files, t = Object.keys(e);
      (t.length && this.removeFiles(t), this.setState({
        totalProgress: 0,
        error: null
      }));
            SRTlib.send("]},");

    }, n.retryUpload = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.retryUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.setFileState(e, {
        error: null,
        isPaused: !1
      }), this.emit("upload-retry", e));
      var t = this._createUpload([e], {
        forceAllowNewUpload: !0
      });
            SRTlib.send("]},");

      return this._runUpload(t);
            SRTlib.send("]},");

    }, n.reset = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.reset", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.cancelAll();
            SRTlib.send("]},");

    }, n._calculateProgress = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._calculateProgress", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (this.getFile(e.id)) {
        var r = isFinite(t.bytesTotal) && t.bytesTotal > 0;
        (this.setFileState(e.id, {
          progress: ___extends_97({}, this.getFile(e.id).progress, {
            bytesUploaded: t.bytesUploaded,
            bytesTotal: t.bytesTotal,
            percentage: r ? Math.round(t.bytesUploaded / t.bytesTotal * 100) : 0
          })
        }), this._calculateTotalProgress());
      } else this.log("Not setting progress for a file that has been removed: " + e.id);
            SRTlib.send("]},");

    }, n._calculateTotalProgress = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._calculateTotalProgress3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.getFiles().filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._calculateTotalProgress.e.getFiles.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.progress.uploadStarted || e.progress.preprocess || e.progress.postprocess;
                SRTlib.send("]},");

      });
      if (0 === e.length) {
                SRTlib.send("]},");

        return (this.emit("progress", 0), void this.setState({
          totalProgress: 0
        }));
      }
      var t = e.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._calculateTotalProgress.t", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return null != e.progress.bytesTotal;
                SRTlib.send("]},");

      }), r = e.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._calculateTotalProgress.r", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return null == e.progress.bytesTotal;
                SRTlib.send("]},");

      });
      if (0 !== t.length) {
        var n = t.reduce(function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._calculateTotalProgress.n", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                    SRTlib.send("]},");

          return e + t.progress.bytesTotal;
                    SRTlib.send("]},");

        }, 0), i = n / t.length;
        n += i * r.length;
        var o = 0;
        (t.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._calculateTotalProgress", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          o += e.progress.bytesUploaded;
                    SRTlib.send("]},");

        }), r.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._calculateTotalProgress2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          o += i * (e.progress.percentage || 0) / 100;
                    SRTlib.send("]},");

        }));
        var s = 0 === n ? 0 : Math.round(o / n * 100);
        (s > 100 && (s = 100), this.setState({
          totalProgress: s
        }), this.emit("progress", s));
      } else {
        var a = 100 * e.length, u = r.reduce(function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._calculateTotalProgress.u", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                    SRTlib.send("]},");

          return e + t.progress.percentage;
                    SRTlib.send("]},");

        }, 0), l = Math.round(u / a * 100);
        this.setState({
          totalProgress: l
        });
      }
            SRTlib.send("]},");

    }, n._addListeners = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      (this.on("error", function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = "Unknown error";
        (t.message && (r = t.message), t.details && (r += " " + t.details), e.setState({
          error: r
        }));
                SRTlib.send("]},");

      }), this.on("upload-error", function (t, r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var i = "Unknown error";
        if ((r.message && (i = r.message), r.details && (i += " " + r.details), e.setFileState(t.id, {
          error: i,
          response: n
        }), e.setState({
          error: r.message
        }), "object" == typeof r && r.message)) {
          var o = new Error(r.message);
          (o.details = r.message, r.details && (o.details += " " + r.details), o.message = e.i18n("failedToUpload", {
            file: t.name
          }), e._showOrLogErrorAndThrow(o, {
            throwErr: !1
          }));
        } else e._showOrLogErrorAndThrow(r, {
          throwErr: !1
        });
                SRTlib.send("]},");

      }), this.on("upload", function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e.setState({
          error: null
        });
                SRTlib.send("]},");

      }), this.on("upload-started", function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on4", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e.getFile(t.id) ? e.setFileState(t.id, {
          progress: {
            uploadStarted: Date.now(),
            uploadComplete: !1,
            percentage: 0,
            bytesUploaded: 0,
            bytesTotal: t.size
          }
        }) : e.log("Not setting progress for a file that has been removed: " + t.id);
                SRTlib.send("]},");

      }), this.on("upload-progress", this._calculateProgress), this.on("upload-success", function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on5", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (e.getFile(t.id)) {
          var n = e.getFile(t.id).progress;
          (e.setFileState(t.id, {
            progress: ___extends_97({}, n, {
              uploadComplete: !0,
              percentage: 100,
              bytesUploaded: n.bytesTotal
            }),
            response: r,
            uploadURL: r.uploadURL,
            isPaused: !1
          }), e._calculateTotalProgress());
        } else e.log("Not setting progress for a file that has been removed: " + t.id);
                SRTlib.send("]},");

      }), this.on("preprocess-progress", function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e.getFile(t.id) ? e.setFileState(t.id, {
          progress: ___extends_97({}, e.getFile(t.id).progress, {
            preprocess: r
          })
        }) : e.log("Not setting progress for a file that has been removed: " + t.id);
                SRTlib.send("]},");

      }), this.on("preprocess-complete", function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on7", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e.getFile(t.id)) {
          var r = ___extends_97({}, e.getState().files);
          (r[t.id] = ___extends_97({}, r[t.id], {
            progress: ___extends_97({}, r[t.id].progress)
          }), delete r[t.id].progress.preprocess, e.setState({
            files: r
          }));
        } else e.log("Not setting progress for a file that has been removed: " + t.id);
                SRTlib.send("]},");

      }), this.on("postprocess-progress", function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on8", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e.getFile(t.id) ? e.setFileState(t.id, {
          progress: ___extends_97({}, e.getState().files[t.id].progress, {
            postprocess: r
          })
        }) : e.log("Not setting progress for a file that has been removed: " + t.id);
                SRTlib.send("]},");

      }), this.on("postprocess-complete", function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on9", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e.getFile(t.id)) {
          var r = ___extends_97({}, e.getState().files);
          (r[t.id] = ___extends_97({}, r[t.id], {
            progress: ___extends_97({}, r[t.id].progress)
          }), delete r[t.id].progress.postprocess, e.setState({
            files: r
          }));
        } else e.log("Not setting progress for a file that has been removed: " + t.id);
                SRTlib.send("]},");

      }), this.on("restored", function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.on10", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e._calculateTotalProgress();
                SRTlib.send("]},");

      }), "undefined" != typeof window && window.addEventListener && (window.addEventListener("online", function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return e.updateOnlineStatus();
                SRTlib.send("]},");

      }), window.addEventListener("offline", function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return e.updateOnlineStatus();
                SRTlib.send("]},");

      }), setTimeout(function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._addListeners.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return e.updateOnlineStatus();
                SRTlib.send("]},");

      }, 3e3)));
            SRTlib.send("]},");

    }, n.updateOnlineStatus = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.updateOnlineStatus", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      void 0 === window.navigator.onLine || window.navigator.onLine ? (this.emit("is-online"), this.wasOffline && (this.emit("back-online"), this.info(this.i18n("connectedToInternet"), "success", 3e3), this.wasOffline = !1)) : (this.emit("is-offline"), this.info(this.i18n("noInternetConnection"), "error", 0), this.wasOffline = !0);
            SRTlib.send("]},");

    }, n.getID = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.getID", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.opts.id;
            SRTlib.send("]},");

    }, n.use = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.use", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if ("function" != typeof e) throw new TypeError("Expected a plugin class, but got " + (null === e ? "null" : typeof e) + ". Please verify that the plugin was imported and spelled correctly.");
      var r = new e(this, t), n = r.id;
      if ((this.plugins[r.type] = this.plugins[r.type] || [], !n)) throw new Error("Your plugin must have an id");
      if (!r.type) throw new Error("Your plugin must have a type");
      var i = this.getPlugin(n);
      if (i) {
        var o = "Already found a plugin named '" + i.id + "'. Tried to use: '" + n + "'.\nUppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.";
        throw new Error(o);
      }
            SRTlib.send("]},");

      return (e.VERSION && this.log("Using " + n + " v" + e.VERSION), this.plugins[r.type].push(r), r.install(), this);
            SRTlib.send("]},");

    }, n.getPlugin = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.getPlugin", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = null;
            SRTlib.send("]},");

      return (this.iteratePlugins(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.getPlugin.ReturnStatement.iteratePlugins", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (r.id === e) {
                    SRTlib.send("]},");

          return (t = r, !1);
        }
                SRTlib.send("]},");

      }), t);
            SRTlib.send("]},");

    }, n.iteratePlugins = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.iteratePlugins", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      Object.keys(this.plugins).forEach(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.iteratePlugins.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t.plugins[r].forEach(e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, n.removePlugin = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.removePlugin", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.log("Removing plugin " + e.id), this.emit("plugin-remove", e), e.uninstall && e.uninstall());
      var t = this.plugins[e.type].slice(), r = t.indexOf(e);
      -1 !== r && (t.splice(r, 1), this.plugins[e.type] = t);
      var n = this.getState();
      (delete n.plugins[e.id], this.setState(n));
            SRTlib.send("]},");

    }, n.close = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.close", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      (this.log("Closing Uppy instance " + this.opts.id + ": removing all files and uninstalling plugins"), this.reset(), this._storeUnsubscribe(), this.iteratePlugins(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.close.iteratePlugins", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.removePlugin(t);
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, n.info = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.info", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      (void 0 === t && (t = "info"), void 0 === r && (r = 3e3));
      var n = "object" == typeof e;
      (this.setState({
        info: {
          isHidden: !1,
          type: t,
          message: n ? e.message : e,
          details: n ? e.details : null
        }
      }), this.emit("info-visible"), clearTimeout(this.infoTimeoutID), this.infoTimeoutID = 0 !== r ? setTimeout(this.hideInfo, r) : void 0);
            SRTlib.send("]},");

    }, n.hideInfo = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.hideInfo", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = ___extends_97({}, this.getState().info, {
        isHidden: !0
      });
      (this.setState({
        info: e
      }), this.emit("info-hidden"));
            SRTlib.send("]},");

    }, n.log = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.log", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this.opts.logger;
      switch (t) {
        case "error":
          r.error(e);
          break;
        case "warning":
          r.warn(e);
          break;
        default:
          r.debug(e);
      }
            SRTlib.send("]},");

    }, n.run = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.run", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return (this.log("Calling run() is no longer necessary.", "warning"), this);
            SRTlib.send("]},");

    }, n.restore = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.restore", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return (this.log('Core: attempting to restore upload "' + e + '"'), this.getState().currentUploads[e] ? this._runUpload(e) : (this._removeUpload(e), Promise.reject(new Error("Nonexistent upload"))));
            SRTlib.send("]},");

    }, n._createUpload = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._createUpload", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r;
      void 0 === t && (t = {});
      var n = t.forceAllowNewUpload, i = void 0 !== n && n, o = this.getState(), s = o.allowNewUpload, a = o.currentUploads;
      if (!s && !i) throw new Error("Cannot create a new upload: already uploading.");
      var u = _$cuid_13();
            SRTlib.send("]},");

      return (this.emit("upload", {
        id: u,
        fileIDs: e
      }), this.setState({
        allowNewUpload: !1 !== this.opts.allowMultipleUploads,
        currentUploads: ___extends_97({}, a, (r = {}, r[u] = {
          fileIDs: e,
          step: 0,
          result: {}
        }, r))
      }), u);
            SRTlib.send("]},");

    }, n._getUpload = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._getUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.getState().currentUploads[e];
            SRTlib.send("]},");

    }, n.addResultData = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.addResultData", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r;
      if (this._getUpload(e)) {
        var n = this.getState().currentUploads, i = ___extends_97({}, n[e], {
          result: ___extends_97({}, n[e].result, t)
        });
        this.setState({
          currentUploads: ___extends_97({}, n, (r = {}, r[e] = i, r))
        });
      } else this.log("Not setting result for an upload that has been removed: " + e);
            SRTlib.send("]},");

    }, n._removeUpload = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._removeUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = ___extends_97({}, this.getState().currentUploads);
      (delete t[e], this.setState({
        currentUploads: t
      }));
            SRTlib.send("]},");

    }, n._runUpload = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = this.getState().currentUploads[e].step, n = [].concat(this.preProcessors, this.uploaders, this.postProcessors), i = Promise.resolve();
            SRTlib.send("]},");

      return (n.forEach(function (n, o) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        o < r || (i = i.then(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var r, i = t.getState().currentUploads, s = i[e];
          if (s) {
            var a = ___extends_97({}, s, {
              step: o
            });
                        SRTlib.send("]},");

            return (t.setState({
              currentUploads: ___extends_97({}, i, (r = {}, r[e] = a, r))
            }), n(a.fileIDs, e));
          }
                    SRTlib.send("]},");

        }).then(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement.then2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return null;
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      }), i.catch(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (t.emit("error", r, e), t._removeUpload(e));
                SRTlib.send("]},");

      }), i.then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement.then.then.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var r = t.getState().currentUploads[e];
        if (r) {
          var n = r.fileIDs.map(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement.then.then.then.n.r.fileIDs.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return t.getFile(e);
                        SRTlib.send("]},");

          }), i = n.filter(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement.then.then.then.i", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return !e.error;
                        SRTlib.send("]},");

          }), o = n.filter(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement.then.then.then.o", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return e.error;
                        SRTlib.send("]},");

          });
          t.addResultData(e, {
            successful: i,
            failed: o,
            uploadID: e
          });
        }
                SRTlib.send("]},");

      }).then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement.then.then.then2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var r = t.getState().currentUploads;
        if (r[e]) {
          var n = r[e].result;
                    SRTlib.send("]},");

          return (t.emit("complete", n), t._removeUpload(e), n);
        }
                SRTlib.send("]},");

      }).then(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n._runUpload.ReturnStatement.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return (null == r && t.log("Not setting result for an upload that has been removed: " + e), r);
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, n.upload = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.upload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      this.plugins.uploader || this.log("No uploader type plugins are used", "warning");
      var t = this.getState().files, r = this.opts.onBeforeUpload(t);
            SRTlib.send("]},");

      return !1 === r ? Promise.reject(new Error("Not starting the upload because onBeforeUpload returned false")) : (r && "object" == typeof r && (t = r, this.setState({
        files: t
      })), Promise.resolve().then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.upload.ReturnStatement.then.catch.then.catch.then.catch.then.then.catch.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return e._checkMinNumberOfFiles(t);
                SRTlib.send("]},");

      }).catch(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.upload.ReturnStatement.then.catch.then.catch.then.catch.then.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e._showOrLogErrorAndThrow(t);
                SRTlib.send("]},");

      }).then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.upload.ReturnStatement.then.catch.then.catch.then.catch.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var r = e.getState().currentUploads, n = Object.keys(r).reduce(function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.upload.ReturnStatement.then.catch.then.catch.then.catch.then.n.reduce", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                    SRTlib.send("]},");

          return e.concat(r[t].fileIDs);
                    SRTlib.send("]},");

        }, []), i = [];
        Object.keys(t).forEach(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.upload.ReturnStatement.then.catch.then.catch.then.catch.then.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r = e.getFile(t);
          r.progress.uploadStarted || -1 !== n.indexOf(t) || i.push(r.id);
                    SRTlib.send("]},");

        });
        var o = e._createUpload(i);
                SRTlib.send("]},");

        return e._runUpload(o);
                SRTlib.send("]},");

      }).catch(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.n.upload.ReturnStatement.then.catch.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e._showOrLogErrorAndThrow(t, {
          showInformer: !1
        });
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, t = e, (r = [{
      key: "state",
      get: function () {
                SRTlib.send(`{ "anonymous": true, "function": "Uppy.ReturnStatement.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return this.getState();
                SRTlib.send("]},");

      }
    }]) && _defineProperties(t.prototype, r), e);
        SRTlib.send("]},");

  })();
  (Uppy.VERSION = _$package_101.version, _$lib_97 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey21", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return new Uppy(e);
        SRTlib.send("]},");

  }, _$lib_97.Uppy = Uppy, _$lib_97.Plugin = _$Plugin_96, _$lib_97.debugLogger = __debugLogger_97);
  var _$toArray_229 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$toArray_229", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return Array.prototype.slice.call(e || [], 0);
        SRTlib.send("]},");

  }, _$lib_34 = {
    __esModule: !0
  };
  (_$lib_34.default = getFormData, _$lib_34.getFieldData = getFieldData);
  var NODE_LIST_CLASSES = {
    "[object HTMLCollection]": !0,
    "[object NodeList]": !0,
    "[object RadioNodeList]": !0
  }, IGNORED_ELEMENT_TYPES = {
    button: !0,
    fieldset: !0,
    reset: !0,
    submit: !0
  }, CHECKED_INPUT_TYPES = {
    checkbox: !0,
    radio: !0
  }, TRIM_RE = /^\s+|\s+$/g, slice = Array.prototype.slice, toString = Object.prototype.toString;
  function getFormData(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
      trim: !1
    };
    if (!e) throw new Error("A form is required by getFormData, was given form=" + e);
    for (var r = {}, n = void 0, i = [], o = {}, s = 0, a = e.elements.length; s < a; s++) {
      var u = e.elements[s];
      IGNORED_ELEMENT_TYPES[u.type] || u.disabled || (n = u.name || u.id) && !o[n] && (i.push(n), o[n] = !0);
    }
    for (var l = 0, c = i.length; l < c; l++) {
      var p = getFieldData(e, n = i[l], t);
      null != p && (r[n] = p);
    }
        SRTlib.send("]},");

    return r;
        SRTlib.send("]},");

  }
  function getFieldData(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
      trim: !1
    };
    if (!e) throw new Error("A form is required by getFieldData, was given form=" + e);
    if (!t && "[object String]" !== toString.call(t)) throw new Error("A field name is required by getFieldData, was given fieldName=" + t);
    var n = e.elements[t];
    if (!n || n.disabled) {
            SRTlib.send("]},");

      return null;
    }
    if (!NODE_LIST_CLASSES[toString.call(n)]) {
            SRTlib.send("]},");

      return getFormElementValue(n, r.trim);
    }
    for (var i = [], o = !0, s = 0, a = n.length; s < a; s++) if (!n[s].disabled) {
      o && "radio" !== n[s].type && (o = !1);
      var u = getFormElementValue(n[s], r.trim);
      null != u && (i = i.concat(u));
    }
        SRTlib.send("]},");

    return o && 1 === i.length ? i[0] : i.length > 0 ? i : null;
        SRTlib.send("]},");

  }
  function getFormElementValue(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = null, n = e.type;
    if ("select-one" === n) {
            SRTlib.send("]},");

      return (e.options.length && (r = e.options[e.selectedIndex].value), r);
    }
    if ("select-multiple" === n) {
      r = [];
      for (var i = 0, o = e.options.length; i < o; i++) e.options[i].selected && r.push(e.options[i].value);
            SRTlib.send("]},");

      return (0 === r.length && (r = null), r);
    }
        SRTlib.send("]},");

    return "file" === n && ("files" in e) ? (e.multiple ? 0 === (r = slice.call(e.files)).length && (r = null) : r = e.files[0], r) : (CHECKED_INPUT_TYPES[n] ? e.checked && (r = e.value) : r = t ? e.value.replace(TRIM_RE, "") : e.value, r);
        SRTlib.send("]},");

  }
  getFormData.getFieldData = getFieldData;
  var _$package_133 = {
    version: "1.3.15"
  }, _class, _temp;
  function ___extends_132() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_132 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply7", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  function _assertThisInitialized(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_132 = _$lib_97.Plugin, __getFormData_132 = _$lib_34.default || _$lib_34, _$lib_132 = (_temp = _class = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_132", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).type = "acquirer", n.id = n.opts.id || "Form", n.title = "Form", n.opts = ___extends_132({}, {
        target: null,
        resultName: "uppyResult",
        getMetaFromForm: !0,
        addResultToForm: !0,
        multipleResults: !1,
        submitOnSuccess: !1,
        triggerUploadOnSubmit: !1
      }, {}, r), n.handleFormSubmit = n.handleFormSubmit.bind(_assertThisInitialized(n)), n.handleUploadStart = n.handleUploadStart.bind(_assertThisInitialized(n)), n.handleSuccess = n.handleSuccess.bind(_assertThisInitialized(n)), n.addResultToForm = n.addResultToForm.bind(_assertThisInitialized(n)), n.getMetaFromForm = n.getMetaFromForm.bind(_assertThisInitialized(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.handleUploadStart = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.handleUploadStart", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.opts.getMetaFromForm && this.getMetaFromForm();
            SRTlib.send("]},");

    }, i.handleSuccess = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.handleSuccess", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.opts.addResultToForm && this.addResultToForm(e), this.opts.submitOnSuccess && this.form.submit());
            SRTlib.send("]},");

    }, i.handleFormSubmit = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.handleFormSubmit2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      if (this.opts.triggerUploadOnSubmit) {
        e.preventDefault();
        var r = _$toArray_229(e.target.elements), n = [];
        (r.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.handleFormSubmit", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          ("BUTTON" === e.tagName || "INPUT" === e.tagName && "submit" === e.type) && !e.disabled && (e.disabled = !0, n.push(e));
                    SRTlib.send("]},");

        }), this.uppy.upload().then(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          n.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            e.disabled = !1;
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        }, function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return (n.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.handleFormSubmit.uppy.upload.then.catch.uppy.upload.then.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            e.disabled = !1;
                        SRTlib.send("]},");

          }), Promise.reject(e));
                    SRTlib.send("]},");

        }).catch(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.handleFormSubmit.uppy.upload.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          t.uppy.log(e.stack || e.message || e);
                    SRTlib.send("]},");

        }));
      }
            SRTlib.send("]},");

    }, i.addResultToForm = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.addResultToForm", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.uppy.log("[Form] Adding result to the original form:"), this.uppy.log(e));
      var t = this.form.querySelector('[name="' + this.opts.resultName + '"]');
      if (t) if (this.opts.multipleResults) {
        var r;
        try {
          r = JSON.parse(t.value);
        } catch (err) {}
        (Array.isArray(r) || (r = []), r.push(e), t.value = JSON.stringify(r));
      } else t.value = JSON.stringify(e); else ((t = document.createElement("input")).name = this.opts.resultName, t.type = "hidden", this.opts.multipleResults ? t.value = JSON.stringify([e]) : t.value = JSON.stringify(e), this.form.appendChild(t));
            SRTlib.send("]},");

    }, i.getMetaFromForm = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.getMetaFromForm", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = __getFormData_132(this.form);
      (delete e[this.opts.resultName], this.uppy.setMeta(e));
            SRTlib.send("]},");

    }, i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.form = _$findDOMElement_205(this.opts.target), this.form && "FORM" === this.form.nodeName ? (this.form.addEventListener("submit", this.handleFormSubmit), this.uppy.on("upload", this.handleUploadStart), this.uppy.on("complete", this.handleSuccess)) : this.uppy.log("Form plugin requires a <form> target element passed in options to operate, none was found", "error"));
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_132.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.form.removeEventListener("submit", this.handleFormSubmit), this.uppy.off("upload", this.handleUploadStart), this.uppy.off("complete", this.handleSuccess));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_132), _class.VERSION = _$package_133.version, _temp), _$classnames_9 = {
    exports: {}
  };
  (!(function () {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey22", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    "use strict";
    var e = ({}).hasOwnProperty;
    function t() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var r = [], n = 0; n < arguments.length; n++) {
        var i = arguments[n];
        if (i) {
          var o = typeof i;
          if ("string" === o || "number" === o) r.push(i); else if (Array.isArray(i) && i.length) {
            var s = t.apply(null, i);
            s && r.push(s);
          } else if ("object" === o) for (var a in i) e.call(i, a) && i[a] && r.push(a);
        }
      }
            SRTlib.send("]},");

      return r.join(" ");
            SRTlib.send("]},");

    }
    _$classnames_9.exports ? (t.default = t, _$classnames_9.exports = t) : "function" == typeof define && "object" == typeof define.amd && define.amd ? define("classnames", [], function () {
            SRTlib.send(`{ "anonymous": true, "function": "define", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return t;
            SRTlib.send("]},");

    }) : window.classNames = t;
        SRTlib.send("]},");

  })(), _$classnames_9 = _$classnames_9.exports);
  var _$StatusBarStates_173 = {
    STATE_ERROR: "error",
    STATE_WAITING: "waiting",
    STATE_PREPROCESSING: "preprocessing",
    STATE_UPLOADING: "uploading",
    STATE_POSTPROCESSING: "postprocessing",
    STATE_COMPLETE: "complete"
  }, _$prettierBytes_175 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$prettierBytes_175", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("number" != typeof e || isNaN(e)) throw new TypeError("Expected a number, got " + typeof e);
    var t = e < 0, r = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
    if ((t && (e = -e), e < 1)) {
            SRTlib.send("]},");

      return (t ? "-" : "") + e + " B";
    }
    var n = Math.min(Math.floor(Math.log(e) / Math.log(1024)), r.length - 1);
    e = Number(e / Math.pow(1024, n));
    var i = r[n];
        SRTlib.send("]},");

    return e >= 10 || e % 1 == 0 ? (t ? "-" : "") + e.toFixed(0) + " " + i : (t ? "-" : "") + e.toFixed(1) + " " + i;
        SRTlib.send("]},");

  }, _$secondsToTime_227 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$secondsToTime_227", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return {
      hours: Math.floor(e / 3600) % 24,
      minutes: Math.floor(e / 60) % 60,
      seconds: Math.floor(e % 60)
    };
        SRTlib.send("]},");

  }, _$prettyETA_226 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$prettyETA_226", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = _$secondsToTime_227(e), r = t.hours ? t.hours + "h " : "", n = t.hours ? ("0" + t.minutes).substr(-2) : t.minutes, i = n ? n + "m" : "", o = n ? ("0" + t.seconds).substr(-2) : t.seconds;
        SRTlib.send("]},");

    return "" + r + i + (t.hours ? "" : n ? " " + o + "s" : o + "s");
        SRTlib.send("]},");

  };
  function ___extends_172() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_172 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply8", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var h = _$preact_51.h, _$StatusBar_172 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$StatusBar_172", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r, n = e = e || ({}), i = n.newFiles, o = n.allowNewUpload, s = n.isUploadInProgress, a = n.isAllPaused, u = n.resumableUploads, l = n.error, c = n.hideUploadButton, p = n.hidePauseResumeButton, d = n.hideCancelButton, f = n.hideRetryButton, _ = e.uploadState, g = e.totalProgress;
    if (_ === _$StatusBarStates_173.STATE_PREPROCESSING || _ === _$StatusBarStates_173.STATE_POSTPROCESSING) {
      var y = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$StatusBar_172.y", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = [];
        Object.keys(e).forEach(function (r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$StatusBar_172.y.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var n = e[r].progress;
          (n.preprocess && t.push(n.preprocess), n.postprocess && t.push(n.postprocess));
                    SRTlib.send("]},");

        });
        var r = t[0];
                SRTlib.send("]},");

        return {
          mode: r.mode,
          message: r.message,
          value: t.filter(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$StatusBar_172.y.ReturnStatement.value.reduce", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return "determinate" === e.mode;
                        SRTlib.send("]},");

          }).reduce(function (e, t, r, n) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$StatusBar_172.y.ReturnStatement.value.reduce2", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

                        SRTlib.send("]},");

            return e + t.value / n.length;
                        SRTlib.send("]},");

          }, 0)
        };
                SRTlib.send("]},");

      })(e.files);
      ("determinate" === (t = y.mode) && (g = 100 * y.value), r = ProgressBarProcessing(y));
    } else _ === _$StatusBarStates_173.STATE_COMPLETE ? r = ProgressBarComplete(e) : _ === _$StatusBarStates_173.STATE_UPLOADING ? (e.supportsUploadProgress || (t = "indeterminate", g = null), r = ProgressBarUploading(e)) : _ === _$StatusBarStates_173.STATE_ERROR && (g = void 0, r = ProgressBarError(e));
    var m = "number" == typeof g ? g : 100, v = _ === _$StatusBarStates_173.STATE_WAITING && e.hideUploadButton || _ === _$StatusBarStates_173.STATE_WAITING && !e.newFiles > 0 || _ === _$StatusBarStates_173.STATE_COMPLETE && e.hideAfterFinish, b = !l && i && !s && !a && o && !c, w = !d && _ !== _$StatusBarStates_173.STATE_WAITING && _ !== _$StatusBarStates_173.STATE_COMPLETE, k = u && !p && _ === _$StatusBarStates_173.STATE_UPLOADING, C = l && !f, S = "uppy-StatusBar-progress\n                           " + (t ? "is-" + t : ""), P = _$classnames_9({
      "uppy-Root": e.isTargetDOMEl
    }, "uppy-StatusBar", "is-" + _);
        SRTlib.send("]},");

    return h("div", {
      class: P,
      "aria-hidden": v
    }, h("div", {
      class: S,
      style: {
        width: m + "%"
      },
      role: "progressbar",
      "aria-valuemin": "0",
      "aria-valuemax": "100",
      "aria-valuenow": g
    }), r, h("div", {
      class: "uppy-StatusBar-actions"
    }, b ? h(UploadBtn, ___extends_172({}, e, {
      uploadState: _
    })) : null, C ? h(RetryBtn, e) : null, k ? h(PauseResumeButton, e) : null, w ? h(CancelBtn, e) : null));
        SRTlib.send("]},");

  }, UploadBtn = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "UploadBtn", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = _$classnames_9("uppy-u-reset", "uppy-c-btn", "uppy-StatusBar-actionBtn", "uppy-StatusBar-actionBtn--upload", {
      "uppy-c-btn-primary": e.uploadState === _$StatusBarStates_173.STATE_WAITING
    });
        SRTlib.send("]},");

    return h("button", {
      type: "button",
      class: t,
      "aria-label": e.i18n("uploadXFiles", {
        smart_count: e.newFiles
      }),
      onclick: e.startUpload,
      "data-uppy-super-focusable": !0
    }, e.newFiles && e.isUploadStarted ? e.i18n("uploadXNewFiles", {
      smart_count: e.newFiles
    }) : e.i18n("uploadXFiles", {
      smart_count: e.newFiles
    }));
        SRTlib.send("]},");

  }, RetryBtn = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "RetryBtn", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return h("button", {
      type: "button",
      class: "uppy-u-reset uppy-c-btn uppy-StatusBar-actionBtn uppy-StatusBar-actionBtn--retry",
      "aria-label": e.i18n("retryUpload"),
      onclick: e.retryAll,
      "data-uppy-super-focusable": !0
    }, h("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "UppyIcon",
      width: "8",
      height: "10",
      viewBox: "0 0 8 10"
    }, h("path", {
      d: "M4 2.408a2.75 2.75 0 1 0 2.75 2.75.626.626 0 0 1 1.25.018v.023a4 4 0 1 1-4-4.041V.25a.25.25 0 0 1 .389-.208l2.299 1.533a.25.25 0 0 1 0 .416l-2.3 1.533A.25.25 0 0 1 4 3.316v-.908z"
    })), e.i18n("retry"));
        SRTlib.send("]},");

  }, CancelBtn = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "CancelBtn", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return h("button", {
      type: "button",
      class: "uppy-u-reset uppy-StatusBar-actionCircleBtn",
      title: e.i18n("cancel"),
      "aria-label": e.i18n("cancel"),
      onclick: e.cancelAll,
      "data-uppy-super-focusable": !0
    }, h("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "UppyIcon",
      width: "16",
      height: "16",
      viewBox: "0 0 16 16"
    }, h("g", {
      fill: "none",
      "fill-rule": "evenodd"
    }, h("circle", {
      fill: "#888",
      cx: "8",
      cy: "8",
      r: "8"
    }), h("path", {
      fill: "#FFF",
      d: "M9.283 8l2.567 2.567-1.283 1.283L8 9.283 5.433 11.85 4.15 10.567 6.717 8 4.15 5.433 5.433 4.15 8 6.717l2.567-2.567 1.283 1.283z"
    }))));
        SRTlib.send("]},");

  }, PauseResumeButton = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "PauseResumeButton", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.isAllPaused, r = (0, e.i18n)(t ? "resume" : "pause");
        SRTlib.send("]},");

    return h("button", {
      title: r,
      "aria-label": r,
      class: "uppy-u-reset uppy-StatusBar-actionCircleBtn",
      type: "button",
      onclick: function () {
                SRTlib.send(`{ "anonymous": true, "function": "PauseResumeButton.ReturnStatement.h.onclick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "PauseResumeButton.ReturnStatement.h.onclick.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if (!e.isAllComplete) {
                        SRTlib.send("]},");

            return e.resumableUploads ? e.isAllPaused ? e.resumeAll() : e.pauseAll() : e.cancelAll();
          }
                    SRTlib.send("]},");

        })(e);
                SRTlib.send("]},");

      },
      "data-uppy-super-focusable": !0
    }, h("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "UppyIcon",
      width: "16",
      height: "16",
      viewBox: "0 0 16 16"
    }, h("g", {
      fill: "none",
      "fill-rule": "evenodd"
    }, h("circle", {
      fill: "#888",
      cx: "8",
      cy: "8",
      r: "8"
    }), h("path", t ? {
      fill: "#FFF",
      d: "M6 4.25L11.5 8 6 11.75z"
    } : {
      d: "M5 4.5h2v7H5v-7zm4 0h2v7H9v-7z",
      fill: "#FFF"
    }))));
        SRTlib.send("]},");

  }, LoadingSpinner = function () {
        SRTlib.send(`{ "anonymous": true, "function": "LoadingSpinner", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return h("svg", {
      class: "uppy-StatusBar-spinner",
      "aria-hidden": "true",
      focusable: "false",
      width: "14",
      height: "14"
    }, h("path", {
      d: "M13.983 6.547c-.12-2.509-1.64-4.893-3.939-5.936-2.48-1.127-5.488-.656-7.556 1.094C.524 3.367-.398 6.048.162 8.562c.556 2.495 2.46 4.52 4.94 5.183 2.932.784 5.61-.602 7.256-3.015-1.493 1.993-3.745 3.309-6.298 2.868-2.514-.434-4.578-2.349-5.153-4.84a6.226 6.226 0 0 1 2.98-6.778C6.34.586 9.74 1.1 11.373 3.493c.407.596.693 1.282.842 1.988.127.598.073 1.197.161 1.794.078.525.543 1.257 1.15.864.525-.341.49-1.05.456-1.592-.007-.15.02.3 0 0",
      "fill-rule": "evenodd"
    }));
        SRTlib.send("]},");

  }, ProgressBarProcessing = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "ProgressBarProcessing", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = Math.round(100 * e.value);
        SRTlib.send("]},");

    return h("div", {
      class: "uppy-StatusBar-content"
    }, h(LoadingSpinner, null), "determinate" === e.mode ? t + "% \xb7 " : "", e.message);
        SRTlib.send("]},");

  }, UnknownProgressDetails = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "UnknownProgressDetails", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return h("div", {
      class: "uppy-StatusBar-statusSecondary"
    }, e.i18n("filesUploadedOfTotal", {
      complete: e.complete,
      smart_count: e.numUploads
    }));
        SRTlib.send("]},");

  }, UploadNewlyAddedFiles = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "UploadNewlyAddedFiles", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = _$classnames_9("uppy-u-reset", "uppy-c-btn", "uppy-StatusBar-actionBtn", "uppy-StatusBar-actionBtn--uploadNewlyAdded");
        SRTlib.send("]},");

    return h("div", {
      class: "uppy-StatusBar-statusSecondary"
    }, h("div", {
      class: "uppy-StatusBar-statusSecondaryHint"
    }, e.i18n("xMoreFilesAdded", {
      smart_count: e.newFiles
    })), h("button", {
      type: "button",
      class: t,
      "aria-label": e.i18n("uploadXFiles", {
        smart_count: e.newFiles
      }),
      onclick: e.startUpload
    }, e.i18n("upload")));
        SRTlib.send("]},");

  }, ThrottledProgressDetails = _$lodashThrottle_43(function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "ThrottledProgressDetails._$lodashThrottle_43", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.numUploads > 1;
        SRTlib.send("]},");

    return h("div", {
      class: "uppy-StatusBar-statusSecondary"
    }, t && e.i18n("filesUploadedOfTotal", {
      complete: e.complete,
      smart_count: e.numUploads
    }), h("span", {
      class: "uppy-StatusBar-additionalInfo"
    }, t && " \xb7 ", e.i18n("dataUploadedOfTotal", {
      complete: _$prettierBytes_175(e.totalUploadedSize),
      total: _$prettierBytes_175(e.totalSize)
    }), " \xb7 ", e.i18n("xTimeLeft", {
      time: _$prettyETA_226(e.totalETA)
    })));
        SRTlib.send("]},");

  }, 500, {
    leading: !0,
    trailing: !0
  }), ProgressBarUploading = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "ProgressBarUploading", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (!e.isUploadStarted || e.isAllComplete) {
            SRTlib.send("]},");

      return null;
    }
    var t = e.isAllPaused ? e.i18n("paused") : e.i18n("uploading"), r = e.newFiles && e.isUploadStarted;
        SRTlib.send("]},");

    return h("div", {
      class: "uppy-StatusBar-content",
      "aria-label": t,
      title: t
    }, e.isAllPaused ? null : h(LoadingSpinner, null), h("div", {
      class: "uppy-StatusBar-status"
    }, h("div", {
      class: "uppy-StatusBar-statusPrimary"
    }, e.supportsUploadProgress ? t + ": " + e.totalProgress + "%" : t), e.isAllPaused || r || !e.showProgressDetails ? null : e.supportsUploadProgress ? h(ThrottledProgressDetails, e) : h(UnknownProgressDetails, e), r ? h(UploadNewlyAddedFiles, e) : null));
        SRTlib.send("]},");

  }, ProgressBarComplete = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "ProgressBarComplete", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    e.totalProgress;
    var t = e.i18n;
        SRTlib.send("]},");

    return h("div", {
      class: "uppy-StatusBar-content",
      role: "status",
      title: t("complete")
    }, h("div", {
      class: "uppy-StatusBar-status"
    }, h("div", {
      class: "uppy-StatusBar-statusPrimary"
    }, h("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "uppy-StatusBar-statusIndicator UppyIcon",
      width: "15",
      height: "11",
      viewBox: "0 0 15 11"
    }, h("path", {
      d: "M.414 5.843L1.627 4.63l3.472 3.472L13.202 0l1.212 1.213L5.1 10.528z"
    })), t("complete"))));
        SRTlib.send("]},");

  }, ProgressBarError = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "ProgressBarError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.error, r = (e.retryAll, e.hideRetryButton, e.i18n);
        SRTlib.send("]},");

    return h("div", {
      class: "uppy-StatusBar-content",
      role: "alert",
      title: r("uploadFailed")
    }, h("div", {
      class: "uppy-StatusBar-status"
    }, h("div", {
      class: "uppy-StatusBar-statusPrimary"
    }, h("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "uppy-StatusBar-statusIndicator UppyIcon",
      width: "11",
      height: "11",
      viewBox: "0 0 11 11"
    }, h("path", {
      d: "M4.278 5.5L0 1.222 1.222 0 5.5 4.278 9.778 0 11 1.222 6.722 5.5 11 9.778 9.778 11 5.5 6.722 1.222 11 0 9.778z"
    })), r("uploadFailed"))), h("span", {
      class: "uppy-StatusBar-details",
      "aria-label": t,
      "data-microtip-position": "top-right",
      "data-microtip-size": "medium",
      role: "tooltip",
      onclick: function () {
                SRTlib.send(`{ "anonymous": true, "function": "ProgressBarError.ReturnStatement.h.h.onclick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = r("uploadFailed") + " \n\n " + t;
        alert(e);
                SRTlib.send("]},");

      }
    }, "?"));
        SRTlib.send("]},");

  }, _$getSpeed_217 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getSpeed_217", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (!e.bytesUploaded) {
            SRTlib.send("]},");

      return 0;
    }
    var t = new Date() - e.uploadStarted;
        SRTlib.send("]},");

    return e.bytesUploaded / (t / 1e3);
        SRTlib.send("]},");

  }, _$getBytesRemaining_207 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getBytesRemaining_207", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e.bytesTotal - e.bytesUploaded;
        SRTlib.send("]},");

  }, _$package_176 = {
    version: "1.6.6"
  }, ___class_174, ___temp_174;
  function ___extends_174() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_174 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply9", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  function ___assertThisInitialized_174(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_174 = _$lib_97.Plugin, _$lib_174 = (___temp_174 = ___class_174 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_174", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).startUpload = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.startUpload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return n.uppy.upload().catch(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.startUpload.ReturnStatement.n.uppy.upload.catch", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }, n.id = n.opts.id || "StatusBar", n.title = "StatusBar", n.type = "progressindicator", n.defaultLocale = {
        strings: {
          uploading: "Uploading",
          upload: "Upload",
          complete: "Complete",
          uploadFailed: "Upload failed",
          paused: "Paused",
          retry: "Retry",
          cancel: "Cancel",
          pause: "Pause",
          resume: "Resume",
          filesUploadedOfTotal: {
            0: "%{complete} of %{smart_count} file uploaded",
            1: "%{complete} of %{smart_count} files uploaded"
          },
          dataUploadedOfTotal: "%{complete} of %{total}",
          xTimeLeft: "%{time} left",
          uploadXFiles: {
            0: "Upload %{smart_count} file",
            1: "Upload %{smart_count} files"
          },
          uploadXNewFiles: {
            0: "Upload +%{smart_count} file",
            1: "Upload +%{smart_count} files"
          },
          xMoreFilesAdded: {
            0: "%{smart_count} more file added",
            1: "%{smart_count} more files added"
          }
        }
      }, n.opts = ___extends_174({}, {
        target: "body",
        hideUploadButton: !1,
        hideRetryButton: !1,
        hidePauseResumeButton: !1,
        hideCancelButton: !1,
        showProgressDetails: !1,
        hideAfterFinish: !0
      }, {}, r), n.i18nInit(), n.render = n.render.bind(___assertThisInitialized_174(n)), n.install = n.install.bind(___assertThisInitialized_174(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.setOptions = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.setOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (e.prototype.setOptions.call(this, t), this.i18nInit());
            SRTlib.send("]},");

    }, i.i18nInit = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.i18nInit", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.translator = new _$Translator_200([this.defaultLocale, this.uppy.locale, this.opts.locale]), this.i18n = this.translator.translate.bind(this.translator), this.setPluginState());
            SRTlib.send("]},");

    }, i.getTotalSpeed = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.getTotalSpeed", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = 0;
            SRTlib.send("]},");

      return (e.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.getTotalSpeed.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t += _$getSpeed_217(e.progress);
                SRTlib.send("]},");

      }), t);
            SRTlib.send("]},");

    }, i.getTotalETA = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.getTotalETA", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.getTotalSpeed(e);
      if (0 === t) {
                SRTlib.send("]},");

        return 0;
      }
      var r = e.reduce(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.getTotalETA.r", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return e + _$getBytesRemaining_207(t.progress);
                SRTlib.send("]},");

      }, 0);
            SRTlib.send("]},");

      return Math.round(r / t * 10) / 10;
            SRTlib.send("]},");

    }, i.getUploadingState = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.getUploadingState", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      if (e) {
                SRTlib.send("]},");

        return _$StatusBarStates_173.STATE_ERROR;
      }
      if (t) {
                SRTlib.send("]},");

        return _$StatusBarStates_173.STATE_COMPLETE;
      }
      for (var n = _$StatusBarStates_173.STATE_WAITING, i = Object.keys(r), o = 0; o < i.length; o++) {
        var s = r[i[o]].progress;
        if (s.uploadStarted && !s.uploadComplete) {
                    SRTlib.send("]},");

          return _$StatusBarStates_173.STATE_UPLOADING;
        }
        (s.preprocess && n !== _$StatusBarStates_173.STATE_UPLOADING && (n = _$StatusBarStates_173.STATE_PREPROCESSING), s.postprocess && n !== _$StatusBarStates_173.STATE_UPLOADING && n !== _$StatusBarStates_173.STATE_PREPROCESSING && (n = _$StatusBarStates_173.STATE_POSTPROCESSING));
      }
            SRTlib.send("]},");

      return n;
            SRTlib.send("]},");

    }, i.render = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = e.capabilities, r = e.files, n = e.allowNewUpload, i = e.totalProgress, o = e.error, s = Object.keys(r).map(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.s.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return r[e];
                SRTlib.send("]},");

      }), a = s.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.a", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return !e.progress.uploadStarted && !e.progress.preprocess && !e.progress.postprocess;
                SRTlib.send("]},");

      }), u = s.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.u.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.progress.uploadStarted;
                SRTlib.send("]},");

      }).filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.u.filter2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.isPaused;
                SRTlib.send("]},");

      }), l = s.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.l", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.progress.uploadComplete;
                SRTlib.send("]},");

      }), c = s.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.c", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.error;
                SRTlib.send("]},");

      }), p = s.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.p", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return !e.progress.uploadComplete && e.progress.uploadStarted;
                SRTlib.send("]},");

      }), h = p.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.h", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return !e.isPaused;
                SRTlib.send("]},");

      }), d = s.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.d", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.progress.uploadStarted || e.progress.preprocess || e.progress.postprocess;
                SRTlib.send("]},");

      }), f = s.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render.f", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.progress.preprocess || e.progress.postprocess;
                SRTlib.send("]},");

      }), _ = this.getTotalETA(h), g = 0, y = 0;
      d.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (g += e.progress.bytesTotal || 0, y += e.progress.bytesUploaded || 0);
                SRTlib.send("]},");

      });
      var m = d.length > 0, v = 100 === i && l.length === Object.keys(r).length && 0 === f.length, b = o && c.length === s.length, w = 0 !== p.length && u.length === p.length, k = p.length > 0, C = t.resumableUploads || !1, S = !1 !== t.uploadProgress;
            SRTlib.send("]},");

      return _$StatusBar_172({
        error: o,
        uploadState: this.getUploadingState(b, v, e.files || ({})),
        allowNewUpload: n,
        totalProgress: i,
        totalSize: g,
        totalUploadedSize: y,
        isAllComplete: v,
        isAllPaused: w,
        isAllErrored: b,
        isUploadStarted: m,
        isUploadInProgress: k,
        complete: l.length,
        newFiles: a.length,
        numUploads: d.length,
        totalETA: _,
        files: r,
        i18n: this.i18n,
        pauseAll: this.uppy.pauseAll,
        resumeAll: this.uppy.resumeAll,
        retryAll: this.uppy.retryAll,
        cancelAll: this.uppy.cancelAll,
        startUpload: this.startUpload,
        resumableUploads: C,
        supportsUploadProgress: S,
        showProgressDetails: this.opts.showProgressDetails,
        hideUploadButton: this.opts.hideUploadButton,
        hideRetryButton: this.opts.hideRetryButton,
        hidePauseResumeButton: this.opts.hidePauseResumeButton,
        hideCancelButton: this.opts.hideCancelButton,
        hideAfterFinish: this.opts.hideAfterFinish,
        isTargetDOMEl: this.isTargetDOMEl
      });
            SRTlib.send("]},");

    }, i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.opts.target;
      e && this.mount(e, this);
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_174.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.unmount();
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_174), ___class_174.VERSION = _$package_176.version, ___temp_174), __Plugin_157 = _$lib_97.Plugin, AttachFileInputs = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "AttachFileInputs", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).id = n.opts.id || "AttachFileInputs", n.type = "acquirer", n.handleChange = n.handleChange.bind((function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n.handleChange.n.handleChange.bind", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      })(n)), n.inputs = null, n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.handleChange = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "AttachFileInputs.ReturnStatement.i.handleChange", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this.addFiles(e.target);
            SRTlib.send("]},");

    }, i.addFiles = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "AttachFileInputs.ReturnStatement.i.addFiles", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      _$toArray_229(e.files).forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "AttachFileInputs.ReturnStatement.i.addFiles.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        try {
          t.uppy.addFile({
            source: t.id,
            name: e.name,
            type: e.type,
            data: e
          });
        } catch (err) {
          err.isRestriction || t.uppy.log(err);
        }
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "AttachFileInputs.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      if ((this.el = _$findDOMElement_205(this.opts.target), !this.el)) throw new Error("[AttachFileInputs] Target form does not exist");
      var t = this.uppy.opts.restrictions;
      (this.inputs = this.el.querySelectorAll('input[type="file"]'), this.inputs.forEach(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "AttachFileInputs.ReturnStatement.i.install.inputs.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (r.addEventListener("change", e.handleChange), r.hasAttribute("multiple") || (1 !== t.maxNumberOfFiles ? r.setAttribute("multiple", "multiple") : r.removeAttribute("multiple")), !r.hasAttribute("accept") && t.allowedFileTypes && r.setAttribute("accept", t.allowedFileTypes.join(",")), e.addFiles(r));
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "AttachFileInputs.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      (this.inputs.forEach(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "AttachFileInputs.ReturnStatement.i.uninstall.inputs.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t.removeEventListener("change", e.handleChange);
                SRTlib.send("]},");

      }), this.inputs = null);
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_157), _$AttachFileInputs_157 = AttachFileInputs, __Plugin_158 = _$lib_97.Plugin, TransloaditFormResult = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "TransloaditFormResult", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).id = n.opts.id || "TransloaditFormResult", n.type = "modifier", n.handleUpload = n.handleUpload.bind((function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n.handleUpload.n.handleUpload.bind", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      })(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.getAssemblyStatuses = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditFormResult.ReturnStatement.i.getAssemblyStatuses2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = [];
      e.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditFormResult.ReturnStatement.i.getAssemblyStatuses", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var n = t.uppy.getFile(e), i = n.transloadit && n.transloadit.assembly;
        i && -1 === r.indexOf(i) && r.push(i);
                SRTlib.send("]},");

      });
      var n = this.uppy.getPlugin(this.opts.transloaditPluginId || "Transloadit");
            SRTlib.send("]},");

      return r.map(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditFormResult.ReturnStatement.i.getAssemblyStatuses.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return n.getAssembly(e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.handleUpload = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditFormResult.ReturnStatement.i.handleUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.getAssemblyStatuses(e), r = document.createElement("input");
      (r.type = "hidden", r.name = this.opts.name, r.value = JSON.stringify(t), _$findDOMElement_205(this.opts.target).appendChild(r));
            SRTlib.send("]},");

    }, i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditFormResult.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.uppy.addPostProcessor(this.handleUpload);
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditFormResult.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.uppy.removePostProcessor(this.handleUpload);
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_158), _$TransloaditFormResult_158 = TransloaditFormResult, _$isShallowEqual_40 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$isShallowEqual_40", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (e === t) {
            SRTlib.send("]},");

      return !0;
    }
    for (var r in e) if (!((r in t))) {
            SRTlib.send("]},");

      return !1;
    }
    for (var r in t) if (e[r] !== t[r]) {
            SRTlib.send("]},");

      return !1;
    }
        SRTlib.send("]},");

    return !0;
        SRTlib.send("]},");

  }, __h_117 = _$preact_51.h, _$icons_117 = {
    defaultPickerIcon: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.defaultPickerIcon", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        width: "30",
        height: "30",
        viewBox: "0 0 30 30"
      }, __h_117("path", {
        d: "M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z"
      }));
            SRTlib.send("]},");

    },
    iconRetry: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconRetry", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon retry",
        width: "28",
        height: "31",
        viewBox: "0 0 16 19"
      }, __h_117("path", {
        d: "M16 11a8 8 0 1 1-8-8v2a6 6 0 1 0 6 6h2z"
      }), __h_117("path", {
        d: "M7.9 3H10v2H7.9z"
      }), __h_117("path", {
        d: "M8.536.5l3.535 3.536-1.414 1.414L7.12 1.914z"
      }), __h_117("path", {
        d: "M10.657 2.621l1.414 1.415L8.536 7.57 7.12 6.157z"
      }));
            SRTlib.send("]},");

    },
    iconMyDevice: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconMyDevice", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        width: "32",
        height: "32",
        viewBox: "0 0 32 32",
        xmlns: "http://www.w3.org/2000/svg"
      }, __h_117("g", {
        fill: "none",
        "fill-rule": "evenodd"
      }, __h_117("rect", {
        width: "32",
        height: "32",
        rx: "16",
        fill: "#2275D7"
      }), __h_117("path", {
        d: "M21.973 21.152H9.863l-1.108-5.087h14.464l-1.246 5.087zM9.935 11.37h3.958l.886 1.444a.673.673 0 0 0 .585.316h6.506v1.37H9.935v-3.13zm14.898 3.44a.793.793 0 0 0-.616-.31h-.978v-2.126c0-.379-.275-.613-.653-.613H15.75l-.886-1.445a.673.673 0 0 0-.585-.316H9.232c-.378 0-.667.209-.667.587V14.5h-.782a.793.793 0 0 0-.61.303.795.795 0 0 0-.155.663l1.45 6.633c.078.36.396.618.764.618h13.354c.36 0 .674-.246.76-.595l1.631-6.636a.795.795 0 0 0-.144-.675z",
        fill: "#FFF"
      })));
            SRTlib.send("]},");

    },
    iconImage: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconImage", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        width: "25",
        height: "25",
        viewBox: "0 0 25 25",
        xmlns: "http://www.w3.org/2000/svg"
      }, __h_117("g", {
        fill: "#686DE0",
        "fill-rule": "evenodd"
      }, __h_117("path", {
        d: "M5 7v10h15V7H5zm0-1h15a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1z",
        "fill-rule": "nonzero"
      }), __h_117("path", {
        d: "M6.35 17.172l4.994-5.026a.5.5 0 0 1 .707 0l2.16 2.16 3.505-3.505a.5.5 0 0 1 .707 0l2.336 2.31-.707.72-1.983-1.97-3.505 3.505a.5.5 0 0 1-.707 0l-2.16-2.159-3.938 3.939-1.409.026z",
        "fill-rule": "nonzero"
      }), __h_117("circle", {
        cx: "7.5",
        cy: "9.5",
        r: "1.5"
      })));
            SRTlib.send("]},");

    },
    iconAudio: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconAudio", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        width: "25",
        height: "25",
        viewBox: "0 0 25 25"
      }, __h_117("path", {
        d: "M9.5 18.64c0 1.14-1.145 2-2.5 2s-2.5-.86-2.5-2c0-1.14 1.145-2 2.5-2 .557 0 1.079.145 1.5.396V7.25a.5.5 0 0 1 .379-.485l9-2.25A.5.5 0 0 1 18.5 5v11.64c0 1.14-1.145 2-2.5 2s-2.5-.86-2.5-2c0-1.14 1.145-2 2.5-2 .557 0 1.079.145 1.5.396V8.67l-8 2v7.97zm8-11v-2l-8 2v2l8-2zM7 19.64c.855 0 1.5-.484 1.5-1s-.645-1-1.5-1-1.5.484-1.5 1 .645 1 1.5 1zm9-2c.855 0 1.5-.484 1.5-1s-.645-1-1.5-1-1.5.484-1.5 1 .645 1 1.5 1z",
        fill: "#049BCF",
        "fill-rule": "nonzero"
      }));
            SRTlib.send("]},");

    },
    iconVideo: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconVideo", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        width: "25",
        height: "25",
        viewBox: "0 0 25 25"
      }, __h_117("path", {
        d: "M16 11.834l4.486-2.691A1 1 0 0 1 22 10v6a1 1 0 0 1-1.514.857L16 14.167V17a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v2.834zM15 9H5v8h10V9zm1 4l5 3v-6l-5 3z",
        fill: "#19AF67",
        "fill-rule": "nonzero"
      }));
            SRTlib.send("]},");

    },
    iconPDF: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconPDF", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        width: "25",
        height: "25",
        viewBox: "0 0 25 25"
      }, __h_117("path", {
        d: "M9.766 8.295c-.691-1.843-.539-3.401.747-3.726 1.643-.414 2.505.938 2.39 3.299-.039.79-.194 1.662-.537 3.148.324.49.66.967 1.055 1.51.17.231.382.488.629.757 1.866-.128 3.653.114 4.918.655 1.487.635 2.192 1.685 1.614 2.84-.566 1.133-1.839 1.084-3.416.249-1.141-.604-2.457-1.634-3.51-2.707a13.467 13.467 0 0 0-2.238.426c-1.392 4.051-4.534 6.453-5.707 4.572-.986-1.58 1.38-4.206 4.914-5.375.097-.322.185-.656.264-1.001.08-.353.306-1.31.407-1.737-.678-1.059-1.2-2.031-1.53-2.91zm2.098 4.87c-.033.144-.068.287-.104.427l.033-.01-.012.038a14.065 14.065 0 0 1 1.02-.197l-.032-.033.052-.004a7.902 7.902 0 0 1-.208-.271c-.197-.27-.38-.526-.555-.775l-.006.028-.002-.003c-.076.323-.148.632-.186.8zm5.77 2.978c1.143.605 1.832.632 2.054.187.26-.519-.087-1.034-1.113-1.473-.911-.39-2.175-.608-3.55-.608.845.766 1.787 1.459 2.609 1.894zM6.559 18.789c.14.223.693.16 1.425-.413.827-.648 1.61-1.747 2.208-3.206-2.563 1.064-4.102 2.867-3.633 3.62zm5.345-10.97c.088-1.793-.351-2.48-1.146-2.28-.473.119-.564 1.05-.056 2.405.213.566.52 1.188.908 1.859.18-.858.268-1.453.294-1.984z",
        fill: "#E2514A",
        "fill-rule": "nonzero"
      }));
            SRTlib.send("]},");

    },
    iconArchive: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconArchive", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        width: "25",
        height: "25",
        viewBox: "0 0 25 25",
        xmlns: "http://www.w3.org/2000/svg"
      }, __h_117("path", {
        d: "M10.45 2.05h1.05a.5.5 0 0 1 .5.5v.024a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5V2.55a.5.5 0 0 1 .5-.5zm2.05 1.024h1.05a.5.5 0 0 1 .5.5V3.6a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5v-.001zM10.45 0h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5V.5a.5.5 0 0 1 .5-.5zm2.05 1.025h1.05a.5.5 0 0 1 .5.5v.024a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.024a.5.5 0 0 1 .5-.5zm-2.05 3.074h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5zm2.05 1.025h1.05a.5.5 0 0 1 .5.5v.024a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.024a.5.5 0 0 1 .5-.5zm-2.05 1.024h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5zm2.05 1.025h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5zm-2.05 1.025h1.05a.5.5 0 0 1 .5.5v.025a.5.5 0 0 1-.5.5h-1.05a.5.5 0 0 1-.5-.5v-.025a.5.5 0 0 1 .5-.5zm2.05 1.025h1.05a.5.5 0 0 1 .5.5v.024a.5.5 0 0 1-.5.5H12.5a.5.5 0 0 1-.5-.5v-.024a.5.5 0 0 1 .5-.5zm-1.656 3.074l-.82 5.946c.52.302 1.174.458 1.976.458.803 0 1.455-.156 1.975-.458l-.82-5.946h-2.311zm0-1.025h2.312c.512 0 .946.378 1.015.885l.82 5.946c.056.412-.142.817-.501 1.026-.686.398-1.515.597-2.49.597-.974 0-1.804-.199-2.49-.597a1.025 1.025 0 0 1-.5-1.026l.819-5.946c.07-.507.503-.885 1.015-.885zm.545 6.6a.5.5 0 0 1-.397-.561l.143-.999a.5.5 0 0 1 .495-.429h.74a.5.5 0 0 1 .495.43l.143.998a.5.5 0 0 1-.397.561c-.404.08-.819.08-1.222 0z",
        fill: "#00C469",
        "fill-rule": "nonzero"
      }));
            SRTlib.send("]},");

    },
    iconFile: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconFile", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        width: "25",
        height: "25",
        viewBox: "0 0 25 25"
      }, __h_117("g", {
        fill: "#A7AFB7",
        "fill-rule": "nonzero"
      }, __h_117("path", {
        d: "M5.5 22a.5.5 0 0 1-.5-.5v-18a.5.5 0 0 1 .5-.5h10.719a.5.5 0 0 1 .367.16l3.281 3.556a.5.5 0 0 1 .133.339V21.5a.5.5 0 0 1-.5.5h-14zm.5-1h13V7.25L16 4H6v17z"
      }), __h_117("path", {
        d: "M15 4v3a1 1 0 0 0 1 1h3V7h-3V4h-1z"
      })));
            SRTlib.send("]},");

    },
    iconText: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconText", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        width: "25",
        height: "25",
        viewBox: "0 0 25 25"
      }, __h_117("path", {
        d: "M4.5 7h13a.5.5 0 1 1 0 1h-13a.5.5 0 0 1 0-1zm0 3h15a.5.5 0 1 1 0 1h-15a.5.5 0 1 1 0-1zm0 3h15a.5.5 0 1 1 0 1h-15a.5.5 0 1 1 0-1zm0 3h10a.5.5 0 1 1 0 1h-10a.5.5 0 1 1 0-1z",
        fill: "#5A5E69",
        "fill-rule": "nonzero"
      }));
            SRTlib.send("]},");

    },
    iconCopyLink: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconCopyLink", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        width: "14",
        height: "14",
        viewBox: "0 0 14 12"
      }, __h_117("path", {
        d: "M7.94 7.703a2.613 2.613 0 0 1-.626 2.681l-.852.851a2.597 2.597 0 0 1-1.849.766A2.616 2.616 0 0 1 2.764 7.54l.852-.852a2.596 2.596 0 0 1 2.69-.625L5.267 7.099a1.44 1.44 0 0 0-.833.407l-.852.851a1.458 1.458 0 0 0 1.03 2.486c.39 0 .755-.152 1.03-.426l.852-.852c.231-.231.363-.522.406-.824l1.04-1.038zm4.295-5.937A2.596 2.596 0 0 0 10.387 1c-.698 0-1.355.272-1.849.766l-.852.851a2.614 2.614 0 0 0-.624 2.688l1.036-1.036c.041-.304.173-.6.407-.833l.852-.852c.275-.275.64-.426 1.03-.426a1.458 1.458 0 0 1 1.03 2.486l-.852.851a1.442 1.442 0 0 1-.824.406l-1.04 1.04a2.596 2.596 0 0 0 2.683-.628l.851-.85a2.616 2.616 0 0 0 0-3.697zm-6.88 6.883a.577.577 0 0 0 .82 0l3.474-3.474a.579.579 0 1 0-.819-.82L5.355 7.83a.579.579 0 0 0 0 .819z"
      }));
            SRTlib.send("]},");

    },
    iconPencil: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconPencil", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        width: "14",
        height: "14",
        viewBox: "0 0 14 14"
      }, __h_117("g", {
        "fill-rule": "evenodd"
      }, __h_117("path", {
        d: "M1.5 10.793h2.793A1 1 0 0 0 5 10.5L11.5 4a1 1 0 0 0 0-1.414L9.707.793a1 1 0 0 0-1.414 0l-6.5 6.5A1 1 0 0 0 1.5 8v2.793zm1-1V8L9 1.5l1.793 1.793-6.5 6.5H2.5z",
        "fill-rule": "nonzero"
      }), __h_117("rect", {
        x: "1",
        y: "12.293",
        width: "11",
        height: "1",
        rx: ".5"
      }), __h_117("path", {
        "fill-rule": "nonzero",
        d: "M6.793 2.5L9.5 5.207l.707-.707L7.5 1.793z"
      })));
            SRTlib.send("]},");

    },
    iconCross: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconCross", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        width: "18",
        height: "18",
        viewBox: "0 0 18 18"
      }, __h_117("path", {
        d: "M9 0C4.034 0 0 4.034 0 9s4.034 9 9 9 9-4.034 9-9-4.034-9-9-9z"
      }), __h_117("path", {
        fill: "#FFF",
        d: "M13 12.222l-.778.778L9 9.778 5.778 13 5 12.222 8.222 9 5 5.778 5.778 5 9 8.222 12.222 5l.778.778L9.778 9z"
      }));
            SRTlib.send("]},");

    },
    iconPlus: function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$icons_117.iconPlus", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_117("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        width: "15",
        height: "15",
        viewBox: "0 0 15 15"
      }, __h_117("path", {
        d: "M8 6.5h6a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5H8v6a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V8h-6a.5.5 0 0 1-.5-.5V7a.5.5 0 0 1 .5-.5h6v-6A.5.5 0 0 1 7 0h.5a.5.5 0 0 1 .5.5v6z"
      }));
            SRTlib.send("]},");

    }
  }, iconFile = _$icons_117.iconFile, iconText = _$icons_117.iconText, iconImage = _$icons_117.iconImage, iconAudio = _$icons_117.iconAudio, iconVideo = _$icons_117.iconVideo, iconPDF = _$icons_117.iconPDF, iconArchive = _$icons_117.iconArchive, _$getFileTypeIcon_122 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getFileTypeIcon_122", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = {
      color: "#838999",
      icon: iconFile()
    };
    if (!e) {
            SRTlib.send("]},");

      return t;
    }
    var r = e.split("/")[0], n = e.split("/")[1];
        SRTlib.send("]},");

    return "text" === r ? {
      color: "#5a5e69",
      icon: iconText()
    } : "image" === r ? {
      color: "#686de0",
      icon: iconImage()
    } : "audio" === r ? {
      color: "#068dbb",
      icon: iconAudio()
    } : "video" === r ? {
      color: "#19af67",
      icon: iconVideo()
    } : "application" === r && "pdf" === n ? {
      color: "#e25149",
      icon: iconPDF()
    } : "application" === r && -1 !== ["zip", "x-7z-compressed", "x-rar-compressed", "x-gtar", "x-apple-diskimage", "x-diskcopy"].indexOf(n) ? {
      color: "#00C469",
      icon: iconArchive()
    } : t;
        SRTlib.send("]},");

  }, __h_113 = _$preact_51.h, _$FilePreview_113 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$FilePreview_113", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.file;
    if (t.preview) {
            SRTlib.send("]},");

      return __h_113("img", {
        class: "uppy-DashboardItem-previewImg",
        alt: t.name,
        src: t.preview
      });
    }
    var r = _$getFileTypeIcon_122(t.type), n = r.color, i = r.icon;
        SRTlib.send("]},");

    return __h_113("div", {
      class: "uppy-DashboardItem-previewIconWrap"
    }, __h_113("span", {
      class: "uppy-DashboardItem-previewIcon",
      style: {
        color: n
      }
    }, i), __h_113("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "uppy-DashboardItem-previewIconBg",
      width: "58",
      height: "76",
      viewBox: "0 0 58 76"
    }, __h_113("rect", {
      fill: "#FFF",
      width: "58",
      height: "76",
      rx: "3",
      "fill-rule": "evenodd"
    })));
        SRTlib.send("]},");

  }, __h_108 = _$preact_51.h, _$FilePreviewAndLink_108 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$FilePreviewAndLink_108", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_108("div", {
      class: "uppy-DashboardItem-previewInnerWrap",
      style: {
        backgroundColor: _$getFileTypeIcon_122(e.file.type).color
      }
    }, e.showLinkToFileUploadResult && e.file.uploadURL && __h_108("a", {
      class: "uppy-DashboardItem-previewLink",
      href: e.file.uploadURL,
      rel: "noreferrer noopener",
      target: "_blank",
      "aria-label": e.file.meta.name
    }), __h_108(_$FilePreview_113, {
      file: e.file
    }));
        SRTlib.send("]},");

  }, __h_109 = _$preact_51.h, circleLength = 2 * Math.PI * 15, _$PauseResumeCancelIcon_109 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$PauseResumeCancelIcon_109", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_109("svg", {
      "aria-hidden": "true",
      focusable: "false",
      width: "70",
      height: "70",
      viewBox: "0 0 36 36",
      class: "UppyIcon UppyIcon-progressCircle"
    }, __h_109("g", {
      class: "progress-group"
    }, __h_109("circle", {
      class: "bg",
      r: "15",
      cx: "18",
      cy: "18",
      "stroke-width": "2",
      fill: "none"
    }), __h_109("circle", {
      class: "progress",
      r: "15",
      cx: "18",
      cy: "18",
      transform: "rotate(-90, 18, 18)",
      "stroke-width": "2",
      fill: "none",
      "stroke-dasharray": circleLength,
      "stroke-dashoffset": circleLength - circleLength / 100 * e.progress
    })), !e.hidePauseResumeCancelButtons && __h_109("g", null, __h_109("polygon", {
      class: "play",
      transform: "translate(3, 3)",
      points: "12 20 12 10 20 15"
    }), __h_109("g", {
      class: "pause",
      transform: "translate(14.5, 13)"
    }, __h_109("rect", {
      x: "0",
      y: "0",
      width: "2",
      height: "10",
      rx: "0"
    }), __h_109("rect", {
      x: "5",
      y: "0",
      width: "2",
      height: "10",
      rx: "0"
    })), __h_109("polygon", {
      class: "cancel",
      transform: "translate(2, 2)",
      points: "19.8856516 11.0625 16 14.9481516 12.1019737 11.0625 11.0625 12.1143484 14.9481516 16 11.0625 19.8980263 12.1019737 20.9375 16 17.0518484 19.8856516 20.9375 20.9375 19.8980263 17.0518484 16 20.9375 12"
    })), __h_109("polygon", {
      class: "check",
      transform: "translate(2, 3)",
      points: "14 22.5 7 15.2457065 8.99985857 13.1732815 14 18.3547104 22.9729883 9 25 11.1005634"
    }));
        SRTlib.send("]},");

  }, __h_110 = _$preact_51.h, iconRetry = _$icons_117.iconRetry;
  function progressIndicatorTitle(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e.isUploaded ? e.i18n("uploadComplete") : e.error ? e.i18n("retryUpload") : e.resumableUploads ? e.file.isPaused ? e.i18n("resumeUpload") : e.i18n("pauseUpload") : e.individualCancellation ? e.i18n("cancelUpload") : "";
        SRTlib.send("]},");

  }
  var _$FileProgress_110 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$FileProgress_110", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e.hideRetryButton && e.error || e.isUploaded && e.showRemoveButtonAfterComplete ? __h_110("div", {
      class: "uppy-DashboardItem-progress"
    }) : e.isUploaded || e.hidePauseResumeCancelButtons && !e.error ? __h_110("div", {
      class: "uppy-DashboardItem-progress"
    }, __h_110("div", {
      class: "uppy-DashboardItem-progressIndicator"
    }, __h_110(_$PauseResumeCancelIcon_109, {
      progress: e.file.progress.percentage,
      hidePauseResumeCancelButtons: e.hidePauseResumeCancelButtons
    }))) : __h_110("div", {
      class: "uppy-DashboardItem-progress"
    }, __h_110("button", {
      class: "uppy-u-reset uppy-DashboardItem-progressIndicator",
      type: "button",
      "aria-label": progressIndicatorTitle(e),
      title: progressIndicatorTitle(e),
      onclick: function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$FileProgress_110.ReturnStatement.__h_110.__h_110.onclick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$FileProgress_110.ReturnStatement.__h_110.__h_110.onclick.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e.isUploaded || (!e.error || e.hideRetryButton ? e.hidePauseResumeCancelButtons || (e.resumableUploads ? e.pauseUpload(e.file.id) : e.individualCancellation && e.cancelUpload(e.file.id)) : e.retryUpload(e.file.id));
                    SRTlib.send("]},");

        })(e);
                SRTlib.send("]},");

      }
    }, e.error ? e.hideRetryButton ? null : iconRetry() : __h_110(_$PauseResumeCancelIcon_109, {
      progress: e.file.progress.percentage,
      hidePauseResumeCancelButtons: e.hidePauseResumeCancelButtons
    })));
        SRTlib.send("]},");

  }, _$prettierBytes_126 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$prettierBytes_126", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("number" != typeof e || isNaN(e)) throw new TypeError("Expected a number, got " + typeof e);
    var t = e < 0, r = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
    if ((t && (e = -e), e < 1)) {
            SRTlib.send("]},");

      return (t ? "-" : "") + e + " B";
    }
    var n = Math.min(Math.floor(Math.log(e) / Math.log(1024)), r.length - 1);
    e = Number(e / Math.pow(1024, n));
    var i = r[n];
        SRTlib.send("]},");

    return e >= 10 || e % 1 == 0 ? (t ? "-" : "") + e.toFixed(0) + " " + i : (t ? "-" : "") + e.toFixed(1) + " " + i;
        SRTlib.send("]},");

  }, _$truncateString_125 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$truncateString_125", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (e.length <= t) {
            SRTlib.send("]},");

      return e;
    }
    if (t <= ("...").length) {
            SRTlib.send("]},");

      return e.substr(0, t);
    }
    var r = t - ("...").length, n = Math.ceil(r / 2), i = Math.floor(r / 2);
        SRTlib.send("]},");

    return e.substr(0, n) + "..." + e.substr(e.length - i);
        SRTlib.send("]},");

  }, __h_107 = _$preact_51.h, renderFileSource = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "renderFileSource", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e.file.source && e.file.source !== e.id && __h_107("div", {
      class: "uppy-DashboardItem-sourceIcon"
    }, e.acquirers.map(function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "renderFileSource.ReturnStatement.__h_107.e.acquirers.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (t.id === e.file.source) {
                SRTlib.send("]},");

        return (function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "renderFileSource.ReturnStatement.__h_107.e.acquirers.map.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                    SRTlib.send("]},");

          return __h_107("span", {
            title: t.i18n("fileSource", {
              name: e.name
            })
          }, e.icon());
                    SRTlib.send("]},");

        })(t, e);
      }
            SRTlib.send("]},");

    }));
        SRTlib.send("]},");

  }, ErrorButton = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "ErrorButton", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.file, r = e.onClick;
        SRTlib.send("]},");

    return t.error ? __h_107("span", {
      class: "uppy-DashboardItem-errorDetails",
      "aria-label": t.error,
      "data-microtip-position": "bottom",
      "data-microtip-size": "medium",
      role: "tooltip",
      onclick: r
    }, "?") : null;
        SRTlib.send("]},");

  }, _$FileInfo_107 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$FileInfo_107", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_107("div", {
      class: "uppy-DashboardItem-fileInfo",
      "data-uppy-file-source": e.file.source
    }, (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$FileInfo_107.ReturnStatement.__h_107", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t;
            SRTlib.send("]},");

      return (t = e.containerWidth <= 352 ? 35 : e.containerWidth <= 576 ? 60 : 30, __h_107("div", {
        class: "uppy-DashboardItem-name",
        title: e.file.meta.name
      }, _$truncateString_125(e.file.meta.name, t)));
            SRTlib.send("]},");

    })(e), __h_107("div", {
      class: "uppy-DashboardItem-status"
    }, (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$FileInfo_107.ReturnStatement.__h_107.__h_107", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.file.data.size && __h_107("div", {
        class: "uppy-DashboardItem-statusSize"
      }, _$prettierBytes_126(e.file.data.size));
            SRTlib.send("]},");

    })(e), renderFileSource(e), __h_107(ErrorButton, {
      file: e.file,
      onClick: function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$FileInfo_107.ReturnStatement.__h_107.__h_107.__h_107.onClick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        alert(e.file.error);
                SRTlib.send("]},");

      }
    })));
        SRTlib.send("]},");

  }, _$copyToClipboard_119 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$copyToClipboard_119", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (t = t || "Copy the URL below", new Promise(function (r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$copyToClipboard_119.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var n = document.createElement("textarea");
      (n.setAttribute("style", {
        position: "fixed",
        top: 0,
        left: 0,
        width: "2em",
        height: "2em",
        padding: 0,
        border: "none",
        outline: "none",
        boxShadow: "none",
        background: "transparent"
      }), n.value = e, document.body.appendChild(n), n.select());
      var i = function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$copyToClipboard_119.ReturnStatement.i", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (document.body.removeChild(n), window.prompt(t, e), r());
                SRTlib.send("]},");

      };
      try {
                SRTlib.send("]},");

        return document.execCommand("copy") ? (document.body.removeChild(n), r()) : i();
      } catch (err) {
                SRTlib.send("]},");

        return (document.body.removeChild(n), i());
      }
            SRTlib.send("]},");

    }));
        SRTlib.send("]},");

  }, __h_106 = _$preact_51.h, iconPencil = _$icons_117.iconPencil, iconCross = _$icons_117.iconCross, iconCopyLink = _$icons_117.iconCopyLink;
  function EditButton(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.file, r = e.uploadInProgressOrComplete, n = e.metaFields, i = e.i18n, o = e.onClick;
        SRTlib.send("]},");

    return !r && n && n.length > 0 ? __h_106("button", {
      class: "uppy-u-reset uppy-DashboardItem-action uppy-DashboardItem-action--edit",
      type: "button",
      "aria-label": i("editFile") + " " + t.meta.name,
      title: i("editFile"),
      onclick: function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.__h_106.onclick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return o();
                SRTlib.send("]},");

      }
    }, iconPencil()) : null;
        SRTlib.send("]},");

  }
  function RemoveButton(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.i18n, r = e.onClick;
        SRTlib.send("]},");

    return __h_106("button", {
      class: "uppy-u-reset uppy-DashboardItem-action uppy-DashboardItem-action--remove",
      type: "button",
      "aria-label": t("removeFile"),
      title: t("removeFile"),
      onclick: function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.__h_106.onclick2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return r();
                SRTlib.send("]},");

      }
    }, iconCross());
        SRTlib.send("]},");

  }
  var copyLinkToClipboard = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "copyLinkToClipboard", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    _$copyToClipboard_119(t.file.uploadURL, t.i18n("copyLinkToClipboardFallback")).then(function () {
            SRTlib.send(`{ "anonymous": true, "function": "copyLinkToClipboard.then.catch.then.then.catch.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (t.log("Link copied to clipboard."), t.info(t.i18n("copyLinkToClipboardSuccess"), "info", 3e3));
            SRTlib.send("]},");

    }).catch(t.log).then(function () {
            SRTlib.send(`{ "anonymous": true, "function": "copyLinkToClipboard.then.catch.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return e.target.focus({
        preventScroll: !0
      });
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  };
  function CopyLinkButton(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_106("button", {
      class: "uppy-u-reset uppy-DashboardItem-action uppy-DashboardItem-action--copyLink",
      type: "button",
      "aria-label": e.i18n("copyLink"),
      title: e.i18n("copyLink"),
      onclick: function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.__h_106.onclick3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return copyLinkToClipboard(t, e);
                SRTlib.send("]},");

      }
    }, iconCopyLink());
        SRTlib.send("]},");

  }
  var _$Buttons_106 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$Buttons_106", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.file, r = e.uploadInProgressOrComplete, n = e.metaFields, i = e.showLinkToFileUploadResult, o = e.showRemoveButton, s = e.i18n, a = e.removeFile, u = e.toggleFileCard, l = e.log, c = e.info;
        SRTlib.send("]},");

    return __h_106("div", {
      className: "uppy-DashboardItem-actionWrapper"
    }, __h_106(EditButton, {
      i18n: s,
      file: t,
      uploadInProgressOrComplete: r,
      metaFields: n,
      onClick: function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$Buttons_106.ReturnStatement.__h_106.__h_106.onClick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return u(t.id);
                SRTlib.send("]},");

      }
    }), i && t.uploadURL ? __h_106(CopyLinkButton, {
      file: t,
      i18n: s,
      info: c,
      log: l
    }) : null, o ? __h_106(RemoveButton, {
      i18n: s,
      info: e.info,
      log: e.log,
      onClick: function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$Buttons_106.ReturnStatement.__h_106.__h_106.onClick2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return a(t.id);
                SRTlib.send("]},");

      }
    }) : null);
        SRTlib.send("]},");

  }, __h_111 = _$preact_51.h, Component = _$preact_51.Component, _$FileItem_111 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$FileItem_111", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return e.apply(this, arguments) || this;
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.shouldComponentUpdate = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$FileItem_111.ReturnStatement.i.shouldComponentUpdate", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return !_$isShallowEqual_40(this.props, e);
            SRTlib.send("]},");

    }, i.componentDidMount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$FileItem_111.ReturnStatement.i.componentDidMount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.props.file;
      e.preview || this.props.handleRequestThumbnail(e);
            SRTlib.send("]},");

    }, i.componentWillUnmount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$FileItem_111.ReturnStatement.i.componentWillUnmount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.props.file;
      e.preview || this.props.handleCancelThumbnail(e);
            SRTlib.send("]},");

    }, i.render = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$FileItem_111.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.props.file, t = e.progress.preprocess || e.progress.postprocess, r = e.progress.uploadComplete && !t && !e.error, n = e.progress.uploadStarted || t, i = e.progress.uploadStarted && !e.progress.uploadComplete || t, o = e.isPaused || !1, s = e.error || !1, a = this.props.individualCancellation ? !r : !i && !r;
      r && this.props.showRemoveButtonAfterComplete && (a = !0);
      var u = _$classnames_9({
        "uppy-u-reset": !0,
        "uppy-DashboardItem": !0,
        "is-inprogress": i,
        "is-processing": t,
        "is-complete": r,
        "is-paused": o,
        "is-error": !!s,
        "is-resumable": this.props.resumableUploads,
        "is-noIndividualCancellation": !this.props.individualCancellation
      });
            SRTlib.send("]},");

      return __h_111("div", {
        class: u,
        id: "uppy_" + e.id,
        role: this.props.role
      }, __h_111("div", {
        class: "uppy-DashboardItem-preview"
      }, __h_111(_$FilePreviewAndLink_108, {
        file: e,
        showLinkToFileUploadResult: this.props.showLinkToFileUploadResult
      }), __h_111(_$FileProgress_110, {
        file: e,
        error: s,
        isUploaded: r,
        hideRetryButton: this.props.hideRetryButton,
        hidePauseResumeCancelButtons: this.props.hidePauseResumeCancelButtons,
        showRemoveButtonAfterComplete: this.props.showRemoveButtonAfterComplete,
        resumableUploads: this.props.resumableUploads,
        individualCancellation: this.props.individualCancellation,
        pauseUpload: this.props.pauseUpload,
        cancelUpload: this.props.cancelUpload,
        retryUpload: this.props.retryUpload,
        i18n: this.props.i18n
      })), __h_111("div", {
        class: "uppy-DashboardItem-fileInfoAndButtons"
      }, __h_111(_$FileInfo_107, {
        file: e,
        id: this.props.id,
        acquirers: this.props.acquirers,
        containerWidth: this.props.containerWidth,
        i18n: this.props.i18n
      }), __h_111(_$Buttons_106, {
        file: e,
        metaFields: this.props.metaFields,
        showLinkToFileUploadResult: this.props.showLinkToFileUploadResult,
        showRemoveButton: a,
        uploadInProgressOrComplete: n,
        removeFile: this.props.removeFile,
        toggleFileCard: this.props.toggleFileCard,
        i18n: this.props.i18n,
        log: this.props.log,
        info: this.props.info
      })));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(Component);
  function ___extends_116() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_116 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply10", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var __h_116 = _$preact_51.h, __Component_116 = _$preact_51.Component, STYLE_INNER = {
    position: "relative",
    width: "100%",
    minHeight: "100%"
  }, STYLE_CONTENT = {
    position: "absolute",
    top: 0,
    left: 0,
    width: "100%",
    overflow: "visible"
  }, VirtualList = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "VirtualList", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r;
            SRTlib.send("]},");

      return ((r = e.call(this, t) || this).handleResize = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.handleResize", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        r.resize();
                SRTlib.send("]},");

      }, r.handleScroll = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.r.handleScroll", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (r.setState({
          offset: r.base.scrollTop
        }), r.props.sync && r.forceUpdate());
                SRTlib.send("]},");

      }, r.focusElement = null, r.state = {
        offset: 0,
        height: 0
      }, r);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.resize = function () {
            SRTlib.send(`{ "anonymous": true, "function": "VirtualList.ReturnStatement.i.resize", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.state.height !== this.base.offsetHeight && this.setState({
        height: this.base.offsetHeight
      });
            SRTlib.send("]},");

    }, i.componentWillUpdate = function () {
            SRTlib.send(`{ "anonymous": true, "function": "VirtualList.ReturnStatement.i.componentWillUpdate", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.base.contains(document.activeElement) && (this.focusElement = document.activeElement);
            SRTlib.send("]},");

    }, i.componentDidUpdate = function () {
            SRTlib.send(`{ "anonymous": true, "function": "VirtualList.ReturnStatement.i.componentDidUpdate", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.focusElement && this.focusElement.parentNode && document.activeElement !== this.focusElement && this.focusElement.focus(), this.focusElement = null, this.resize());
            SRTlib.send("]},");

    }, i.componentDidMount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "VirtualList.ReturnStatement.i.componentDidMount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.resize(), window.addEventListener("resize", this.handleResize));
            SRTlib.send("]},");

    }, i.componentWillUnmount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "VirtualList.ReturnStatement.i.componentWillUnmount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      window.removeEventListener("resize", this.handleResize);
            SRTlib.send("]},");

    }, i.render = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "VirtualList.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = e.data, r = e.rowHeight, n = e.renderRow, i = e.overscanCount, o = void 0 === i ? 10 : i, s = (e.sync, (function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "VirtualList.ReturnStatement.i.render.s", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (null == e) {
                    SRTlib.send("]},");

          return {};
        }
        var r, n, i = {}, o = Object.keys(e);
        for (n = 0; n < o.length; n++) (r = o[n], t.indexOf(r) >= 0 || (i[r] = e[r]));
                SRTlib.send("]},");

        return i;
                SRTlib.send("]},");

      })(e, ["data", "rowHeight", "renderRow", "overscanCount", "sync"])), a = this.state, u = a.offset, l = a.height, c = Math.floor(u / r), p = Math.floor(l / r);
      o && (c = Math.max(0, c - c % o), p += o);
      var h = c + p + 4, d = t.slice(c, h), f = ___extends_116({}, STYLE_INNER, {
        height: t.length * r
      }), _ = ___extends_116({}, STYLE_CONTENT, {
        top: c * r
      });
            SRTlib.send("]},");

      return __h_116("div", ___extends_116({
        onScroll: this.handleScroll
      }, s), __h_116("div", {
        role: "presentation",
        style: f
      }, __h_116("div", {
        role: "presentation",
        style: _
      }, d.map(n))));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Component_116), _$VirtualList_116 = VirtualList;
  function ___extends_112() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_112 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply11", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var __h_112 = _$preact_51.h, _$FileList_112 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$FileList_112", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r, n, i, o = 0 === e.totalFileCount, s = _$classnames_9("uppy-Dashboard-files", {
      "uppy-Dashboard-files--noFiles": o
    }), a = 1 === e.itemsPerRow ? 71 : 200, u = {
      id: e.id,
      error: e.error,
      i18n: e.i18n,
      log: e.log,
      info: e.info,
      acquirers: e.acquirers,
      resumableUploads: e.resumableUploads,
      individualCancellation: e.individualCancellation,
      hideRetryButton: e.hideRetryButton,
      hidePauseResumeCancelButtons: e.hidePauseResumeCancelButtons,
      showLinkToFileUploadResult: e.showLinkToFileUploadResult,
      showRemoveButtonAfterComplete: e.showRemoveButtonAfterComplete,
      isWide: e.isWide,
      metaFields: e.metaFields,
      retryUpload: e.retryUpload,
      pauseUpload: e.pauseUpload,
      cancelUpload: e.cancelUpload,
      toggleFileCard: e.toggleFileCard,
      removeFile: e.removeFile,
      handleRequestThumbnail: e.handleRequestThumbnail,
      handleCancelThumbnail: e.handleCancelThumbnail
    }, l = (t = Object.keys(e.files), r = e.itemsPerRow, n = [], i = [], t.forEach(function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$FileList_112.l", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      i.length < r ? i.push(e) : (n.push(i), i = [e]);
            SRTlib.send("]},");

    }), i.length && n.push(i), n);
        SRTlib.send("]},");

    return __h_112(_$VirtualList_116, {
      class: s,
      role: "list",
      data: l,
      renderRow: function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$FileList_112.ReturnStatement.__h_112.renderRow", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return __h_112("div", {
          role: "presentation",
          key: t[0]
        }, t.map(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$FileList_112.ReturnStatement.__h_112.renderRow.ReturnStatement.__h_112", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return __h_112(_$FileItem_111, ___extends_112({
            key: t
          }, u, {
            role: "listitem",
            file: e.files[t]
          }));
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      },
      rowHeight: a
    });
        SRTlib.send("]},");

  }, iconMyDevice = _$icons_117.iconMyDevice, __h_102 = _$preact_51.h, AddFiles = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "AddFiles", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var t, r = arguments.length, n = new Array(r), i = 0; i < r; i++) n[i] = arguments[i];
            SRTlib.send("]},");

      return ((t = e.call.apply(e, [this].concat(n)) || this).triggerFileInputClick = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.triggerFileInputClick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        t.fileInput.click();
                SRTlib.send("]},");

      }, t.onFileInputChange = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.onFileInputChange", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (t.props.handleInputChange(e), e.target.value = null);
                SRTlib.send("]},");

      }, t.renderCloudIcon = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderCloudIcon", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_102("svg", {
          class: "uppy-Dashboard-dropFilesIcon",
          "aria-hidden": "true",
          width: "64",
          height: "45",
          viewBox: "0 0 64 45",
          xmlns: "http://www.w3.org/2000/svg"
        }, __h_102("path", {
          d: "M38 44.932V31h8L33 15 20 31h8v13.932H13.538C6.075 44.932 0 38.774 0 31.202c0-6.1 4.06-11.512 9.873-13.162l.005-.017c.345-5.8 5.248-10.534 10.922-10.534.502 0 1.164.017 1.868.16C25.9 2.85 31.225 0 36.923 0c9.5 0 17.23 7.838 17.23 17.473l-.011.565.012.002C60.039 19.685 64 24.975 64 31.203c0 7.57-6.075 13.729-13.538 13.729H38z",
          fill: "#E2E2E2",
          "fill-rule": "nonzero"
        }));
                SRTlib.send("]},");

      }, t.renderHiddenFileInput = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderHiddenFileInput", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_102("input", {
          class: "uppy-Dashboard-input",
          hidden: !0,
          "aria-hidden": "true",
          tabindex: -1,
          type: "file",
          name: "files[]",
          multiple: 1 !== t.props.maxNumberOfFiles,
          onchange: t.onFileInputChange,
          accept: t.props.allowedFileTypes,
          ref: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderHiddenFileInput.ReturnStatement.__h_102.ref", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            t.fileInput = e;
                        SRTlib.send("]},");

          }
        });
                SRTlib.send("]},");

      }, t.renderMyDeviceAcquirer = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderMyDeviceAcquirer", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_102("div", {
          class: "uppy-DashboardTab",
          role: "presentation"
        }, __h_102("button", {
          type: "button",
          class: "uppy-DashboardTab-btn",
          role: "tab",
          tabindex: 0,
          "data-uppy-super-focusable": !0,
          onclick: t.triggerFileInputClick
        }, iconMyDevice(), __h_102("div", {
          class: "uppy-DashboardTab-name"
        }, t.props.i18n("myDevice"))));
                SRTlib.send("]},");

      }, t.renderDropPasteBrowseTagline = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderDropPasteBrowseTagline", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = t.props.acquirers.length, r = __h_102("button", {
          type: "button",
          class: "uppy-u-reset uppy-Dashboard-browse",
          onclick: t.triggerFileInputClick,
          "data-uppy-super-focusable": 0 === e
        }, t.props.i18n("browse"));
                SRTlib.send("]},");

        return __h_102("div", {
          class: "uppy-Dashboard-AddFiles-title"
        }, e > 0 ? t.props.i18nArray("dropPasteImport", {
          browse: r
        }) : t.props.i18nArray("dropPaste", {
          browse: r
        }));
                SRTlib.send("]},");

      }, t.renderAcquirer = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderAcquirer", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return __h_102("div", {
          class: "uppy-DashboardTab",
          role: "presentation"
        }, __h_102("button", {
          type: "button",
          class: "uppy-DashboardTab-btn",
          role: "tab",
          tabindex: 0,
          "aria-controls": "uppy-DashboardContent-panel--" + e.id,
          "aria-selected": t.props.activePickerPanel.id === e.id,
          "data-uppy-super-focusable": !0,
          onclick: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderAcquirer.ReturnStatement.__h_102.__h_102.onclick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return t.props.showPanel(e.id);
                        SRTlib.send("]},");

          }
        }, e.icon(), __h_102("div", {
          class: "uppy-DashboardTab-name"
        }, e.name)));
                SRTlib.send("]},");

      }, t.renderAcquirers = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderAcquirers", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = [].concat(e), n = r.splice(e.length - 2, e.length);
                SRTlib.send("]},");

        return __h_102("div", {
          class: "uppy-Dashboard-AddFiles-list",
          role: "tablist"
        }, t.renderMyDeviceAcquirer(), r.map(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderAcquirers.ReturnStatement.__h_102", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return t.renderAcquirer(e);
                    SRTlib.send("]},");

        }), __h_102("span", {
          role: "presentation",
          style: "white-space: nowrap;"
        }, n.map(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.t.renderAcquirers.ReturnStatement.__h_102.__h_102", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return t.renderAcquirer(e);
                    SRTlib.send("]},");

        })));
                SRTlib.send("]},");

      }, t);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.renderPoweredByUppy = function () {
            SRTlib.send(`{ "anonymous": true, "function": "AddFiles.ReturnStatement.i.renderPoweredByUppy", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = __h_102("span", null, __h_102("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon uppy-Dashboard-poweredByIcon",
        width: "11",
        height: "11",
        viewBox: "0 0 11 11"
      }, __h_102("path", {
        d: "M7.365 10.5l-.01-4.045h2.612L5.5.806l-4.467 5.65h2.604l.01 4.044h3.718z",
        "fill-rule": "evenodd"
      })), __h_102("span", {
        class: "uppy-Dashboard-poweredByUppy"
      }, "Uppy")), t = this.props.i18nArray("poweredBy2", {
        backwardsCompat: this.props.i18n("poweredBy"),
        uppy: e
      });
            SRTlib.send("]},");

      return __h_102("a", {
        tabindex: "-1",
        href: "https://uppy.io",
        rel: "noreferrer noopener",
        target: "_blank",
        class: "uppy-Dashboard-poweredBy"
      }, t);
            SRTlib.send("]},");

    }, i.render = function () {
            SRTlib.send(`{ "anonymous": true, "function": "AddFiles.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return __h_102("div", {
        class: "uppy-Dashboard-AddFiles"
      }, this.renderHiddenFileInput(), this.renderDropPasteBrowseTagline(), this.props.acquirers.length > 0 && this.renderAcquirers(this.props.acquirers), __h_102("div", {
        class: "uppy-Dashboard-AddFiles-info"
      }, this.props.note && __h_102("div", {
        class: "uppy-Dashboard-note"
      }, this.props.note), this.props.proudlyDisplayPoweredByUppy && this.renderPoweredByUppy(this.props)));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(_$preact_51.Component), _$AddFiles_102 = AddFiles, __h_103 = _$preact_51.h, _$AddFilesPanel_103 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$AddFilesPanel_103", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_103("div", {
      class: "uppy-Dashboard-AddFilesPanel",
      "data-uppy-panelType": "AddFiles",
      "aria-hidden": e.showAddFilesPanel
    }, __h_103("div", {
      class: "uppy-DashboardContent-bar"
    }, __h_103("div", {
      class: "uppy-DashboardContent-title",
      role: "heading",
      "aria-level": "1"
    }, e.i18n("addingMoreFiles")), __h_103("button", {
      class: "uppy-DashboardContent-back",
      type: "button",
      onclick: function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$AddFilesPanel_103.ReturnStatement.__h_103.__h_103.__h_103.onclick", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.toggleAddFilesPanel(!1);
                SRTlib.send("]},");

      }
    }, e.i18n("back"))), __h_103(_$AddFiles_102, e));
        SRTlib.send("]},");

  }, _$ignoreEvent_123 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$ignoreEvent_123", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.target.tagName;
    "INPUT" !== t && "TEXTAREA" !== t ? (e.preventDefault(), e.stopPropagation()) : e.stopPropagation();
        SRTlib.send("]},");

  }, __h_114 = _$preact_51.h, _$PickerPanelContent_114 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$PickerPanelContent_114", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_114("div", {
      class: "uppy-DashboardContent-panel",
      role: "tabpanel",
      "data-uppy-panelType": "PickerPanel",
      id: "uppy-DashboardContent-panel--" + e.activePickerPanel.id,
      onDragOver: _$ignoreEvent_123,
      onDragLeave: _$ignoreEvent_123,
      onDrop: _$ignoreEvent_123,
      onPaste: _$ignoreEvent_123
    }, __h_114("div", {
      class: "uppy-DashboardContent-bar"
    }, __h_114("div", {
      class: "uppy-DashboardContent-title",
      role: "heading",
      "aria-level": "1"
    }, e.i18n("importFrom", {
      name: e.activePickerPanel.name
    })), __h_114("button", {
      class: "uppy-DashboardContent-back",
      type: "button",
      onclick: e.hideAllPanels
    }, e.i18n("done"))), __h_114("div", {
      class: "uppy-DashboardContent-panelBody"
    }, e.getPlugin(e.activePickerPanel.id).render(e.state)));
        SRTlib.send("]},");

  }, __h_115 = _$preact_51.h, iconPlus = _$icons_117.iconPlus, uploadStates = {
    STATE_ERROR: "error",
    STATE_WAITING: "waiting",
    STATE_PREPROCESSING: "preprocessing",
    STATE_UPLOADING: "uploading",
    STATE_POSTPROCESSING: "postprocessing",
    STATE_COMPLETE: "complete",
    STATE_PAUSED: "paused"
  };
  function UploadStatus(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    switch ((function (e, t, r, n) {
                    SRTlib.send(`{ "anonymous": true, "function": "emptyKey23", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

          if ((void 0 === n && (n = {}), e)) {
                        SRTlib.send("]},");

            return uploadStates.STATE_ERROR;
          }
          if (t) {
                        SRTlib.send("]},");

            return uploadStates.STATE_COMPLETE;
          }
          if (r) {
                        SRTlib.send("]},");

            return uploadStates.STATE_PAUSED;
          }
          for (var i = uploadStates.STATE_WAITING, o = Object.keys(n), s = 0; s < o.length; s++) {
            var a = n[o[s]].progress;
            if (a.uploadStarted && !a.uploadComplete) {
                            SRTlib.send("]},");

              return uploadStates.STATE_UPLOADING;
            }
            (a.preprocess && i !== uploadStates.STATE_UPLOADING && (i = uploadStates.STATE_PREPROCESSING), a.postprocess && i !== uploadStates.STATE_UPLOADING && i !== uploadStates.STATE_PREPROCESSING && (i = uploadStates.STATE_POSTPROCESSING));
          }
                    SRTlib.send("]},");

          return i;
                    SRTlib.send("]},");

        })(e.isAllErrored, e.isAllComplete, e.isAllPaused, e.files)) {
      case {
                    SRTlib.send("]},");

          return e.i18n("uploadingXFiles", {
            smart_count: e.inProgressNotPausedFiles.length
          });
        }:
        return e.i18n("uploadingXFiles", {
          smart_count: e.inProgressNotPausedFiles.length
        });
      case "preprocessing":
      case {
                    SRTlib.send("]},");

          return e.i18n("processingXFiles", {
            smart_count: e.processingFiles.length
          });
        }:
        return e.i18n("processingXFiles", {
          smart_count: e.processingFiles.length
        });
      case {
                    SRTlib.send("]},");

          return e.i18n("uploadPaused");
        }:
        return e.i18n("uploadPaused");
      case {
                    SRTlib.send("]},");

          return e.i18n("xFilesSelected", {
            smart_count: e.newFiles.length
          });
        }:
        return e.i18n("xFilesSelected", {
          smart_count: e.newFiles.length
        });
      case {
                    SRTlib.send("]},");

          return e.i18n("uploadComplete");
        }:
        return e.i18n("uploadComplete");
    }
        SRTlib.send("]},");

  }
  var _$PickerPanelTopBar_115 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$PickerPanelTopBar_115", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.allowNewUpload;
        SRTlib.send("]},");

    return (t && e.maxNumberOfFiles && (t = e.totalFileCount < e.maxNumberOfFiles), __h_115("div", {
      class: "uppy-DashboardContent-bar"
    }, e.isAllComplete || e.hideCancelButton ? __h_115("div", null) : __h_115("button", {
      class: "uppy-DashboardContent-back",
      type: "button",
      onclick: e.cancelAll
    }, e.i18n("cancel")), __h_115("div", {
      class: "uppy-DashboardContent-title",
      role: "heading",
      "aria-level": "1"
    }, __h_115(UploadStatus, e)), t ? __h_115("button", {
      class: "uppy-DashboardContent-addMore",
      type: "button",
      "aria-label": e.i18n("addMoreFiles"),
      title: e.i18n("addMoreFiles"),
      onclick: function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$PickerPanelTopBar_115.ReturnStatement.__h_115.__h_115.onclick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return e.toggleAddFilesPanel(!0);
                SRTlib.send("]},");

      }
    }, iconPlus(), __h_115("span", {
      class: "uppy-DashboardContent-addMoreCaption"
    }, e.i18n("addMore"))) : __h_115("div", null)));
        SRTlib.send("]},");

  };
  function ___extends_105() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_105 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply12", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var __h_105 = _$preact_51.h, __Component_105 = _$preact_51.Component, FileCard = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "FileCard", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r;
      ((r = e.call(this, t) || this).saveOnEnter = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "saveOnEnter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (13 === e.keyCode) {
          (e.stopPropagation(), e.preventDefault());
          var t = r.props.files[r.props.fileCardFor];
          r.props.saveFileCard(r.state.formState, t.id);
        }
                SRTlib.send("]},");

      }, r.updateMeta = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "r.updateMeta", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var n;
        r.setState({
          formState: ___extends_105({}, r.state.formState, (n = {}, n[t] = e, n))
        });
                SRTlib.send("]},");

      }, r.handleSave = function () {
                SRTlib.send(`{ "anonymous": true, "function": "r.handleSave", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = r.props.fileCardFor;
        r.props.saveFileCard(r.state.formState, e);
                SRTlib.send("]},");

      }, r.handleCancel = function () {
                SRTlib.send(`{ "anonymous": true, "function": "r.handleCancel", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        r.props.toggleFileCard();
                SRTlib.send("]},");

      }, r.renderMetaFields = function () {
                SRTlib.send(`{ "anonymous": true, "function": "r.renderMetaFields", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = r.props.metaFields || [], t = {
          text: "uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input"
        };
                SRTlib.send("]},");

        return e.map(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "r.renderMetaFields.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var n = "uppy-Dashboard-FileCard-input-" + e.id;
                    SRTlib.send("]},");

          return __h_105("fieldset", {
            key: e.id,
            class: "uppy-Dashboard-FileCard-fieldset"
          }, __h_105("label", {
            class: "uppy-Dashboard-FileCard-label",
            for: n
          }, e.name), void 0 !== e.render ? e.render({
            value: r.state.formState[e.id],
            onChange: function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "r.renderMetaFields.ReturnStatement.ReturnStatement.__h_105.onChange", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return r.updateMeta(t, e.id);
                            SRTlib.send("]},");

            },
            fieldCSSClasses: t
          }, __h_105) : __h_105("input", {
            class: t.text,
            id: n,
            type: e.type || "text",
            value: r.state.formState[e.id],
            placeholder: e.placeholder,
            onkeyup: r.saveOnEnter,
            onkeydown: r.saveOnEnter,
            onkeypress: r.saveOnEnter,
            oninput: function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "r.renderMetaFields.ReturnStatement.ReturnStatement.__h_105.__h_105.oninput", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return r.updateMeta(t.target.value, e.id);
                            SRTlib.send("]},");

            },
            "data-uppy-super-focusable": !0
          }));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      });
      var n = r.props.files[r.props.fileCardFor], i = r.props.metaFields || [], o = {};
            SRTlib.send("]},");

      return (i.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement15", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        o[e.id] = n.meta[e.id] || "";
                SRTlib.send("]},");

      }), r.state = {
        formState: o
      }, r);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r, n.prototype.render = function () {
            SRTlib.send(`{ "anonymous": true, "function": "FileCard.ReturnStatement.n.prototype.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.props.files[this.props.fileCardFor];
            SRTlib.send("]},");

      return __h_105("div", {
        class: "uppy-Dashboard-FileCard",
        "data-uppy-panelType": "FileCard",
        onDragOver: _$ignoreEvent_123,
        onDragLeave: _$ignoreEvent_123,
        onDrop: _$ignoreEvent_123,
        onPaste: _$ignoreEvent_123
      }, __h_105("div", {
        class: "uppy-DashboardContent-bar"
      }, __h_105("div", {
        class: "uppy-DashboardContent-title",
        role: "heading",
        "aria-level": "1"
      }, this.props.i18nArray("editing", {
        file: __h_105("span", {
          class: "uppy-DashboardContent-titleFile"
        }, e.meta ? e.meta.name : e.name)
      })), __h_105("button", {
        class: "uppy-DashboardContent-back",
        type: "button",
        title: this.props.i18n("finishEditingFile"),
        onclick: this.handleSave
      }, this.props.i18n("done"))), __h_105("div", {
        class: "uppy-Dashboard-FileCard-inner"
      }, __h_105("div", {
        class: "uppy-Dashboard-FileCard-preview",
        style: {
          backgroundColor: _$getFileTypeIcon_122(e.type).color
        }
      }, __h_105(_$FilePreview_113, {
        file: e
      })), __h_105("div", {
        class: "uppy-Dashboard-FileCard-info"
      }, this.renderMetaFields()), __h_105("div", {
        class: "uppy-Dashboard-FileCard-actions"
      }, __h_105("button", {
        class: "uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn",
        type: "button",
        onclick: this.handleSave
      }, this.props.i18n("saveChanges")), __h_105("button", {
        class: "uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn",
        type: "button",
        onclick: this.handleCancel
      }, this.props.i18n("cancel")))));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Component_105), _$FileCard_105 = FileCard, _$isDragDropSupported_221 = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$isDragDropSupported_221", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = document.createElement("div");
        SRTlib.send("]},");

    return ("draggable" in e) && ("ondragstart" in e) && ("ondrop" in e) && ("FormData" in window) && ("FileReader" in window);
        SRTlib.send("]},");

  }, _$preactCssTransitionGroup_50 = {
    exports: {}
  }, __global_50, __factory_50;
  function ___extends_104() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_104 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply13", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  (__global_50 = this, __factory_50 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey25", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    "use strict";
    function t(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.attributes && e.attributes.key;
            SRTlib.send("]},");

    }
    function r(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.base;
            SRTlib.send("]},");

    }
    function n(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e && e.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement16", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return null !== e;
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }
    function i(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      for (var r = e.length; r--; ) if (t(e[r])) {
                SRTlib.send("]},");

        return !0;
      }
            SRTlib.send("]},");

      return !1;
            SRTlib.send("]},");

    }
    function o(e, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return i(e, function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t(e) === r;
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }
    function s(e, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return o(e, t(r));
            SRTlib.send("]},");

    }
    function a(e, r, n) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            SRTlib.send("]},");

      return i(e, function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t(e) === r && e.props[n];
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }
    function u(e, r, n) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            SRTlib.send("]},");

      return a(e, t(r), n);
            SRTlib.send("]},");

    }
    var l = " ", c = /[\n\t\r]+/g, p = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "p", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return (l + e + l).replace(c, l);
            SRTlib.send("]},");

    };
    function h(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r;
      e.classList ? (r = e.classList).add.apply(r, t.split(" ")) : e.className += " " + t;
            SRTlib.send("]},");

    }
    function d(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if ((t = t.trim(), e.classList)) {
        var r;
        (r = e.classList).remove.apply(r, t.split(" "));
      } else {
        var n = e.className.trim(), i = p(n);
        for (t = l + t + l; i.indexOf(t) >= 0; ) i = i.replace(t, l);
        e.className = i.trim();
      }
            SRTlib.send("]},");

    }
    var f = {
      transitionend: {
        transition: "transitionend",
        WebkitTransition: "webkitTransitionEnd",
        MozTransition: "mozTransitionEnd",
        OTransition: "oTransitionEnd",
        msTransition: "MSTransitionEnd"
      },
      animationend: {
        animation: "animationend",
        WebkitAnimation: "webkitAnimationEnd",
        MozAnimation: "mozAnimationEnd",
        OAnimation: "oAnimationEnd",
        msAnimation: "MSAnimationEnd"
      }
    }, _ = [];
    "undefined" != typeof window && (function () {
            SRTlib.send(`{ "anonymous": true, "function": "emptyKey24", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = document.createElement("div").style;
      for (var t in (("AnimationEvent" in window) || delete f.animationend.animation, ("TransitionEvent" in window) || delete f.transitionend.transition, f)) {
        var r = f[t];
        for (var n in r) if ((n in e)) {
          _.push(r[n]);
          break;
        }
      }
            SRTlib.send("]},");

    })();
    var g = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "g", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            SRTlib.send("]},");

    }, y = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "y", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
      (e.prototype = Object.create(t && t.prototype, {
        constructor: {
          value: e,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t));
            SRTlib.send("]},");

    }, m = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "m", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            SRTlib.send("]},");

      return !t || "object" != typeof t && "function" != typeof t ? e : t;
            SRTlib.send("]},");

    }, v = (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "v", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      function t() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var n, i;
        g(this, t);
        for (var o = arguments.length, s = Array(o), a = 0; a < o; a++) s[a] = arguments[a];
                SRTlib.send("]},");

        return (n = i = m(this, e.call.apply(e, [this].concat(s))), i.flushClassNameQueue = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i.flushClassNameQueue", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (r(i) && h(r(i), i.classNameQueue.join(" ")), i.classNameQueue.length = 0, i.timeout = null);
                    SRTlib.send("]},");

        }, m(i, n));
                SRTlib.send("]},");

      }
            SRTlib.send("]},");

      return (y(t, e), t.prototype.transition = function (e, t, n) {
                SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.transition3", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var i = this, o = r(this), s = this.props.name[e] || this.props.name + "-" + e, a = this.props.name[e + "Active"] || s + "-active", u = null;
        (this.endListener && this.endListener(), this.endListener = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.transition.endListener3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e && e.target !== o || (clearTimeout(u), d(o, s), d(o, a), (function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.transition.endListener2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            _.length && _.forEach(function (r) {
                            SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.transition.endListener", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              e.removeEventListener(r, t, !1);
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          })(o, i.endListener), i.endListener = null, t && t());
                    SRTlib.send("]},");

        }, n ? (u = setTimeout(this.endListener, n), this.transitionTimeouts.push(u)) : (function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.transition2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          if (!_.length) {
                        SRTlib.send("]},");

            return window.setTimeout(t, 0);
          }
          _.forEach(function (r) {
                        SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.transition", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            e.addEventListener(r, t, !1);
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        })(o, this.endListener), h(o, s), this.queueClass(a));
                SRTlib.send("]},");

      }, t.prototype.queueClass = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.queueClass", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (this.classNameQueue.push(e), this.timeout || (this.timeout = setTimeout(this.flushClassNameQueue, 17)));
                SRTlib.send("]},");

      }, t.prototype.stop = function () {
                SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.stop", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (this.timeout && (clearTimeout(this.timeout), this.classNameQueue.length = 0, this.timeout = null), this.endListener && this.endListener());
                SRTlib.send("]},");

      }, t.prototype.componentWillMount = function () {
                SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.componentWillMount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (this.classNameQueue = [], this.transitionTimeouts = []);
                SRTlib.send("]},");

      }, t.prototype.componentWillUnmount = function () {
                SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.componentWillUnmount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (this.timeout && clearTimeout(this.timeout), this.transitionTimeouts.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.componentWillUnmount.transitionTimeouts.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          clearTimeout(e);
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      }, t.prototype.componentWillEnter = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.componentWillEnter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        this.props.enter ? this.transition("enter", e, this.props.enterTimeout) : e();
                SRTlib.send("]},");

      }, t.prototype.componentWillLeave = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.componentWillLeave", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        this.props.leave ? this.transition("leave", e, this.props.leaveTimeout) : e();
                SRTlib.send("]},");

      }, t.prototype.render = function () {
                SRTlib.send(`{ "anonymous": true, "function": "v.ReturnStatement.t.prototype.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return (e = this.props.children) && e[0];
        var e;
                SRTlib.send("]},");

      }, t);
            SRTlib.send("]},");

    })(e.Component), b = (function (r) {
            SRTlib.send(`{ "anonymous": true, "function": "b", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      function i(n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        g(this, i);
        var o = m(this, r.call(this));
                SRTlib.send("]},");

        return (o.renderChild = function (r) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.o.renderChild", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var n = o.props, i = n.transitionName, s = n.transitionEnter, a = n.transitionLeave, u = n.transitionEnterTimeout, l = n.transitionLeaveTimeout, c = t(r);
                    SRTlib.send("]},");

          return e.h(v, {
            key: c,
            ref: function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.o.renderChild.ReturnStatement.ref", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              (o.refs[c] = e) || (r = null);
                            SRTlib.send("]},");

            },
            name: i,
            enter: s,
            leave: a,
            enterTimeout: u,
            leaveTimeout: l
          }, r);
                    SRTlib.send("]},");

        }, o.refs = {}, o.state = {
          children: (n.children || []).slice()
        }, o);
                SRTlib.send("]},");

      }
            SRTlib.send("]},");

      return (y(i, r), i.prototype.shouldComponentUpdate = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.shouldComponentUpdate", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return t.children !== this.state.children;
                SRTlib.send("]},");

      }, i.prototype.componentWillMount = function () {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentWillMount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (this.currentlyTransitioningKeys = {}, this.keysToEnter = [], this.keysToLeave = []);
                SRTlib.send("]},");

      }, i.prototype.componentWillReceiveProps = function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentWillReceiveProps5", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var i, a, l, c, p = this, h = r.children, d = r.exclusive, f = r.showProp, _ = n(h || []).slice(), g = n(d ? this.props.children : this.state.children), y = (i = _, a = [], l = {}, c = [], g.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentWillReceiveProps.y", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r = t(e);
          o(i, r) ? c.length && (l[r] = c, c = []) : c.push(e);
                    SRTlib.send("]},");

        }), i.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentWillReceiveProps.y2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r = t(e);
          (l.hasOwnProperty(r) && (a = a.concat(l[r])), a.push(e));
                    SRTlib.send("]},");

        }), a.concat(c));
        (f && (y = y.map(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentWillReceiveProps", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r;
                    SRTlib.send("]},");

          return (!t.props[f] && u(g, t, f) && (t = e.cloneElement(t, ((r = {})[f] = !0, r))), t);
                    SRTlib.send("]},");

        })), d && y.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentWillReceiveProps2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return p.stop(t(e));
                    SRTlib.send("]},");

        }), this.setState({
          children: y
        }), this.forceUpdate(), _.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentWillReceiveProps3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = e.key, r = g && s(g, e);
          if (f) {
            if (r) {
              var n = u(g, e, f), i = e.props[f];
              n || !i || p.currentlyTransitioningKeys[t] || p.keysToEnter.push(t);
            }
          } else r || p.currentlyTransitioningKeys[t] || p.keysToEnter.push(t);
                    SRTlib.send("]},");

        }), g.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentWillReceiveProps4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = e.key, r = _ && s(_, e);
          if (f) {
            if (r) {
              var n = u(_, e, f), i = e.props[f];
              n || !i || p.currentlyTransitioningKeys[t] || p.keysToLeave.push(t);
            }
          } else r || p.currentlyTransitioningKeys[t] || p.keysToLeave.push(t);
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      }, i.prototype.performEnter = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.performEnter2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = this;
        this.currentlyTransitioningKeys[e] = !0;
        var r = this.refs[e];
        r.componentWillEnter ? r.componentWillEnter(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.performEnter", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return t._handleDoneEntering(e);
                    SRTlib.send("]},");

        }) : this._handleDoneEntering(e);
                SRTlib.send("]},");

      }, i.prototype._handleDoneEntering = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype._handleDoneEntering", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        delete this.currentlyTransitioningKeys[e];
        var t = n(this.props.children), r = this.props.showProp;
        !t || !r && !o(t, e) || r && !a(t, e, r) ? this.performLeave(e) : this.setState({
          children: t
        });
                SRTlib.send("]},");

      }, i.prototype.stop = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.stop", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        delete this.currentlyTransitioningKeys[e];
        var t = this.refs[e];
        t && t.stop();
                SRTlib.send("]},");

      }, i.prototype.performLeave = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.performLeave2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = this;
        this.currentlyTransitioningKeys[e] = !0;
        var r = this.refs[e];
        r && r.componentWillLeave ? r.componentWillLeave(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.performLeave", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return t._handleDoneLeaving(e);
                    SRTlib.send("]},");

        }) : this._handleDoneLeaving(e);
                SRTlib.send("]},");

      }, i.prototype._handleDoneLeaving = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype._handleDoneLeaving", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        delete this.currentlyTransitioningKeys[e];
        var t = this.props.showProp, r = n(this.props.children);
        t && r && a(r, e, t) ? this.performEnter(e) : !t && r && o(r, e) ? this.performEnter(e) : this.setState({
          children: r
        });
                SRTlib.send("]},");

      }, i.prototype.componentDidUpdate = function () {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentDidUpdate3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this, t = this.keysToEnter, r = this.keysToLeave;
        (this.keysToEnter = [], t.forEach(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentDidUpdate", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return e.performEnter(t);
                    SRTlib.send("]},");

        }), this.keysToLeave = [], r.forEach(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.componentDidUpdate2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return e.performLeave(t);
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      }, i.prototype.render = function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.render", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var i = t.component, o = (t.transitionName, t.transitionEnter, t.transitionLeave, t.transitionEnterTimeout, t.transitionLeaveTimeout, t.children, (function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "b.ReturnStatement.i.prototype.render.o", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var r = {};
          for (var n in e) t.indexOf(n) >= 0 || Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
                    SRTlib.send("]},");

          return r;
                    SRTlib.send("]},");

        })(t, ["component", "transitionName", "transitionEnter", "transitionLeave", "transitionEnterTimeout", "transitionLeaveTimeout", "children"])), s = r.children;
                SRTlib.send("]},");

        return e.h(i, o, n(s).map(this.renderChild));
                SRTlib.send("]},");

      }, i);
            SRTlib.send("]},");

    })(e.Component);
        SRTlib.send("]},");

    return (b.defaultProps = {
      component: "span",
      transitionEnter: !0,
      transitionLeave: !0
    }, b);
        SRTlib.send("]},");

  }, "object" == typeof _$preactCssTransitionGroup_50.exports ? _$preactCssTransitionGroup_50.exports = __factory_50(_$preact_51) : "function" == typeof define && define.amd ? define(["preact"], __factory_50) : __global_50.PreactCSSTransitionGroup = __factory_50(__global_50.preact), _$preactCssTransitionGroup_50 = _$preactCssTransitionGroup_50.exports);
  var __h_104 = _$preact_51.h;
  function TransitionWrapper(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_104(_$preactCssTransitionGroup_50, {
      transitionName: "uppy-transition-slideDownUp",
      transitionEnterTimeout: 250,
      transitionLeaveTimeout: 250
    }, e.children);
        SRTlib.send("]},");

  }
  var _$Dashboard_104 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$Dashboard_104", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = 0 === e.totalFileCount, r = e.containerWidth > 576, n = _$classnames_9({
      "uppy-Root": e.isTargetDOMEl,
      "uppy-Dashboard": !0,
      "uppy-Dashboard--animateOpenClose": e.animateOpenClose,
      "uppy-Dashboard--isClosing": e.isClosing,
      "uppy-Dashboard--isDraggingOver": e.isDraggingOver,
      "uppy-Dashboard--modal": !e.inline,
      "uppy-size--md": e.containerWidth > 576,
      "uppy-size--lg": e.containerWidth > 700,
      "uppy-size--xl": e.containerWidth > 900,
      "uppy-size--height-md": e.containerHeight > 400,
      "uppy-Dashboard--isAddFilesPanelVisible": e.showAddFilesPanel,
      "uppy-Dashboard--isInnerWrapVisible": e.areInsidesReadyToBeVisible
    }), i = 1;
    e.containerWidth > 900 ? i = 5 : e.containerWidth > 700 ? i = 4 : e.containerWidth > 576 && (i = 3);
    var o = e.showSelectedFiles && !t;
        SRTlib.send("]},");

    return __h_104("div", {
      class: n,
      "data-uppy-theme": e.theme,
      "data-uppy-num-acquirers": e.acquirers.length,
      "data-uppy-drag-drop-supported": _$isDragDropSupported_221(),
      "aria-hidden": e.inline ? "false" : e.isHidden,
      "aria-label": e.inline ? e.i18n("dashboardTitle") : e.i18n("dashboardWindowTitle"),
      onpaste: e.handlePaste,
      onDragOver: e.handleDragOver,
      onDragLeave: e.handleDragLeave,
      onDrop: e.handleDrop
    }, __h_104("div", {
      class: "uppy-Dashboard-overlay",
      tabindex: -1,
      onclick: e.handleClickOutside
    }), __h_104("div", {
      class: "uppy-Dashboard-inner",
      "aria-modal": !e.inline && "true",
      role: !e.inline && "dialog",
      style: {
        width: e.inline && e.width ? e.width : "",
        height: e.inline && e.height ? e.height : ""
      }
    }, e.inline ? null : __h_104("button", {
      class: "uppy-u-reset uppy-Dashboard-close",
      type: "button",
      "aria-label": e.i18n("closeModal"),
      title: e.i18n("closeModal"),
      onclick: e.closeModal
    }, __h_104("span", {
      "aria-hidden": "true"
    }, "\xd7")), __h_104("div", {
      class: "uppy-Dashboard-innerWrap"
    }, __h_104("div", {
      class: "uppy-Dashboard-dropFilesHereHint"
    }, e.i18n("dropHint")), o && __h_104(_$PickerPanelTopBar_115, e), o ? __h_104(_$FileList_112, ___extends_104({}, e, {
      itemsPerRow: i
    })) : __h_104(_$AddFiles_102, ___extends_104({}, e, {
      isSizeMD: r
    })), __h_104(TransitionWrapper, null, e.showAddFilesPanel ? __h_104(_$AddFilesPanel_103, ___extends_104({
      key: "AddFilesPanel"
    }, e, {
      isSizeMD: r
    })) : null), __h_104(TransitionWrapper, null, e.fileCardFor ? __h_104(_$FileCard_105, ___extends_104({
      key: "FileCard"
    }, e)) : null), __h_104(TransitionWrapper, null, e.activePickerPanel ? __h_104(_$PickerPanelContent_114, ___extends_104({
      key: "PickerPanelContent"
    }, e)) : null), __h_104("div", {
      class: "uppy-Dashboard-progressindicators"
    }, e.progressindicators.map(function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Dashboard_104.ReturnStatement.__h_104.__h_104.__h_104.__h_104.e.progressindicators.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.getPlugin(t.id).render(e.state);
            SRTlib.send("]},");

    })))));
        SRTlib.send("]},");

  }, _$package_138 = {
    version: "1.5.6"
  }, ___class_137, ___temp_137;
  function ___extends_137() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_137 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply14", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  for (var __Plugin_137 = _$lib_97.Plugin, __h_137 = _$preact_51.h, _$lib_137 = (___temp_137 = ___class_137 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_137", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).render = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = e.info, r = t.isHidden, i = t.message, o = t.details;
                SRTlib.send("]},");

        return __h_137("div", {
          class: "uppy uppy-Informer",
          "aria-hidden": r
        }, __h_137("p", {
          role: "alert"
        }, i, " ", o && __h_137("span", {
          "aria-label": o,
          "data-microtip-position": "top-left",
          "data-microtip-size": "medium",
          role: "tooltip",
          onclick: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.render.ReturnStatement.__h_137.__h_137.__h_137.onclick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            alert(i + " \n\n " + o);
                        SRTlib.send("]},");

          },
          onMouseOver: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.render.ReturnStatement.__h_137.__h_137.__h_137.onMouseOver", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            clearTimeout(n.uppy.infoTimeoutID);
                        SRTlib.send("]},");

          },
          onMouseLeave: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.render.ReturnStatement.__h_137.__h_137.__h_137.onMouseLeave", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            n.uppy.infoTimeoutID = setTimeout(n.uppy.hideInfo, 2e3);
                        SRTlib.send("]},");

          }
        }, "?")));
                SRTlib.send("]},");

      }, n.type = "progressindicator", n.id = n.opts.id || "Informer", n.title = "Informer", n.opts = ___extends_137({}, {}, r), n);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r, n.prototype.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_137.ReturnStatement.n.prototype.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.opts.target;
      e && this.mount(e, this);
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_137), ___class_137.VERSION = _$package_138.version, ___temp_137), _$dataURItoBlob_202 = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$dataURItoBlob_202", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    var n = e.split(",")[1], i = t.mimeType || e.split(",")[0].split(":")[1].split(";")[0];
    null == i && (i = "plain/text");
    for (var o, s = atob(n), a = [], u = 0; u < s.length; u++) a.push(s.charCodeAt(u));
    try {
      o = new Uint8Array(a);
    } catch (err) {
            SRTlib.send("]},");

      return null;
    }
        SRTlib.send("]},");

    return r ? new File([o], t.name || "", {
      type: i
    }) : new Blob([o], {
      type: i
    });
        SRTlib.send("]},");

  }, _$isObjectURL_223 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$isObjectURL_223", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return 0 === e.indexOf("blob:");
        SRTlib.send("]},");

  }, _$isPreviewSupported_224 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$isPreviewSupported_224", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (!e) {
            SRTlib.send("]},");

      return !1;
    }
    var t = e.split("/")[1];
        SRTlib.send("]},");

    return !!(/^(jpe?g|gif|png|svg|svg\+xml|bmp|webp)$/).test(t);
        SRTlib.send("]},");

  }, _$mathLog2_44 = Math.log2 || (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$mathLog2_44", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return Math.log(e) * Math.LOG2E;
        SRTlib.send("]},");

  }), _$base64Js_5 = {
    toByteArray: function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$base64Js_5.toByteArray", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t, r, n = getLens(e), i = n[0], o = n[1], s = new Arr((function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$base64Js_5.toByteArray.s", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return 3 * (t + r) / 4 - r;
                SRTlib.send("]},");

      })(0, i, o)), a = 0, u = o > 0 ? i - 4 : i;
      for (r = 0; r < u; r += 4) (t = revLookup[e.charCodeAt(r)] << 18 | revLookup[e.charCodeAt(r + 1)] << 12 | revLookup[e.charCodeAt(r + 2)] << 6 | revLookup[e.charCodeAt(r + 3)], s[a++] = t >> 16 & 255, s[a++] = t >> 8 & 255, s[a++] = 255 & t);
            SRTlib.send("]},");

      return (2 === o && (t = revLookup[e.charCodeAt(r)] << 2 | revLookup[e.charCodeAt(r + 1)] >> 4, s[a++] = 255 & t), 1 === o && (t = revLookup[e.charCodeAt(r)] << 10 | revLookup[e.charCodeAt(r + 1)] << 4 | revLookup[e.charCodeAt(r + 2)] >> 2, s[a++] = t >> 8 & 255, s[a++] = 255 & t), s);
            SRTlib.send("]},");

    },
    fromByteArray: function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$base64Js_5.fromByteArray", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t, r = e.length, n = r % 3, i = [], o = 0, s = r - n; o < s; o += 16383) i.push(encodeChunk(e, o, o + 16383 > s ? s : o + 16383));
            SRTlib.send("]},");

      return (1 === n ? (t = e[r - 1], i.push(lookup[t >> 2] + lookup[t << 4 & 63] + "==")) : 2 === n && (t = (e[r - 2] << 8) + e[r - 1], i.push(lookup[t >> 10] + lookup[t >> 4 & 63] + lookup[t << 2 & 63] + "=")), i.join(""));
            SRTlib.send("]},");

    }
  }, lookup = [], revLookup = [], Arr = "undefined" != typeof Uint8Array ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, len = code.length; i < len; ++i) (lookup[i] = code[i], revLookup[code.charCodeAt(i)] = i);
  function getLens(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.length;
    if (t % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
    var r = e.indexOf("=");
        SRTlib.send("]},");

    return (-1 === r && (r = t), [r, r === t ? 0 : 4 - r % 4]);
        SRTlib.send("]},");

  }
  function encodeChunk(e, t, r) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    for (var n, i, o = [], s = t; s < r; s += 3) (n = (e[s] << 16 & 16711680) + (e[s + 1] << 8 & 65280) + (255 & e[s + 2]), o.push(lookup[(i = n) >> 18 & 63] + lookup[i >> 12 & 63] + lookup[i >> 6 & 63] + lookup[63 & i]));
        SRTlib.send("]},");

    return o.join("");
        SRTlib.send("]},");

  }
  (revLookup[("-").charCodeAt(0)] = 62, revLookup[("_").charCodeAt(0)] = 63);
  var _$ieee754_38 = {
    read: function (e, t, r, n, i) {
            SRTlib.send(`{ "anonymous": true, "function": "_$ieee754_38.read", "fileName": "${__filename}", "paramsNumber": 5, "calls" : [`);

      var o, s, a = 8 * i - n - 1, u = (1 << a) - 1, l = u >> 1, c = -7, p = r ? i - 1 : 0, h = r ? -1 : 1, d = e[t + p];
      for ((p += h, o = d & (1 << -c) - 1, d >>= -c, c += a); c > 0; (o = 256 * o + e[t + p], p += h, c -= 8)) ;
      for ((s = o & (1 << -c) - 1, o >>= -c, c += n); c > 0; (s = 256 * s + e[t + p], p += h, c -= 8)) ;
      if (0 === o) o = 1 - l; else {
        if (o === u) {
                    SRTlib.send("]},");

          return s ? NaN : 1 / 0 * (d ? -1 : 1);
        }
        (s += Math.pow(2, n), o -= l);
      }
            SRTlib.send("]},");

      return (d ? -1 : 1) * s * Math.pow(2, o - n);
            SRTlib.send("]},");

    },
    write: function (e, t, r, n, i, o) {
            SRTlib.send(`{ "anonymous": true, "function": "_$ieee754_38.write", "fileName": "${__filename}", "paramsNumber": 6, "calls" : [`);

      var s, a, u, l = 8 * o - i - 1, c = (1 << l) - 1, p = c >> 1, h = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = n ? 0 : o - 1, f = n ? 1 : -1, _ = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
      for ((t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0, s = c) : (s = Math.floor(Math.log(t) / Math.LN2), t * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (t += s + p >= 1 ? h / u : h * Math.pow(2, 1 - p)) * u >= 2 && (s++, u /= 2), s + p >= c ? (a = 0, s = c) : s + p >= 1 ? (a = (t * u - 1) * Math.pow(2, i), s += p) : (a = t * Math.pow(2, p - 1) * Math.pow(2, i), s = 0))); i >= 8; (e[r + d] = 255 & a, d += f, a /= 256, i -= 8)) ;
      for ((s = s << i | a, l += i); l > 0; (e[r + d] = 255 & s, d += f, s /= 256, l -= 8)) ;
      e[r + d - f] |= 128 * _;
            SRTlib.send("]},");

    }
  }, _$miniLegacyUmd_180 = {
    exports: {}
  };
  ((function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "call11", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    var n, i;
    (n = this, i = function (n) {
            SRTlib.send(`{ "anonymous": true, "function": "call10", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      "use strict";
      function i(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                SRTlib.send("]},");

      }
      function o(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        for (var r = 0; r < t.length; r++) {
          var n = t[r];
          (n.enumerable = n.enumerable || !1, n.configurable = !0, ("value" in n) && (n.writable = !0), Object.defineProperty(e, n.key, n));
        }
                SRTlib.send("]},");

      }
      function s(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (t && o(e.prototype, t), r && o(e, r), e);
                SRTlib.send("]},");

      }
      function a(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return ((t in e) ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : e[t] = r, e);
                SRTlib.send("]},");

      }
      function u(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
          constructor: {
            value: e,
            writable: !0,
            configurable: !0
          }
        });
        var r = ["prototype", "__proto__", "caller", "arguments", "length", "name"];
        (Object.getOwnPropertyNames(t).forEach(function (n) {
                    SRTlib.send(`{ "anonymous": true, "function": "forEach2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          -1 === r.indexOf(n) && e[n] !== t[n] && (e[n] = t[n]);
                    SRTlib.send("]},");

        }), t && c(e, t));
                SRTlib.send("]},");

      }
      function l(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement17", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return e.__proto__ || Object.getPrototypeOf(e);
                    SRTlib.send("]},");

        })(e);
                SRTlib.send("]},");

      }
      function c(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (c = Object.setPrototypeOf || (function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement18", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                    SRTlib.send("]},");

          return (e.__proto__ = t, e);
                    SRTlib.send("]},");

        }))(e, t);
                SRTlib.send("]},");

      }
      function p(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (p = (function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply15", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          if ("undefined" == typeof Reflect || !Reflect.construct) {
                        SRTlib.send("]},");

            return !1;
          }
          if (Reflect.construct.sham) {
                        SRTlib.send("]},");

            return !1;
          }
          if ("function" == typeof Proxy) {
                        SRTlib.send("]},");

            return !0;
          }
          try {
                        SRTlib.send("]},");

            return (Date.prototype.toString.call(Reflect.construct(Date, [], function () {
                            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply.ReturnStatement.Date.prototype.toString.call2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                            SRTlib.send("]},");

            })), !0);
          } catch (e) {
                        SRTlib.send("]},");

            return !1;
          }
                    SRTlib.send("]},");

        })() ? Reflect.construct : function (e, t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply16", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          var n = [null];
          n.push.apply(n, t);
          var i = new (Function.bind.apply(e, n))();
                    SRTlib.send("]},");

          return (r && c(i, r.prototype), i);
                    SRTlib.send("]},");

        }).apply(null, arguments);
                SRTlib.send("]},");

      }
      function h(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = "function" == typeof Map ? new Map() : void 0;
                SRTlib.send("]},");

        return (h = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement19", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if (null === e || (r = e, -1 === Function.toString.call(r).indexOf("[native code]"))) {
                        SRTlib.send("]},");

            return e;
          }
          var r;
          if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
          if (void 0 !== t) {
            if (t.has(e)) {
                            SRTlib.send("]},");

              return t.get(e);
            }
            t.set(e, n);
          }
          function n() {
                        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return p(e, arguments, l(this).constructor);
                        SRTlib.send("]},");

          }
                    SRTlib.send("]},");

          return (n.prototype = Object.create(e.prototype, {
            constructor: {
              value: n,
              enumerable: !1,
              writable: !0,
              configurable: !0
            }
          }), c(n, e));
                    SRTlib.send("]},");

        })(e);
                SRTlib.send("]},");

      }
      function d(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      }
      function f(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return !t || "object" != typeof t && "function" != typeof t ? d(e) : t;
                SRTlib.send("]},");

      }
      function _(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return (_ = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (e, t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement20", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          var n = (function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = l(e)); ) ;
                        SRTlib.send("]},");

            return e;
                        SRTlib.send("]},");

          })(e, t);
          if (n) {
            var i = Object.getOwnPropertyDescriptor(n, t);
                        SRTlib.send("]},");

            return i.get ? i.get.call(r) : i.value;
          }
                    SRTlib.send("]},");

        })(e, t, r || e);
                SRTlib.send("]},");

      }
      var g = Object.values || (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.g", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = [];
        for (var r in e) t.push(e[r]);
                SRTlib.send("]},");

        return t;
                SRTlib.send("]},");

      }), y = Object.entries || (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.y", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = [];
        for (var r in e) t.push([r, e[r]]);
                SRTlib.send("]},");

        return t;
                SRTlib.send("]},");

      }), m = Object.assign || (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.m", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) r[n - 1] = arguments[n];
                SRTlib.send("]},");

        return (r.forEach(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.m.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          for (var r in t) e[r] = t[r];
                    SRTlib.send("]},");

        }), e);
                SRTlib.send("]},");

      }), v = Object.fromEntries || (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.v", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = {};
                SRTlib.send("]},");

        return (b(e).forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.v.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r = e[0], n = e[1];
          t[r] = n;
                    SRTlib.send("]},");

        }), t);
                SRTlib.send("]},");

      }), b = Array.from || (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.b", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e instanceof A) {
          var t = [];
                    SRTlib.send("]},");

          return (e.forEach(function (e, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return t.push([r, e]);
                        SRTlib.send("]},");

          }), t);
        }
                SRTlib.send("]},");

        return Array.prototype.slice.call(e);
                SRTlib.send("]},");

      });
      function w(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return -1 !== this.indexOf(e);
                SRTlib.send("]},");

      }
      (Array.prototype.includes || (Array.prototype.includes = w), String.prototype.includes || (String.prototype.includes = w), String.prototype.startsWith || (String.prototype.startsWith = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.String.prototype.startsWith", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                SRTlib.send("]},");

        return this.substring(t, t + e.length) === e;
                SRTlib.send("]},");

      }), String.prototype.endsWith || (String.prototype.endsWith = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.String.prototype.endsWith", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.length;
                SRTlib.send("]},");

        return this.substring(t - e.length, t) === e;
                SRTlib.send("]},");

      }));
      var k = "undefined" != typeof self ? self : t, C = k.fetch || (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.C", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                SRTlib.send("]},");

        return new Promise(function (r, n) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.C.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var i = new XMLHttpRequest();
          if ((i.open("get", e, !0), i.responseType = "arraybuffer", i.onerror = n, t.headers)) for (var o in t.headers) i.setRequestHeader(o, t.headers[o]);
          (i.onload = function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.C.ReturnStatement.i.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            r({
              ok: i.status >= 200 && i.status < 300,
              status: i.status,
              arrayBuffer: function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call.C.ReturnStatement.i.onload.r.arrayBuffer", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                SRTlib.send("]},");

                return Promise.resolve(i.response);
                                SRTlib.send("]},");

              }
            });
                        SRTlib.send("]},");

          }, i.send(null));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), S = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.S", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = [];
        if ((Object.defineProperties(t, {
          size: {
            get: function () {
                            SRTlib.send(`{ "anonymous": true, "function": "call.S.size.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                            SRTlib.send("]},");

              return this.length;
                            SRTlib.send("]},");

            }
          },
          has: {
            value: function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.S.has.value", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return -1 !== this.indexOf(e);
                            SRTlib.send("]},");

            }
          },
          add: {
            value: function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.S.add.value", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              this.has(e) || this.push(e);
                            SRTlib.send("]},");

            }
          },
          delete: {
            value: function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.S.delete.value", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              if (this.has(e)) {
                var t = this.indexOf(e);
                this.splice(t, 1);
              }
                            SRTlib.send("]},");

            }
          }
        }), Array.isArray(e))) for (var r = 0; r < e.length; r++) t.add(e[r]);
                SRTlib.send("]},");

        return t;
                SRTlib.send("]},");

      }, P = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.P", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return new A(e);
                SRTlib.send("]},");

      }, A = void 0 !== k.Map && void 0 !== k.Map.prototype.keys ? k.Map : (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.A", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e(t) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if ((i(this, e), this.clear(), t)) for (var r = 0; r < t.length; r++) this.set(t[r][0], t[r][1]);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (s(e, [{
          key: "clear",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            (this._map = {}, this._keys = []);
                        SRTlib.send("]},");

          }
        }, {
          key: "get",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return this._map["map_" + e];
                        SRTlib.send("]},");

          }
        }, {
          key: "set",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return (this._map["map_" + e] = t, this._keys.indexOf(e) < 0 && this._keys.push(e), this);
                        SRTlib.send("]},");

          }
        }, {
          key: "has",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return this._keys.indexOf(e) >= 0;
                        SRTlib.send("]},");

          }
        }, {
          key: "delete",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value5", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = this._keys.indexOf(e);
                        SRTlib.send("]},");

            return !(t < 0 || (delete this._map["map_" + e], this._keys.splice(t, 1), 0));
                        SRTlib.send("]},");

          }
        }, {
          key: "keys",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value6", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this._keys.slice(0);
                        SRTlib.send("]},");

          }
        }, {
          key: "values",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value7", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = this;
                        SRTlib.send("]},");

            return this._keys.map(function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value.ReturnStatement._keys.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return e.get(t);
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }
        }, {
          key: "entries",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value8", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = this;
                        SRTlib.send("]},");

            return this._keys.map(function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value.ReturnStatement._keys.map2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return [t, e.get(t)];
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }
        }, {
          key: "forEach",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.value9", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            for (var r = 0; r < this._keys.length; r++) e.call(t, this._map["map_" + this._keys[r]], this._keys[r], this);
                        SRTlib.send("]},");

          }
        }, {
          key: "size",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.A.ReturnStatement.s.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this._keys.length;
                        SRTlib.send("]},");

          }
        }]), e);
                SRTlib.send("]},");

      })(), E = "undefined" != typeof self ? self : t, $ = "undefined" != typeof navigator, F = $ && "undefined" == typeof HTMLImageElement, T = !(void 0 === t || void 0 === e || !e.versions || !e.versions.node), O = E.Buffer, x = E.BigInt, R = !!O, U = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.U", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return void 0 !== e;
                SRTlib.send("]},");

      };
      function B(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return void 0 === e || (e instanceof A ? 0 === e.size : 0 === g(e).filter(U).length);
                SRTlib.send("]},");

      }
      function I(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = new Error(e);
                SRTlib.send("]},");

        return (delete t.stack, t);
                SRTlib.send("]},");

      }
      function D(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "t3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = 0;
                    SRTlib.send("]},");

          return (e.ifd0.enabled && (t += 1024), e.exif.enabled && (t += 2048), e.makerNote && (t += 2048), e.userComment && (t += 1024), e.gps.enabled && (t += 512), e.interop.enabled && (t += 100), e.ifd1.enabled && (t += 1024), t + 2048);
                    SRTlib.send("]},");

        })(e);
                SRTlib.send("]},");

        return (e.jfif.enabled && (t += 50), e.xmp.enabled && (t += 2e4), e.iptc.enabled && (t += 14e3), e.icc.enabled && (t += 6e3), t);
                SRTlib.send("]},");

      }
      var L = "undefined" != typeof TextDecoder ? new TextDecoder("utf-8") : void 0, M = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.M", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e(t) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 ? arguments[2] : void 0, o = arguments.length > 3 ? arguments[3] : void 0;
          if ((i(this, e), "boolean" == typeof o && (this.le = o), Array.isArray(t) && (t = new Uint8Array(t)), 0 === t)) (this.byteOffset = 0, this.byteLength = 0); else if (t instanceof ArrayBuffer) {
            void 0 === n && (n = t.byteLength - r);
            var s = new DataView(t, r, n);
            this._swapDataView(s);
          } else if (t instanceof Uint8Array || t instanceof DataView || t instanceof e) {
            if ((void 0 === n && (n = t.byteLength - r), (r += t.byteOffset) + n > t.byteOffset + t.byteLength)) throw I("Creating view outside of available memory in ArrayBuffer");
            var a = new DataView(t.buffer, r, n);
            this._swapDataView(a);
          } else {
            if ("number" != typeof t) throw I("Invalid input argument for BufferView: " + t);
            var u = new DataView(new ArrayBuffer(t));
            this._swapDataView(u);
          }
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (s(e, null, [{
          key: "from",
          value: function (t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return t instanceof this && t.le === r ? t : new e(t, void 0, void 0, r);
                        SRTlib.send("]},");

          }
        }]), s(e, [{
          key: "_swapArrayBuffer",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            this._swapDataView(new DataView(e));
                        SRTlib.send("]},");

          }
        }, {
          key: "_swapBuffer",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            this._swapDataView(new DataView(e.buffer, e.byteOffset, e.byteLength));
                        SRTlib.send("]},");

          }
        }, {
          key: "_swapDataView",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            (this.dataView = e, this.buffer = e.buffer, this.byteOffset = e.byteOffset, this.byteLength = e.byteLength);
                        SRTlib.send("]},");

          }
        }, {
          key: "_lengthToEnd",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value5", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return this.byteLength - e;
                        SRTlib.send("]},");

          }
        }, {
          key: "set",
          value: function (t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e;
            if ((t instanceof DataView || t instanceof e ? t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t instanceof ArrayBuffer && (t = new Uint8Array(t)), !(t instanceof Uint8Array))) throw I("BufferView.set(): Invalid data argument.");
                        SRTlib.send("]},");

            return (this.toUint8().set(t, r), new n(this, r, t.byteLength));
                        SRTlib.send("]},");

          }
        }, {
          key: "subarray",
          value: function (t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value7", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return new e(this, t, r = r || this._lengthToEnd(t));
                        SRTlib.send("]},");

          }
        }, {
          key: "toUint8",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value8", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return new Uint8Array(this.buffer, this.byteOffset, this.byteLength);
                        SRTlib.send("]},");

          }
        }, {
          key: "getUint8Array",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value9", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return new Uint8Array(this.buffer, this.byteOffset + e, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "getString",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value10", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.byteLength;
                        SRTlib.send("]},");

            return (function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return L ? L.decode(e) : R ? r.from(e).toString("utf8") : decodeURIComponent(escape(String.fromCharCode.apply(null, e)));
                            SRTlib.send("]},");

            })(this.getUint8Array(e, t));
                        SRTlib.send("]},");

          }
        }, {
          key: "getUnicodeString",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value11", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.byteLength, r = [], n = 0; n < t && e + n < this.byteLength; n += 2) r.push(this.getUint16(e + n));
                        SRTlib.send("]},");

            return r.map(function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value.ReturnStatement.join", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return String.fromCharCode(e);
                            SRTlib.send("]},");

            }).join("");
                        SRTlib.send("]},");

          }
        }, {
          key: "getInt8",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value12", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return this.dataView.getInt8(e);
                        SRTlib.send("]},");

          }
        }, {
          key: "getUint8",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value13", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return this.dataView.getUint8(e);
                        SRTlib.send("]},");

          }
        }, {
          key: "getInt16",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value14", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                        SRTlib.send("]},");

            return this.dataView.getInt16(e, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "getInt32",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value15", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                        SRTlib.send("]},");

            return this.dataView.getInt32(e, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "getUint16",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value16", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                        SRTlib.send("]},");

            return this.dataView.getUint16(e, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "getUint32",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value17", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                        SRTlib.send("]},");

            return this.dataView.getUint32(e, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "getFloat32",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value18", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                        SRTlib.send("]},");

            return this.dataView.getFloat32(e, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "getFloat64",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value19", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                        SRTlib.send("]},");

            return this.dataView.getFloat64(e, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "getFloat",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value20", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                        SRTlib.send("]},");

            return this.dataView.getFloat32(e, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "getDouble",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value21", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.le;
                        SRTlib.send("]},");

            return this.dataView.getFloat64(e, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "getUint64",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value22", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = this.getUint32(e), r = this.getUint32(e + 4);
            if (t < 1048575) {
                            SRTlib.send("]},");

              return t << 32 | r;
            }
            if (void 0 !== typeof x) {
                            SRTlib.send("]},");

              return (console.warn("Using BigInt because of type 64uint but JS can only handle 53b numbers."), x(t) << x(32) | x(r));
            }
            throw I("Trying to read 64b value but JS can only handle 53b numbers.");
                        SRTlib.send("]},");

          }
        }, {
          key: "getUintBytes",
          value: function (e, t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value23", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            switch (t) {
              case {
                                    SRTlib.send("]},");

                  return this.getUint8(e, r);
                }:
                return this.getUint8(e, r);
              case {
                                    SRTlib.send("]},");

                  return this.getUint16(e, r);
                }:
                return this.getUint16(e, r);
              case {
                                    SRTlib.send("]},");

                  return this.getUint32(e, r);
                }:
                return this.getUint32(e, r);
              case {
                                    SRTlib.send("]},");

                  return this.getUint64(e, r);
                }:
                return this.getUint64(e, r);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "getUint",
          value: function (e, t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value24", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            switch (t) {
              case {
                                    SRTlib.send("]},");

                  return this.getUint8(e, r);
                }:
                return this.getUint8(e, r);
              case {
                                    SRTlib.send("]},");

                  return this.getUint16(e, r);
                }:
                return this.getUint16(e, r);
              case {
                                    SRTlib.send("]},");

                  return this.getUint32(e, r);
                }:
                return this.getUint32(e, r);
              case {
                                    SRTlib.send("]},");

                  return this.getUint64(e, r);
                }:
                return this.getUint64(e, r);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "toString",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value25", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return this.dataView.toString(e, this.constructor.name);
                        SRTlib.send("]},");

          }
        }, {
          key: "ensureChunk",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.M.ReturnStatement.s.value26", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

          }
        }]), e);
                SRTlib.send("]},");

      })();
      function j(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        throw I(("").concat(e, " '").concat(t, "' was not loaded, try using full build of exifr."));
                SRTlib.send("]},");

      }
      var N = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.N2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t(e) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r;
                    SRTlib.send("]},");

          return (i(this, t), (r = f(this, l(t).call(this))).kind = e, r);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, h(A)), s(t, [{
          key: "get",
          value: function (e, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.N.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return (this.has(e) || j(this.kind, e), r && ((e in r) || (function (e, t) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.N.ReturnStatement.s.value.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

              throw I(("Unknown ").concat(e, " '").concat(t, "'."));
                            SRTlib.send("]},");

            })(this.kind, e), r[e].enabled || j(this.kind, e)), _(l(t.prototype), "get", this).call(this, e));
                        SRTlib.send("]},");

          }
        }, {
          key: "keyList",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.N.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return b(this.keys());
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })(), z = new N("file parser"), q = new N("segment parser"), H = new N("file reader");
      function V(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement21", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          for (var t = [], r = 0; r < arguments.length; r++) t[r] = arguments[r];
          try {
                        SRTlib.send("]},");

            return Promise.resolve(e.apply(this, t));
          } catch (e) {
                        SRTlib.send("]},");

            return Promise.reject(e);
          }
                    SRTlib.send("]},");

        };
                SRTlib.send("]},");

      }
      function W(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return r ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                SRTlib.send("]},");

      }
      var X = V(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.X.V", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return new Promise(function (t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.X.V.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var n = new FileReader();
          (n.onloadend = function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.X.V.ReturnStatement.n.onloadend", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return t(n.result || new ArrayBuffer());
                        SRTlib.send("]},");

          }, n.onerror = r, n.readAsArrayBuffer(e));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), G = V(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.G.V", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return C(e).then(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.G.V.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return e.arrayBuffer();
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), Y = V(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Y.V", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return W(t(e), function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.Y.V.ReturnStatement.W", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return new M(e);
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), K = V(function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "call.K.V", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n = new (H.get(r))(e, t);
                SRTlib.send("]},");

        return W(n.read(), function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.K.V.ReturnStatement.W", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return n;
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), J = V(function (e, t, r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "call.J.V", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        if (H.has(r)) {
                    SRTlib.send("]},");

          return K(e, t, r);
        }
        if (n) {
                    SRTlib.send("]},");

          return Y(e, n);
        }
        throw I(("Parser ").concat(r, " is not loaded"));
                SRTlib.send("]},");

      });
      function Q(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if ((r = e).startsWith("data:") || r.length > 1e4) {
                    SRTlib.send("]},");

          return K(e, t, "base64");
        }
        if ($) {
                    SRTlib.send("]},");

          return J(e, t, "url", G);
        }
        if (T) {
                    SRTlib.send("]},");

          return K(e, t, "fs");
        }
        throw I("Invalid input argument");
        var r;
                SRTlib.send("]},");

      }
      var Z = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Z", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return (i(this, t), f(this, l(t).apply(this, arguments)));
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, h(A)), s(t, [{
          key: "tagKeys",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Z.ReturnStatement.s.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return (this.allKeys || (this.allKeys = b(this.keys())), this.allKeys);
                        SRTlib.send("]},");

          }
        }, {
          key: "tagValues",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Z.ReturnStatement.s.get2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return (this.allValues || (this.allValues = b(this.values())), this.allValues);
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })();
      function ee(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n = new Z(), i = r;
        Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = b(i));
        for (var o = 0; o < i.length; o++) {
          var s = i[o], a = s[0], u = s[1];
          n.set(a, u);
        }
        if (Array.isArray(t)) {
          var l = t;
          Array.isArray(l) || ("function" == typeof l.entries && (l = l.entries()), l = b(l));
          for (var c = 0; c < l.length; c++) {
            var p = l[c];
            e.set(p, n);
          }
        } else e.set(t, n);
                SRTlib.send("]},");

        return n;
                SRTlib.send("]},");

      }
      function te(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n, i = e.get(t), o = r;
        Array.isArray(o) || ("function" == typeof o.entries && (o = o.entries()), o = b(o));
        for (var s = 0; s < o.length; s++) (n = o[s], i.set(n[0], n[1]));
                SRTlib.send("]},");

      }
      var re = P(), ne = P(), ie = P(), oe = ["chunked", "firstChunkSize", "firstChunkSizeNode", "firstChunkSizeBrowser", "chunkSize", "chunkLimit"], se = ["jfif", "xmp", "icc", "iptc"], ae = ["tiff"].concat(se), ue = ["ifd0", "ifd1", "exif", "gps", "interop"], le = [].concat(ae, ue), ce = ["makerNote", "userComment"], pe = ["translateKeys", "translateValues", "reviveValues", "multiSegment"], he = [].concat(pe, ["sanitize", "mergeOutput"]), de = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.de", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          i(this, e);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (s(e, [{
          key: "translate",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.de.ReturnStatement.s.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this.translateKeys || this.translateValues || this.reviveValues;
                        SRTlib.send("]},");

          }
        }]), e);
                SRTlib.send("]},");

      })(), fe = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.fe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t(e, r, n, o) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

          var s;
          if ((i(this, t), a(d(s = f(this, l(t).call(this))), "enabled", !1), a(d(s), "skip", S()), a(d(s), "pick", S()), a(d(s), "deps", S()), a(d(s), "translateKeys", !1), a(d(s), "translateValues", !1), a(d(s), "reviveValues", !1), s.key = e, s.enabled = r, s.parse = s.enabled, s.applyInheritables(o), s.canBeFiltered = ue.includes(e), s.canBeFiltered && (s.dict = re.get(e)), void 0 !== n)) if (Array.isArray(n)) (s.parse = s.enabled = !0, s.canBeFiltered && n.length > 0 && s.translateTagSet(n, s.pick)); else if ("object" == typeof n) {
            if ((s.enabled = !0, s.parse = !1 !== n.parse, s.canBeFiltered)) {
              var u = n.pick, c = n.skip;
              (u && u.length > 0 && s.translateTagSet(u, s.pick), c && c.length > 0 && s.translateTagSet(c, s.skip));
            }
            s.applyInheritables(n);
          } else {
            if (!0 !== n && !1 !== n) throw I(("Invalid options argument: ").concat(n));
            s.parse = s.enabled = n;
          }
                    SRTlib.send("]},");

          return s;
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, de), s(t, [{
          key: "needed",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.fe.ReturnStatement.s.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this.enabled || this.deps.size > 0;
                        SRTlib.send("]},");

          }
        }]), s(t, [{
          key: "applyInheritables",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.fe.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t, r, n = pe;
            Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = b(n));
            for (var i = 0; i < n.length; i++) void 0 !== (r = e[t = n[i]]) && (this[t] = r);
                        SRTlib.send("]},");

          }
        }, {
          key: "translateTagSet",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.fe.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            if (this.dict) {
              var r, n, i = this.dict, o = i.tagKeys, s = i.tagValues, a = e;
              Array.isArray(a) || ("function" == typeof a.entries && (a = a.entries()), a = b(a));
              for (var u = 0; u < a.length; u++) "string" == typeof (r = a[u]) ? (-1 === (n = s.indexOf(r)) && (n = o.indexOf(Number(r))), -1 !== n && t.add(Number(o[n]))) : t.add(r);
            } else {
              var l = e;
              Array.isArray(l) || ("function" == typeof l.entries && (l = l.entries()), l = b(l));
              for (var c = 0; c < l.length; c++) {
                var p = l[c];
                t.add(p);
              }
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "finalizeFilters",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.fe.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            !this.enabled && this.deps.size > 0 ? (this.enabled = !0, be(this.pick, this.deps)) : this.enabled && this.pick.size > 0 && be(this.pick, this.deps);
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })(), _e = {
        jfif: !1,
        tiff: !0,
        xmp: !1,
        icc: !1,
        iptc: !1,
        ifd0: !0,
        ifd1: !1,
        exif: !0,
        gps: !0,
        interop: !1,
        makerNote: !1,
        userComment: !1,
        multiSegment: !1,
        skip: [],
        pick: [],
        translateKeys: !0,
        translateValues: !0,
        reviveValues: !0,
        sanitize: !0,
        mergeOutput: !0,
        silentErrors: !0,
        chunked: !0,
        firstChunkSize: void 0,
        firstChunkSizeNode: 512,
        firstChunkSizeBrowser: 65536,
        chunkSize: 65536,
        chunkLimit: 5
      }, ge = P(), ye = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.ye", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t(e) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r;
          if ((i(this, t), r = f(this, l(t).call(this)), !0 === e)) r.setupFromTrue(); else if (void 0 === e) r.setupFromUndefined(); else if (Array.isArray(e)) r.setupFromArray(e); else {
            if ("object" != typeof e) throw I(("Invalid options argument ").concat(e));
            r.setupFromObject(e);
          }
                    SRTlib.send("]},");

          return (void 0 === r.firstChunkSize && (r.firstChunkSize = $ ? r.firstChunkSizeBrowser : r.firstChunkSizeNode), r.mergeOutput && (r.ifd1.enabled = !1), r.filterNestedSegmentTags(), r.traverseTiffDependencyTree(), r.checkLoadedPlugins(), r);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, de), s(t, null, [{
          key: "useCached",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = ge.get(e);
                        SRTlib.send("]},");

            return void 0 !== t ? t : (t = new this(e), ge.set(e, t), t);
                        SRTlib.send("]},");

          }
        }]), s(t, [{
          key: "setupFromUndefined",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e, t = oe;
            Array.isArray(t) || ("function" == typeof t.entries && (t = t.entries()), t = b(t));
            for (var r = 0; r < t.length; r++) this[e = t[r]] = _e[e];
            var n = he;
            Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = b(n));
            for (var i = 0; i < n.length; i++) this[e = n[i]] = _e[e];
            var o = ce;
            Array.isArray(o) || ("function" == typeof o.entries && (o = o.entries()), o = b(o));
            for (var s = 0; s < o.length; s++) this[e = o[s]] = _e[e];
            var a = le;
            Array.isArray(a) || ("function" == typeof a.entries && (a = a.entries()), a = b(a));
            for (var u = 0; u < a.length; u++) this[e = a[u]] = new fe(e, _e[e], void 0, this);
                        SRTlib.send("]},");

          }
        }, {
          key: "setupFromTrue",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e, t = oe;
            Array.isArray(t) || ("function" == typeof t.entries && (t = t.entries()), t = b(t));
            for (var r = 0; r < t.length; r++) this[e = t[r]] = _e[e];
            var n = he;
            Array.isArray(n) || ("function" == typeof n.entries && (n = n.entries()), n = b(n));
            for (var i = 0; i < n.length; i++) this[e = n[i]] = _e[e];
            var o = ce;
            Array.isArray(o) || ("function" == typeof o.entries && (o = o.entries()), o = b(o));
            for (var s = 0; s < o.length; s++) this[e = o[s]] = !0;
            var a = le;
            Array.isArray(a) || ("function" == typeof a.entries && (a = a.entries()), a = b(a));
            for (var u = 0; u < a.length; u++) this[e = a[u]] = new fe(e, !0, void 0, this);
                        SRTlib.send("]},");

          }
        }, {
          key: "setupFromArray",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t, r = oe;
            Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = b(r));
            for (var n = 0; n < r.length; n++) this[t = r[n]] = _e[t];
            var i = he;
            Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = b(i));
            for (var o = 0; o < i.length; o++) this[t = i[o]] = _e[t];
            var s = ce;
            Array.isArray(s) || ("function" == typeof s.entries && (s = s.entries()), s = b(s));
            for (var a = 0; a < s.length; a++) this[t = s[a]] = _e[t];
            var u = le;
            Array.isArray(u) || ("function" == typeof u.entries && (u = u.entries()), u = b(u));
            for (var l = 0; l < u.length; l++) this[t = u[l]] = new fe(t, !1, void 0, this);
            this.setupGlobalFilters(e, void 0, ue);
                        SRTlib.send("]},");

          }
        }, {
          key: "setupFromObject",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value5", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t;
            (ue.ifd0 = ue.ifd0 || ue.image, ue.ifd1 = ue.ifd1 || ue.thumbnail, m(this, e));
            var r = oe;
            Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = b(r));
            for (var n = 0; n < r.length; n++) this[t = r[n]] = ve(e[t], _e[t]);
            var i = he;
            Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = b(i));
            for (var o = 0; o < i.length; o++) this[t = i[o]] = ve(e[t], _e[t]);
            var s = ce;
            Array.isArray(s) || ("function" == typeof s.entries && (s = s.entries()), s = b(s));
            for (var a = 0; a < s.length; a++) this[t = s[a]] = ve(e[t], _e[t]);
            var u = ae;
            Array.isArray(u) || ("function" == typeof u.entries && (u = u.entries()), u = b(u));
            for (var l = 0; l < u.length; l++) this[t = u[l]] = new fe(t, _e[t], e[t], this);
            var c = ue;
            Array.isArray(c) || ("function" == typeof c.entries && (c = c.entries()), c = b(c));
            for (var p = 0; p < c.length; p++) this[t = c[p]] = new fe(t, _e[t], e[t], this.tiff);
            (this.setupGlobalFilters(e.pick, e.skip, ue, le), !0 === e.tiff ? this.batchEnableWithBool(ue, !0) : !1 === e.tiff ? this.batchEnableWithUserValue(ue, e) : Array.isArray(e.tiff) ? this.setupGlobalFilters(e.tiff, void 0, ue) : "object" == typeof e.tiff && this.setupGlobalFilters(e.tiff.pick, e.tiff.skip, ue));
                        SRTlib.send("]},");

          }
        }, {
          key: "batchEnableWithBool",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = e;
            Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = b(r));
            for (var n = 0; n < r.length; n++) this[r[n]].enabled = t;
                        SRTlib.send("]},");

          }
        }, {
          key: "batchEnableWithUserValue",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value7", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = e;
            Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = b(r));
            for (var n = 0; n < r.length; n++) {
              var i = r[n], o = t[i];
              this[i].enabled = !1 !== o && void 0 !== o;
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "setupGlobalFilters",
          value: function (e, t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value8", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : r;
            if (e && e.length) {
              var i = n;
              Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = b(i));
              for (var o = 0; o < i.length; o++) this[i[o]].enabled = !1;
              var s = me(e, r);
              Array.isArray(s) || ("function" == typeof s.entries && (s = s.entries()), s = b(s));
              for (var a = 0; a < s.length; a++) {
                var u = s[a], l = u[0], c = u[1];
                (be(this[l].pick, c), this[l].enabled = !0);
              }
            } else if (t && t.length) {
              var p = me(t, r);
              Array.isArray(p) || ("function" == typeof p.entries && (p = p.entries()), p = b(p));
              for (var h = 0; h < p.length; h++) {
                var d = p[h], f = d[0], _ = d[1];
                be(this[f].skip, _);
              }
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "filterNestedSegmentTags",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value9", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = this.ifd0, t = this.exif, r = this.xmp, n = this.iptc, i = this.icc;
            (this.makerNote ? t.deps.add(37500) : t.skip.add(37500), this.userComment ? t.deps.add(37510) : t.skip.add(37510), r.enabled || e.skip.add(700), n.enabled || e.skip.add(33723), i.enabled || e.skip.add(34675));
                        SRTlib.send("]},");

          }
        }, {
          key: "traverseTiffDependencyTree",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value10", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = this, t = this.ifd0, r = this.exif, n = this.gps;
            (this.interop.needed && (r.deps.add(40965), t.deps.add(40965)), r.needed && t.deps.add(34665), n.needed && t.deps.add(34853), this.tiff.enabled = ue.some(function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value.tiff.enabled", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return !0 === e[t].enabled;
                            SRTlib.send("]},");

            }) || this.makerNote || this.userComment);
            var i = ue;
            Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = b(i));
            for (var o = 0; o < i.length; o++) this[i[o]].finalizeFilters();
                        SRTlib.send("]},");

          }
        }, {
          key: "checkLoadedPlugins",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.value11", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = ae;
            Array.isArray(e) || ("function" == typeof e.entries && (e = e.entries()), e = b(e));
            for (var t = 0; t < e.length; t++) {
              var r = e[t];
              this[r].enabled && !q.has(r) && j("segment parser", r);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "onlyTiff",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = this;
                        SRTlib.send("]},");

            return !se.map(function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.get.ReturnStatement.some", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return e[t].enabled;
                            SRTlib.send("]},");

            }).some(function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.ye.ReturnStatement.s.get.ReturnStatement.some2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return !0 === e;
                            SRTlib.send("]},");

            }) && this.tiff.enabled;
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })();
      function me(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r, n, i, o = [], s = t;
        Array.isArray(s) || ("function" == typeof s.entries && (s = s.entries()), s = b(s));
        for (var a = 0; a < s.length; a++) {
          (n = s[a], r = []);
          var u = re.get(n);
          Array.isArray(u) || ("function" == typeof u.entries && (u = u.entries()), u = b(u));
          for (var l = 0; l < u.length; l++) (i = u[l], (e.includes(i[0]) || e.includes(i[1])) && r.push(i[0]));
          r.length && o.push([n, r]);
        }
                SRTlib.send("]},");

        return o;
                SRTlib.send("]},");

      }
      function ve(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return void 0 !== e ? e : void 0 !== t ? t : void 0;
                SRTlib.send("]},");

      }
      function be(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = t;
        Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = b(r));
        for (var n = 0; n < r.length; n++) {
          var i = r[n];
          e.add(i);
        }
                SRTlib.send("]},");

      }
      a(ye, "default", _e);
      var we = {
        ifd0: !1,
        ifd1: !1,
        exif: !1,
        gps: !1,
        interop: !1,
        sanitize: !1,
        reviveValues: !0,
        translateKeys: !1,
        translateValues: !1,
        mergeOutput: !1
      }, ke = m({}, we, {
        firstChunkSize: 4e4,
        gps: [1, 2, 3, 4]
      }), Ce = m({}, we, {
        firstChunkSize: 4e4,
        ifd0: [274]
      }), Se = m({}, we, {
        tiff: !1,
        ifd1: !0,
        mergeOutput: !1
      });
      function Pe(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return r ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                SRTlib.send("]},");

      }
      function Ae(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = e();
                SRTlib.send("]},");

        return r && r.then ? r.then(t) : t(r);
                SRTlib.send("]},");

      }
      function Ee() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

      }
      var $e = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.$e", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e(t) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (i(this, e), a(this, "parsers", {}), this.options = ye.useCached(t));
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (s(e, [{
          key: "setup",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            if (!this.fileParser) {
              var e, t = this.file.getUint16(0);
              if (18761 === t || 19789 === t) (this.file.isTiff = !0, e = z.get("tiff")); else if (65496 === t) (this.file.isJpeg = !0, e = z.get("jpeg")); else {
                if (!(function (e) {
                                    SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                  if (0 !== e.getUint16(0)) {
                                        SRTlib.send("]},");

                    return !1;
                  }
                  var t = e.getUint16(2);
                  if (t > 50) {
                                        SRTlib.send("]},");

                    return !1;
                  }
                  for (var r = 16, n = []; r < t; ) (n.push(e.getString(r, 4)), r += 4);
                                    SRTlib.send("]},");

                  return n.includes("heic");
                                    SRTlib.send("]},");

                })(this.file)) throw I("Unknown file format");
                (this.file.isHeic = !0, e = z.get("heic"));
              }
              this.fileParser = new e(this.options, this.file, this.parsers);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "read",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            try {
              var t = this;
                            SRTlib.send("]},");

              return Pe((function (e, t) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                if ("string" == typeof e) {
                                    SRTlib.send("]},");

                  return Q(e, t);
                }
                if ($ && !F && e instanceof HTMLImageElement) {
                                    SRTlib.send("]},");

                  return Q(e.src, t);
                }
                if (e instanceof Uint8Array || e instanceof ArrayBuffer || e instanceof DataView) {
                                    SRTlib.send("]},");

                  return new M(e);
                }
                if ($ && e instanceof Blob) {
                                    SRTlib.send("]},");

                  return J(e, t, "blob", X);
                }
                throw I("Invalid input argument");
                                SRTlib.send("]},");

              })(e, t.options), function (e) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                t.file = e;
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "parse",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
                            SRTlib.send("]},");

              return (e.setup(), Pe(e.fileParser.parse(), function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                var t, r = {}, n = [], i = g(e.parsers).map((t = function (t) {
                                    SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                  var i;
                                    SRTlib.send("]},");

                  return Ae(function () {
                                        SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map.ReturnStatement.Ae", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                        SRTlib.send("]},");

                    return e.options.silentErrors ? (o = function () {
                                            SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map.ReturnStatement.Ae.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                      t.errors.length && n.push.apply(n, t.errors);
                                            SRTlib.send("]},");

                    }, (r = (function (e, t) {
                                            SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map.ReturnStatement.Ae.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                      try {
                        var r = e();
                      } catch (e) {
                                                SRTlib.send("]},");

                        return t(e);
                      }
                                            SRTlib.send("]},");

                      return r && r.then ? r.then(void 0, t) : r;
                                            SRTlib.send("]},");

                    })(function () {
                                            SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map.ReturnStatement.Ae.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                            SRTlib.send("]},");

                      return Pe(t.parse(), function (e) {
                                                SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map.ReturnStatement.Ae.ReturnStatement.ReturnStatement.Pe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        i = e;
                                                SRTlib.send("]},");

                      });
                                            SRTlib.send("]},");

                    }, function (e) {
                                            SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map.ReturnStatement.Ae.ReturnStatement4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                      n.push(e);
                                            SRTlib.send("]},");

                    })) && r.then ? r.then(o) : o()) : Pe(t.parse(), function (e) {
                                            SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map.ReturnStatement.Ae.ReturnStatement.Pe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                      i = e;
                                            SRTlib.send("]},");

                    });
                    var r, o;
                                        SRTlib.send("]},");

                  }, function () {
                                        SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map.ReturnStatement.Ae2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    t.assignToOutput(r, i);
                                        SRTlib.send("]},");

                  });
                                    SRTlib.send("]},");

                }, function () {
                                    SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.i.map2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                  for (var e = [], r = 0; r < arguments.length; r++) e[r] = arguments[r];
                  try {
                                        SRTlib.send("]},");

                    return Promise.resolve(t.apply(this, e));
                  } catch (e) {
                                        SRTlib.send("]},");

                    return Promise.reject(e);
                  }
                                    SRTlib.send("]},");

                }));
                                SRTlib.send("]},");

                return Pe(Promise.all(i), function () {
                                    SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Pe.ReturnStatement.Pe", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                  var t;
                                    SRTlib.send("]},");

                  return (e.options.silentErrors && n.length > 0 && (r.errors = n), r = B(t = r) ? void 0 : t, e.file.close && e.file.close(), r);
                                    SRTlib.send("]},");

                });
                                SRTlib.send("]},");

              }));
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "extractThumbnail",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
              e.setup();
              var t, r = q.get("tiff", e.options);
                            SRTlib.send("]},");

              return Ae(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Ae", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (!e.file.isTiff) {
                                    SRTlib.send("]},");

                  return (function (e) {
                                        SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Ae.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    var t = e();
                    if (t && t.then) {
                                            SRTlib.send("]},");

                      return t.then(Ee);
                    }
                                        SRTlib.send("]},");

                  })(function () {
                                        SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Ae.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    if (e.file.isJpeg) {
                                            SRTlib.send("]},");

                      return Pe(e.fileParser.getOrFindSegment("tiff"), function (e) {
                                                SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Ae.ReturnStatement.ReturnStatement.Pe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        t = e;
                                                SRTlib.send("]},");

                      });
                    }
                                        SRTlib.send("]},");

                  });
                }
                t = {
                  start: 0,
                  type: "tiff"
                };
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Ae2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (void 0 !== t) {
                                    SRTlib.send("]},");

                  return Pe(e.fileParser.ensureSegmentChunk(t), function (t) {
                                        SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Ae.ReturnStatement.Pe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                        SRTlib.send("]},");

                    return Pe((e.parsers.tiff = new r(t, e.options, e.file)).extractThumbnail(), function (t) {
                                            SRTlib.send(`{ "anonymous": true, "function": "call.$e.ReturnStatement.s.value.ReturnStatement.Ae.ReturnStatement.Pe.ReturnStatement.Pe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                            SRTlib.send("]},");

                      return (e.file.close && e.file.close(), t);
                                            SRTlib.send("]},");

                    });
                                        SRTlib.send("]},");

                  });
                }
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }]), e);
                SRTlib.send("]},");

      })();
      function Fe(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return r ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                SRTlib.send("]},");

      }
      function Te(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement22", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          for (var t = [], r = 0; r < arguments.length; r++) t[r] = arguments[r];
          try {
                        SRTlib.send("]},");

            return Promise.resolve(e.apply(this, t));
          } catch (e) {
                        SRTlib.send("]},");

            return Promise.reject(e);
          }
                    SRTlib.send("]},");

        };
                SRTlib.send("]},");

      }
      var Oe = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Oe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return Fe(xe(e), function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.Oe.ReturnStatement.Fe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return m({
            canvas: n.rotateCanvas,
            css: n.rotateCss
          }, De[e]);
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }, xe = Te(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.xe.Te", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = new $e(Ce);
                SRTlib.send("]},");

        return Fe(t.read(e), function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.xe.Te.ReturnStatement.Fe", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return Fe(t.parse(), function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.xe.Te.ReturnStatement.Fe.ReturnStatement.Fe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            if (e && e.ifd0) {
                            SRTlib.send("]},");

              return e.ifd0[274];
            }
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), Re = Te(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Re.Te", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = new $e(ke);
                SRTlib.send("]},");

        return Fe(t.read(e), function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.Re.Te.ReturnStatement.Fe", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return Fe(t.parse(), function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Re.Te.ReturnStatement.Fe.ReturnStatement.Fe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            if (e && e.gps) {
              var t = e.gps;
                            SRTlib.send("]},");

              return {
                latitude: t.latitude,
                longitude: t.longitude
              };
            }
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), Ue = Te(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Ue.Te", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return Fe(this.thumbnail(e), function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.Ue.Te.ReturnStatement.Fe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if (void 0 !== e) {
            var t = new Blob([e]);
                        SRTlib.send("]},");

            return URL.createObjectURL(t);
          }
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), Be = Te(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Be.Te", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = new $e(Se);
                SRTlib.send("]},");

        return Fe(t.read(e), function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.Be.Te.ReturnStatement.Fe", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return Fe(t.extractThumbnail(), function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Be.Te.ReturnStatement.Fe.ReturnStatement.Fe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return e && R ? O.from(e) : e;
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), Ie = Te(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Ie.Te", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = new $e(t);
                SRTlib.send("]},");

        return Fe(r.read(e), function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.Ie.Te.ReturnStatement.Fe", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return r.parse();
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), De = {
        1: {
          dimensionSwapped: !1,
          scaleX: 1,
          scaleY: 1,
          deg: 0,
          rad: 0
        },
        2: {
          dimensionSwapped: !1,
          scaleX: -1,
          scaleY: 1,
          deg: 0,
          rad: 0
        },
        3: {
          dimensionSwapped: !1,
          scaleX: 1,
          scaleY: 1,
          deg: 180,
          rad: 180 * Math.PI / 180
        },
        4: {
          dimensionSwapped: !1,
          scaleX: -1,
          scaleY: 1,
          deg: 180,
          rad: 180 * Math.PI / 180
        },
        5: {
          dimensionSwapped: !0,
          scaleX: 1,
          scaleY: -1,
          deg: 90,
          rad: 90 * Math.PI / 180
        },
        6: {
          dimensionSwapped: !0,
          scaleX: 1,
          scaleY: 1,
          deg: 90,
          rad: 90 * Math.PI / 180
        },
        7: {
          dimensionSwapped: !0,
          scaleX: 1,
          scaleY: -1,
          deg: 270,
          rad: 270 * Math.PI / 180
        },
        8: {
          dimensionSwapped: !0,
          scaleX: 1,
          scaleY: 1,
          deg: 270,
          rad: 270 * Math.PI / 180
        }
      };
      if ((n.rotateCanvas = !0, n.rotateCss = !0, "object" == typeof navigator)) {
        var Le = navigator.userAgent;
        if (Le.includes("iPad") || Le.includes("iPhone")) {
          var Me = Le.match(/OS (\d+)_(\d+)/), je = (Me[0], Me[1]), Ne = Me[2], ze = Number(je) + .1 * Number(Ne);
          (n.rotateCanvas = ze < 13.4, n.rotateCss = !1);
        }
      }
      var qe = Object.freeze({
        __proto__: null,
        rotation: Oe,
        orientation: xe,
        gps: Re,
        thumbnailUrl: Ue,
        thumbnail: Be,
        parse: Ie,
        rotations: De,
        get rotateCanvas() {
                    SRTlib.send(`{ "anonymous": true, "function": "call.qe.rotateCanvas", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return n.rotateCanvas;
                    SRTlib.send("]},");

        },
        get rotateCss() {
                    SRTlib.send(`{ "anonymous": true, "function": "call.qe.rotateCss", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return n.rotateCss;
                    SRTlib.send("]},");

        },
        Exifr: $e,
        fileParsers: z,
        segmentParsers: q,
        fileReaders: H,
        tagKeys: re,
        tagValues: ne,
        tagRevivers: ie,
        createDictionary: ee,
        extendDictionary: te,
        fetchUrlAsArrayBuffer: G,
        readBlobAsArrayBuffer: X,
        chunkedProps: oe,
        otherSegments: se,
        segments: ae,
        tiffBlocks: ue,
        segmentsAndBlocks: le,
        tiffExtractables: ce,
        inheritables: pe,
        allFormatters: he,
        Options: ye,
        disableAllOptions: we,
        gpsOnlyOptions: ke,
        orientationOnlyOptions: Ce,
        thumbnailOnlyOptions: Se
      });
      function He() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

      }
      var Ve = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Ve", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e, r;
          i(this, t);
          for (var n = arguments.length, o = new Array(n), s = 0; s < n; s++) o[s] = arguments[s];
                    SRTlib.send("]},");

          return (a(d(r = f(this, (e = l(t)).call.apply(e, [this].concat(o)))), "ranges", new We()), 0 !== r.byteLength && r.ranges.add(0, r.byteLength), r);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, M), s(t, [{
          key: "_tryExtend",
          value: function (e, t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ve.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            if (0 === e && 0 === this.byteLength && r) {
              var n = new DataView(r.buffer || r, r.byteOffset, r.byteLength);
              this._swapDataView(n);
            } else {
              var i = e + t;
              if (i > this.byteLength) {
                var o = this._extend(i).dataView;
                this._swapDataView(o);
              }
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "_extend",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ve.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t;
            t = R ? O.allocUnsafe(e) : new Uint8Array(e);
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                        SRTlib.send("]},");

            return (t.set(new Uint8Array(this.buffer, this.byteOffset, this.byteLength), 0), {
              uintView: t,
              dataView: r
            });
                        SRTlib.send("]},");

          }
        }, {
          key: "subarray",
          value: function (e, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ve.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        SRTlib.send("]},");

            return (r = r || this._lengthToEnd(e), n && this._tryExtend(e, r), this.ranges.add(e, r), _(l(t.prototype), "subarray", this).call(this, e, r));
                        SRTlib.send("]},");

          }
        }, {
          key: "set",
          value: function (e, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ve.ReturnStatement.s.value4", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            arguments.length > 2 && void 0 !== arguments[2] && arguments[2] && this._tryExtend(r, e.byteLength, e);
            var n = _(l(t.prototype), "set", this).call(this, e, r);
                        SRTlib.send("]},");

            return (this.ranges.add(r, n.byteLength), n);
                        SRTlib.send("]},");

          }
        }, {
          key: "ensureChunk",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ve.ReturnStatement.s.value5", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            try {
              if (!this.chunked) {
                                SRTlib.send("]},");

                return;
              }
              if (this.ranges.available(e, t)) {
                                SRTlib.send("]},");

                return;
              }
                            SRTlib.send("]},");

              return (function (e, t) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.Ve.ReturnStatement.s.value.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                                SRTlib.send("]},");

                return e && e.then ? e.then(He) : Promise.resolve();
                                SRTlib.send("]},");

              })(this.readChunk(e, t));
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "available",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ve.ReturnStatement.s.value6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return this.ranges.available(e, t);
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })(), We = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.We", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (i(this, e), a(this, "list", []));
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (s(e, [{
          key: "add",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.We.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = e + t, n = this.list.filter(function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.We.ReturnStatement.s.value.n.list.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return Xe(e, t.offset, r) || Xe(e, t.end, r);
                            SRTlib.send("]},");

            });
            if (n.length > 0) {
              (e = Math.min.apply(Math, [e].concat(n.map(function (e) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.We.ReturnStatement.s.value.Math.min.apply.concat", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                SRTlib.send("]},");

                return e.offset;
                                SRTlib.send("]},");

              }))), t = (r = Math.max.apply(Math, [r].concat(n.map(function (e) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.We.ReturnStatement.s.value.Math.max.apply.concat", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                SRTlib.send("]},");

                return e.end;
                                SRTlib.send("]},");

              })))) - e);
              var i = n.shift();
              (i.offset = e, i.length = t, i.end = r, this.list = this.list.filter(function (e) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.We.ReturnStatement.s.value.list.list.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                SRTlib.send("]},");

                return !n.includes(e);
                                SRTlib.send("]},");

              }));
            } else this.list.push({
              offset: e,
              length: t,
              end: r
            });
                        SRTlib.send("]},");

          }
        }, {
          key: "available",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.We.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = e + t;
                        SRTlib.send("]},");

            return this.list.some(function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.We.ReturnStatement.s.value.ReturnStatement.list.some", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return t.offset <= e && r <= t.end;
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }
        }, {
          key: "length",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.We.ReturnStatement.s.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this.list.length;
                        SRTlib.send("]},");

          }
        }]), e);
                SRTlib.send("]},");

      })();
      function Xe(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return e <= t && t <= r;
                SRTlib.send("]},");

      }
      function Ge() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

      }
      function Ye(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (!t) {
                    SRTlib.send("]},");

          return e && e.then ? e.then(Ge) : Promise.resolve();
        }
                SRTlib.send("]},");

      }
      function Ke(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return r ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                SRTlib.send("]},");

      }
      var Je = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Je", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return (i(this, t), f(this, l(t).apply(this, arguments)));
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, e), s(t, [{
          key: "readWhole",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
                            SRTlib.send("]},");

              return (e.chunked = !1, Ke(X(e.input), function (t) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value.ReturnStatement.Ke", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                e._swapArrayBuffer(t);
                                SRTlib.send("]},");

              }));
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "readChunked",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return (this.chunked = !0, this.size = this.input.size, _(l(t.prototype), "readChunked", this).call(this));
                        SRTlib.send("]},");

          }
        }, {
          key: "_readChunk",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            try {
              var r = this, n = t ? e + t : void 0, i = r.input.slice(e, n);
                            SRTlib.send("]},");

              return Ke(X(i), function (t) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value.ReturnStatement.Ke2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                SRTlib.send("]},");

                return r.set(t, e, !0);
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })((function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.Je2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t(e, r) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var n;
                    SRTlib.send("]},");

          return (i(this, t), a(d(n = f(this, l(t).call(this, 0))), "chunksRead", 0), n.input = e, n.options = r, n);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, Ve), s(t, [{
          key: "readWhole",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
                            SRTlib.send("]},");

              return (this.chunked = !1, Ye(this.readChunk(this.nextChunkOffset)));
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "readChunked",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
                            SRTlib.send("]},");

              return (this.chunked = !0, Ye(this.readChunk(0, this.options.firstChunkSize)));
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "readNextChunk",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value6", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            try {
              if ((void 0 === e && (e = this.nextChunkOffset), this.fullyRead)) {
                                SRTlib.send("]},");

                return (this.chunksRead++, !1);
              }
              var t = this.options.chunkSize;
                            SRTlib.send("]},");

              return (r = this.readChunk(e, t), n = function (e) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                SRTlib.send("]},");

                return !!e && e.byteLength === t;
                                SRTlib.send("]},");

              }, r && r.then || (r = Promise.resolve(r)), n ? r.then(n) : r);
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
            var r, n;
                        SRTlib.send("]},");

          }
        }, {
          key: "readChunk",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value7", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            try {
              if ((this.chunksRead++, 0 === (t = this.safeWrapAddress(e, t)))) {
                                SRTlib.send("]},");

                return;
              }
                            SRTlib.send("]},");

              return this._readChunk(e, t);
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "safeWrapAddress",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value8", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return void 0 !== this.size && e + t > this.size ? Math.max(0, this.size - e) : t;
                        SRTlib.send("]},");

          }
        }, {
          key: "read",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value9", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this.options.chunked ? this.readChunked() : this.readWhole();
                        SRTlib.send("]},");

          }
        }, {
          key: "close",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.value10", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

          }
        }, {
          key: "nextChunkOffset",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            if (0 !== this.ranges.list.length) {
                            SRTlib.send("]},");

              return this.ranges.list[0].length;
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "canReadNextChunk",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.get2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this.chunksRead < this.options.chunkLimit;
                        SRTlib.send("]},");

          }
        }, {
          key: "fullyRead",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Je.ReturnStatement.s.get3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return void 0 !== this.size && this.nextChunkOffset === this.size;
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })());
      H.set("blob", Je);
      var Qe = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.Qe", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e(t, r, n) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          var o, s = this;
          (i(this, e), a(this, "ensureSegmentChunk", (o = function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "a3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t, r, n, i = e.start, o = e.size || 65536;
                        SRTlib.send("]},");

            return (t = function () {
                            SRTlib.send(`{ "anonymous": true, "function": "a.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

              if (s.file.chunked) {
                                SRTlib.send("]},");

                return (function () {
                                    SRTlib.send(`{ "anonymous": true, "function": "a.ReturnStatement.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                  if (!s.file.available(i, o)) {
                                        SRTlib.send("]},");

                    return (function (e, t) {
                                            SRTlib.send(`{ "anonymous": true, "function": "a.ReturnStatement.ReturnStatement.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                      try {
                        var r = e();
                      } catch (e) {
                                                SRTlib.send("]},");

                        return t(e);
                      }
                                            SRTlib.send("]},");

                      return r && r.then ? r.then(void 0, t) : r;
                                            SRTlib.send("]},");

                    })(function () {
                                            SRTlib.send(`{ "anonymous": true, "function": "a.ReturnStatement.ReturnStatement.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                            SRTlib.send("]},");

                      return (r = function (t) {
                                                SRTlib.send(`{ "anonymous": true, "function": "a.ReturnStatement.ReturnStatement.ReturnStatement.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        e.chunk = t;
                                                SRTlib.send("]},");

                      }, (t = s.file.readChunk(i, o)) && t.then || (t = Promise.resolve(t)), r ? t.then(r) : t);
                      var t, r;
                                            SRTlib.send("]},");

                    }, function (t) {
                                            SRTlib.send(`{ "anonymous": true, "function": "a.ReturnStatement.ReturnStatement.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                      throw I(("Couldn't read segment: ").concat(JSON.stringify(e), ". ").concat(t.message));
                                            SRTlib.send("]},");

                    });
                  }
                  e.chunk = s.file.subarray(i, o);
                                    SRTlib.send("]},");

                })();
              }
              if (s.file.byteLength > i + o) e.chunk = s.file.subarray(i, o); else {
                if (void 0 !== e.size) throw I("Segment unreachable: " + JSON.stringify(e));
                e.chunk = s.file.subarray(i);
              }
                            SRTlib.send("]},");

            }, r = function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "a.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return e.chunk;
                            SRTlib.send("]},");

            }, (n = t()) && n.then ? n.then(r) : r());
                        SRTlib.send("]},");

          }, function () {
                        SRTlib.send(`{ "anonymous": true, "function": "a4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
            try {
                            SRTlib.send("]},");

              return Promise.resolve(o.apply(this, e));
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          })), this.extendOptions && this.extendOptions(t), this.options = t, this.file = r, this.parsers = n);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (s(e, [{
          key: "createParser",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Qe.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = new (q.get(e))(t, this.options, this.file);
                        SRTlib.send("]},");

            return this.parsers[e] = r;
                        SRTlib.send("]},");

          }
        }]), e);
                SRTlib.send("]},");

      })(), Ze = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.Ze", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e(t) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r = this, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, o = arguments.length > 2 ? arguments[2] : void 0;
          (i(this, e), a(this, "errors", []), a(this, "raw", P()), a(this, "handleError", function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "a5", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            if (!r.options.silentErrors) throw e;
            r.errors.push(e.message);
                        SRTlib.send("]},");

          }), this.chunk = this.normalizeInput(t), this.file = o, this.type = this.constructor.type, this.globalOptions = this.options = n, this.localOptions = n[this.type], this.canTranslate = this.localOptions && this.localOptions.translate);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (s(e, [{
          key: "normalizeInput",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ze.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return e instanceof M ? e : new M(e);
                        SRTlib.send("]},");

          }
        }], [{
          key: "findPosition",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ze.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = e.getUint16(t + 2) + 2, n = "function" == typeof this.headerLength ? this.headerLength(e, t, r) : this.headerLength, i = t + n, o = r - n;
                        SRTlib.send("]},");

            return {
              offset: t,
              length: r,
              headerLength: n,
              start: i,
              size: o,
              end: i + o
            };
                        SRTlib.send("]},");

          }
        }, {
          key: "parse",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ze.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        SRTlib.send("]},");

            return new this(e, new ye(a({}, this.type, t))).parse();
                        SRTlib.send("]},");

          }
        }]), s(e, [{
          key: "translate",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ze.ReturnStatement.s.value4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            this.canTranslate && (this.translated = this.translateBlock(this.raw, this.type));
                        SRTlib.send("]},");

          }
        }, {
          key: "translateBlock",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ze.ReturnStatement.s.value5", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = ie.get(t), n = ne.get(t), i = re.get(t), o = this.options[t], s = o.reviveValues && !!r, a = o.translateValues && !!n, u = o.translateKeys && !!i, l = {}, c = e;
            Array.isArray(c) || ("function" == typeof c.entries && (c = c.entries()), c = b(c));
            for (var p = 0; p < c.length; p++) {
              var h = c[p], d = h[0], f = h[1];
              (s && r.has(d) ? f = r.get(d)(f) : a && n.has(d) && (f = this.translateValue(f, n.get(d))), u && i.has(d) && (d = i.get(d) || d), l[d] = f);
            }
                        SRTlib.send("]},");

            return l;
                        SRTlib.send("]},");

          }
        }, {
          key: "translateValue",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ze.ReturnStatement.s.value6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return t[e] || e;
                        SRTlib.send("]},");

          }
        }, {
          key: "assignToOutput",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ze.ReturnStatement.s.value7", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            this.assignObjectToOutput(e, this.constructor.type, t);
                        SRTlib.send("]},");

          }
        }, {
          key: "assignObjectToOutput",
          value: function (e, t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ze.ReturnStatement.s.value8", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            if (this.globalOptions.mergeOutput) {
                            SRTlib.send("]},");

              return m(e, r);
            }
            e[t] ? m(e[t], r) : e[t] = r;
                        SRTlib.send("]},");

          }
        }, {
          key: "output",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.Ze.ReturnStatement.s.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this.translated ? this.translated : this.raw ? v(this.raw) : void 0;
                        SRTlib.send("]},");

          }
        }]), e);
                SRTlib.send("]},");

      })();
      function et(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                SRTlib.send("]},");

        return r ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)), t ? e.then(t) : e);
                SRTlib.send("]},");

      }
      function tt() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

      }
      function rt(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (!t) {
                    SRTlib.send("]},");

          return e && e.then ? e.then(tt) : Promise.resolve();
        }
                SRTlib.send("]},");

      }
      function nt(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = e();
                SRTlib.send("]},");

        return r && r.then ? r.then(t) : t(r);
                SRTlib.send("]},");

      }
      function it(e, t, r) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        if (!e.s) {
          if (r instanceof ot) {
            if (!r.s) {
                            SRTlib.send("]},");

              return void (r.o = it.bind(null, e, t));
            }
            (1 & t && (t = r.s), r = r.v);
          }
          if (r && r.then) {
                        SRTlib.send("]},");

            return void r.then(it.bind(null, e, t), it.bind(null, e, 2));
          }
          (e.s = t, e.v = r);
          var n = e.o;
          n && n(e);
        }
                SRTlib.send("]},");

      }
      (a(Ze, "headerLength", 4), a(Ze, "type", void 0), a(Ze, "multiSegment", !1), a(Ze, "canHandle", function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.a2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return !1;
                SRTlib.send("]},");

      }));
      var ot = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.ot", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (e.prototype.then = function (t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.ot.ReturnStatement.e.prototype.then", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var n = new e(), i = this.s;
          if (i) {
            var o = 1 & i ? t : r;
            if (o) {
              try {
                it(n, 1, o(this.v));
              } catch (e) {
                it(n, 2, e);
              }
                            SRTlib.send("]},");

              return n;
            }
                        SRTlib.send("]},");

            return this;
          }
                    SRTlib.send("]},");

          return (this.o = function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ot.ReturnStatement.e.prototype.then.ReturnStatement.o", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            try {
              var i = e.v;
              1 & e.s ? it(n, 1, t ? t(i) : i) : r ? it(n, 1, r(i)) : it(n, 2, i);
            } catch (e) {
              it(n, 2, e);
            }
                        SRTlib.send("]},");

          }, n);
                    SRTlib.send("]},");

        }, e);
                SRTlib.send("]},");

      })();
      function st(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e instanceof ot && 1 & e.s;
                SRTlib.send("]},");

      }
      function at(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return 192 === e || 194 === e || 196 === e || 219 === e || 221 === e || 218 === e || 254 === e;
                SRTlib.send("]},");

      }
      function ut(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e >= 224 && e <= 239;
                SRTlib.send("]},");

      }
      function lt(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = q;
        Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = b(r));
        for (var n = 0; n < r.length; n++) {
          var i = r[n], o = i[0];
          if (i[1].canHandle(e, t)) {
                        SRTlib.send("]},");

            return o;
          }
        }
                SRTlib.send("]},");

      }
      var ct = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.ct", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e, r;
          i(this, t);
          for (var n = arguments.length, o = new Array(n), s = 0; s < n; s++) o[s] = arguments[s];
                    SRTlib.send("]},");

          return (a(d(r = f(this, (e = l(t)).call.apply(e, [this].concat(o)))), "appSegments", []), a(d(r), "jpegSegments", []), a(d(r), "unknownSegments", []), r);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, Qe), s(t, [{
          key: "parse",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
                            SRTlib.send("]},");

              return et(e.findAppSegments(), function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.et", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                SRTlib.send("]},");

                return et(e.readSegments(), function () {
                                    SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.et.ReturnStatement.et", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                  (e.mergeMultiSegments(), e.createParsers());
                                    SRTlib.send("]},");

                });
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "readSegments",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this.appSegments.map(this.ensureSegmentChunk);
                            SRTlib.send("]},");

              return rt(Promise.all(e));
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "setupSegmentFinderArgs",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = this;
            (!0 === e ? (this.findAll = !0, this.wanted = S(q.keyList())) : (e = void 0 === e ? q.keyList().filter(function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return t.options[e].enabled;
                            SRTlib.send("]},");

            }) : e.filter(function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return t.options[e].enabled && q.has(e);
                            SRTlib.send("]},");

            }), this.findAll = !1, this.remaining = S(e), this.wanted = S(e)), this.unfinishedMultiSegment = !1);
                        SRTlib.send("]},");

          }
        }, {
          key: "findAppSegments",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, t = arguments.length > 1 ? arguments[1] : void 0;
            try {
              var r = this;
              r.setupSegmentFinderArgs(t);
              var n = r.file, i = r.findAll, o = r.wanted, s = r.remaining;
                            SRTlib.send("]},");

              return nt(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (!i && r.file.chunked) {
                                    SRTlib.send("]},");

                  return (i = b(o).some(function (e) {
                                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.some", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    var t = q.get(e), n = r.options[e];
                                        SRTlib.send("]},");

                    return t.multiSegment && n.multiSegment;
                                        SRTlib.send("]},");

                  }), (function (e) {
                                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    var t = (function () {
                                            SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.t", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                      if (i) {
                                                SRTlib.send("]},");

                        return rt(r.file.readWhole());
                      }
                                            SRTlib.send("]},");

                    })();
                    if (t && t.then) {
                                            SRTlib.send("]},");

                      return t.then(tt);
                    }
                                        SRTlib.send("]},");

                  })());
                }
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                var t = !1;
                if ((e = r._findAppSegments(e, n.byteLength, i, o, s), !r.options.onlyTiff)) {
                                    SRTlib.send("]},");

                  return (function () {
                                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    if (n.chunked) {
                      var i = !1;
                                            SRTlib.send("]},");

                      return (function (e, t, r) {
                                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

                        for (var n; ; ) {
                          var i = e();
                          if ((st(i) && (i = i.v), !i)) {
                                                        SRTlib.send("]},");

                            return o;
                          }
                          if (i.then) {
                            n = 0;
                            break;
                          }
                          var o = r();
                          if (o && o.then) {
                            if (!st(o)) {
                              n = 1;
                              break;
                            }
                            o = o.s;
                          }
                          if (t) {
                            var s = t();
                            if (s && s.then && !st(s)) {
                              n = 2;
                              break;
                            }
                          }
                        }
                        var a = new ot(), u = it.bind(null, a, 2);
                                                SRTlib.send("]},");

                        return ((0 === n ? i.then(c) : 1 === n ? o.then(l) : s.then(p)).then(void 0, u), a);
                        function l(n) {
                                                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                          o = n;
                          do {
                            if (t && (s = t()) && s.then && !st(s)) {
                                                            SRTlib.send("]},");

                              return void s.then(p).then(void 0, u);
                            }
                            if (!(i = e()) || st(i) && !i.v) {
                                                            SRTlib.send("]},");

                              return void it(a, 1, o);
                            }
                            if (i.then) {
                                                            SRTlib.send("]},");

                              return void i.then(c).then(void 0, u);
                            }
                            st(o = r()) && (o = o.v);
                          } while (!o || !o.then);
                          o.then(l).then(void 0, u);
                                                    SRTlib.send("]},");

                        }
                        function c(e) {
                                                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                          e ? (o = r()) && o.then ? o.then(l).then(void 0, u) : l(o) : it(a, 1, o);
                                                    SRTlib.send("]},");

                        }
                        function p() {
                                                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                          (i = e()) ? i.then ? i.then(c).then(void 0, u) : c(i) : it(a, 1, o);
                                                    SRTlib.send("]},");

                        }
                                                SRTlib.send("]},");

                      })(function () {
                                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                                SRTlib.send("]},");

                        return !t && s.size > 0 && !i && (!!n.canReadNextChunk || !!r.unfinishedMultiSegment);
                                                SRTlib.send("]},");

                      }, void 0, function () {
                                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        var o = n.nextChunkOffset, s = r.appSegments.some(function (e) {
                                                    SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.ReturnStatement.s.r.appSegments.some", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                                    SRTlib.send("]},");

                          return !r.file.available(e.offset || e.start, e.length || e.size);
                                                    SRTlib.send("]},");

                        });
                                                SRTlib.send("]},");

                        return nt(function () {
                                                    SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.ReturnStatement.ReturnStatement.nt", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                                    SRTlib.send("]},");

                          return et(e > o && !s ? n.readNextChunk(e) : n.readNextChunk(o), function (e) {
                                                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.ReturnStatement.ReturnStatement.nt.ReturnStatement.et", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            i = !e;
                                                        SRTlib.send("]},");

                          });
                                                    SRTlib.send("]},");

                        }, function () {
                                                    SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.ReturnStatement.ReturnStatement.nt2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                          void 0 === (e = r._findAppSegments(e, n.byteLength)) && (t = !0);
                                                    SRTlib.send("]},");

                        });
                                                SRTlib.send("]},");

                      });
                    }
                                        SRTlib.send("]},");

                  })();
                }
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "_findAppSegments",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            for (var r, n, i, o, s, a, u = this.file, l = this.findAll, c = this.wanted, p = this.remaining, h = this.options; e < t; e++) if (255 === u.getUint8(e)) if (ut(r = u.getUint8(e + 1))) {
              if ((n = u.getUint16(e + 2), (i = lt(u, e)) && c.has(i) && (s = (o = q.get(i)).findPosition(u, e), a = h[i], s.type = i, this.appSegments.push(s), !l && (o.multiSegment && a.multiSegment ? (this.unfinishedMultiSegment = s.chunkNumber < s.chunkCount, this.unfinishedMultiSegment || p.delete(i)) : p.delete(i), 0 === p.size)))) break;
              (h.recordUnknownSegments && ((s = Ze.findPosition(u, e)).marker = r, this.unknownSegments.push(s)), e += n + 1);
            } else if (at(r)) {
              if ((n = u.getUint16(e + 2), 218 === r && !1 !== h.stopAfterSos)) {
                                SRTlib.send("]},");

                return;
              }
              (h.recordJpegSegments && this.jpegSegments.push({
                offset: e,
                length: n,
                marker: r
              }), e += n + 1);
            }
                        SRTlib.send("]},");

            return e;
                        SRTlib.send("]},");

          }
        }, {
          key: "mergeMultiSegments",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value7", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = this;
            if (this.appSegments.some(function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.appSegments.some", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return e.multiSegment;
                            SRTlib.send("]},");

            })) {
              var t = (function (e, t) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.t", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                for (var r, n, i, o = P(), s = 0; s < e.length; s++) (n = (r = e[s]).type, o.has(n) ? i = o.get(n) : o.set(n, i = []), i.push(r));
                                SRTlib.send("]},");

                return b(o);
                                SRTlib.send("]},");

              })(this.appSegments);
              this.mergedAppSegments = t.map(function (t) {
                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.mergedAppSegments", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                var r = t[0], n = t[1], i = q.get(r, e.options);
                                SRTlib.send("]},");

                return i.handleMultiSegments ? {
                  type: r,
                  chunk: i.handleMultiSegments(n)
                } : n[0];
                                SRTlib.send("]},");

              });
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "createParsers",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value8", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this.mergedAppSegments || this.appSegments;
              Array.isArray(e) || ("function" == typeof e.entries && (e = e.entries()), e = b(e));
              for (var t = 0; t < e.length; t++) {
                var r = e[t], n = r.type, i = r.chunk;
                if (this.options[n].enabled) {
                  var o = this.parsers[n];
                  if (o && o.append) ; else if (!o) {
                    var s = new (q.get(n, this.options))(i, this.options, this.file);
                    this.parsers[n] = s;
                  }
                }
              }
                            SRTlib.send("]},");

              return et();
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "getSegment",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value9", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return this.appSegments.find(function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.appSegments.find", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return t.type === e;
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }
        }, {
          key: "getOrFindSegment",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value10", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            try {
              var t = this, r = t.getSegment(e);
                            SRTlib.send("]},");

              return nt(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (void 0 === r) {
                                    SRTlib.send("]},");

                  return et(t.findAppSegments(0, [e]), function () {
                                        SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt.ReturnStatement.et", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    r = t.getSegment(e);
                                        SRTlib.send("]},");

                  });
                }
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call.ct.ReturnStatement.s.value.ReturnStatement.nt4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                SRTlib.send("]},");

                return r;
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })();
      function pt() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

      }
      function ht(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (!t) {
                    SRTlib.send("]},");

          return e && e.then ? e.then(pt) : Promise.resolve();
        }
                SRTlib.send("]},");

      }
      function dt(e, t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = e();
                SRTlib.send("]},");

        return r && r.then ? r.then(t) : t(r);
                SRTlib.send("]},");

      }
      z.set("jpeg", ct);
      var ft = [void 0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8, 4], _t = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._t", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return (i(this, t), f(this, l(t).apply(this, arguments)));
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, e), s(t, [{
          key: "parse",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
                            SRTlib.send("]},");

              return (e.parseHeader(), dt(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (e.options.ifd0.enabled) {
                                    SRTlib.send("]},");

                  return ht(e.parseIfd0Block());
                }
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                SRTlib.send("]},");

                return dt(function () {
                                    SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                  if (e.options.exif.enabled) {
                                        SRTlib.send("]},");

                    return ht(e.saveParseBlock("parseExifBlock"));
                  }
                                    SRTlib.send("]},");

                }, function () {
                                    SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                    SRTlib.send("]},");

                  return dt(function () {
                                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    if (e.options.gps.enabled) {
                                            SRTlib.send("]},");

                      return ht(e.saveParseBlock("parseGpsBlock"));
                    }
                                        SRTlib.send("]},");

                  }, function () {
                                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                        SRTlib.send("]},");

                    return dt(function () {
                                            SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                      if (e.options.interop.enabled) {
                                                SRTlib.send("]},");

                        return ht(e.saveParseBlock("parseInteropBlock"));
                      }
                                            SRTlib.send("]},");

                    }, function () {
                                            SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                            SRTlib.send("]},");

                      return dt(function () {
                                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        if (e.options.ifd1.enabled) {
                                                    SRTlib.send("]},");

                          return ht(e.saveParseBlock("parseThumbnailBlock"));
                        }
                                                SRTlib.send("]},");

                      }, function () {
                                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt.ReturnStatement.dt2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                                SRTlib.send("]},");

                        return e.createOutput();
                                                SRTlib.send("]},");

                      });
                                            SRTlib.send("]},");

                    });
                                        SRTlib.send("]},");

                  });
                                    SRTlib.send("]},");

                });
                                SRTlib.send("]},");

              }));
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "saveParseBlock",
          value: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            try {
              var t = this;
                            SRTlib.send("]},");

              return (function (e, t) {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                try {
                  var r = e();
                } catch (e) {
                                    SRTlib.send("]},");

                  return t(e);
                }
                                SRTlib.send("]},");

                return r && r.then ? r.then(void 0, t) : r;
                                SRTlib.send("]},");

              })(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                SRTlib.send("]},");

                return ((r = t[e]()) && r.then || (r = Promise.resolve(r)), r);
                var r;
                                SRTlib.send("]},");

              }, function (e) {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                t.handleError(e);
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "findIfd0Offset",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            void 0 === this.ifd0Offset && (this.ifd0Offset = this.chunk.getUint32(4));
                        SRTlib.send("]},");

          }
        }, {
          key: "findIfd1Offset",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            if (void 0 === this.ifd1Offset) {
              this.findIfd0Offset();
              var e = this.chunk.getUint16(this.ifd0Offset), t = this.ifd0Offset + 2 + 12 * e;
              this.ifd1Offset = this.chunk.getUint32(t);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "parseBlock",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value5", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = P();
                        SRTlib.send("]},");

            return (this[t] = r, this.parseTags(e, t, r), r);
                        SRTlib.send("]},");

          }
        }, {
          key: "parseIfd0Block",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value6", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
              if (e.ifd0) {
                                SRTlib.send("]},");

                return;
              }
              if ((e.findIfd0Offset(), e.ifd0Offset < 8)) throw I("Invalid EXIF data: IFD0 offset should be less than 8");
              if (!e.file.chunked && e.ifd0Offset > e.file.byteLength) throw I(("IFD0 offset points to outside of file.\nthis.ifd0Offset: ").concat(e.ifd0Offset, ", file.byteLength: ").concat(e.file.byteLength));
                            SRTlib.send("]},");

              return dt(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (e.file.isTiff) {
                                    SRTlib.send("]},");

                  return ht(e.file.ensureChunk(e.ifd0Offset, D(e.options)));
                }
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                var t = e.parseBlock(e.ifd0Offset, "ifd0");
                if (0 !== t.size) {
                                    SRTlib.send("]},");

                  return (e.exifOffset = t.get(34665), e.interopOffset = t.get(40965), e.gpsOffset = t.get(34853), e.xmp = t.get(700), e.iptc = t.get(33723), e.icc = t.get(34675), e.options.sanitize && (t.delete(34665), t.delete(40965), t.delete(34853), t.delete(700), t.delete(33723), t.delete(34675)), t);
                }
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "ensureBlockChunk",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value7", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            try {
              var r = this;
                            SRTlib.send("]},");

              return dt(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (r.file.isTiff) {
                                    SRTlib.send("]},");

                  return ht(r.file.ensureChunk(e, t));
                }
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt6", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                e > r.chunk.byteLength && (r.chunk = M.from(r.file, r.le));
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "parseExifBlock",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value8", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
              if (e.exif) {
                                SRTlib.send("]},");

                return;
              }
                            SRTlib.send("]},");

              return dt(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt7", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (!e.ifd0) {
                                    SRTlib.send("]},");

                  return ht(e.parseIfd0Block());
                }
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt8", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (void 0 !== e.exifOffset) {
                                    SRTlib.send("]},");

                  return dt(function () {
                                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    if (e.file.isTiff) {
                                            SRTlib.send("]},");

                      return ht(e.file.ensureChunk(e.exifOffset, D(e.options)));
                    }
                                        SRTlib.send("]},");

                  }, function () {
                                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    var t = e.parseBlock(e.exifOffset, "exif");
                                        SRTlib.send("]},");

                    return (e.interopOffset || (e.interopOffset = t.get(40965)), e.makerNote = t.get(37500), e.userComment = t.get(37510), e.options.sanitize && (t.delete(40965), t.delete(37500), t.delete(37510)), e.unpack(t, 41728), e.unpack(t, 41729), t);
                                        SRTlib.send("]},");

                  });
                }
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "unpack",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value9", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = e.get(t);
            r && 1 === r.length && e.set(t, r[0]);
                        SRTlib.send("]},");

          }
        }, {
          key: "parseGpsBlock",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value10", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
              if (e.gps) {
                                SRTlib.send("]},");

                return;
              }
                            SRTlib.send("]},");

              return dt(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt9", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (!e.ifd0) {
                                    SRTlib.send("]},");

                  return ht(e.parseIfd0Block());
                }
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt10", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (void 0 !== e.gpsOffset) {
                  var t = e.parseBlock(e.gpsOffset, "gps");
                                    SRTlib.send("]},");

                  return (t && t.has(2) && t.has(4) && (t.set("latitude", gt.apply(void 0, t.get(2).concat([t.get(1)]))), t.set("longitude", gt.apply(void 0, t.get(4).concat([t.get(3)])))), t);
                }
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "parseInteropBlock",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value11", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
              if (e.interop) {
                                SRTlib.send("]},");

                return;
              }
                            SRTlib.send("]},");

              return dt(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt11", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (!e.ifd0) {
                                    SRTlib.send("]},");

                  return ht(e.parseIfd0Block());
                }
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt12", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                SRTlib.send("]},");

                return dt(function () {
                                    SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                  if (void 0 === e.interopOffset && !e.exif) {
                                        SRTlib.send("]},");

                    return ht(e.parseExifBlock());
                  }
                                    SRTlib.send("]},");

                }, function () {
                                    SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt.ReturnStatement.dt6", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                  if (void 0 !== e.interopOffset) {
                                        SRTlib.send("]},");

                    return e.parseBlock(e.interopOffset, "interop");
                  }
                                    SRTlib.send("]},");

                });
                                SRTlib.send("]},");

              });
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "parseThumbnailBlock",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value12", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            try {
              var t = this;
              if (t.ifd1 || t.ifd1Parsed) {
                                SRTlib.send("]},");

                return;
              }
              if (t.options.mergeOutput && !e) {
                                SRTlib.send("]},");

                return;
              }
                            SRTlib.send("]},");

              return (t.findIfd1Offset(), t.ifd1Offset > 0 && (t.parseBlock(t.ifd1Offset, "ifd1"), t.ifd1Parsed = !0), t.ifd1);
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "extractThumbnail",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value13", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            try {
              var e = this;
                            SRTlib.send("]},");

              return (e.headerParsed || e.parseHeader(), dt(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt13", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (!e.ifd1Parsed) {
                                    SRTlib.send("]},");

                  return ht(e.parseThumbnailBlock(!0));
                }
                                SRTlib.send("]},");

              }, function () {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.dt14", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                if (void 0 !== e.ifd1) {
                  var t = e.ifd1.get(513), r = e.ifd1.get(514);
                                    SRTlib.send("]},");

                  return e.chunk.getUint8Array(t, r);
                }
                                SRTlib.send("]},");

              }));
            } catch (e) {
                            SRTlib.send("]},");

              return Promise.reject(e);
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "createOutput",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value14", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e, t, r, n = {}, i = ue;
            Array.isArray(i) || ("function" == typeof i.entries && (i = i.entries()), i = b(i));
            for (var o = 0; o < i.length; o++) if (!B(e = this[t = i[o]])) if ((r = this.canTranslate ? this.translateBlock(e, t) : v(e), this.options.mergeOutput)) {
              if ("ifd1" === t) continue;
              m(n, r);
            } else n[t] = r;
                        SRTlib.send("]},");

            return (this.makerNote && (n.makerNote = this.makerNote), this.userComment && (n.userComment = this.userComment), n);
                        SRTlib.send("]},");

          }
        }, {
          key: "assignToOutput",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value15", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            if (this.globalOptions.mergeOutput) m(e, t); else {
              var r = y(t);
              Array.isArray(r) || ("function" == typeof r.entries && (r = r.entries()), r = b(r));
              for (var n = 0; n < r.length; n++) {
                var i = r[n], o = i[0], s = i[1];
                this.assignObjectToOutput(e, o, s);
              }
            }
                        SRTlib.send("]},");

          }
        }, {
          key: "image",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this.ifd0;
                        SRTlib.send("]},");

          }
        }, {
          key: "thumbnail",
          get: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.get2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return this.ifd1;
                        SRTlib.send("]},");

          }
        }], [{
          key: "canHandle",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value16", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return 225 === e.getUint8(t + 1) && 1165519206 === e.getUint32(t + 4) && 0 === e.getUint16(t + 8);
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })((function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._t2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        function t() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return (i(this, t), f(this, l(t).apply(this, arguments)));
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (u(t, Ze), s(t, [{
          key: "parseHeader",
          value: function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value17", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var e = this.chunk.getUint16();
            if (18761 === e) this.le = !0; else {
              if (19789 !== e) throw I("Invalid EXIF data: expected byte order marker (0x4949 or 0x4D4D).");
              this.le = !1;
            }
            if ((this.chunk.le = this.le, 42 !== this.chunk.getUint16(2))) throw I("Invalid EXIF data: expected 0x002A.");
            this.headerParsed = !0;
                        SRTlib.send("]},");

          }
        }, {
          key: "parseTags",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value18", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : P(), n = this.options[t], i = n.pick, o = n.skip, s = (i = S(i)).size > 0, a = 0 === o.size, u = this.chunk.getUint16(e);
            e += 2;
            for (var l = 0; l < u; l++) {
              var c = this.chunk.getUint16(e);
              if (s) {
                if (i.has(c) && (r.set(c, this.parseTag(e, c, t)), i.delete(c), 0 === i.size)) break;
              } else !a && o.has(c) || r.set(c, this.parseTag(e, c, t));
              e += 12;
            }
                        SRTlib.send("]},");

            return r;
                        SRTlib.send("]},");

          }
        }, {
          key: "parseTag",
          value: function (e, t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value19", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            var n, i = this.chunk.getUint16(e + 2), o = this.chunk.getUint32(e + 4), s = ft[i];
            if ((s * o <= 4 ? e += 8 : e = this.chunk.getUint32(e + 8), i < 1 || i > 13)) throw I(("Invalid TIFF value type. block: ").concat(r.toUpperCase(), ", tag: ").concat(t.toString(16), ", type: ").concat(i, ", offset ").concat(e));
            if (e > this.chunk.byteLength) throw I(("Invalid TIFF value offset. block: ").concat(r.toUpperCase(), ", tag: ").concat(t.toString(16), ", type: ").concat(i, ", offset ").concat(e, " is outside of chunk size ").concat(this.chunk.byteLength));
            if (1 === i) {
                            SRTlib.send("]},");

              return this.chunk.getUint8Array(e, o);
            }
            if (2 === i) {
                            SRTlib.send("]},");

              return "" === (n = (function (e) {
                                SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.ReturnStatement.trim", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                for (; e.endsWith("\0"); ) e = e.slice(0, -1);
                                SRTlib.send("]},");

                return e;
                                SRTlib.send("]},");

              })(n = this.chunk.getString(e, o)).trim()) ? void 0 : n;
            }
            if (7 === i) {
                            SRTlib.send("]},");

              return this.chunk.getUint8Array(e, o);
            }
            if (1 === o) {
                            SRTlib.send("]},");

              return this.parseTagValue(i, e);
            }
            for (var a = new ((function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value.a", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              switch (i) {
                case {
                                        SRTlib.send("]},");

                    return Uint8Array;
                  }:
                  return Uint8Array;
                case {
                                        SRTlib.send("]},");

                    return Uint16Array;
                  }:
                  return Uint16Array;
                case {
                                        SRTlib.send("]},");

                    return Uint32Array;
                  }:
                  return Uint32Array;
                case {
                                        SRTlib.send("]},");

                    return Array;
                  }:
                  return Array;
                case {
                                        SRTlib.send("]},");

                    return Int8Array;
                  }:
                  return Int8Array;
                case {
                                        SRTlib.send("]},");

                    return Int16Array;
                  }:
                  return Int16Array;
                case {
                                        SRTlib.send("]},");

                    return Int32Array;
                  }:
                  return Int32Array;
                case {
                                        SRTlib.send("]},");

                    return Array;
                  }:
                  return Array;
                case {
                                        SRTlib.send("]},");

                    return Float32Array;
                  }:
                  return Float32Array;
                case {
                                        SRTlib.send("]},");

                    return Float64Array;
                  }:
                  return Float64Array;
                default:
              }
                            SRTlib.send("]},");

            })())(o), u = s, l = 0; l < o; l++) (a[l] = this.parseTagValue(i, e), e += u);
                        SRTlib.send("]},");

            return a;
                        SRTlib.send("]},");

          }
        }, {
          key: "parseTagValue",
          value: function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call._t.ReturnStatement.s.value20", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            switch (e) {
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getUint8(t);
                }:
                return this.chunk.getUint8(t);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getUint16(t);
                }:
                return this.chunk.getUint16(t);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getUint32(t);
                }:
                return this.chunk.getUint32(t);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getUint32(t) / this.chunk.getUint32(t + 4);
                }:
                return this.chunk.getUint32(t) / this.chunk.getUint32(t + 4);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getInt8(t);
                }:
                return this.chunk.getInt8(t);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getInt16(t);
                }:
                return this.chunk.getInt16(t);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getInt32(t);
                }:
                return this.chunk.getInt32(t);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getInt32(t) / this.chunk.getInt32(t + 4);
                }:
                return this.chunk.getInt32(t) / this.chunk.getInt32(t + 4);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getFloat(t);
                }:
                return this.chunk.getFloat(t);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getDouble(t);
                }:
                return this.chunk.getDouble(t);
              case {
                                    SRTlib.send("]},");

                  return this.chunk.getUint32(t);
                }:
                return this.chunk.getUint32(t);
              default:
                throw I(("Invalid tiff type ").concat(e));
            }
                        SRTlib.send("]},");

          }
        }]), t);
                SRTlib.send("]},");

      })());
      function gt(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

        var i = e + t / 60 + r / 3600;
                SRTlib.send("]},");

        return ("S" !== n && "W" !== n || (i *= -1), i);
                SRTlib.send("]},");

      }
      (a(_t, "type", "tiff"), a(_t, "headerLength", 10), q.set("tiff", _t), n.Exifr = $e, n.Options = ye, n.allFormatters = he, n.chunkedProps = oe, n.createDictionary = ee, n.default = qe, n.disableAllOptions = we, n.extendDictionary = te, n.fetchUrlAsArrayBuffer = G, n.fileParsers = z, n.fileReaders = H, n.gps = Re, n.gpsOnlyOptions = ke, n.inheritables = pe, n.orientation = xe, n.orientationOnlyOptions = Ce, n.otherSegments = se, n.parse = Ie, n.readBlobAsArrayBuffer = X, n.rotation = Oe, n.rotations = De, n.segmentParsers = q, n.segments = ae, n.segmentsAndBlocks = le, n.tagKeys = re, n.tagRevivers = ie, n.tagValues = ne, n.thumbnail = Be, n.thumbnailOnlyOptions = Se, n.thumbnailUrl = Ue, n.tiffBlocks = ue, n.tiffExtractables = ce, Object.defineProperty(n, "__esModule", {
        value: !0
      }));
            SRTlib.send("]},");

    }, "object" == typeof _$miniLegacyUmd_180.exports ? i(_$miniLegacyUmd_180.exports) : "function" == typeof define && define.amd ? define("exifr", ["exports"], i) : i((n = n || self).exifr = {}));
        SRTlib.send("]},");

  }).call(this, _$browser_52, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, _$buffer_8({}).Buffer), _$miniLegacyUmd_180 = _$miniLegacyUmd_180.exports);
  var _$package_181 = {
    version: "1.6.0"
  }, ___class_179, ___temp_179;
  function ___extends_179() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_179 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply17", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var __Plugin_179 = _$lib_97.Plugin, _$lib_179 = (___temp_179 = ___class_179 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_179", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
      if (((n = e.call(this, t, r) || this).onFileAdded = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "onFileAdded", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.preview || !_$isPreviewSupported_224(e.type) || e.isRemote || n.addToQueue(e.id);
                SRTlib.send("]},");

      }, n.onCancelRequest = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.onCancelRequest", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = n.queue.indexOf(e.id);
        -1 !== t && n.queue.splice(t, 1);
                SRTlib.send("]},");

      }, n.onFileRemoved = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.onFileRemoved", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = n.queue.indexOf(e.id);
        (-1 !== t && n.queue.splice(t, 1), e.preview && _$isObjectURL_223(e.preview) && URL.revokeObjectURL(e.preview));
                SRTlib.send("]},");

      }, n.onRestored = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.onRestored", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = n.uppy.getState().files;
        Object.keys(e).forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.onRestored.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = n.uppy.getFile(e);
          t.isRestored && (t.preview && !_$isObjectURL_223(t.preview) || n.addToQueue(t.id));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }, n.waitUntilAllProcessed = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.waitUntilAllProcessed2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.waitUntilAllProcessed", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = n.uppy.getFile(e);
          n.uppy.emit("preprocess-progress", t, {
            mode: "indeterminate",
            message: n.i18n("generatingThumbnails")
          });
                    SRTlib.send("]},");

        });
        var t = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "n.waitUntilAllProcessed.t2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          e.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "n.waitUntilAllProcessed.t", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = n.uppy.getFile(e);
            n.uppy.emit("preprocess-complete", t);
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        };
                SRTlib.send("]},");

        return new Promise(function (e, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.waitUntilAllProcessed.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          n.queueProcessing ? n.uppy.once("thumbnail:all-generated", function () {
                        SRTlib.send(`{ "anonymous": true, "function": "n.waitUntilAllProcessed.ReturnStatement.n.uppy.once", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            (t(), e());
                        SRTlib.send("]},");

          }) : (t(), e());
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }, n.type = "modifier", n.id = n.opts.id || "ThumbnailGenerator", n.title = "Thumbnail Generator", n.queue = [], n.queueProcessing = !1, n.defaultThumbnailDimension = 200, n.defaultLocale = {
        strings: {
          generatingThumbnails: "Generating thumbnails..."
        }
      }, n.opts = ___extends_179({}, {
        thumbnailWidth: null,
        thumbnailHeight: null,
        waitForThumbnailsBeforeUpload: !1,
        lazy: !1
      }, {}, r), n.opts.lazy && n.opts.waitForThumbnailsBeforeUpload)) throw new Error("ThumbnailGenerator: The `lazy` and `waitForThumbnailsBeforeUpload` options are mutually exclusive. Please ensure at most one of them is set to `true`.");
            SRTlib.send("]},");

      return (n.i18nInit(), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.setOptions = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.setOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (e.prototype.setOptions.call(this, t), this.i18nInit());
            SRTlib.send("]},");

    }, i.i18nInit = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.i18nInit", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.translator = new _$Translator_200([this.defaultLocale, this.uppy.locale, this.opts.locale]), this.i18n = this.translator.translate.bind(this.translator), this.setPluginState());
            SRTlib.send("]},");

    }, i.createThumbnail = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.createThumbnail", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = this, i = URL.createObjectURL(e.data), o = new Promise(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.createThumbnail.o3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = new Image();
        (r.src = i, r.addEventListener("load", function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.createThumbnail.o", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (URL.revokeObjectURL(i), e(r));
                    SRTlib.send("]},");

        }), r.addEventListener("error", function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.createThumbnail.o2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (URL.revokeObjectURL(i), t(e.error || new Error("Could not create thumbnail")));
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      }), s = _$miniLegacyUmd_180.rotation(e.data).catch(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.createThumbnail.s.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return 1;
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

      return Promise.all([o, s]).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.createThumbnail.ReturnStatement.then.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var i = e[0], o = e[1], s = n.getProportionalDimensions(i, t, r, o.deg), a = n.rotateImage(i, o), u = n.resizeImage(a, s.width, s.height);
                SRTlib.send("]},");

        return n.canvasToBlob(u, "image/jpeg", 80);
                SRTlib.send("]},");

      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.createThumbnail.ReturnStatement.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return URL.createObjectURL(e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.getProportionalDimensions = function (e, t, r, n) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.getProportionalDimensions", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

      var i = e.width / e.height;
            SRTlib.send("]},");

      return (90 !== n && 270 !== n || (i = e.height / e.width), null != t ? {
        width: t,
        height: Math.round(t / i)
      } : null != r ? {
        width: Math.round(r * i),
        height: r
      } : {
        width: this.defaultThumbnailDimension,
        height: Math.round(this.defaultThumbnailDimension / i)
      });
            SRTlib.send("]},");

    }, i.protect = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.protect", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = e.width / e.height, r = Math.floor(Math.sqrt(5e6 * t)), n = Math.floor(5e6 / Math.sqrt(5e6 * t));
      if ((r > 4096 && (r = 4096, n = Math.round(r / t)), n > 4096 && (n = 4096, r = Math.round(t * n)), e.width > r)) {
        var i = document.createElement("canvas");
        (i.width = r, i.height = n, i.getContext("2d").drawImage(e, 0, 0, r, n), e = i);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    }, i.resizeImage = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.resizeImage", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      e = this.protect(e);
      var n = Math.ceil(_$mathLog2_44(e.width / t));
      n < 1 && (n = 1);
      for (var i = t * Math.pow(2, n - 1), o = r * Math.pow(2, n - 1); n--; ) {
        var s = document.createElement("canvas");
        (s.width = i, s.height = o, s.getContext("2d").drawImage(e, 0, 0, i, o), e = s, i = Math.round(i / 2), o = Math.round(o / 2));
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    }, i.rotateImage = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.rotateImage", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = e.width, n = e.height;
      90 !== t.deg && 270 !== t.deg || (r = e.height, n = e.width);
      var i = document.createElement("canvas");
      (i.width = r, i.height = n);
      var o = i.getContext("2d");
            SRTlib.send("]},");

      return (o.translate(r / 2, n / 2), t.canvas && (o.rotate(t.rad), o.scale(t.scaleX, t.scaleY)), o.drawImage(e, -e.width / 2, -e.height / 2, e.width, e.height), i);
            SRTlib.send("]},");

    }, i.canvasToBlob = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.canvasToBlob", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      try {
        e.getContext("2d").getImageData(0, 0, 1, 1);
      } catch (err) {
        if (18 === err.code) {
                    SRTlib.send("]},");

          return Promise.reject(new Error("cannot read image, probably an svg with external resources"));
        }
      }
            SRTlib.send("]},");

      return e.toBlob ? new Promise(function (n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.canvasToBlob.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.toBlob(n, t, r);
                SRTlib.send("]},");

      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.canvasToBlob.ReturnStatement.then2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (null === e) throw new Error("cannot read image, probably an svg with external resources");
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      }) : Promise.resolve().then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.canvasToBlob.ReturnStatement.then.then.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return _$dataURItoBlob_202(e.toDataURL(t, r), {});
                SRTlib.send("]},");

      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.canvasToBlob.ReturnStatement.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (null === e) throw new Error("could not extract blob, probably an old browser");
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.setPreviewURL = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.setPreviewURL", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.uppy.setFileState(e, {
        preview: t
      });
            SRTlib.send("]},");

    }, i.addToQueue = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.addToQueue", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.queue.push(e), !1 === this.queueProcessing && this.processQueue());
            SRTlib.send("]},");

    }, i.processQueue = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.processQueue", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      if ((this.queueProcessing = !0, this.queue.length > 0)) {
        var t = this.uppy.getFile(this.queue.shift());
                SRTlib.send("]},");

        return t ? this.requestThumbnail(t).catch(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.processQueue.ReturnStatement.requestThumbnail.catch.then.requestThumbnail.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

        }).then(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.processQueue.ReturnStatement.requestThumbnail.catch.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return e.processQueue();
                    SRTlib.send("]},");

        }) : void this.uppy.log("[ThumbnailGenerator] file was removed before a thumbnail could be generated, but not removed from the queue. This is probably a bug", "error");
      }
      (this.queueProcessing = !1, this.uppy.log("[ThumbnailGenerator] Emptied thumbnail queue"), this.uppy.emit("thumbnail:all-generated"));
            SRTlib.send("]},");

    }, i.requestThumbnail = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.requestThumbnail", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return _$isPreviewSupported_224(e.type) && !e.isRemote ? this.createThumbnail(e, this.opts.thumbnailWidth, this.opts.thumbnailHeight).then(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.requestThumbnail.ReturnStatement.createThumbnail.then.catch.createThumbnail.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (t.setPreviewURL(e.id, r), t.uppy.log("[ThumbnailGenerator] Generated thumbnail for " + e.id), t.uppy.emit("thumbnail:generated", t.uppy.getFile(e.id), r));
                SRTlib.send("]},");

      }).catch(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.requestThumbnail.ReturnStatement.createThumbnail.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (t.uppy.log("[ThumbnailGenerator] Failed thumbnail for " + e.id + ":", "warning"), t.uppy.log(r, "warning"), t.uppy.emit("thumbnail:error", t.uppy.getFile(e.id), r));
                SRTlib.send("]},");

      }) : Promise.resolve();
            SRTlib.send("]},");

    }, i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.uppy.on("file-removed", this.onFileRemoved), this.opts.lazy ? (this.uppy.on("thumbnail:request", this.onFileAdded), this.uppy.on("thumbnail:cancel", this.onCancelRequest)) : (this.uppy.on("file-added", this.onFileAdded), this.uppy.on("restored", this.onRestored)), this.opts.waitForThumbnailsBeforeUpload && this.uppy.addPreProcessor(this.waitUntilAllProcessed));
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_179.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.uppy.off("file-removed", this.onFileRemoved), this.opts.lazy ? (this.uppy.off("thumbnail:request", this.onFileAdded), this.uppy.off("thumbnail:cancel", this.onCancelRequest)) : (this.uppy.off("file-added", this.onFileAdded), this.uppy.off("restored", this.onRestored)), this.opts.waitForThumbnailsBeforeUpload && this.uppy.removePreProcessor(this.waitUntilAllProcessed));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_179), ___class_179.VERSION = _$package_181.version, ___temp_179), _$findAllDOMElements_204 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$findAllDOMElements_204", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("string" == typeof e) {
      var t = [].slice.call(document.querySelectorAll(e));
            SRTlib.send("]},");

      return t.length > 0 ? t : null;
    }
    if ("object" == typeof e && _$isDOMElement_220(e)) {
            SRTlib.send("]},");

      return [e];
    }
        SRTlib.send("]},");

  }, _$getRelativePath_211 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getRelativePath_211", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e.fullPath && e.fullPath !== "/" + e.name ? e.fullPath : null;
        SRTlib.send("]},");

  }, _$getFilesAndDirectoriesFromDirectory_210 = function e(t, r, n, i) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getFilesAndDirectoriesFromDirectory_210.e3", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

    var o = i.onSuccess;
    t.readEntries(function (i) {
            SRTlib.send(`{ "anonymous": true, "function": "_$getFilesAndDirectoriesFromDirectory_210.e", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var s = [].concat(r, i);
      i.length ? setTimeout(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$getFilesAndDirectoriesFromDirectory_210.e.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e(t, s, n, {
          onSuccess: o
        });
                SRTlib.send("]},");

      }, 0) : o(s);
            SRTlib.send("]},");

    }, function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$getFilesAndDirectoriesFromDirectory_210.e2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (n(e), o(r));
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }, _$webkitGetAsEntryApi_212 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = [], n = [];
        SRTlib.send("]},");

    return (_$toArray_229(e.items).forEach(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var i = e.webkitGetAsEntry();
      i && n.push((function e(n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212.ReturnStatement.forEach.e", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return new Promise(function (i) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212.ReturnStatement.forEach.e.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if (n.isFile) n.file(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212.ReturnStatement.forEach.e.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            (e.relativePath = _$getRelativePath_211(n), r.push(e), i());
                        SRTlib.send("]},");

          }, function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212.ReturnStatement.forEach.e.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            (t(e), i());
                        SRTlib.send("]},");

          }); else if (n.isDirectory) {
            var o = n.createReader();
            _$getFilesAndDirectoriesFromDirectory_210(o, [], t, {
              onSuccess: function (t) {
                                SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212.ReturnStatement.forEach.e.ReturnStatement._$getFilesAndDirectoriesFromDirectory_210.onSuccess", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                var r = t.map(function (t) {
                                    SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212.ReturnStatement.forEach.e.ReturnStatement._$getFilesAndDirectoriesFromDirectory_210.onSuccess.r", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                    SRTlib.send("]},");

                  return e(t);
                                    SRTlib.send("]},");

                });
                Promise.all(r).then(function () {
                                    SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212.ReturnStatement.forEach.e.ReturnStatement._$getFilesAndDirectoriesFromDirectory_210.onSuccess.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                                    SRTlib.send("]},");

                  return i();
                                    SRTlib.send("]},");

                });
                                SRTlib.send("]},");

              }
            });
          }
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      })(i));
            SRTlib.send("]},");

    }), Promise.all(n).then(function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$webkitGetAsEntryApi_212.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return r;
            SRTlib.send("]},");

    }));
        SRTlib.send("]},");

  }, _$fallbackApi_209 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$fallbackApi_209", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = _$toArray_229(e.files);
        SRTlib.send("]},");

    return Promise.resolve(t);
        SRTlib.send("]},");

  }, _$getDroppedFiles_208 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getDroppedFiles_208", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = (void 0 === t ? {} : t).logDropError, n = void 0 === r ? function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$getDroppedFiles_208.n", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    } : r;
        SRTlib.send("]},");

    return e.items && e.items[0] && ("webkitGetAsEntry" in e.items[0]) ? _$webkitGetAsEntryApi_212(e, n) : _$fallbackApi_209(e);
        SRTlib.send("]},");

  }, _$getActiveOverlayEl_121 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getActiveOverlayEl_121", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (t) {
      var r = e.querySelector('[data-uppy-paneltype="' + t + '"]');
      if (r) {
                SRTlib.send("]},");

        return r;
      }
    }
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }, _$FOCUSABLE_ELEMENTS_197 = ['a[href]:not([tabindex^="-"]):not([inert]):not([aria-hidden])', 'area[href]:not([tabindex^="-"]):not([inert]):not([aria-hidden])', "input:not([disabled]):not([inert]):not([aria-hidden])", "select:not([disabled]):not([inert]):not([aria-hidden])", "textarea:not([disabled]):not([inert]):not([aria-hidden])", "button:not([disabled]):not([inert]):not([aria-hidden])", 'iframe:not([tabindex^="-"]):not([inert]):not([aria-hidden])', 'object:not([tabindex^="-"]):not([inert]):not([aria-hidden])', 'embed:not([tabindex^="-"]):not([inert]):not([aria-hidden])', '[contenteditable]:not([tabindex^="-"]):not([inert]):not([aria-hidden])', '[tabindex]:not([tabindex^="-"]):not([inert]):not([aria-hidden])'];
  function focusOnFirstNode(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = t[0];
    r && (r.focus(), e.preventDefault());
        SRTlib.send("]},");

  }
  function trapFocus(e, t, r) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    var n = _$getActiveOverlayEl_121(r, t), i = _$toArray_229(n.querySelectorAll(_$FOCUSABLE_ELEMENTS_197)), o = i.indexOf(document.activeElement);
    !(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "emptyKey26", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.contains(document.activeElement);
            SRTlib.send("]},");

    })(n) ? focusOnFirstNode(e, i) : e.shiftKey && 0 === o ? (function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "emptyKey27", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = i[i.length - 1];
      r && (r.focus(), e.preventDefault());
            SRTlib.send("]},");

    })(e) : e.shiftKey || o !== i.length - 1 || focusOnFirstNode(e, i);
        SRTlib.send("]},");

  }
  var _$trapFocus_124 = {
    forModal: function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$trapFocus_124.forModal", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      trapFocus(e, t, r);
            SRTlib.send("]},");

    },
    forInline: function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$trapFocus_124.forInline", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      null === t || trapFocus(e, t, r);
            SRTlib.send("]},");

    }
  }, _$ResizeObserver_55 = {
    exports: {}
  };
  ((function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "call14", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    !(function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "call12", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      "object" == typeof _$ResizeObserver_55.exports ? _$ResizeObserver_55.exports = t() : "function" == typeof define && define.amd ? define(t) : e.ResizeObserver = t();
            SRTlib.send("]},");

    })(this, function () {
            SRTlib.send(`{ "anonymous": true, "function": "call13", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      "use strict";
      var t = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.t", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        if ("undefined" != typeof Map) {
                    SRTlib.send("]},");

          return Map;
        }
        function e(e, t) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var r = -1;
                    SRTlib.send("]},");

          return (e.some(function (e, n) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement23", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return e[0] === t && (r = n, !0);
                        SRTlib.send("]},");

          }), r);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.t.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          function t() {
                        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            this.__entries__ = [];
                        SRTlib.send("]},");

          }
                    SRTlib.send("]},");

          return (Object.defineProperty(t.prototype, "size", {
            get: function () {
                            SRTlib.send(`{ "anonymous": true, "function": "call.t.ReturnStatement.ReturnStatement.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                            SRTlib.send("]},");

              return this.__entries__.length;
                            SRTlib.send("]},");

            },
            enumerable: !0,
            configurable: !0
          }), t.prototype.get = function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.t.ReturnStatement.ReturnStatement.t.prototype.get", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var r = e(this.__entries__, t), n = this.__entries__[r];
                        SRTlib.send("]},");

            return n && n[1];
                        SRTlib.send("]},");

          }, t.prototype.set = function (t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.t.ReturnStatement.ReturnStatement.t.prototype.set", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var n = e(this.__entries__, t);
            ~n ? this.__entries__[n][1] = r : this.__entries__.push([t, r]);
                        SRTlib.send("]},");

          }, t.prototype.delete = function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.t.ReturnStatement.ReturnStatement.t.prototype.delete", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var r = this.__entries__, n = e(r, t);
            ~n && r.splice(n, 1);
                        SRTlib.send("]},");

          }, t.prototype.has = function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.t.ReturnStatement.ReturnStatement.t.prototype.has", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return !!~e(this.__entries__, t);
                        SRTlib.send("]},");

          }, t.prototype.clear = function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.t.ReturnStatement.ReturnStatement.t.prototype.clear", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            this.__entries__.splice(0);
                        SRTlib.send("]},");

          }, t.prototype.forEach = function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.t.ReturnStatement.ReturnStatement.t.prototype.forEach", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            void 0 === t && (t = null);
            for (var r = 0, n = this.__entries__; r < n.length; r++) {
              var i = n[r];
              e.call(t, i[1], i[0]);
            }
                        SRTlib.send("]},");

          }, t);
                    SRTlib.send("]},");

        })();
                SRTlib.send("]},");

      })(), r = "undefined" != typeof window && "undefined" != typeof document && window.document === document, n = void 0 !== e && e.Math === Math ? e : "undefined" != typeof self && self.Math === Math ? self : "undefined" != typeof window && window.Math === Math ? window : Function("return this")(), i = "function" == typeof requestAnimationFrame ? requestAnimationFrame.bind(n) : function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.i", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return setTimeout(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.i.ReturnStatement.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return e(Date.now());
                    SRTlib.send("]},");

        }, 1e3 / 60);
                SRTlib.send("]},");

      }, o = 2, s = 20, a = ["top", "right", "bottom", "left", "width", "height", "size", "weight"], u = "undefined" != typeof MutationObserver, l = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.l", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e() {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (this.connected_ = !1, this.mutationEventsAdded_ = !1, this.mutationsObserver_ = null, this.observers_ = [], this.onTransitionEnd_ = this.onTransitionEnd_.bind(this), this.refresh = (function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "refresh", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            var r = !1, n = !1, s = 0;
            function a() {
                            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

              (r && (r = !1, e()), n && l());
                            SRTlib.send("]},");

            }
            function u() {
                            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

              i(a);
                            SRTlib.send("]},");

            }
            function l() {
                            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

              var e = Date.now();
              if (r) {
                if (e - s < o) {
                                    SRTlib.send("]},");

                  return;
                }
                n = !0;
              } else (r = !0, n = !1, setTimeout(u, t));
              s = e;
                            SRTlib.send("]},");

            }
                        SRTlib.send("]},");

            return l;
                        SRTlib.send("]},");

          })(this.refresh.bind(this), s));
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (e.prototype.addObserver = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.addObserver", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (~this.observers_.indexOf(e) || this.observers_.push(e), this.connected_ || this.connect_());
                    SRTlib.send("]},");

        }, e.prototype.removeObserver = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.removeObserver", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = this.observers_, r = t.indexOf(e);
          (~r && t.splice(r, 1), !t.length && this.connected_ && this.disconnect_());
                    SRTlib.send("]},");

        }, e.prototype.refresh = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.refresh", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          this.updateObservers_() && this.refresh();
                    SRTlib.send("]},");

        }, e.prototype.updateObservers_ = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.updateObservers_", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e = this.observers_.filter(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.updateObservers_.e.observers_.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return (e.gatherActive(), e.hasActive());
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

          return (e.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.updateObservers_.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return e.broadcastActive();
                        SRTlib.send("]},");

          }), e.length > 0);
                    SRTlib.send("]},");

        }, e.prototype.connect_ = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.connect_", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          r && !this.connected_ && (document.addEventListener("transitionend", this.onTransitionEnd_), window.addEventListener("resize", this.refresh), u ? (this.mutationsObserver_ = new MutationObserver(this.refresh), this.mutationsObserver_.observe(document, {
            attributes: !0,
            childList: !0,
            characterData: !0,
            subtree: !0
          })) : (document.addEventListener("DOMSubtreeModified", this.refresh), this.mutationEventsAdded_ = !0), this.connected_ = !0);
                    SRTlib.send("]},");

        }, e.prototype.disconnect_ = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.disconnect_", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          r && this.connected_ && (document.removeEventListener("transitionend", this.onTransitionEnd_), window.removeEventListener("resize", this.refresh), this.mutationsObserver_ && this.mutationsObserver_.disconnect(), this.mutationEventsAdded_ && document.removeEventListener("DOMSubtreeModified", this.refresh), this.mutationsObserver_ = null, this.mutationEventsAdded_ = !1, this.connected_ = !1);
                    SRTlib.send("]},");

        }, e.prototype.onTransitionEnd_ = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.onTransitionEnd_2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = e.propertyName, r = void 0 === t ? "" : t;
          a.some(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.prototype.onTransitionEnd_", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return !!~r.indexOf(e);
                        SRTlib.send("]},");

          }) && this.refresh();
                    SRTlib.send("]},");

        }, e.getInstance = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.l.ReturnStatement.e.getInstance", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return (this.instance_ || (this.instance_ = new e()), this.instance_);
                    SRTlib.send("]},");

        }, e.instance_ = null, e);
                SRTlib.send("]},");

      })(), c = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.c", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        for (var r = 0, n = Object.keys(t); r < n.length; r++) {
          var i = n[r];
          Object.defineProperty(e, i, {
            value: t[i],
            enumerable: !1,
            writable: !1,
            configurable: !0
          });
        }
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      }, p = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.p", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e && e.ownerDocument && e.ownerDocument.defaultView || n;
                SRTlib.send("]},");

      }, h = y(0, 0, 0, 0);
      function d(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return parseFloat(e) || 0;
                SRTlib.send("]},");

      }
      function f(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var t = [], r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
                SRTlib.send("]},");

        return t.reduce(function (t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement24", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                    SRTlib.send("]},");

          return t + d(e["border-" + r + "-width"]);
                    SRTlib.send("]},");

        }, 0);
                SRTlib.send("]},");

      }
      var _ = "undefined" != typeof SVGGraphicsElement ? function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e instanceof p(e).SVGGraphicsElement;
                SRTlib.send("]},");

      } : function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e instanceof p(e).SVGElement && "function" == typeof e.getBBox;
                SRTlib.send("]},");

      };
      function g(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return r ? _(e) ? (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement25", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = e.getBBox();
                    SRTlib.send("]},");

          return y(0, 0, t.width, t.height);
                    SRTlib.send("]},");

        })(e) : (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement27", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = e.clientWidth, r = e.clientHeight;
          if (!t && !r) {
                        SRTlib.send("]},");

            return h;
          }
          var n = p(e).getComputedStyle(e), i = (function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            for (var t = {}, r = 0, n = ["top", "right", "bottom", "left"]; r < n.length; r++) {
              var i = n[r], o = e["padding-" + i];
              t[i] = d(o);
            }
                        SRTlib.send("]},");

            return t;
                        SRTlib.send("]},");

          })(n), o = i.left + i.right, s = i.top + i.bottom, a = d(n.width), u = d(n.height);
          if (("border-box" === n.boxSizing && (Math.round(a + o) !== t && (a -= f(n, "left", "right") + o), Math.round(u + s) !== r && (u -= f(n, "top", "bottom") + s)), !(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement26", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return e === p(e).document.documentElement;
                        SRTlib.send("]},");

          })(e))) {
            var l = Math.round(a + o) - t, c = Math.round(u + s) - r;
            (1 !== Math.abs(l) && (a -= l), 1 !== Math.abs(c) && (u -= c));
          }
                    SRTlib.send("]},");

          return y(i.left, i.top, a, u);
                    SRTlib.send("]},");

        })(e) : h;
                SRTlib.send("]},");

      }
      function y(e, t, r, n) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

                SRTlib.send("]},");

        return {
          x: e,
          y: t,
          width: r,
          height: n
        };
                SRTlib.send("]},");

      }
      var m = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.m2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e(e) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (this.broadcastWidth = 0, this.broadcastHeight = 0, this.contentRect_ = y(0, 0, 0, 0), this.target = e);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (e.prototype.isActive = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.m.ReturnStatement.e.prototype.isActive", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e = g(this.target);
                    SRTlib.send("]},");

          return (this.contentRect_ = e, e.width !== this.broadcastWidth || e.height !== this.broadcastHeight);
                    SRTlib.send("]},");

        }, e.prototype.broadcastRect = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.m.ReturnStatement.e.prototype.broadcastRect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e = this.contentRect_;
                    SRTlib.send("]},");

          return (this.broadcastWidth = e.width, this.broadcastHeight = e.height, e);
                    SRTlib.send("]},");

        }, e);
                SRTlib.send("]},");

      })(), v = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.v2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r, n, i, o, s, a, u, l = (n = (r = t).x, i = r.y, o = r.width, s = r.height, a = "undefined" != typeof DOMRectReadOnly ? DOMRectReadOnly : Object, u = Object.create(a.prototype), c(u, {
          x: n,
          y: i,
          width: o,
          height: s,
          top: i,
          right: n + o,
          bottom: s + i,
          left: n
        }), u);
        c(this, {
          target: e,
          contentRect: l
        });
                SRTlib.send("]},");

      }, b = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.b2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        function e(e, r, n) {
                    SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          if ((this.activeObservations_ = [], this.observations_ = new t(), "function" != typeof e)) throw new TypeError("The callback provided as parameter 1 is not a function.");
          (this.callback_ = e, this.controller_ = r, this.callbackCtx_ = n);
                    SRTlib.send("]},");

        }
                SRTlib.send("]},");

        return (e.prototype.observe = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement.e.prototype.observe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
          if ("undefined" != typeof Element && Element instanceof Object) {
            if (!(e instanceof p(e).Element)) throw new TypeError('parameter 1 is not of type "Element".');
            var t = this.observations_;
            t.has(e) || (t.set(e, new m(e)), this.controller_.addObserver(this), this.controller_.refresh());
          }
                    SRTlib.send("]},");

        }, e.prototype.unobserve = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement.e.prototype.unobserve", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
          if ("undefined" != typeof Element && Element instanceof Object) {
            if (!(e instanceof p(e).Element)) throw new TypeError('parameter 1 is not of type "Element".');
            var t = this.observations_;
            t.has(e) && (t.delete(e), t.size || this.controller_.removeObserver(this));
          }
                    SRTlib.send("]},");

        }, e.prototype.disconnect = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement.e.prototype.disconnect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this));
                    SRTlib.send("]},");

        }, e.prototype.gatherActive = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement.e.prototype.gatherActive", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e = this;
          (this.clearActive(), this.observations_.forEach(function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement.e.prototype.gatherActive.observations_.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            t.isActive() && e.activeObservations_.push(t);
                        SRTlib.send("]},");

          }));
                    SRTlib.send("]},");

        }, e.prototype.broadcastActive = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement.e.prototype.broadcastActive", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          if (this.hasActive()) {
            var e = this.callbackCtx_, t = this.activeObservations_.map(function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement.e.prototype.broadcastActive.t.activeObservations_.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return new v(e.target, e.broadcastRect());
                            SRTlib.send("]},");

            });
            (this.callback_.call(e, t, e), this.clearActive());
          }
                    SRTlib.send("]},");

        }, e.prototype.clearActive = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement.e.prototype.clearActive", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          this.activeObservations_.splice(0);
                    SRTlib.send("]},");

        }, e.prototype.hasActive = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.b.ReturnStatement.e.prototype.hasActive", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return this.activeObservations_.length > 0;
                    SRTlib.send("]},");

        }, e);
                SRTlib.send("]},");

      })(), w = "undefined" != typeof WeakMap ? new WeakMap() : new t(), k = function e(t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.k.e", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function.");
        if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
        var r = l.getInstance(), n = new b(t, r, this);
        w.set(this, n);
                SRTlib.send("]},");

      };
            SRTlib.send("]},");

      return (["observe", "unobserve", "disconnect"].forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        k.prototype[e] = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.forEach.k.prototype.e", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var t;
                    SRTlib.send("]},");

          return (t = w.get(this))[e].apply(t, arguments);
                    SRTlib.send("]},");

        };
                SRTlib.send("]},");

      }), void 0 !== n.ResizeObserver ? n.ResizeObserver : k);
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}), _$ResizeObserver_55 = _$ResizeObserver_55.exports);
  var _$lodashDebounce_42 = {};
  (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "call16", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = NaN, r = "[object Symbol]", n = /^\s+|\s+$/g, i = /^[-+]0x[0-9a-f]+$/i, o = /^0b[01]+$/i, s = /^0o[0-7]+$/i, a = parseInt, u = "object" == typeof e && e && e.Object === Object && e, l = "object" == typeof self && self && self.Object === Object && self, c = u || l || Function("return this")(), p = Object.prototype.toString, h = Math.max, d = Math.min, f = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.f", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return c.Date.now();
            SRTlib.send("]},");

    };
    function _(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = typeof e;
            SRTlib.send("]},");

      return !!e && ("object" == t || "function" == t);
            SRTlib.send("]},");

    }
    function g(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if ("number" == typeof e) {
                SRTlib.send("]},");

        return e;
      }
      if ((function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey28", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return "symbol" == typeof e || (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement28", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return !!e && "object" == typeof e;
                    SRTlib.send("]},");

        })(e) && p.call(e) == r;
                SRTlib.send("]},");

      })(e)) {
                SRTlib.send("]},");

        return t;
      }
      if (_(e)) {
        var u = "function" == typeof e.valueOf ? e.valueOf() : e;
        e = _(u) ? u + "" : u;
      }
      if ("string" != typeof e) {
                SRTlib.send("]},");

        return 0 === e ? e : +e;
      }
      e = e.replace(n, "");
      var l = o.test(e);
            SRTlib.send("]},");

      return l || s.test(e) ? a(e.slice(2), l ? 2 : 8) : i.test(e) ? t : +e;
            SRTlib.send("]},");

    }
    _$lodashDebounce_42 = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "call15", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n, i, o, s, a, u, l = 0, c = !1, p = !1, y = !0;
      if ("function" != typeof e) throw new TypeError("Expected a function");
      function m(t) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = n, o = i;
                SRTlib.send("]},");

        return (n = i = void 0, l = t, s = e.apply(o, r));
                SRTlib.send("]},");

      }
      function v(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = e - u;
                SRTlib.send("]},");

        return void 0 === u || r >= t || r < 0 || p && e - l >= o;
                SRTlib.send("]},");

      }
      function b() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = f();
        if (v(e)) {
                    SRTlib.send("]},");

          return w(e);
        }
        a = setTimeout(b, (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "setTimeout2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r = t - (e - u);
                    SRTlib.send("]},");

          return p ? d(r, o - (e - l)) : r;
                    SRTlib.send("]},");

        })(e));
                SRTlib.send("]},");

      }
      function w(e) {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return (a = void 0, y && n ? m(e) : (n = i = void 0, s));
                SRTlib.send("]},");

      }
      function k() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = f(), r = v(e);
        if ((n = arguments, i = this, u = e, r)) {
          if (void 0 === a) {
                        SRTlib.send("]},");

            return (function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement29", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                            SRTlib.send("]},");

              return (l = e, a = setTimeout(b, t), c ? m(e) : s);
                            SRTlib.send("]},");

            })(u);
          }
          if (p) {
                        SRTlib.send("]},");

            return (a = setTimeout(b, t), m(u));
          }
        }
                SRTlib.send("]},");

        return (void 0 === a && (a = setTimeout(b, t)), s);
                SRTlib.send("]},");

      }
            SRTlib.send("]},");

      return (t = g(t) || 0, _(r) && (c = !!r.leading, o = (p = ("maxWait" in r)) ? h(g(r.maxWait) || 0, t) : o, y = ("trailing" in r) ? !!r.trailing : y), k.cancel = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.k.cancel", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (void 0 !== a && clearTimeout(a), l = 0, n = u = i = a = void 0);
                SRTlib.send("]},");

      }, k.flush = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.k.flush", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return void 0 === a ? s : w(f());
                SRTlib.send("]},");

      }, k);
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
  var _$createSuperFocus_120 = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$createSuperFocus_120", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = !1;
        SRTlib.send("]},");

    return _$lodashDebounce_42(function (t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$createSuperFocus_120.ReturnStatement._$lodashDebounce_42", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n = _$getActiveOverlayEl_121(t, r), i = n.contains(document.activeElement);
      if (!i || !e) {
        var o = n.querySelector("[data-uppy-super-focusable]");
        if (!i || o) if (o) (o.focus({
          preventScroll: !0
        }), e = !0); else {
          var s = n.querySelector(_$FOCUSABLE_ELEMENTS_197);
          (s && s.focus({
            preventScroll: !0
          }), e = !1);
        }
      }
            SRTlib.send("]},");

    }, 260);
        SRTlib.send("]},");

  };
  function areInputsEqual(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (e.length !== t.length) {
            SRTlib.send("]},");

      return !1;
    }
    for (var r = 0; r < e.length; r++) if (e[r] !== t[r]) {
            SRTlib.send("]},");

      return !1;
    }
        SRTlib.send("]},");

    return !0;
        SRTlib.send("]},");

  }
  var _$memoizeOneCjs_45 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$memoizeOneCjs_45", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r;
    void 0 === t && (t = areInputsEqual);
    var n, i = [], o = !1;
        SRTlib.send("]},");

    return function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$memoizeOneCjs_45.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      for (var s = [], a = 0; a < arguments.length; a++) s[a] = arguments[a];
            SRTlib.send("]},");

      return o && r === this && t(s, i) ? n : (n = e.apply(this, s), o = !0, r = this, i = s, n);
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  }, _$package_127 = {
    version: "1.9.0"
  }, ___class_118, ___temp_118;
  function ___extends_118() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_118 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply18", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  function ___assertThisInitialized_118(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_118 = _$lib_97.Plugin, ResizeObserver = _$ResizeObserver_55.default || _$ResizeObserver_55, defaultPickerIcon = _$icons_117.defaultPickerIcon, memoize = _$memoizeOneCjs_45.default || _$memoizeOneCjs_45, TAB_KEY = 9, ESC_KEY = 27;
  function createPromise() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = {};
        SRTlib.send("]},");

    return (e.promise = new Promise(function (t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.e.promise", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (e.resolve = t, e.reject = r);
            SRTlib.send("]},");

    }), e);
        SRTlib.send("]},");

  }
  var _$lib_118 = (___temp_118 = ___class_118 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_118", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
      ((n = e.call(this, t, r) || this).setOptions = function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "setOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e.prototype.setOptions.call(___assertThisInitialized_118(n), t), n.i18nInit());
                SRTlib.send("]},");

      }, n.i18nInit = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.i18nInit", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (n.translator = new _$Translator_200([n.defaultLocale, n.uppy.locale, n.opts.locale]), n.i18n = n.translator.translate.bind(n.translator), n.i18nArray = n.translator.translateArray.bind(n.translator), n.setPluginState());
                SRTlib.send("]},");

      }, n.removeTarget = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.removeTarget", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = n.getPluginState().targets.filter(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.removeTarget.t.targets.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return t.id !== e.id;
                    SRTlib.send("]},");

        });
        n.setPluginState({
          targets: t
        });
                SRTlib.send("]},");

      }, n.addTarget = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.addTarget", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = e.id || e.constructor.name, r = e.title || t, i = e.type;
        if ("acquirer" === i || "progressindicator" === i || "presenter" === i) {
          var o = {
            id: t,
            name: r,
            type: i
          }, s = n.getPluginState().targets.slice();
                    SRTlib.send("]},");

          return (s.push(o), n.setPluginState({
            targets: s
          }), n.el);
        }
        n.uppy.log("Dashboard: Modal can only be used by plugins of types: acquirer, progressindicator, presenter", "error");
                SRTlib.send("]},");

      }, n.hideAllPanels = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.hideAllPanels", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = {
          activePickerPanel: !1,
          showAddFilesPanel: !1,
          activeOverlayType: null
        }, t = n.getPluginState();
        t.activePickerPanel === e.activePickerPanel && t.showAddFilesPanel === e.showAddFilesPanel && t.activeOverlayType === e.activeOverlayType || n.setPluginState(e);
                SRTlib.send("]},");

      }, n.showPanel = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.showPanel", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = n.getPluginState().targets.filter(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.showPanel.t.targets.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return "acquirer" === t.type && t.id === e;
                    SRTlib.send("]},");

        })[0];
        n.setPluginState({
          activePickerPanel: t,
          activeOverlayType: "PickerPanel"
        });
                SRTlib.send("]},");

      }, n.openModal = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.openModal", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = createPromise(), t = e.promise, r = e.resolve;
                SRTlib.send("]},");

        return (n.savedScrollPosition = window.pageYOffset, n.savedActiveElement = document.activeElement, n.opts.disablePageScrollWhenModalOpen && document.body.classList.add("uppy-Dashboard-isFixed"), n.opts.animateOpenClose && n.getPluginState().isClosing ? n.el.addEventListener("animationend", function e() {
                    SRTlib.send(`{ "anonymous": true, "function": "n.openModal.ReturnStatement.n.el.addEventListener.e", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (n.setPluginState({
            isHidden: !1
          }), n.el.removeEventListener("animationend", e, !1), r());
                    SRTlib.send("]},");

        }, !1) : (n.setPluginState({
          isHidden: !1
        }), r()), n.opts.browserBackButtonClose && n.updateBrowserHistory(), document.addEventListener("keydown", n.handleKeyDownInModal), n.uppy.emit("dashboard:modal-open"), t);
                SRTlib.send("]},");

      }, n.closeModal = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.closeModal", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        void 0 === e && (e = {});
        var t = e.manualClose, r = void 0 === t || t, i = n.getPluginState(), o = i.isHidden, s = i.isClosing;
        if (!o && !s) {
          var a = createPromise(), u = a.promise, l = a.resolve;
                    SRTlib.send("]},");

          return (n.opts.disablePageScrollWhenModalOpen && document.body.classList.remove("uppy-Dashboard-isFixed"), n.opts.animateOpenClose ? (n.setPluginState({
            isClosing: !0
          }), n.el.addEventListener("animationend", function e() {
                        SRTlib.send(`{ "anonymous": true, "function": "n.closeModal.ReturnStatement.n.el.addEventListener.e", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            (n.setPluginState({
              isHidden: !0,
              isClosing: !1
            }), n.superFocus.cancel(), n.savedActiveElement.focus(), n.el.removeEventListener("animationend", e, !1), l());
                        SRTlib.send("]},");

          }, !1)) : (n.setPluginState({
            isHidden: !0
          }), n.superFocus.cancel(), n.savedActiveElement.focus(), l()), document.removeEventListener("keydown", n.handleKeyDownInModal), r && n.opts.browserBackButtonClose && history.state && history.state[n.modalName] && history.go(-1), n.uppy.emit("dashboard:modal-closed"), u);
        }
                SRTlib.send("]},");

      }, n.isModalOpen = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.isModalOpen", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return !n.getPluginState().isHidden || !1;
                SRTlib.send("]},");

      }, n.requestCloseModal = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.requestCloseModal", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return n.opts.onRequestCloseModal ? n.opts.onRequestCloseModal() : n.closeModal();
                SRTlib.send("]},");

      }, n.setDarkModeCapability = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.setDarkModeCapability", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = n.uppy.getState().capabilities;
        n.uppy.setState({
          capabilities: ___extends_118({}, t, {
            darkMode: e
          })
        });
                SRTlib.send("]},");

      }, n.handleSystemDarkModeChange = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleSystemDarkModeChange", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = e.matches;
        (n.uppy.log("[Dashboard] Dark mode is " + (t ? "on" : "off")), n.setDarkModeCapability(t));
                SRTlib.send("]},");

      }, n.toggleFileCard = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.toggleFileCard", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e ? n.uppy.emit("dashboard:file-edit-start") : n.uppy.emit("dashboard:file-edit-complete"), n.setPluginState({
          fileCardFor: e || null,
          activeOverlayType: e ? "FileCard" : null
        }));
                SRTlib.send("]},");

      }, n.toggleAddFilesPanel = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.toggleAddFilesPanel", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n.setPluginState({
          showAddFilesPanel: e,
          activeOverlayType: e ? "AddFiles" : null
        });
                SRTlib.send("]},");

      }, n.addFiles = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.addFiles", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = e.map(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.addFiles.t", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return {
            source: n.id,
            name: e.name,
            type: e.type,
            data: e,
            meta: {
              relativePath: e.relativePath || null
            }
          };
                    SRTlib.send("]},");

        });
        try {
          n.uppy.addFiles(t);
        } catch (err) {
          n.uppy.log(err);
        }
                SRTlib.send("]},");

      }, n.startListeningToResize = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.startListeningToResize", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (n.resizeObserver = new ResizeObserver(function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.startListeningToResize.n.resizeObserver", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var r = e[0].contentRect, i = r.width, o = r.height;
          (n.uppy.log("[Dashboard] resized: " + i + " / " + o, "debug"), n.setPluginState({
            containerWidth: i,
            containerHeight: o,
            areInsidesReadyToBeVisible: !0
          }));
                    SRTlib.send("]},");

        }), n.resizeObserver.observe(n.el.querySelector(".uppy-Dashboard-inner")), n.makeDashboardInsidesVisibleAnywayTimeout = setTimeout(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "n.startListeningToResize.n.makeDashboardInsidesVisibleAnywayTimeout.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e = n.getPluginState(), t = !n.opts.inline && e.isHidden;
          e.areInsidesReadyToBeVisible || t || (n.uppy.log("[Dashboard] resize event didn't fire on time: defaulted to mobile layout", "debug"), n.setPluginState({
            areInsidesReadyToBeVisible: !0
          }));
                    SRTlib.send("]},");

        }, 1e3));
                SRTlib.send("]},");

      }, n.stopListeningToResize = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.stopListeningToResize", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (n.resizeObserver.disconnect(), clearTimeout(n.makeDashboardInsidesVisibleAnywayTimeout));
                SRTlib.send("]},");

      }, n.recordIfFocusedOnUppyRecently = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.recordIfFocusedOnUppyRecently", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n.el.contains(e.target) ? n.ifFocusedOnUppyRecently = !0 : (n.ifFocusedOnUppyRecently = !1, n.superFocus.cancel());
                SRTlib.send("]},");

      }, n.updateBrowserHistory = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.updateBrowserHistory", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e;
        (history.state && history.state[n.modalName] || history.pushState(___extends_118({}, history.state, ((e = {})[n.modalName] = !0, e)), ""), window.addEventListener("popstate", n.handlePopState, !1));
                SRTlib.send("]},");

      }, n.handlePopState = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handlePopState", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (!n.isModalOpen() || e.state && e.state[n.modalName] || n.closeModal({
          manualClose: !1
        }), !n.isModalOpen() && e.state && e.state[n.modalName] && history.go(-1));
                SRTlib.send("]},");

      }, n.handleKeyDownInModal = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleKeyDownInModal", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e.keyCode === ESC_KEY && n.requestCloseModal(e), e.keyCode === TAB_KEY && _$trapFocus_124.forModal(e, n.getPluginState().activeOverlayType, n.el));
                SRTlib.send("]},");

      }, n.handleClickOutside = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleClickOutside", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        n.opts.closeModalOnClickOutside && n.requestCloseModal();
                SRTlib.send("]},");

      }, n.handlePaste = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handlePaste", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n.uppy.iteratePlugins(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.handlePaste.n.uppy.iteratePlugins", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          "acquirer" === t.type && t.handleRootPaste && t.handleRootPaste(e);
                    SRTlib.send("]},");

        });
        var t = _$toArray_229(e.clipboardData.files);
        n.addFiles(t);
                SRTlib.send("]},");

      }, n.handleInputChange = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleInputChange", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.preventDefault();
        var t = _$toArray_229(e.target.files);
        n.addFiles(t);
                SRTlib.send("]},");

      }, n.handleDragOver = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleDragOver", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e.preventDefault(), e.stopPropagation(), e.dataTransfer.dropEffect = "copy", clearTimeout(n.removeDragOverClassTimeout), n.setPluginState({
          isDraggingOver: !0
        }));
                SRTlib.send("]},");

      }, n.handleDragLeave = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleDragLeave", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e.preventDefault(), e.stopPropagation(), clearTimeout(n.removeDragOverClassTimeout), n.removeDragOverClassTimeout = setTimeout(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "n.handleDragLeave.n.removeDragOverClassTimeout.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          n.setPluginState({
            isDraggingOver: !1
          });
                    SRTlib.send("]},");

        }, 50));
                SRTlib.send("]},");

      }, n.handleDrop = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleDrop", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (e.preventDefault(), e.stopPropagation(), clearTimeout(n.removeDragOverClassTimeout), n.setPluginState({
          isDraggingOver: !1
        }), n.uppy.iteratePlugins(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.handleDrop.n.uppy.iteratePlugins", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          "acquirer" === t.type && t.handleRootDrop && t.handleRootDrop(e);
                    SRTlib.send("]},");

        }));
        var r = !1;
        _$getDroppedFiles_208(e.dataTransfer, {
          logDropError: function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "n.handleDrop.then._$getDroppedFiles_208.logDropError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            (n.uppy.log(e, "error"), r || (n.uppy.info(e.message, "error"), r = !0));
                        SRTlib.send("]},");

          }
        }).then(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.handleDrop.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e.length > 0 && (n.uppy.log("[Dashboard] Files were dropped"), n.addFiles(e));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }, n.handleRequestThumbnail = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleRequestThumbnail", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n.opts.waitForThumbnailsBeforeUpload || n.uppy.emit("thumbnail:request", e);
                SRTlib.send("]},");

      }, n.handleCancelThumbnail = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleCancelThumbnail", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n.opts.waitForThumbnailsBeforeUpload || n.uppy.emit("thumbnail:cancel", e);
                SRTlib.send("]},");

      }, n.handleKeyDownInInline = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleKeyDownInInline", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.keyCode === TAB_KEY && _$trapFocus_124.forInline(e, n.getPluginState().activeOverlayType, n.el);
                SRTlib.send("]},");

      }, n.handlePasteOnBody = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handlePasteOnBody", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n.el.contains(document.activeElement) && n.handlePaste(e);
                SRTlib.send("]},");

      }, n.handleComplete = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.handleComplete", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = e.failed;
        (e.uploadID, n.opts.closeAfterFinish && 0 === t.length && n.requestCloseModal());
                SRTlib.send("]},");

      }, n.initEvents = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.initEvents2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        if (n.opts.trigger && !n.opts.inline) {
          var e = _$findAllDOMElements_204(n.opts.trigger);
          e ? e.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "n.initEvents", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return e.addEventListener("click", n.openModal);
                        SRTlib.send("]},");

          }) : n.uppy.log("Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options, unless you are planning to call `dashboard.openModal()` method yourself", "warning");
        }
        (n.startListeningToResize(), document.addEventListener("paste", n.handlePasteOnBody), n.uppy.on("plugin-remove", n.removeTarget), n.uppy.on("file-added", n.hideAllPanels), n.uppy.on("dashboard:modal-closed", n.hideAllPanels), n.uppy.on("complete", n.handleComplete), document.addEventListener("focus", n.recordIfFocusedOnUppyRecently, !0), document.addEventListener("click", n.recordIfFocusedOnUppyRecently, !0), n.opts.inline && n.el.addEventListener("keydown", n.handleKeyDownInInline));
                SRTlib.send("]},");

      }, n.removeEvents = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.removeEvents2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = _$findAllDOMElements_204(n.opts.trigger);
        (!n.opts.inline && e && e.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.removeEvents", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return e.removeEventListener("click", n.openModal);
                    SRTlib.send("]},");

        }), n.stopListeningToResize(), document.removeEventListener("paste", n.handlePasteOnBody), window.removeEventListener("popstate", n.handlePopState, !1), n.uppy.off("plugin-remove", n.removeTarget), n.uppy.off("file-added", n.hideAllPanels), n.uppy.off("dashboard:modal-closed", n.hideAllPanels), n.uppy.off("complete", n.handleComplete), document.removeEventListener("focus", n.recordIfFocusedOnUppyRecently), document.removeEventListener("click", n.recordIfFocusedOnUppyRecently), n.opts.inline && n.el.removeEventListener("keydown", n.handleKeyDownInInline));
                SRTlib.send("]},");

      }, n.superFocusOnEachUpdate = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.superFocusOnEachUpdate", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = n.el.contains(document.activeElement), t = document.activeElement === document.body || null === document.activeElement, r = n.uppy.getState().info.isHidden, i = !n.opts.inline;
        r && (i || e || t && n.ifFocusedOnUppyRecently) ? n.superFocus(n.el, n.getPluginState().activeOverlayType) : n.superFocus.cancel();
                SRTlib.send("]},");

      }, n.afterUpdate = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.afterUpdate", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        n.superFocusOnEachUpdate();
                SRTlib.send("]},");

      }, n.cancelUpload = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.cancelUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n.uppy.removeFile(e);
                SRTlib.send("]},");

      }, n.saveFileCard = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "n.saveFileCard", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (n.uppy.setFileMeta(t, e), n.toggleFileCard());
                SRTlib.send("]},");

      }, n._attachRenderFunctionToTarget = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n._attachRenderFunctionToTarget", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = n.uppy.getPlugin(e.id);
                SRTlib.send("]},");

        return ___extends_118({}, e, {
          icon: t.icon || n.opts.defaultPickerIcon,
          render: t.render
        });
                SRTlib.send("]},");

      }, n._isTargetSupported = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n._isTargetSupported", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = n.uppy.getPlugin(e.id);
                SRTlib.send("]},");

        return "function" != typeof t.isSupported || t.isSupported();
                SRTlib.send("]},");

      }, n._getAcquirers = memoize(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n._getAcquirers.memoize", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n._getAcquirers.memoize.ReturnStatement.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return "acquirer" === e.type && n._isTargetSupported(e);
                    SRTlib.send("]},");

        }).map(n._attachRenderFunctionToTarget);
                SRTlib.send("]},");

      }), n._getProgressIndicators = memoize(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n._getProgressIndicators.memoize", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n._getProgressIndicators.memoize.ReturnStatement.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return "progressindicator" === e.type;
                    SRTlib.send("]},");

        }).map(n._attachRenderFunctionToTarget);
                SRTlib.send("]},");

      }), n.render = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "n.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t, r = n.getPluginState(), i = e.files, o = e.capabilities, s = e.allowNewUpload, a = Object.keys(i).filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.render.a.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return !i[e].progress.uploadStarted;
                    SRTlib.send("]},");

        }), u = Object.keys(i).filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.render.u.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return i[e].progress.uploadStarted;
                    SRTlib.send("]},");

        }), l = Object.keys(i).filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.render.l.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return i[e].isPaused;
                    SRTlib.send("]},");

        }), c = Object.keys(i).filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.render.c.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return i[e].progress.uploadComplete;
                    SRTlib.send("]},");

        }), p = Object.keys(i).filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.render.p.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return i[e].error;
                    SRTlib.send("]},");

        }), h = Object.keys(i).filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.render.h.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return !i[e].progress.uploadComplete && i[e].progress.uploadStarted;
                    SRTlib.send("]},");

        }), d = h.filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.render.d", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return !i[e].isPaused;
                    SRTlib.send("]},");

        }), f = Object.keys(i).filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.render.f.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return i[e].progress.preprocess || i[e].progress.postprocess;
                    SRTlib.send("]},");

        }), _ = u.length > 0, g = 100 === e.totalProgress && c.length === Object.keys(i).length && 0 === f.length, y = _ && p.length === u.length, m = 0 !== h.length && l.length === h.length, v = n._getAcquirers(r.targets), b = n._getProgressIndicators(r.targets);
                SRTlib.send("]},");

        return (t = "auto" === n.opts.theme ? o.darkMode ? "dark" : "light" : n.opts.theme, _$Dashboard_104({
          state: e,
          isHidden: r.isHidden,
          files: i,
          newFiles: a,
          uploadStartedFiles: u,
          completeFiles: c,
          erroredFiles: p,
          inProgressFiles: h,
          inProgressNotPausedFiles: d,
          processingFiles: f,
          isUploadStarted: _,
          isAllComplete: g,
          isAllErrored: y,
          isAllPaused: m,
          totalFileCount: Object.keys(i).length,
          totalProgress: e.totalProgress,
          allowNewUpload: s,
          acquirers: v,
          theme: t,
          activePickerPanel: r.activePickerPanel,
          animateOpenClose: n.opts.animateOpenClose,
          isClosing: r.isClosing,
          getPlugin: n.uppy.getPlugin,
          progressindicators: b,
          autoProceed: n.uppy.opts.autoProceed,
          id: n.id,
          closeModal: n.requestCloseModal,
          handleClickOutside: n.handleClickOutside,
          handleInputChange: n.handleInputChange,
          handlePaste: n.handlePaste,
          inline: n.opts.inline,
          showPanel: n.showPanel,
          hideAllPanels: n.hideAllPanels,
          log: n.uppy.log,
          i18n: n.i18n,
          i18nArray: n.i18nArray,
          removeFile: n.uppy.removeFile,
          info: n.uppy.info,
          note: n.opts.note,
          metaFields: r.metaFields,
          resumableUploads: o.resumableUploads || !1,
          individualCancellation: o.individualCancellation,
          isMobileDevice: o.isMobileDevice,
          pauseUpload: n.uppy.pauseResume,
          retryUpload: n.uppy.retryUpload,
          cancelUpload: n.cancelUpload,
          cancelAll: n.uppy.cancelAll,
          fileCardFor: r.fileCardFor,
          toggleFileCard: n.toggleFileCard,
          toggleAddFilesPanel: n.toggleAddFilesPanel,
          showAddFilesPanel: r.showAddFilesPanel,
          saveFileCard: n.saveFileCard,
          width: n.opts.width,
          height: n.opts.height,
          showLinkToFileUploadResult: n.opts.showLinkToFileUploadResult,
          proudlyDisplayPoweredByUppy: n.opts.proudlyDisplayPoweredByUppy,
          hideCancelButton: n.opts.hideCancelButton,
          hideRetryButton: n.opts.hideRetryButton,
          hidePauseResumeCancelButtons: n.opts.hidePauseResumeCancelButton,
          showRemoveButtonAfterComplete: n.opts.showRemoveButtonAfterComplete,
          containerWidth: r.containerWidth,
          containerHeight: r.containerHeight,
          areInsidesReadyToBeVisible: r.areInsidesReadyToBeVisible,
          isTargetDOMEl: n.isTargetDOMEl,
          parentElement: n.el,
          allowedFileTypes: n.uppy.opts.restrictions.allowedFileTypes,
          maxNumberOfFiles: n.uppy.opts.restrictions.maxNumberOfFiles,
          showSelectedFiles: n.opts.showSelectedFiles,
          handleRequestThumbnail: n.handleRequestThumbnail,
          handleCancelThumbnail: n.handleCancelThumbnail,
          isDraggingOver: r.isDraggingOver,
          handleDragOver: n.handleDragOver,
          handleDragLeave: n.handleDragLeave,
          handleDrop: n.handleDrop
        }));
                SRTlib.send("]},");

      }, n.discoverProviderPlugins = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.discoverProviderPlugins", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        n.uppy.iteratePlugins(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.discoverProviderPlugins.n.uppy.iteratePlugins", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e && !e.target && e.opts && e.opts.target === n.constructor && n.addTarget(e);
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }, n.install = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        n.setPluginState({
          isHidden: !0,
          fileCardFor: null,
          activeOverlayType: null,
          showAddFilesPanel: !1,
          activePickerPanel: !1,
          metaFields: n.opts.metaFields,
          targets: [],
          areInsidesReadyToBeVisible: !1,
          isDraggingOver: !1
        });
        var e = n.opts, t = e.inline, r = e.closeAfterFinish;
        if (t && r) throw new Error("[Dashboard] `closeAfterFinish: true` cannot be used on an inline Dashboard, because an inline Dashboard cannot be closed at all. Either set `inline: false`, or disable the `closeAfterFinish` option.");
        n.uppy.opts.allowMultipleUploads && r && n.uppy.log("[Dashboard] When using `closeAfterFinish`, we recommended setting the `allowMultipleUploads` option to `false` in the Uppy constructor. See https://uppy.io/docs/uppy/#allowMultipleUploads-true", "warning");
        var i = n.opts.target;
        (i && n.mount(i, ___assertThisInitialized_118(n)), (n.opts.plugins || []).forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.install.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = n.uppy.getPlugin(e);
          t && t.mount(___assertThisInitialized_118(n), t);
                    SRTlib.send("]},");

        }), n.opts.disableStatusBar || n.uppy.use(_$lib_174, {
          id: n.id + ":StatusBar",
          target: ___assertThisInitialized_118(n),
          hideUploadButton: n.opts.hideUploadButton,
          hideRetryButton: n.opts.hideRetryButton,
          hidePauseResumeButton: n.opts.hidePauseResumeButton,
          hideCancelButton: n.opts.hideCancelButton,
          showProgressDetails: n.opts.showProgressDetails,
          hideAfterFinish: n.opts.hideProgressAfterFinish,
          locale: n.opts.locale
        }), n.opts.disableInformer || n.uppy.use(_$lib_137, {
          id: n.id + ":Informer",
          target: ___assertThisInitialized_118(n)
        }), n.opts.disableThumbnailGenerator || n.uppy.use(_$lib_179, {
          id: n.id + ":ThumbnailGenerator",
          thumbnailWidth: n.opts.thumbnailWidth,
          waitForThumbnailsBeforeUpload: n.opts.waitForThumbnailsBeforeUpload,
          lazy: !n.opts.waitForThumbnailsBeforeUpload
        }), n.darkModeMediaQuery = "undefined" != typeof window && window.matchMedia ? window.matchMedia("(prefers-color-scheme: dark)") : null);
        var o = !!n.darkModeMediaQuery && n.darkModeMediaQuery.matches;
        (n.uppy.log("[Dashboard] Dark mode is " + (o ? "on" : "off")), n.setDarkModeCapability(o), "auto" === n.opts.theme && n.darkModeMediaQuery.addListener(n.handleSystemDarkModeChange), n.discoverProviderPlugins(), n.initEvents());
                SRTlib.send("]},");

      }, n.uninstall = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        if (!n.opts.disableInformer) {
          var e = n.uppy.getPlugin(n.id + ":Informer");
          e && n.uppy.removePlugin(e);
        }
        if (!n.opts.disableStatusBar) {
          var t = n.uppy.getPlugin(n.id + ":StatusBar");
          t && n.uppy.removePlugin(t);
        }
        if (!n.opts.disableThumbnailGenerator) {
          var r = n.uppy.getPlugin(n.id + ":ThumbnailGenerator");
          r && n.uppy.removePlugin(r);
        }
        ((n.opts.plugins || []).forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "n.uninstall.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var t = n.uppy.getPlugin(e);
          t && t.unmount();
                    SRTlib.send("]},");

        }), "auto" === n.opts.theme && n.darkModeMediaQuery.removeListener(n.handleSystemDarkModeChange), n.unmount(), n.removeEvents());
                SRTlib.send("]},");

      }, n.id = n.opts.id || "Dashboard", n.title = "Dashboard", n.type = "orchestrator", n.modalName = "uppy-Dashboard-" + _$cuid_13(), n.defaultLocale = {
        strings: {
          closeModal: "Close Modal",
          importFrom: "Import from %{name}",
          addingMoreFiles: "Adding more files",
          addMoreFiles: "Add more files",
          dashboardWindowTitle: "File Uploader Window (Press escape to close)",
          dashboardTitle: "File Uploader",
          copyLinkToClipboardSuccess: "Link copied to clipboard",
          copyLinkToClipboardFallback: "Copy the URL below",
          copyLink: "Copy link",
          fileSource: "File source: %{name}",
          done: "Done",
          back: "Back",
          addMore: "Add more",
          removeFile: "Remove file",
          editFile: "Edit file",
          editing: "Editing %{file}",
          finishEditingFile: "Finish editing file",
          saveChanges: "Save changes",
          cancel: "Cancel",
          myDevice: "My Device",
          dropPaste: "Drop files here, paste or %{browse}",
          dropPasteImport: "Drop files here, paste, %{browse} or\xa0import\xa0from:",
          dropHint: "Drop your files here",
          browse: "browse",
          uploadComplete: "Upload complete",
          uploadPaused: "Upload paused",
          resumeUpload: "Resume upload",
          pauseUpload: "Pause upload",
          retryUpload: "Retry upload",
          cancelUpload: "Cancel upload",
          xFilesSelected: {
            0: "%{smart_count} file selected",
            1: "%{smart_count} files selected"
          },
          uploadingXFiles: {
            0: "Uploading %{smart_count} file",
            1: "Uploading %{smart_count} files"
          },
          processingXFiles: {
            0: "Processing %{smart_count} file",
            1: "Processing %{smart_count} files"
          },
          poweredBy2: "%{backwardsCompat} %{uppy}",
          poweredBy: "Powered by"
        }
      });
      var i = {
        target: "body",
        metaFields: [],
        trigger: "#uppy-select-files",
        inline: !1,
        width: 750,
        height: 550,
        thumbnailWidth: 280,
        waitForThumbnailsBeforeUpload: !1,
        defaultPickerIcon: defaultPickerIcon,
        showLinkToFileUploadResult: !0,
        showProgressDetails: !1,
        hideUploadButton: !1,
        hideRetryButton: !1,
        hidePauseResumeCancelButtons: !1,
        hideProgressAfterFinish: !1,
        note: null,
        closeModalOnClickOutside: !1,
        closeAfterFinish: !1,
        disableStatusBar: !1,
        disableInformer: !1,
        disableThumbnailGenerator: !1,
        disablePageScrollWhenModalOpen: !0,
        animateOpenClose: !0,
        proudlyDisplayPoweredByUppy: !0,
        onRequestCloseModal: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "i.onRequestCloseModal", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return n.closeModal();
                    SRTlib.send("]},");

        },
        showSelectedFiles: !0,
        showRemoveButtonAfterComplete: !1,
        browserBackButtonClose: !1,
        theme: "light"
      };
            SRTlib.send("]},");

      return (n.opts = ___extends_118({}, i, {}, r), n.i18nInit(), n.superFocus = _$createSuperFocus_120(), n.ifFocusedOnUppyRecently = !1, n.makeDashboardInsidesVisibleAnywayTimeout = null, n.removeDragOverClassTimeout = null, n);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r, n);
        SRTlib.send("]},");

  })(__Plugin_118), ___class_118.VERSION = _$package_127.version, ___temp_118);
  function ___extends_160() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_160 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply19", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var dashboardOptionNames = ["metaFields", "width", "height", "thumbnailWidth", "showLinkToFileUploadResult", "showProgressDetails", "hideRetryButton", "hidePauseResumeCancelButtons", "hideUploadButton", "hideProgressAfterFinish", "note", "disableStatusBar", "disableInformer", "disableThumbnailGenerator", "showSelectedFiles", "proudlyDisplayPoweredByUppy", "theme"], modalDashboardOptionNames = ["trigger", "closeModalOnClickOutside", "closeAfterFinish", "disablePageScrollWhenModalOpen", "animateOpenClose", "onRequestCloseModal", "browserBackButtonClose"], _$addDashboardPlugin_160 = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$addDashboardPlugin_1603", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    var n = {};
    (dashboardOptionNames.forEach(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$addDashboardPlugin_160", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      _$hasProperty_219(t, e) && (n[e] = t[e]);
            SRTlib.send("]},");

    }), (null == r.inline ? n.inline : r.inline) || modalDashboardOptionNames.forEach(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$addDashboardPlugin_1602", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      _$hasProperty_219(t, e) && (n[e] = t[e]);
            SRTlib.send("]},");

    }), e.use(_$lib_118, ___extends_160({}, n, {}, r)));
        SRTlib.send("]},");

  }, _$error_82 = {};
  Object.defineProperty(_$error_82, "__esModule", {
    value: !0
  });
  var DetailedError = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "DetailedError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    function t(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
      !(function (e, r) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey29", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                SRTlib.send("]},");

      })(this);
      var i = (function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "i", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                SRTlib.send("]},");

        return !t || "object" != typeof t && "function" != typeof t ? e : t;
                SRTlib.send("]},");

      })(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e.message));
      (i.originalRequest = n, i.causingError = r);
      var o = e.message;
            SRTlib.send("]},");

      return (null != r && (o += ", caused by " + r.toString()), null != n && (o += ", originated from request (response code: " + n.status + ", response text: " + n.responseText + ")"), i.message = o, i);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return ((function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "DetailedError.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
      (e.prototype = Object.create(t && t.prototype, {
        constructor: {
          value: e,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t));
            SRTlib.send("]},");

    })(t, Error), t);
        SRTlib.send("]},");

  })();
  _$error_82.default = DetailedError;
  var hasOwn = Object.prototype.hasOwnProperty, toStr = Object.prototype.toString, defineProperty = Object.defineProperty, gOPD = Object.getOwnPropertyDescriptor, isArray = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "isArray", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return "function" == typeof Array.isArray ? Array.isArray(e) : "[object Array]" === toStr.call(e);
        SRTlib.send("]},");

  }, isPlainObject = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "isPlainObject", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (!e || "[object Object]" !== toStr.call(e)) {
            SRTlib.send("]},");

      return !1;
    }
    var t, r = hasOwn.call(e, "constructor"), n = e.constructor && e.constructor.prototype && hasOwn.call(e.constructor.prototype, "isPrototypeOf");
    if (e.constructor && !r && !n) {
            SRTlib.send("]},");

      return !1;
    }
    for (t in e) ;
        SRTlib.send("]},");

    return void 0 === t || hasOwn.call(e, t);
        SRTlib.send("]},");

  }, setProperty = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "setProperty", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    defineProperty && "__proto__" === t.name ? defineProperty(e, t.name, {
      enumerable: !0,
      configurable: !0,
      value: t.newValue,
      writable: !0
    }) : e[t.name] = t.newValue;
        SRTlib.send("]},");

  }, getProperty = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "getProperty", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if ("__proto__" === t) {
      if (!hasOwn.call(e, t)) {
                SRTlib.send("]},");

        return;
      }
      if (gOPD) {
                SRTlib.send("]},");

        return gOPD(e, t).value;
      }
    }
        SRTlib.send("]},");

    return e[t];
        SRTlib.send("]},");

  }, _$extend_33 = function e() {
        SRTlib.send(`{ "anonymous": true, "function": "_$extend_33.e", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var t, r, n, i, o, s, a = arguments[0], u = 1, l = arguments.length, c = !1;
    for (("boolean" == typeof a && (c = a, a = arguments[1] || ({}), u = 2), (null == a || "object" != typeof a && "function" != typeof a) && (a = {})); u < l; ++u) if (null != (t = arguments[u])) for (r in t) (n = getProperty(a, r), a !== (i = getProperty(t, r)) && (c && i && (isPlainObject(i) || (o = isArray(i))) ? (o ? (o = !1, s = n && isArray(n) ? n : []) : s = n && isPlainObject(n) ? n : {}, setProperty(a, {
      name: r,
      newValue: e(c, s, i)
    })) : void 0 !== i && setProperty(a, {
      name: r,
      newValue: i
    })));
        SRTlib.send("]},");

    return a;
        SRTlib.send("]},");

  }, _$base64_41 = {
    exports: {}
  };
  ((function (global) {
        SRTlib.send(`{ "anonymous": true, "function": "call19", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    !(function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "call17", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      "object" == typeof _$base64_41.exports ? _$base64_41.exports = t(e) : "function" == typeof define && define.amd ? define(t) : t(e);
            SRTlib.send("]},");

    })("undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== global ? global : this, function (global) {
            SRTlib.send(`{ "anonymous": true, "function": "call18", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      "use strict";
      global = global || ({});
      var _Base64 = global.Base64, version = "2.5.2", buffer;
      if (_$base64_41.exports) try {
        buffer = eval("require('buffer').Buffer");
      } catch (err) {
        buffer = void 0;
      }
      var b64chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", b64tab = (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.b64tab", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var t = {}, r = 0, n = e.length; r < n; r++) t[e.charAt(r)] = r;
                SRTlib.send("]},");

        return t;
                SRTlib.send("]},");

      })(b64chars), fromCharCode = String.fromCharCode, cb_utob = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.cb_utob", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e.length < 2) {
                    SRTlib.send("]},");

          return (t = e.charCodeAt(0)) < 128 ? e : t < 2048 ? fromCharCode(192 | t >>> 6) + fromCharCode(128 | 63 & t) : fromCharCode(224 | t >>> 12 & 15) + fromCharCode(128 | t >>> 6 & 63) + fromCharCode(128 | 63 & t);
        }
        var t = 65536 + 1024 * (e.charCodeAt(0) - 55296) + (e.charCodeAt(1) - 56320);
                SRTlib.send("]},");

        return fromCharCode(240 | t >>> 18 & 7) + fromCharCode(128 | t >>> 12 & 63) + fromCharCode(128 | t >>> 6 & 63) + fromCharCode(128 | 63 & t);
                SRTlib.send("]},");

      }, re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g, utob = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.utob", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.replace(re_utob, cb_utob);
                SRTlib.send("]},");

      }, cb_encode = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.cb_encode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = [0, 2, 1][e.length % 3], r = e.charCodeAt(0) << 16 | (e.length > 1 ? e.charCodeAt(1) : 0) << 8 | (e.length > 2 ? e.charCodeAt(2) : 0);
                SRTlib.send("]},");

        return [b64chars.charAt(r >>> 18), b64chars.charAt(r >>> 12 & 63), t >= 2 ? "=" : b64chars.charAt(r >>> 6 & 63), t >= 1 ? "=" : b64chars.charAt(63 & r)].join("");
                SRTlib.send("]},");

      }, btoa = global.btoa ? function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.btoa", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return global.btoa(e);
                SRTlib.send("]},");

      } : function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.btoa2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.replace(/[\s\S]{1,3}/g, cb_encode);
                SRTlib.send("]},");

      }, _encode = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._encode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return "[object Uint8Array]" === Object.prototype.toString.call(e) ? e.toString("base64") : btoa(utob(String(e)));
                SRTlib.send("]},");

      }, encode = function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.encode", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return t ? _encode(String(e)).replace(/[+\/]/g, function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.encode.ReturnStatement.replace.replace.replace", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return "+" == e ? "-" : "_";
                    SRTlib.send("]},");

        }).replace(/=/g, "") : _encode(e);
                SRTlib.send("]},");

      }, encodeURI = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.encodeURI", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return encode(e, !0);
                SRTlib.send("]},");

      }, re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g, cb_btou = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.cb_btou", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        switch (e.length) {
          case {
                            SRTlib.send("]},");

              return fromCharCode(55296 + (t >>> 10)) + fromCharCode(56320 + (1023 & t));
            }:
            var t = ((7 & e.charCodeAt(0)) << 18 | (63 & e.charCodeAt(1)) << 12 | (63 & e.charCodeAt(2)) << 6 | 63 & e.charCodeAt(3)) - 65536;
            return fromCharCode(55296 + (t >>> 10)) + fromCharCode(56320 + (1023 & t));
          case {
                            SRTlib.send("]},");

              return fromCharCode((15 & e.charCodeAt(0)) << 12 | (63 & e.charCodeAt(1)) << 6 | 63 & e.charCodeAt(2));
            }:
            return fromCharCode((15 & e.charCodeAt(0)) << 12 | (63 & e.charCodeAt(1)) << 6 | 63 & e.charCodeAt(2));
          default:
        }
                SRTlib.send("]},");

      }, btou = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.btou", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.replace(re_btou, cb_btou);
                SRTlib.send("]},");

      }, cb_decode = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.cb_decode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = e.length, r = t % 4, n = (t > 0 ? b64tab[e.charAt(0)] << 18 : 0) | (t > 1 ? b64tab[e.charAt(1)] << 12 : 0) | (t > 2 ? b64tab[e.charAt(2)] << 6 : 0) | (t > 3 ? b64tab[e.charAt(3)] : 0), i = [fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 255), fromCharCode(255 & n)];
                SRTlib.send("]},");

        return (i.length -= [0, 0, 2, 1][r], i.join(""));
                SRTlib.send("]},");

      }, _atob = global.atob ? function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._atob", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return global.atob(e);
                SRTlib.send("]},");

      } : function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._atob2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.replace(/\S{1,4}/g, cb_decode);
                SRTlib.send("]},");

      }, atob = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.atob", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return _atob(String(e).replace(/[^A-Za-z0-9\+\/]/g, ""));
                SRTlib.send("]},");

      }, _decode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._decode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return (e.constructor === buffer.constructor ? e : buffer.from(e, "base64")).toString();
                SRTlib.send("]},");

      } : function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._decode2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return (e.constructor === buffer.constructor ? e : new buffer(e, "base64")).toString();
                SRTlib.send("]},");

      } : function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call._decode3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return btou(_atob(e));
                SRTlib.send("]},");

      }, decode = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.decode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return _decode(String(e).replace(/[-_]/g, function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.decode.ReturnStatement._decode.replace.replace.replace", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return "-" == e ? "+" : "/";
                    SRTlib.send("]},");

        }).replace(/[^A-Za-z0-9\+\/]/g, ""));
                SRTlib.send("]},");

      }, noConflict = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.noConflict", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = global.Base64;
                SRTlib.send("]},");

        return (global.Base64 = _Base64, e);
                SRTlib.send("]},");

      };
      if ((global.Base64 = {
        VERSION: version,
        atob: atob,
        btoa: btoa,
        fromBase64: decode,
        toBase64: encode,
        utob: utob,
        encode: encode,
        encodeURI: encodeURI,
        btou: btou,
        decode: decode,
        noConflict: noConflict,
        __buffer__: buffer
      }, "function" == typeof Object.defineProperty)) {
        var noEnum = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.noEnum", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return {
            value: e,
            enumerable: !1,
            writable: !0,
            configurable: !0
          };
                    SRTlib.send("]},");

        };
        global.Base64.extendString = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "call.global.Base64.extendString", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (Object.defineProperty(String.prototype, "fromBase64", noEnum(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.global.Base64.extendString.noEnum", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return decode(this);
                        SRTlib.send("]},");

          })), Object.defineProperty(String.prototype, "toBase64", noEnum(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "call.global.Base64.extendString.noEnum2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return encode(this, e);
                        SRTlib.send("]},");

          })), Object.defineProperty(String.prototype, "toBase64URI", noEnum(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.global.Base64.extendString.noEnum3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return encode(this, !0);
                        SRTlib.send("]},");

          })));
                    SRTlib.send("]},");

        };
      }
            SRTlib.send("]},");

      return (global.Meteor && (Base64 = global.Base64), _$base64_41.exports ? _$base64_41.exports.Base64 = global.Base64 : "function" == typeof define && define.amd && define([], function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.ReturnStatement.define", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return global.Base64;
                SRTlib.send("]},");

      }), {
        Base64: global.Base64
      });
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}), _$base64_41 = _$base64_41.exports);
  var _$requiresPort_54 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$requiresPort_54", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if ((t = t.split(":")[0], !(e = +e))) {
            SRTlib.send("]},");

      return !1;
    }
    switch (t) {
      case "http":
      case {
                    SRTlib.send("]},");

          return 80 !== e;
        }:
        return 80 !== e;
      case "https":
      case {
                    SRTlib.send("]},");

          return 443 !== e;
        }:
        return 443 !== e;
      case {
                    SRTlib.send("]},");

          return 21 !== e;
        }:
        return 21 !== e;
      case {
                    SRTlib.send("]},");

          return 70 !== e;
        }:
        return 70 !== e;
      case {
                    SRTlib.send("]},");

          return !1;
        }:
        return !1;
    }
        SRTlib.send("]},");

    return 0 !== e;
        SRTlib.send("]},");

  }, _$querystringify_53 = {}, undef, __has_53 = Object.prototype.hasOwnProperty;
  function decode(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    try {
            SRTlib.send("]},");

      return decodeURIComponent(e.replace(/\+/g, " "));
    } catch (t) {
            SRTlib.send("]},");

      return null;
    }
        SRTlib.send("]},");

  }
  (_$querystringify_53.stringify = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$querystringify_53.stringify", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    t = t || "";
    var r, n, i = [];
    for (n in ("string" != typeof t && (t = "?"), e)) if (__has_53.call(e, n)) {
      if (((r = e[n]) || null !== r && r !== undef && !isNaN(r) || (r = ""), n = encodeURIComponent(n), r = encodeURIComponent(r), null === n || null === r)) continue;
      i.push(n + "=" + r);
    }
        SRTlib.send("]},");

    return i.length ? t + i.join("&") : "";
        SRTlib.send("]},");

  }, _$querystringify_53.parse = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$querystringify_53.parse", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    for (var t, r = /([^=?&]+)=?([^&]*)/g, n = {}; t = r.exec(e); ) {
      var i = decode(t[1]), o = decode(t[2]);
      null === i || null === o || (i in n) || (n[i] = o);
    }
        SRTlib.send("]},");

    return n;
        SRTlib.send("]},");

  });
  var _$urlParse_85 = {};
  (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "call20", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    "use strict";
    var t = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//, r = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i, n = new RegExp("^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+");
    function i(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return (e || "").toString().replace(n, "");
            SRTlib.send("]},");

    }
    var o = [["#", "hash"], ["?", "query"], function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "call.o", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.replace("\\", "/");
            SRTlib.send("]},");

    }, ["/", "pathname"], ["@", "auth", 1], [NaN, "host", void 0, 1, 1], [/:(\d+)$/, "port", void 0, 1], [NaN, "hostname", void 0, 1, 1]], s = {
      hash: 1,
      query: 1
    };
    function a(r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var n, i = ("undefined" != typeof window ? window : void 0 !== e ? e : "undefined" != typeof self ? self : {}).location || ({}), o = {}, a = typeof (r = r || i);
      if ("blob:" === r.protocol) o = new l(unescape(r.pathname), {}); else if ("string" === a) for (n in (o = new l(r, {}), s)) delete o[n]; else if ("object" === a) {
        for (n in r) (n in s) || (o[n] = r[n]);
        void 0 === o.slashes && (o.slashes = t.test(r.href));
      }
            SRTlib.send("]},");

      return o;
            SRTlib.send("]},");

    }
    function u(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      e = i(e);
      var t = r.exec(e);
            SRTlib.send("]},");

      return {
        protocol: t[1] ? t[1].toLowerCase() : "",
        slashes: !!t[2],
        rest: t[3]
      };
            SRTlib.send("]},");

    }
    function l(e, t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      if ((e = i(e), !(this instanceof l))) {
                SRTlib.send("]},");

        return new l(e, t, r);
      }
      var n, s, c, p, h, d, f = o.slice(), _ = typeof t, g = this, y = 0;
      for (("object" !== _ && "string" !== _ && (r = t, t = null), r && "function" != typeof r && (r = _$querystringify_53.parse), t = a(t), n = !(s = u(e || "")).protocol && !s.slashes, g.slashes = s.slashes || n && t.slashes, g.protocol = s.protocol || t.protocol || "", e = s.rest, s.slashes || (f[3] = [/(.*)/, "pathname"])); y < f.length; y++) "function" != typeof (p = f[y]) ? (c = p[0], d = p[1], c != c ? g[d] = e : "string" == typeof c ? ~(h = e.indexOf(c)) && ("number" == typeof p[2] ? (g[d] = e.slice(0, h), e = e.slice(h + p[2])) : (g[d] = e.slice(h), e = e.slice(0, h))) : (h = c.exec(e)) && (g[d] = h[1], e = e.slice(0, h.index)), g[d] = g[d] || n && p[3] && t[d] || "", p[4] && (g[d] = g[d].toLowerCase())) : e = p(e);
      (r && (g.query = r(g.query)), n && t.slashes && "/" !== g.pathname.charAt(0) && ("" !== g.pathname || "" !== t.pathname) && (g.pathname = (function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "g.pathname", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if ("" === e) {
                    SRTlib.send("]},");

          return t;
        }
        for (var r = (t || "/").split("/").slice(0, -1).concat(e.split("/")), n = r.length, i = r[n - 1], o = !1, s = 0; n--; ) "." === r[n] ? r.splice(n, 1) : ".." === r[n] ? (r.splice(n, 1), s++) : s && (0 === n && (o = !0), r.splice(n, 1), s--);
                SRTlib.send("]},");

        return (o && r.unshift(""), "." !== i && ".." !== i || r.push(""), r.join("/"));
                SRTlib.send("]},");

      })(g.pathname, t.pathname)), _$requiresPort_54(g.port, g.protocol) || (g.host = g.hostname, g.port = ""), g.username = g.password = "", g.auth && (p = g.auth.split(":"), g.username = p[0] || "", g.password = p[1] || ""), g.origin = g.protocol && g.host && "file:" !== g.protocol ? g.protocol + "//" + g.host : "null", g.href = g.toString());
            SRTlib.send("]},");

    }
    (l.prototype = {
      set: function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "call.l.prototype.set", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n = this;
        switch (e) {
          case "query":
            ("string" == typeof t && t.length && (t = (r || _$querystringify_53.parse)(t)), n[e] = t);
            break;
          case "port":
            (n[e] = t, _$requiresPort_54(t, n.protocol) ? t && (n.host = n.hostname + ":" + t) : (n.host = n.hostname, n[e] = ""));
            break;
          case "hostname":
            (n[e] = t, n.port && (t += ":" + n.port), n.host = t);
            break;
          case "host":
            (n[e] = t, (/:\d+$/).test(t) ? (t = t.split(":"), n.port = t.pop(), n.hostname = t.join(":")) : (n.hostname = t, n.port = ""));
            break;
          case "protocol":
            (n.protocol = t.toLowerCase(), n.slashes = !r);
            break;
          case "pathname":
          case "hash":
            if (t) {
              var i = "pathname" === e ? "/" : "#";
              n[e] = t.charAt(0) !== i ? i + t : t;
            } else n[e] = t;
            break;
          default:
            n[e] = t;
        }
        for (var s = 0; s < o.length; s++) {
          var a = o[s];
          a[4] && (n[a[1]] = n[a[1]].toLowerCase());
        }
                SRTlib.send("]},");

        return (n.origin = n.protocol && n.host && "file:" !== n.protocol ? n.protocol + "//" + n.host : "null", n.href = n.toString(), n);
                SRTlib.send("]},");

      },
      toString: function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "call.l.prototype.toString", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e && "function" == typeof e || (e = _$querystringify_53.stringify);
        var t, r = this, n = r.protocol;
        n && ":" !== n.charAt(n.length - 1) && (n += ":");
        var i = n + (r.slashes ? "//" : "");
                SRTlib.send("]},");

        return (r.username && (i += r.username, r.password && (i += ":" + r.password), i += "@"), i += r.host + r.pathname, (t = "object" == typeof r.query ? e(r.query) : r.query) && (i += "?" !== t.charAt(0) ? "?" + t : t), r.hash && (i += r.hash), i);
                SRTlib.send("]},");

      }
    }, l.extractProtocol = u, l.location = a, l.trimLeft = i, l.qs = _$querystringify_53, _$urlParse_85 = l);
        SRTlib.send("]},");

  }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
  var _$request_78 = {};
  (Object.defineProperty(_$request_78, "__esModule", {
    value: !0
  }), _$request_78.newRequest = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$request_78.newRequest", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return new window.XMLHttpRequest();
        SRTlib.send("]},");

  }, _$request_78.resolveUrl = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$request_78.resolveUrl", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return new _urlParse2.default(t, e).toString();
        SRTlib.send("]},");

  });
  var obj, _urlParse2 = (obj = _$urlParse_85) && obj.__esModule ? obj : {
    default: obj
  }, _$isReactNative_76 = {};
  (Object.defineProperty(_$isReactNative_76, "__esModule", {
    value: !0
  }), _$isReactNative_76.default = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$isReactNative_76.default", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase();
        SRTlib.send("]},");

  });
  var _$uriToBlob_81 = {};
  (Object.defineProperty(_$uriToBlob_81, "__esModule", {
    value: !0
  }), _$uriToBlob_81.default = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$uriToBlob_81.default", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = new XMLHttpRequest();
    (r.responseType = "blob", r.onload = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$uriToBlob_81.default.r.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = r.response;
      t(null, e);
            SRTlib.send("]},");

    }, r.onerror = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$uriToBlob_81.default.r.onerror", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t(e);
            SRTlib.send("]},");

    }, r.open("GET", e), r.send());
        SRTlib.send("]},");

  });
  var _$isCordova_75 = {};
  (Object.defineProperty(_$isCordova_75, "__esModule", {
    value: !0
  }), _$isCordova_75.default = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$isCordova_75.default", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return "undefined" != typeof window && (void 0 !== window.PhoneGap || void 0 !== window.Cordova || void 0 !== window.cordova);
        SRTlib.send("]},");

  });
  var _$readAsByteArray_77 = {};
  (Object.defineProperty(_$readAsByteArray_77, "__esModule", {
    value: !0
  }), _$readAsByteArray_77.default = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$readAsByteArray_77.default", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = new FileReader();
    (r.onload = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$readAsByteArray_77.default.r.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      t(null, new Uint8Array(r.result));
            SRTlib.send("]},");

    }, r.onerror = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$readAsByteArray_77.default.r.onerror", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t(e);
            SRTlib.send("]},");

    }, r.readAsArrayBuffer(e));
        SRTlib.send("]},");

  });
  var _$source_79 = {};
  Object.defineProperty(_$source_79, "__esModule", {
    value: !0
  });
  var _createClass = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "_createClass", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      for (var r = 0; r < t.length; r++) {
        var n = t[r];
        (n.enumerable = n.enumerable || !1, n.configurable = !0, ("value" in n) && (n.writable = !0), Object.defineProperty(e, n.key, n));
      }
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return function (t, r, n) {
            SRTlib.send(`{ "anonymous": true, "function": "_createClass.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            SRTlib.send("]},");

      return (r && e(t.prototype, r), n && e(t, n), t);
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  })();
  _$source_79.getSource = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$source_79.getSource2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    if ((0, _isReactNative2.default)() && e && void 0 !== e.uri) (0, _uriToBlob2.default)(e.uri, function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$source_79.getSource", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (e) {
                SRTlib.send("]},");

        return r(new Error("tus: cannot fetch `file.uri` as Blob, make sure the uri is correct and accessible. " + e));
      }
      r(null, new FileSource(t));
            SRTlib.send("]},");

    }); else {
      if ("function" != typeof e.slice || void 0 === e.size) {
                SRTlib.send("]},");

        return "function" == typeof e.read ? (t = +t, isFinite(t) ? void r(null, new StreamSource(e, t)) : void r(new Error("cannot create source for stream without a finite value for the `chunkSize` option"))) : void r(new Error("source object may only be an instance of File, Blob, or Reader in this environment"));
      }
      r(null, new FileSource(e));
    }
        SRTlib.send("]},");

  };
  var _isReactNative2 = _interopRequireDefault(_$isReactNative_76), _uriToBlob2 = _interopRequireDefault(_$uriToBlob_81), _isCordova2 = _interopRequireDefault(_$isCordova_75), _readAsByteArray2 = _interopRequireDefault(_$readAsByteArray_77);
  function _interopRequireDefault(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e && e.__esModule ? e : {
      default: e
    };
        SRTlib.send("]},");

  }
  function _classCallCheck(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        SRTlib.send("]},");

  }
  var FileSource = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "FileSource", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (_classCallCheck(this, e), this._file = t, this.size = t.size);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (_createClass(e, [{
      key: "slice",
      value: function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "FileSource.ReturnStatement._createClass.value2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        (0, _isCordova2.default)() ? (0, _readAsByteArray2.default)(this._file.slice(e, t), function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "FileSource.ReturnStatement._createClass.value", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          if (e) {
                        SRTlib.send("]},");

            return r(e);
          }
          r(null, t);
                    SRTlib.send("]},");

        }) : r(null, this._file.slice(e, t));
                SRTlib.send("]},");

      }
    }, {
      key: "close",
      value: function () {
                SRTlib.send(`{ "anonymous": true, "function": "FileSource.ReturnStatement._createClass.value3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

      }
    }]), e);
        SRTlib.send("]},");

  })(), StreamSource = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "StreamSource", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (_classCallCheck(this, e), this._chunkSize = r, this._buffer = void 0, this._bufferOffset = 0, this._reader = t, this._done = !1);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (_createClass(e, [{
      key: "slice",
      value: function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "StreamSource.ReturnStatement._createClass.value", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        if (!(e < this._bufferOffset)) {
                    SRTlib.send("]},");

          return this._readUntilEnoughDataOrDone(e, t, r);
        }
        r(new Error("Requested data is before the reader's current offset"));
                SRTlib.send("]},");

      }
    }, {
      key: "_readUntilEnoughDataOrDone",
      value: function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "StreamSource.ReturnStatement._createClass.value2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n = this, i = t <= this._bufferOffset + __len_79(this._buffer);
        if (this._done || i) {
          var o = this._getDataFromBuffer(e, t);
          r(null, o, null == o && this._done);
        } else this._reader.read().then(function (i) {
                    SRTlib.send(`{ "anonymous": true, "function": "StreamSource.ReturnStatement._createClass.value._reader.read.then.catch._reader.read.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var o = i.value;
          (i.done ? n._done = !0 : void 0 === n._buffer ? n._buffer = o : n._buffer = (function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "StreamSource.ReturnStatement._createClass.value._reader.read.then.catch._reader.read.then.n._buffer", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            if (e.concat) {
                            SRTlib.send("]},");

              return e.concat(t);
            }
            if (e instanceof Blob) {
                            SRTlib.send("]},");

              return new Blob([e, t], {
                type: e.type
              });
            }
            if (e.set) {
              var r = new e.constructor(e.length + t.length);
                            SRTlib.send("]},");

              return (r.set(e), r.set(t, e.length), r);
            }
            throw new Error("Unknown data type");
                        SRTlib.send("]},");

          })(n._buffer, o), n._readUntilEnoughDataOrDone(e, t, r));
                    SRTlib.send("]},");

        }).catch(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "StreamSource.ReturnStatement._createClass.value._reader.read.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          r(new Error("Error during read: " + e));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }
    }, {
      key: "_getDataFromBuffer",
      value: function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "StreamSource.ReturnStatement._createClass.value3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e > this._bufferOffset && (this._buffer = this._buffer.slice(e - this._bufferOffset), this._bufferOffset = e);
        var r = 0 === __len_79(this._buffer);
                SRTlib.send("]},");

        return this._done && r ? null : this._buffer.slice(0, t - e);
                SRTlib.send("]},");

      }
    }, {
      key: "close",
      value: function () {
                SRTlib.send(`{ "anonymous": true, "function": "StreamSource.ReturnStatement._createClass.value4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        this._reader.cancel && this._reader.cancel();
                SRTlib.send("]},");

      }
    }]), e);
        SRTlib.send("]},");

  })();
  function __len_79(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return void 0 === e ? 0 : void 0 !== e.size ? e.size : e.length;
        SRTlib.send("]},");

  }
  var _$storage_80 = {};
  Object.defineProperty(_$storage_80, "__esModule", {
    value: !0
  });
  var ___createClass_80 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "___createClass_80", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      for (var r = 0; r < t.length; r++) {
        var n = t[r];
        (n.enumerable = n.enumerable || !1, n.configurable = !0, ("value" in n) && (n.writable = !0), Object.defineProperty(e, n.key, n));
      }
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return function (t, r, n) {
            SRTlib.send(`{ "anonymous": true, "function": "___createClass_80.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            SRTlib.send("]},");

      return (r && e(t.prototype, r), n && e(t, n), t);
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  })();
  _$storage_80.getStorage = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$storage_80.getStorage", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return hasStorage ? new LocalStorage() : null;
        SRTlib.send("]},");

  };
  var hasStorage = !1;
  try {
    hasStorage = ("localStorage" in window);
    var key = "tusSupport";
    localStorage.setItem(key, localStorage.getItem(key));
  } catch (e) {
    if (e.code !== e.SECURITY_ERR && e.code !== e.QUOTA_EXCEEDED_ERR) throw e;
    hasStorage = !1;
  }
  _$storage_80.canStoreURLs = hasStorage;
  var LocalStorage = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "LocalStorage", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      !(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey30", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                SRTlib.send("]},");

      })(this);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (___createClass_80(e, [{
      key: "setItem",
      value: function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "LocalStorage.ReturnStatement.___createClass_80.value", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        r(null, localStorage.setItem(e, t));
                SRTlib.send("]},");

      }
    }, {
      key: "getItem",
      value: function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "LocalStorage.ReturnStatement.___createClass_80.value2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        t(null, localStorage.getItem(e));
                SRTlib.send("]},");

      }
    }, {
      key: "removeItem",
      value: function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "LocalStorage.ReturnStatement.___createClass_80.value3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        t(null, localStorage.removeItem(e));
                SRTlib.send("]},");

      }
    }]), e);
        SRTlib.send("]},");

  })(), _$fingerprint_74 = {};
  (Object.defineProperty(_$fingerprint_74, "__esModule", {
    value: !0
  }), _$fingerprint_74.default = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$fingerprint_74.default", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        SRTlib.send("]},");

    return (0, ___isReactNative2_74.default)() ? r(null, (function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$fingerprint_74.default.ReturnStatement.r", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = e.exif ? (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$fingerprint_74.default.ReturnStatement.r.r", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = 0;
        if (0 === e.length) {
                    SRTlib.send("]},");

          return t;
        }
        for (var r = 0; r < e.length; r++) {
          (t = (t << 5) - t + e.charCodeAt(r), t &= t);
        }
                SRTlib.send("]},");

        return t;
                SRTlib.send("]},");

      })(JSON.stringify(e.exif)) : "noexif";
            SRTlib.send("]},");

      return ["tus-rn", e.name || "noname", e.size || "nosize", r, t.endpoint].join("/");
            SRTlib.send("]},");

    })(e, t)) : r(null, ["tus-br", e.name, e.type, e.size, e.lastModified, t.endpoint].join("-"));
        SRTlib.send("]},");

  });
  var __obj_74, ___isReactNative2_74 = (__obj_74 = _$isReactNative_76) && __obj_74.__esModule ? __obj_74 : {
    default: __obj_74
  }, _$upload_84 = {};
  Object.defineProperty(_$upload_84, "__esModule", {
    value: !0
  });
  var ___createClass_84 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "___createClass_84", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      for (var r = 0; r < t.length; r++) {
        var n = t[r];
        (n.enumerable = n.enumerable || !1, n.configurable = !0, ("value" in n) && (n.writable = !0), Object.defineProperty(e, n.key, n));
      }
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return function (t, r, n) {
            SRTlib.send(`{ "anonymous": true, "function": "___createClass_84.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            SRTlib.send("]},");

      return (r && e(t.prototype, r), n && e(t, n), t);
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  })(), _error2 = ___interopRequireDefault_84(_$error_82), _extend2 = ___interopRequireDefault_84(_$extend_33);
  function ___interopRequireDefault_84(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e && e.__esModule ? e : {
      default: e
    };
        SRTlib.send("]},");

  }
  var defaultOptions = {
    endpoint: null,
    fingerprint: ___interopRequireDefault_84(_$fingerprint_74).default,
    resume: !0,
    onProgress: null,
    onChunkComplete: null,
    onSuccess: null,
    onError: null,
    headers: {},
    chunkSize: 1 / 0,
    withCredentials: !1,
    uploadUrl: null,
    uploadSize: null,
    overridePatchMethod: !1,
    retryDelays: null,
    removeFingerprintOnSuccess: !1,
    uploadLengthDeferred: !1,
    urlStorage: null,
    fileReader: null,
    uploadDataDuringCreation: !1
  }, Upload = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "Upload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (!(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey31", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                SRTlib.send("]},");

      })(this), this.options = (0, _extend2.default)(!0, {}, defaultOptions, r), this._storage = this.options.urlStorage, this.file = t, this.url = null, this._xhr = null, this._fingerprint = null, this._offset = null, this._aborted = !1, this._size = null, this._source = null, this._retryAttempt = 0, this._retryTimeout = null, this._offsetBeforeRetry = 0);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (___createClass_84(e, [{
      key: "start",
      value: function () {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this, t = this.file;
        t ? this.options.endpoint || this.options.uploadUrl ? (this.options.resume && null == this._storage && (this._storage = (0, _$storage_80.getStorage)()), this._source ? this._start(this._source) : (this.options.fileReader || _$source_79.getSource)(t, this.options.chunkSize, function (t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          t ? e._emitError(t) : (e._source = r, e._start(r));
                    SRTlib.send("]},");

        })) : this._emitError(new Error("tus: neither an endpoint or an upload URL is provided")) : this._emitError(new Error("tus: no file or stream to upload provided"));
                SRTlib.send("]},");

      }
    }, {
      key: "_start",
      value: function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = this, r = this.file;
        if (this.options.uploadLengthDeferred) this._size = null; else if (null != this.options.uploadSize) {
          if ((this._size = +this.options.uploadSize, isNaN(this._size))) {
                        SRTlib.send("]},");

            return void this._emitError(new Error("tus: cannot convert `uploadSize` option into a number"));
          }
        } else if ((this._size = e.size, null == this._size)) {
                    SRTlib.send("]},");

          return void this._emitError(new Error("tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option"));
        }
        var n = this.options.retryDelays;
        if (null != n) {
          if ("[object Array]" !== Object.prototype.toString.call(n)) {
                        SRTlib.send("]},");

            return void this._emitError(new Error("tus: the `retryDelays` option must either be an array or null"));
          }
          var i = this.options.onError;
          this.options.onError = function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.options.onError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            (t.options.onError = i, null != t._offset && t._offset > t._offsetBeforeRetry && (t._retryAttempt = 0));
            var r = !0;
            "undefined" != typeof window && ("navigator" in window) && !1 === window.navigator.onLine && (r = !1);
            var o = e.originalRequest ? e.originalRequest.status : 0, s = !inStatusCategory(o, 400) || 409 === o || 423 === o;
            if (t._retryAttempt < n.length && null != e.originalRequest && s && r) {
              var a = n[t._retryAttempt++];
              (t._offsetBeforeRetry = t._offset, t.options.uploadUrl = t.url, t._retryTimeout = setTimeout(function () {
                                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.options.onError.t._retryTimeout.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                t.start();
                                SRTlib.send("]},");

              }, a));
            } else t._emitError(e);
                        SRTlib.send("]},");

          };
        }
        if ((this._aborted = !1, null == this.url)) {
                    SRTlib.send("]},");

          return null != this.options.uploadUrl ? (this.url = this.options.uploadUrl, void this._resumeUpload()) : void (this._hasStorage() ? this.options.fingerprint(r, this.options, function (e, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.ReturnStatement.options.fingerprint", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            e ? t._emitError(e) : (t._fingerprint = r, t._storage.getItem(t._fingerprint, function (e, r) {
                            SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.ReturnStatement.options.fingerprint.t._storage.getItem", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

              e ? t._emitError(e) : null != r ? (t.url = r, t._resumeUpload()) : t._createUpload();
                            SRTlib.send("]},");

            }));
                        SRTlib.send("]},");

          }) : this._createUpload());
        }
        this._resumeUpload();
                SRTlib.send("]},");

      }
    }, {
      key: "abort",
      value: function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var n = this;
        (null !== this._xhr && (this._xhr.abort(), this._source.close()), this._aborted = !0, null != this._retryTimeout && (clearTimeout(this._retryTimeout), this._retryTimeout = null), r = r || (function () {
                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

        }), t ? e.terminate(this.url, this.options, function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value5", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          if (e) {
                        SRTlib.send("]},");

            return r(e, t);
          }
          n._hasStorage() ? n._storage.removeItem(n._fingerprint, r) : r();
                    SRTlib.send("]},");

        }) : r());
                SRTlib.send("]},");

      }
    }, {
      key: "_hasStorage",
      value: function () {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value7", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return this.options.resume && this._storage;
                SRTlib.send("]},");

      }
    }, {
      key: "_emitXhrError",
      value: function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value8", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        this._emitError(new _error2.default(t, r, e));
                SRTlib.send("]},");

      }
    }, {
      key: "_emitError",
      value: function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value9", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if ("function" != typeof this.options.onError) throw e;
        this.options.onError(e);
                SRTlib.send("]},");

      }
    }, {
      key: "_emitSuccess",
      value: function () {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value10", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        "function" == typeof this.options.onSuccess && this.options.onSuccess();
                SRTlib.send("]},");

      }
    }, {
      key: "_emitProgress",
      value: function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value11", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        "function" == typeof this.options.onProgress && this.options.onProgress(e, t);
                SRTlib.send("]},");

      }
    }, {
      key: "_emitChunkComplete",
      value: function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value12", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        "function" == typeof this.options.onChunkComplete && this.options.onChunkComplete(e, t, r);
                SRTlib.send("]},");

      }
    }, {
      key: "_setupXHR",
      value: function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value13", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (this._xhr = e, setupXHR(e, this.options));
                SRTlib.send("]},");

      }
    }, {
      key: "_createUpload",
      value: function () {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value14", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this;
        if (this.options.endpoint) {
          var t = (0, _$request_78.newRequest)();
          (t.open("POST", this.options.endpoint, !0), t.onload = function () {
                        SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.t.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            if (inStatusCategory(t.status, 200)) {
              var r = t.getResponseHeader("Location");
              if (null != r) {
                if ((e.url = (0, _$request_78.resolveUrl)(e.options.endpoint, r), 0 === e._size)) {
                                    SRTlib.send("]},");

                  return (e._emitSuccess(), void e._source.close());
                }
                (e._hasStorage() && e._storage.setItem(e._fingerprint, e.url, function (t) {
                                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.t.onload.e._storage.setItem", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                  t && e._emitError(t);
                                    SRTlib.send("]},");

                }), e.options.uploadDataDuringCreation ? e._handleUploadResponse(t) : (e._offset = 0, e._startUpload()));
              } else e._emitXhrError(t, new Error("tus: invalid or missing Location header"));
            } else e._emitXhrError(t, new Error("tus: unexpected response while creating upload"));
                        SRTlib.send("]},");

          }, t.onerror = function (r) {
                        SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.t.onerror", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            e._emitXhrError(t, new Error("tus: failed to create upload"), r);
                        SRTlib.send("]},");

          }, this._setupXHR(t), this.options.uploadLengthDeferred ? t.setRequestHeader("Upload-Defer-Length", 1) : t.setRequestHeader("Upload-Length", this._size));
          var r = (function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.r", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = [];
            for (var r in e) t.push(r + " " + _$base64_41.Base64.encode(e[r]));
                        SRTlib.send("]},");

            return t.join(",");
                        SRTlib.send("]},");

          })(this.options.metadata);
          ("" !== r && t.setRequestHeader("Upload-Metadata", r), this.options.uploadDataDuringCreation && !this.options.uploadLengthDeferred ? (this._offset = 0, this._addChunkToRequest(t)) : t.send(null));
        } else this._emitError(new Error("tus: unable to create upload because no endpoint is provided"));
                SRTlib.send("]},");

      }
    }, {
      key: "_resumeUpload",
      value: function () {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value15", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this, t = (0, _$request_78.newRequest)();
        (t.open("HEAD", this.url, !0), t.onload = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.t.onload2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          if (!inStatusCategory(t.status, 200)) {
                        SRTlib.send("]},");

            return (e._hasStorage() && inStatusCategory(t.status, 400) && e._storage.removeItem(e._fingerprint, function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.t.onload.ReturnStatement.e._storage.removeItem", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              t && e._emitError(t);
                            SRTlib.send("]},");

            }), 423 === t.status ? void e._emitXhrError(t, new Error("tus: upload is currently locked; retry later")) : e.options.endpoint ? (e.url = null, void e._createUpload()) : void e._emitXhrError(t, new Error("tus: unable to resume upload (new upload cannot be created without an endpoint)")));
          }
          var r = parseInt(t.getResponseHeader("Upload-Offset"), 10);
          if (isNaN(r)) e._emitXhrError(t, new Error("tus: invalid or missing offset value")); else {
            var n = parseInt(t.getResponseHeader("Upload-Length"), 10);
            if (!isNaN(n) || e.options.uploadLengthDeferred) {
              if (r === n) {
                                SRTlib.send("]},");

                return (e._emitProgress(n, n), void e._emitSuccess());
              }
              (e._offset = r, e._startUpload());
            } else e._emitXhrError(t, new Error("tus: invalid or missing length value"));
          }
                    SRTlib.send("]},");

        }, t.onerror = function (r) {
                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.t.onerror2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e._emitXhrError(t, new Error("tus: failed to resume upload"), r);
                    SRTlib.send("]},");

        }, this._setupXHR(t), t.send(null));
                SRTlib.send("]},");

      }
    }, {
      key: "_startUpload",
      value: function () {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value16", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this;
        if (!this._aborted) {
          var t = (0, _$request_78.newRequest)();
          (this.options.overridePatchMethod ? (t.open("POST", this.url, !0), t.setRequestHeader("X-HTTP-Method-Override", "PATCH")) : t.open("PATCH", this.url, !0), t.onload = function () {
                        SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.t.onload3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            inStatusCategory(t.status, 200) ? e._handleUploadResponse(t) : e._emitXhrError(t, new Error("tus: unexpected response while uploading chunk"));
                        SRTlib.send("]},");

          }, t.onerror = function (r) {
                        SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.t.onerror3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            e._aborted || e._emitXhrError(t, new Error("tus: failed to upload chunk at offset " + e._offset), r);
                        SRTlib.send("]},");

          }, this._setupXHR(t), t.setRequestHeader("Upload-Offset", this._offset), this._addChunkToRequest(t));
        }
                SRTlib.send("]},");

      }
    }, {
      key: "_addChunkToRequest",
      value: function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value17", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = this;
        (("upload" in e) && (e.upload.onprogress = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.e.upload.onprogress", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e.lengthComputable && t._emitProgress(r + e.loaded, t._size);
                    SRTlib.send("]},");

        }), e.setRequestHeader("Content-Type", "application/offset+octet-stream"));
        var r = this._offset, n = this._offset + this.options.chunkSize;
        ((n === 1 / 0 || n > this._size) && !this.options.uploadLengthDeferred && (n = this._size), this._source.slice(r, n, function (r, n, i) {
                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value._source.slice", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          r ? t._emitError(r) : (t.options.uploadLengthDeferred && i && (t._size = t._offset + (n && n.size ? n.size : 0), e.setRequestHeader("Upload-Length", t._size)), null === n ? e.send() : (e.send(n), t._emitProgress(t._offset, t._size)));
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      }
    }, {
      key: "_handleUploadResponse",
      value: function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value18", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = this, r = parseInt(e.getResponseHeader("Upload-Offset"), 10);
        if (isNaN(r)) this._emitXhrError(e, new Error("tus: invalid or missing offset value")); else {
          if ((this._emitProgress(r, this._size), this._emitChunkComplete(r - this._offset, r, this._size), this._offset = r, r == this._size)) {
                        SRTlib.send("]},");

            return (this.options.removeFingerprintOnSuccess && this.options.resume && this._storage.removeItem(this._fingerprint, function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.ReturnStatement._storage.removeItem", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              e && t._emitError(e);
                            SRTlib.send("]},");

            }), this._emitSuccess(), void this._source.close());
          }
          this._startUpload();
        }
                SRTlib.send("]},");

      }
    }], [{
      key: "terminate",
      value: function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value19", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        if ("function" != typeof t && "function" != typeof r) throw new Error("tus: a callback function must be specified");
        "function" == typeof t && (r = t, t = {});
        var n = (0, _$request_78.newRequest)();
        (n.open("DELETE", e, !0), n.onload = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.n.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          204 === n.status ? r() : r(new _error2.default(new Error("tus: unexpected response while terminating upload"), null, n));
                    SRTlib.send("]},");

        }, n.onerror = function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "Upload.ReturnStatement.___createClass_84.value.n.onerror", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          r(new _error2.default(e, new Error("tus: failed to terminate upload"), n));
                    SRTlib.send("]},");

        }, setupXHR(n, t), n.send(null));
                SRTlib.send("]},");

      }
    }]), e);
        SRTlib.send("]},");

  })();
  function inStatusCategory(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return e >= t && e < t + 100;
        SRTlib.send("]},");

  }
  function setupXHR(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    e.setRequestHeader("Tus-Resumable", "1.0.0");
    var r = t.headers || ({});
    for (var n in r) e.setRequestHeader(n, r[n]);
    e.withCredentials = t.withCredentials;
        SRTlib.send("]},");

  }
  (Upload.defaultOptions = defaultOptions, _$upload_84.default = Upload);
  var __obj_83, _upload2 = (__obj_83 = _$upload_84) && __obj_83.__esModule ? __obj_83 : {
    default: __obj_83
  }, storage = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "storage", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (e && e.__esModule) {
            SRTlib.send("]},");

      return e;
    }
    var t = {};
    if (null != e) for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        SRTlib.send("]},");

    return (t.default = e, t);
        SRTlib.send("]},");

  })(_$storage_80), __defaultOptions_83 = _upload2.default.defaultOptions, moduleExport = {
    Upload: _upload2.default,
    canStoreURLs: storage.canStoreURLs,
    defaultOptions: __defaultOptions_83
  };
  if ("undefined" != typeof window) {
    var _window = window, __XMLHttpRequest_83 = _window.XMLHttpRequest, __Blob_83 = _window.Blob;
    moduleExport.isSupported = __XMLHttpRequest_83 && __Blob_83 && "function" == typeof __Blob_83.prototype.slice;
  } else (moduleExport.isSupported = !0, moduleExport.FileStorage = storage.FileStorage);
  var _$moduleExport_83 = moduleExport;
  function ___wrapNativeSuper_89(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = "function" == typeof Map ? new Map() : void 0;
        SRTlib.send("]},");

    return (___wrapNativeSuper_89 = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement30", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (null === e || (r = e, -1 === Function.toString.call(r).indexOf("[native code]"))) {
                SRTlib.send("]},");

        return e;
      }
      var r;
      if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
      if (void 0 !== t) {
        if (t.has(e)) {
                    SRTlib.send("]},");

          return t.get(e);
        }
        t.set(e, n);
      }
      function n() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return ___construct_89(e, arguments, ___getPrototypeOf_89(this).constructor);
                SRTlib.send("]},");

      }
            SRTlib.send("]},");

      return (n.prototype = Object.create(e.prototype, {
        constructor: {
          value: n,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      }), ___setPrototypeOf_89(n, e));
            SRTlib.send("]},");

    })(e);
        SRTlib.send("]},");

  }
  function ___construct_89(t, r, n) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        SRTlib.send("]},");

    return (___construct_89 = (function () {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply20", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if ("undefined" == typeof Reflect || !Reflect.construct) {
                SRTlib.send("]},");

        return !1;
      }
      if (Reflect.construct.sham) {
                SRTlib.send("]},");

        return !1;
      }
      if ("function" == typeof Proxy) {
                SRTlib.send("]},");

        return !0;
      }
      try {
                SRTlib.send("]},");

        return (Date.prototype.toString.call(Reflect.construct(Date, [], function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply.ReturnStatement.Date.prototype.toString.call3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

        })), !0);
      } catch (e) {
                SRTlib.send("]},");

        return !1;
      }
            SRTlib.send("]},");

    })() ? Reflect.construct : function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply21", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = [null];
      n.push.apply(n, t);
      var i = new (Function.bind.apply(e, n))();
            SRTlib.send("]},");

      return (r && ___setPrototypeOf_89(i, r.prototype), i);
            SRTlib.send("]},");

    }).apply(null, arguments);
        SRTlib.send("]},");

  }
  function ___setPrototypeOf_89(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (___setPrototypeOf_89 = Object.setPrototypeOf || (function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement31", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return (e.__proto__ = t, e);
            SRTlib.send("]},");

    }))(e, t);
        SRTlib.send("]},");

  }
  function ___getPrototypeOf_89(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (___getPrototypeOf_89 = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement32", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.__proto__ || Object.getPrototypeOf(e);
            SRTlib.send("]},");

    })(e);
        SRTlib.send("]},");

  }
  var AuthError = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "AuthError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var t;
            SRTlib.send("]},");

      return ((t = e.call(this, "Authorization required") || this).name = "AuthError", t.isAuthError = !0, t);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r, n);
        SRTlib.send("]},");

  })(___wrapNativeSuper_89(Error)), _$AuthError_89 = AuthError;
  function ___wrapNativeSuper_198(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = "function" == typeof Map ? new Map() : void 0;
        SRTlib.send("]},");

    return (___wrapNativeSuper_198 = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement33", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (null === e || (r = e, -1 === Function.toString.call(r).indexOf("[native code]"))) {
                SRTlib.send("]},");

        return e;
      }
      var r;
      if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
      if (void 0 !== t) {
        if (t.has(e)) {
                    SRTlib.send("]},");

          return t.get(e);
        }
        t.set(e, n);
      }
      function n() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return ___construct_198(e, arguments, ___getPrototypeOf_198(this).constructor);
                SRTlib.send("]},");

      }
            SRTlib.send("]},");

      return (n.prototype = Object.create(e.prototype, {
        constructor: {
          value: n,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      }), ___setPrototypeOf_198(n, e));
            SRTlib.send("]},");

    })(e);
        SRTlib.send("]},");

  }
  function ___construct_198(t, r, n) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        SRTlib.send("]},");

    return (___construct_198 = (function () {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply22", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if ("undefined" == typeof Reflect || !Reflect.construct) {
                SRTlib.send("]},");

        return !1;
      }
      if (Reflect.construct.sham) {
                SRTlib.send("]},");

        return !1;
      }
      if ("function" == typeof Proxy) {
                SRTlib.send("]},");

        return !0;
      }
      try {
                SRTlib.send("]},");

        return (Date.prototype.toString.call(Reflect.construct(Date, [], function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply.ReturnStatement.Date.prototype.toString.call4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

        })), !0);
      } catch (e) {
                SRTlib.send("]},");

        return !1;
      }
            SRTlib.send("]},");

    })() ? Reflect.construct : function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply23", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = [null];
      n.push.apply(n, t);
      var i = new (Function.bind.apply(e, n))();
            SRTlib.send("]},");

      return (r && ___setPrototypeOf_198(i, r.prototype), i);
            SRTlib.send("]},");

    }).apply(null, arguments);
        SRTlib.send("]},");

  }
  function ___setPrototypeOf_198(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (___setPrototypeOf_198 = Object.setPrototypeOf || (function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement34", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return (e.__proto__ = t, e);
            SRTlib.send("]},");

    }))(e, t);
        SRTlib.send("]},");

  }
  function ___getPrototypeOf_198(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (___getPrototypeOf_198 = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement35", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.__proto__ || Object.getPrototypeOf(e);
            SRTlib.send("]},");

    })(e);
        SRTlib.send("]},");

  }
  var NetworkError = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "NetworkError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return (void 0 === r && (r = null), (n = e.call(this, "This looks like a network error, the endpoint might be blocked by an internet provider or a firewall.\n\nSource error: [" + t + "]") || this).isNetworkError = !0, n.request = r, n);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r, n);
        SRTlib.send("]},");

  })(___wrapNativeSuper_198(Error)), _$NetworkError_198 = NetworkError, _$package_95 = {
    version: "1.4.5"
  }, ___class_91, ___temp_91;
  function ___extends_91() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_91 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply24", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  function ___defineProperties_91(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    for (var r = 0; r < t.length; r++) {
      var n = t[r];
      (n.enumerable = n.enumerable || !1, n.configurable = !0, ("value" in n) && (n.writable = !0), Object.defineProperty(e, n.key, n));
    }
        SRTlib.send("]},");

  }
  var _$RequestClient_91 = (___temp_91 = ___class_91 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (this.uppy = e, this.opts = t, this.onReceiveResponse = this.onReceiveResponse.bind(this), this.allowedHeaders = ["accept", "content-type", "uppy-auth-token"], this.preflightDone = !1);
            SRTlib.send("]},");

    }
    var t, r, n = e.prototype;
        SRTlib.send("]},");

    return (n.headers = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.headers", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.opts.companionHeaders || this.opts.serverHeaders || ({});
            SRTlib.send("]},");

      return Promise.resolve(___extends_91({}, this.defaultHeaders, {}, e));
            SRTlib.send("]},");

    }, n._getPostResponseFunc = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n._getPostResponseFunc", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n._getPostResponseFunc.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e ? r : t.onReceiveResponse(r);
                SRTlib.send("]},");

      };
            SRTlib.send("]},");

    }, n.onReceiveResponse = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.onReceiveResponse", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t, r = this.uppy.getState().companion || ({}), n = this.opts.companionUrl, i = e.headers;
            SRTlib.send("]},");

      return (i.has("i-am") && i.get("i-am") !== r[n] && this.uppy.setState({
        companion: ___extends_91({}, r, (t = {}, t[n] = i.get("i-am"), t))
      }), e);
            SRTlib.send("]},");

    }, n._getUrl = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n._getUrl", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return (/^(https?:|)\/\//).test(e) ? e : this.hostname + "/" + e;
            SRTlib.send("]},");

    }, n._json = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n._json", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (401 === e.status) throw new _$AuthError_89();
      if (e.status < 200 || e.status > 300) {
        var t = "Failed request with status: " + e.status + ". " + e.statusText;
                SRTlib.send("]},");

        return e.json().then(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n._json.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          throw (t = e.message ? t + " message: " + e.message : t, t = e.requestId ? t + " request-Id: " + e.requestId : t, new Error(t));
                    SRTlib.send("]},");

        }).catch(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n._json.ReturnStatement.then.catch", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          throw new Error(t);
                    SRTlib.send("]},");

        });
      }
            SRTlib.send("]},");

      return e.json();
            SRTlib.send("]},");

    }, n.preflight = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.preflight", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return new Promise(function (r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.preflight.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        if (t.preflightDone) {
                    SRTlib.send("]},");

          return r(t.allowedHeaders.slice());
        }
        fetch(t._getUrl(e), {
          method: "OPTIONS"
        }).then(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.preflight.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (e.headers.has("access-control-allow-headers") && (t.allowedHeaders = e.headers.get("access-control-allow-headers").split(",").map(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.preflight.ReturnStatement.then.catch.then.t.allowedHeaders.e.headers.get.split.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return e.trim().toLowerCase();
                        SRTlib.send("]},");

          })), t.preflightDone = !0, r(t.allowedHeaders.slice()));
                    SRTlib.send("]},");

        }).catch(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.preflight.ReturnStatement.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (t.uppy.log("[CompanionClient] unable to make preflight request " + e, "warning"), t.preflightDone = !0, r(t.allowedHeaders.slice()));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, n.preflightAndHeaders = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.preflightAndHeaders", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return Promise.all([this.preflight(e), this.headers()]).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.preflightAndHeaders.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = e[0], n = e[1];
                SRTlib.send("]},");

        return (Object.keys(n).forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.preflightAndHeaders.ReturnStatement.then.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          -1 === r.indexOf(e.toLowerCase()) && (t.uppy.log("[CompanionClient] excluding unallowed header " + e), delete n[e]);
                    SRTlib.send("]},");

        }), n);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, n.get = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.get", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
            SRTlib.send("]},");

      return new Promise(function (n, i) {
                SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.get.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        r.preflightAndHeaders(e).then(function (o) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.get.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          fetch(r._getUrl(e), {
            method: "get",
            headers: o,
            credentials: "same-origin"
          }).catch(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.get.ReturnStatement.then.catch.then.catch.then.then.catch.catch.then.then.catch.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            throw "AbortError" === e.name ? e : new _$NetworkError_198(e);
                        SRTlib.send("]},");

          }).then(r._getPostResponseFunc(t)).then(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.get.ReturnStatement.then.catch.then.catch.then.then.catch.catch.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return r._json(e).then(n);
                        SRTlib.send("]},");

          }).catch(function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.get.ReturnStatement.then.catch.then.catch.then.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            (t = t.isAuthError ? t : new Error("Could not get " + r._getUrl(e) + ". " + t), i(t));
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        }).catch(i);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, n.post = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.post", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = this;
            SRTlib.send("]},");

      return new Promise(function (i, o) {
                SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.post.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        n.preflightAndHeaders(e).then(function (s) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.post.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          fetch(n._getUrl(e), {
            method: "post",
            headers: s,
            credentials: "same-origin",
            body: JSON.stringify(t)
          }).catch(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.post.ReturnStatement.then.catch.then.catch.then.then.catch.catch.then.then.catch.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            throw "AbortError" === e.name ? e : new _$NetworkError_198(e);
                        SRTlib.send("]},");

          }).then(n._getPostResponseFunc(r)).then(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.post.ReturnStatement.then.catch.then.catch.then.then.catch.catch.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return n._json(e).then(i);
                        SRTlib.send("]},");

          }).catch(function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.post.ReturnStatement.then.catch.then.catch.then.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            (t = t.isAuthError ? t : new Error("Could not post " + n._getUrl(e) + ". " + t), o(t));
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        }).catch(o);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, n.delete = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.delete", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = this;
            SRTlib.send("]},");

      return new Promise(function (i, o) {
                SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.delete.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        n.preflightAndHeaders(e).then(function (s) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.delete.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          fetch(n.hostname + "/" + e, {
            method: "delete",
            headers: s,
            credentials: "same-origin",
            body: t ? JSON.stringify(t) : null
          }).catch(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.delete.ReturnStatement.then.catch.then.catch.then.then.catch.catch.then.then.catch.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            throw "AbortError" === e.name ? e : new _$NetworkError_198(e);
                        SRTlib.send("]},");

          }).then(n._getPostResponseFunc(r)).then(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.delete.ReturnStatement.then.catch.then.catch.then.then.catch.catch.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return n._json(e).then(i);
                        SRTlib.send("]},");

          }).catch(function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.n.delete.ReturnStatement.then.catch.then.catch.then.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            (t = t.isAuthError ? t : new Error("Could not delete " + n._getUrl(e) + ". " + t), o(t));
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        }).catch(o);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t = e, (r = [{
      key: "hostname",
      get: function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.get", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = this.uppy.getState().companion, t = this.opts.companionUrl;
                SRTlib.send("]},");

        return (e && e[t] ? e[t] : t).replace(/\/$/, "");
                SRTlib.send("]},");

      }
    }, {
      key: "defaultHeaders",
      get: function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$RequestClient_91.ReturnStatement.get2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return {
          Accept: "application/json",
          "Content-Type": "application/json",
          "Uppy-Versions": "@uppy/companion-client=" + e.VERSION
        };
                SRTlib.send("]},");

      }
    }]) && ___defineProperties_91(t.prototype, r), e);
        SRTlib.send("]},");

  })(), ___class_91.VERSION = _$package_95.version, ___temp_91), _$tokenStorage_94 = {};
  function ___extends_90() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_90 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply25", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  (_$tokenStorage_94.setItem = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$tokenStorage_94.setItem", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return new Promise(function (r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$tokenStorage_94.setItem.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (localStorage.setItem(e, t), r());
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }, _$tokenStorage_94.getItem = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$tokenStorage_94.getItem", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return Promise.resolve(localStorage.getItem(e));
        SRTlib.send("]},");

  }, _$tokenStorage_94.removeItem = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$tokenStorage_94.removeItem", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return new Promise(function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$tokenStorage_94.removeItem.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (localStorage.removeItem(e), t());
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  });
  var _getName = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_getName", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e.split("-").map(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_getName.ReturnStatement.map.join.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.charAt(0).toUpperCase() + e.slice(1);
            SRTlib.send("]},");

    }).join(" ");
        SRTlib.send("]},");

  }, _$Provider_90 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).provider = r.provider, n.id = n.provider, n.authProvider = r.authProvider || n.provider, n.name = n.opts.name || _getName(n.id), n.pluginId = n.opts.pluginId, n.tokenKey = "companion-" + n.pluginId + "-auth-token", n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.headers = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.headers", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return new Promise(function (r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.headers.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e.prototype.headers.call(t).then(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.headers.ReturnStatement.e.prototype.headers.call.then.catch.e.prototype.headers.call.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          t.getAuthToken().then(function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.headers.ReturnStatement.e.prototype.headers.call.then.catch.e.prototype.headers.call.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            r(___extends_90({}, e, {
              "uppy-auth-token": t
            }));
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        }).catch(n);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.onReceiveResponse = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.onReceiveResponse", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t = e.prototype.onReceiveResponse.call(this, t);
      var r = this.uppy.getPlugin(this.pluginId), n = r.getPluginState().authenticated ? 401 !== t.status : t.status < 400;
            SRTlib.send("]},");

      return (r.setPluginState({
        authenticated: n
      }), t);
            SRTlib.send("]},");

    }, i.setAuthToken = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.setAuthToken", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.uppy.getPlugin(this.pluginId).storage.setItem(this.tokenKey, e);
            SRTlib.send("]},");

    }, i.getAuthToken = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.getAuthToken", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.uppy.getPlugin(this.pluginId).storage.getItem(this.tokenKey);
            SRTlib.send("]},");

    }, i.authUrl = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.authUrl", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.hostname + "/" + this.id + "/connect";
            SRTlib.send("]},");

    }, i.fileUrl = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.fileUrl", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.hostname + "/" + this.id + "/get/" + e;
            SRTlib.send("]},");

    }, i.list = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.list", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.get(this.id + "/list/" + (e || ""));
            SRTlib.send("]},");

    }, i.logout = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.logout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
            SRTlib.send("]},");

      return new Promise(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.logout.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e.get(e.id + "/logout").then(function (n) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.logout.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e.uppy.getPlugin(e.pluginId).storage.removeItem(e.tokenKey).then(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.i.logout.ReturnStatement.then.catch.then.storage.removeItem.then.catch.storage.removeItem.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return t(n);
                        SRTlib.send("]},");

          }).catch(r);
                    SRTlib.send("]},");

        }).catch(r);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, n.initPlugin = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Provider_90.ReturnStatement.n.initPlugin", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      if ((e.type = "acquirer", e.files = [], r && (e.opts = ___extends_90({}, r, t)), t.serverUrl || t.serverPattern)) throw new Error("`serverUrl` and `serverPattern` have been renamed to `companionUrl` and `companionAllowedHosts` respectively in the 0.30.5 release. Please consult the docs (for example, https://uppy.io/docs/instagram/ for the Instagram plugin) and use the updated options.`");
      if (t.companionAllowedHosts) {
        var n = t.companionAllowedHosts;
        if (!("string" == typeof n || Array.isArray(n) || n instanceof RegExp)) throw new TypeError(e.id + ': the option "companionAllowedHosts" must be one of string, Array, RegExp');
        e.opts.companionAllowedHosts = n;
      } else (/^(?!https?:\/\/).*$/i).test(t.companionUrl) ? e.opts.companionAllowedHosts = "https://" + t.companionUrl.replace(/^\/\//, "") : e.opts.companionAllowedHosts = t.companionUrl;
      e.storage = e.opts.storage || _$tokenStorage_94;
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(_$RequestClient_91), _$Socket_92 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.opts = e, this._queued = [], this.isOpen = !1, this.emitter = _$namespaceEmitter_47(), this._handleMessage = this._handleMessage.bind(this), this.close = this.close.bind(this), this.emit = this.emit.bind(this), this.on = this.on.bind(this), this.once = this.once.bind(this), this.send = this.send.bind(this), e && !1 === e.autoOpen || this.open());
            SRTlib.send("]},");

    }
    var t = e.prototype;
        SRTlib.send("]},");

    return (t.open = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92.ReturnStatement.t.open", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      (this.socket = new WebSocket(this.opts.target), this.socket.onopen = function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92.ReturnStatement.t.open.socket.onopen", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (e.isOpen = !0; e._queued.length > 0 && e.isOpen; ) {
          var r = e._queued[0];
          (e.send(r.action, r.payload), e._queued = e._queued.slice(1));
        }
                SRTlib.send("]},");

      }, this.socket.onclose = function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92.ReturnStatement.t.open.socket.onclose", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.isOpen = !1;
                SRTlib.send("]},");

      }, this.socket.onmessage = this._handleMessage);
            SRTlib.send("]},");

    }, t.close = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92.ReturnStatement.t.close", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.socket && this.socket.close();
            SRTlib.send("]},");

    }, t.send = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92.ReturnStatement.t.send", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.isOpen ? this.socket.send(JSON.stringify({
        action: e,
        payload: t
      })) : this._queued.push({
        action: e,
        payload: t
      });
            SRTlib.send("]},");

    }, t.on = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92.ReturnStatement.t.on", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.emitter.on(e, t);
            SRTlib.send("]},");

    }, t.emit = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92.ReturnStatement.t.emit", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.emitter.emit(e, t);
            SRTlib.send("]},");

    }, t.once = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92.ReturnStatement.t.once", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.emitter.once(e, t);
            SRTlib.send("]},");

    }, t._handleMessage = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Socket_92.ReturnStatement.t._handleMessage", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      try {
        var t = JSON.parse(e.data);
        this.emit(t.action, t.payload);
      } catch (err) {
        console.log(err);
      }
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  })(), _$lib_93 = {
    RequestClient: _$RequestClient_91,
    Provider: _$Provider_90,
    Socket: _$Socket_92
  }, _$emitSocketProgress_203 = _$lodashThrottle_43(function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$emitSocketProgress_203._$lodashThrottle_43", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    var n = t.progress, i = t.bytesUploaded, o = t.bytesTotal;
    n && (e.uppy.log("Upload progress: " + n), e.uppy.emit("upload-progress", r, {
      uploader: e,
      bytesUploaded: i,
      bytesTotal: o
    }));
        SRTlib.send("]},");

  }, 300, {
    leading: !0,
    trailing: !0
  }), _$getSocketHost_216 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getSocketHost_216", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = (/^(?:https?:\/\/|\/\/)?(?:[^@\n]+@)?(?:www\.)?([^\n]+)/i).exec(e)[1];
        SRTlib.send("]},");

    return ((/^http:\/\//i).test(e) ? "ws" : "wss") + "://" + t;
        SRTlib.send("]},");

  }, _$settle_228 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$settle_228", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = [], r = [];
    function n(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t.push(e);
            SRTlib.send("]},");

    }
    function i(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      r.push(e);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return Promise.all(e.map(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$settle_228.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.then(n, i);
            SRTlib.send("]},");

    })).then(function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$settle_228.ReturnStatement.then2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return {
        successful: t,
        failed: r
      };
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }, _$EventTracker_196 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$EventTracker_196", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this._events = [], this._emitter = e);
            SRTlib.send("]},");

    }
    var t = e.prototype;
        SRTlib.send("]},");

    return (t.on = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$EventTracker_196.ReturnStatement.t.on", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return (this._events.push([e, t]), this._emitter.on(e, t));
            SRTlib.send("]},");

    }, t.remove = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$EventTracker_196.ReturnStatement.t.remove", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      this._events.forEach(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$EventTracker_196.ReturnStatement.t.remove._events.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = t[0], n = t[1];
        e._emitter.off(r, n);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  })(), _$isNetworkError_222 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$isNetworkError_222", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return !!e && (0 !== e.readyState && 4 !== e.readyState || 0 === e.status);
        SRTlib.send("]},");

  }, _$RateLimitedQueue_199 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.limit = "number" != typeof e || 0 === e ? 1 / 0 : e, this.activeRequests = 0, this.queuedHandlers = []);
            SRTlib.send("]},");

    }
    var t = e.prototype;
        SRTlib.send("]},");

    return (t._call = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._call", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      this.activeRequests += 1;
      var r, n = !1;
      try {
        r = e();
      } catch (err) {
        throw (this.activeRequests -= 1, err);
      }
            SRTlib.send("]},");

      return {
        abort: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._call.ReturnStatement.abort", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          n || (n = !0, t.activeRequests -= 1, r(), t._queueNext());
                    SRTlib.send("]},");

        },
        done: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._call.ReturnStatement.done", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          n || (n = !0, t.activeRequests -= 1, t._queueNext());
                    SRTlib.send("]},");

        }
      };
            SRTlib.send("]},");

    }, t._queueNext = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._queueNext", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      Promise.resolve().then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._queueNext.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e._next();
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t._next = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._next", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if (!(this.activeRequests >= this.limit) && 0 !== this.queuedHandlers.length) {
        var e = this.queuedHandlers.shift(), t = this._call(e.fn);
        (e.abort = t.abort, e.done = t.done);
      }
            SRTlib.send("]},");

    }, t._queue = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._queue", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
      void 0 === t && (t = {});
      var n = {
        fn: e,
        priority: t.priority || 0,
        abort: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._queue.n.abort", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          r._dequeue(n);
                    SRTlib.send("]},");

        },
        done: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._queue.n.done", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          throw new Error("Cannot mark a queued request as done: this indicates a bug");
                    SRTlib.send("]},");

        }
      }, i = (function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._queue.i", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        for (var r = 0; r < e.length; r++) if ((i = e[r], n.priority > i.priority)) {
                    SRTlib.send("]},");

          return r;
        }
        var i;
                SRTlib.send("]},");

        return -1;
                SRTlib.send("]},");

      })(this.queuedHandlers);
            SRTlib.send("]},");

      return (-1 === i ? this.queuedHandlers.push(n) : this.queuedHandlers.splice(i, 0, n), n);
            SRTlib.send("]},");

    }, t._dequeue = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t._dequeue", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.queuedHandlers.indexOf(e);
      -1 !== t && this.queuedHandlers.splice(t, 1);
            SRTlib.send("]},");

    }, t.run = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t.run", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return this.activeRequests < this.limit ? this._call(e) : this._queue(e, t);
            SRTlib.send("]},");

    }, t.wrapPromiseFunction = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t.wrapPromiseFunction", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
            SRTlib.send("]},");

      return function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t.wrapPromiseFunction.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        for (var n = arguments.length, i = new Array(n), o = 0; o < n; o++) i[o] = arguments[o];
        var s, a = new Promise(function (n, o) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t.wrapPromiseFunction.ReturnStatement.a2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          s = r.run(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t.wrapPromiseFunction.ReturnStatement.a", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            var t, r;
            try {
              r = Promise.resolve(e.apply(void 0, i));
            } catch (err) {
              r = Promise.reject(err);
            }
                        SRTlib.send("]},");

            return (r.then(function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t.wrapPromiseFunction.ReturnStatement.a.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              t ? o(t) : (s.done(), n(e));
                            SRTlib.send("]},");

            }, function (e) {
                            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t.wrapPromiseFunction.ReturnStatement.a.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              t ? o(t) : (s.done(), o(e));
                            SRTlib.send("]},");

            }), function () {
                            SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t.wrapPromiseFunction.ReturnStatement.a.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

              t = new Error("Cancelled");
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }, t);
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

        return (a.abort = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$RateLimitedQueue_199.ReturnStatement.t.wrapPromiseFunction.ReturnStatement.ReturnStatement.a.abort", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          s.abort();
                    SRTlib.send("]},");

        }, a);
                SRTlib.send("]},");

      };
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  })(), _$getFingerprint_189 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getFingerprint_189", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return function (t, r, n) {
            SRTlib.send(`{ "anonymous": true, "function": "_$getFingerprint_189.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            SRTlib.send("]},");

      return "undefined" != typeof window && (void 0 !== window.PhoneGap || void 0 !== window.Cordova || void 0 !== window.cordova) || "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase() ? _$moduleExport_83.Upload.defaultOptions.fingerprint(t, r, n) : n(null, ["tus", e.id, r.endpoint].join("-"));
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  }, _$package_191 = {
    version: "1.5.13"
  }, ___class_190, ___temp_190;
  function ___extends_190() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_190 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply26", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  function ___assertThisInitialized_190(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_190 = _$lib_97.Plugin, __Provider_190 = _$lib_93.Provider, __RequestClient_190 = _$lib_93.RequestClient, __Socket_190 = _$lib_93.Socket, tusDefaultOptions = {
    endpoint: "",
    resume: !0,
    onProgress: null,
    onChunkComplete: null,
    onSuccess: null,
    onError: null,
    headers: {},
    chunkSize: 1 / 0,
    withCredentials: !1,
    uploadUrl: null,
    uploadSize: null,
    overridePatchMethod: !1,
    retryDelays: null
  }, _$lib_190 = (___temp_190 = ___class_190 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_190", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).type = "uploader", n.id = n.opts.id || "Tus", n.title = "Tus", n.opts = ___extends_190({}, {
        resume: !0,
        autoRetry: !0,
        useFastRemoteRetry: !0,
        limit: 0,
        retryDelays: [0, 1e3, 3e3, 5e3]
      }, r), n.requests = new _$RateLimitedQueue_199(n.opts.limit), n.uploaders = Object.create(null), n.uploaderEvents = Object.create(null), n.uploaderSockets = Object.create(null), n.handleResetProgress = n.handleResetProgress.bind(___assertThisInitialized_190(n)), n.handleUpload = n.handleUpload.bind(___assertThisInitialized_190(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.handleResetProgress = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.handleResetProgress", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = ___extends_190({}, this.uppy.getState().files);
      (Object.keys(e).forEach(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.handleResetProgress.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e[t].tus && e[t].tus.uploadUrl) {
          var r = ___extends_190({}, e[t].tus);
          (delete r.uploadUrl, e[t] = ___extends_190({}, e[t], {
            tus: r
          }));
        }
                SRTlib.send("]},");

      }), this.uppy.setState({
        files: e
      }));
            SRTlib.send("]},");

    }, i.resetUploaderReferences = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.resetUploaderReferences", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if ((void 0 === t && (t = {}), this.uploaders[e])) {
        var r = this.uploaders[e];
        (r.abort(), t.abort && setTimeout(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.resetUploaderReferences.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return r.abort(!0);
                    SRTlib.send("]},");

        }, 1e3), this.uploaders[e] = null);
      }
      (this.uploaderEvents[e] && (this.uploaderEvents[e].remove(), this.uploaderEvents[e] = null), this.uploaderSockets[e] && (this.uploaderSockets[e].close(), this.uploaderSockets[e] = null));
            SRTlib.send("]},");

    }, i.upload = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = this;
            SRTlib.send("]},");

      return (this.resetUploaderReferences(e.id), new Promise(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch6", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        n.uppy.emit("upload-started", e);
        var i = ___extends_190({}, tusDefaultOptions, n.opts, e.tus || ({}));
        (i.fingerprint = _$getFingerprint_189(e), i.onError = function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.i.onError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (n.uppy.log(t), _$isNetworkError_222(t.originalRequest) && (t = new _$NetworkError_198(t, t.originalRequest)), n.resetUploaderReferences(e.id), u.done(), n.uppy.emit("upload-error", e, t), r(t));
                    SRTlib.send("]},");

        }, i.onProgress = function (t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.i.onProgress", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          (n.onReceiveUploadUrl(e, a.url), n.uppy.emit("upload-progress", e, {
            uploader: n,
            bytesUploaded: t,
            bytesTotal: r
          }));
                    SRTlib.send("]},");

        }, i.onSuccess = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.i.onSuccess", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var r = {
            uploadURL: a.url
          };
          (n.resetUploaderReferences(e.id), u.done(), n.uppy.emit("upload-success", e, r), a.url && n.uppy.log("Download " + a.file.name + " from " + a.url), t(a));
                    SRTlib.send("]},");

        });
        var o = function (e, t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.o", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          _$hasProperty_219(e, t) && !_$hasProperty_219(e, r) && (e[r] = e[t]);
                    SRTlib.send("]},");

        }, s = {};
        ((Array.isArray(i.metaFields) ? i.metaFields : Object.keys(e.meta)).forEach(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          s[t] = e.meta[t];
                    SRTlib.send("]},");

        }), o(s, "type", "filetype"), o(s, "name", "filename"), i.metadata = s);
        var a = new _$moduleExport_83.Upload(e.data, i);
        (n.uploaders[e.id] = a, n.uploaderEvents[e.id] = new _$EventTracker_196(n.uppy));
        var u = n.requests.run(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.u.n.requests.run", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return (e.isPaused || a.start(), function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.u.n.requests.run.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        });
        (n.onFileRemove(e.id, function (r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (u.abort(), n.resetUploaderReferences(e.id, {
            abort: !!a.url
          }), t("upload " + r + " was removed"));
                    SRTlib.send("]},");

        }), n.onPause(e.id, function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e ? (u.abort(), a.abort()) : (u.abort(), u = n.requests.run(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.n.requests.run", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return (a.start(), function () {
                            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.n.requests.run.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }));
                    SRTlib.send("]},");

        }), n.onPauseAll(e.id, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (u.abort(), a.abort());
                    SRTlib.send("]},");

        }), n.onCancelAll(e.id, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (u.abort(), n.resetUploaderReferences(e.id, {
            abort: !!a.url
          }), t("upload " + e.id + " was canceled"));
                    SRTlib.send("]},");

        }), n.onResumeAll(e.id, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (u.abort(), e.error && a.abort(), u = n.requests.run(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.n.requests.run2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return (a.start(), function () {
                            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch.n.requests.run.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }));
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      }).catch(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.upload.ReturnStatement.catch7", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        throw (n.uppy.emit("upload-error", e, t), t);
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, i.uploadRemote = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.uploadRemote", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = this;
      this.resetUploaderReferences(e.id);
      var i = ___extends_190({}, this.opts);
            SRTlib.send("]},");

      return (e.tus && ___extends_190(i, e.tus), this.uppy.emit("upload-started", e), this.uppy.log(e.remote.url), e.serverToken ? this.connectToServerSocket(e) : new Promise(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.uploadRemote.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        new (e.remote.providerOptions.provider ? __Provider_190 : __RequestClient_190)(n.uppy, e.remote.providerOptions).post(e.remote.url, ___extends_190({}, e.remote.body, {
          endpoint: i.endpoint,
          uploadUrl: i.uploadUrl,
          protocol: "tus",
          size: e.data.size,
          metadata: e.meta
        })).then(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.uploadRemote.ReturnStatement.post.then.then.catch.post.then.then.post.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return (n.uppy.setFileState(e.id, {
            serverToken: t.token
          }), e = n.uppy.getFile(e.id), n.connectToServerSocket(e));
                    SRTlib.send("]},");

        }).then(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.uploadRemote.ReturnStatement.post.then.then.catch.post.then.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          t();
                    SRTlib.send("]},");

        }).catch(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.uploadRemote.ReturnStatement.post.then.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (n.uppy.emit("upload-error", e, t), r(t));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, i.connectToServerSocket = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return new Promise(function (r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement11", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var i = e.serverToken, o = _$getSocketHost_216(e.remote.companionUrl), s = new __Socket_190({
          target: o + "/api/" + i,
          autoOpen: !1
        });
        (t.uploaderSockets[e.id] = s, t.uploaderEvents[e.id] = new _$EventTracker_196(t.uppy), t.onFileRemove(e.id, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (a.abort(), s.send("pause", {}), s.send("cancel", {}), t.resetUploaderReferences(e.id), r("upload " + e.id + " was removed"));
                    SRTlib.send("]},");

        }), t.onPause(e.id, function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e ? (a.abort(), s.send("pause", {})) : (a.abort(), a = t.requests.run(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement.t.requests.run", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return (s.send("resume", {}), function () {
                            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement.t.requests.run.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }));
                    SRTlib.send("]},");

        }), t.onPauseAll(e.id, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (a.abort(), s.send("pause", {}));
                    SRTlib.send("]},");

        }), t.onCancelAll(e.id, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (a.abort(), s.send("pause", {}), s.send("cancel", {}), t.resetUploaderReferences(e.id), r("upload " + e.id + " was canceled"));
                    SRTlib.send("]},");

        }), t.onResumeAll(e.id, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (a.abort(), e.error && s.send("pause", {}), a = t.requests.run(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement.t.requests.run2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return (s.send("resume", {}), function () {
                            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement.t.requests.run.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }));
                    SRTlib.send("]},");

        }), t.onRetry(e.id, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement6", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          s.isOpen && (s.send("pause", {}), s.send("resume", {}));
                    SRTlib.send("]},");

        }), t.onRetryAll(e.id, function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement7", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          s.isOpen && (s.send("pause", {}), s.send("resume", {}));
                    SRTlib.send("]},");

        }), s.on("progress", function (r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement8", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return _$emitSocketProgress_203(t, r, e);
                    SRTlib.send("]},");

        }), s.on("error", function (r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement9", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var i = r.error.message, o = ___extends_190(new Error(i), {
            cause: r.error
          });
          (t.opts.useFastRemoteRetry ? s.close() : (t.resetUploaderReferences(e.id), t.uppy.setFileState(e.id, {
            serverToken: null
          })), t.uppy.emit("upload-error", e, o), a.done(), n(o));
                    SRTlib.send("]},");

        }), s.on("success", function (n) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement10", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var i = {
            uploadURL: n.url
          };
          (t.uppy.emit("upload-success", e, i), t.resetUploaderReferences(e.id), a.done(), r());
                    SRTlib.send("]},");

        }));
        var a = t.requests.run(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement.a.t.requests.run", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return (s.open(), e.isPaused && s.send("pause", {}), function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.connectToServerSocket.ReturnStatement.a.t.requests.run.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.onReceiveUploadUrl = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onReceiveUploadUrl", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this.uppy.getFile(e.id);
      r && (r.tus && r.tus.uploadUrl === t || (this.uppy.log("[Tus] Storing upload url"), this.uppy.setFileState(r.id, {
        tus: ___extends_190({}, r.tus, {
          uploadUrl: t
        })
      })));
            SRTlib.send("]},");

    }, i.onFileRemove = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onFileRemove", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.uploaderEvents[e].on("file-removed", function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onFileRemove.uploaderEvents.e.on", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e === r.id && t(r.id);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.onPause = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onPause", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.uploaderEvents[e].on("upload-pause", function (r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onPause.uploaderEvents.e.on", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        e === r && t(n);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.onRetry = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onRetry", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this.uploaderEvents[e].on("upload-retry", function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onRetry.uploaderEvents.e.on", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e === r && t();
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.onRetryAll = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onRetryAll", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
      this.uploaderEvents[e].on("retry-all", function (n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onRetryAll.uploaderEvents.e.on", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        r.uppy.getFile(e) && t();
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.onPauseAll = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onPauseAll", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
      this.uploaderEvents[e].on("pause-all", function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onPauseAll.uploaderEvents.e.on", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        r.uppy.getFile(e) && t();
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.onCancelAll = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onCancelAll", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
      this.uploaderEvents[e].on("cancel-all", function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onCancelAll.uploaderEvents.e.on", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        r.uppy.getFile(e) && t();
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.onResumeAll = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onResumeAll", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
      this.uploaderEvents[e].on("resume-all", function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.onResumeAll.uploaderEvents.e.on", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        r.uppy.getFile(e) && t();
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.uploadFiles = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.uploadFiles", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = e.map(function (r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.uploadFiles.r", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var i = n + 1, o = e.length;
                SRTlib.send("]},");

        return ("error" in r) && r.error ? Promise.reject(new Error(r.error)) : r.isRemote ? t.uploadRemote(r, i, o) : t.upload(r, i, o);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

      return _$settle_228(r);
            SRTlib.send("]},");

    }, i.handleUpload = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.handleUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      if (0 === e.length) {
                SRTlib.send("]},");

        return (this.uppy.log("[Tus] No files to upload"), Promise.resolve());
      }
      (0 === this.opts.limit && this.uppy.log("[Tus] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/tus/#limit-0", "warning"), this.uppy.log("[Tus] Uploading..."));
      var r = e.map(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.handleUpload.r", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t.uppy.getFile(e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

      return this.uploadFiles(r).then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.handleUpload.ReturnStatement.uploadFiles.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return null;
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.uppy.setState({
        capabilities: ___extends_190({}, this.uppy.getState().capabilities, {
          resumableUploads: !0
        })
      }), this.uppy.addUploader(this.handleUpload), this.uppy.on("reset-progress", this.handleResetProgress), this.opts.autoRetry && this.uppy.on("back-online", this.uppy.retryAll));
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_190.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.uppy.setState({
        capabilities: ___extends_190({}, this.uppy.getState().capabilities, {
          resumableUploads: !1
        })
      }), this.uppy.removeUploader(this.handleUpload), this.opts.autoRetry && this.uppy.off("back-online", this.uppy.retryAll));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_190), ___class_190.VERSION = _$package_191.version, ___temp_190), re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/, parts = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"], _$parseuri_49 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$parseuri_49", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e, r = e.indexOf("["), n = e.indexOf("]");
    -1 != r && -1 != n && (e = e.substring(0, r) + e.substring(r, n).replace(/:/g, ";") + e.substring(n, e.length));
    for (var i = re.exec(e || ""), o = {}, s = 14; s--; ) o[parts[s]] = i[s] || "";
        SRTlib.send("]},");

    return (-1 != r && -1 != n && (o.source = t, o.host = o.host.substring(1, o.host.length - 1).replace(/;/g, ":"), o.authority = o.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), o.ipv6uri = !0), o);
        SRTlib.send("]},");

  }, s = 1e3, m = 60 * s, __h_64 = 60 * m, d = 24 * __h_64, y = 365.25 * d;
  function plural(e, t, r) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    if (!(e < t)) {
            SRTlib.send("]},");

      return e < 1.5 * t ? Math.floor(e / t) + " " + r : Math.ceil(e / t) + " " + r + "s";
    }
        SRTlib.send("]},");

  }
  var _$ms_64 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$ms_64", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    t = t || ({});
    var r, n = typeof e;
    if ("string" === n && e.length > 0) {
            SRTlib.send("]},");

      return (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$ms_64.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (!((e = String(e)).length > 100)) {
          var t = (/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i).exec(e);
          if (t) {
            var r = parseFloat(t[1]);
            switch ((t[2] || "ms").toLowerCase()) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case {
                                    SRTlib.send("]},");

                  return r * y;
                }:
                return r * y;
              case "days":
              case "day":
              case {
                                    SRTlib.send("]},");

                  return r * d;
                }:
                return r * d;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case {
                                    SRTlib.send("]},");

                  return r * __h_64;
                }:
                return r * __h_64;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case {
                                    SRTlib.send("]},");

                  return r * m;
                }:
                return r * m;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case {
                                    SRTlib.send("]},");

                  return r * s;
                }:
                return r * s;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case {
                                    SRTlib.send("]},");

                  return r;
                }:
                return r;
              default:
            }
          }
        }
                SRTlib.send("]},");

      })(e);
    }
    if ("number" === n && !1 === isNaN(e)) {
            SRTlib.send("]},");

      return t.long ? plural(r = e, d, "day") || plural(r, __h_64, "hour") || plural(r, m, "minute") || plural(r, s, "second") || r + " ms" : (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$ms_64.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e >= d ? Math.round(e / d) + "d" : e >= __h_64 ? Math.round(e / __h_64) + "h" : e >= m ? Math.round(e / m) + "m" : e >= s ? Math.round(e / s) + "s" : e + "ms";
                SRTlib.send("]},");

      })(e);
    }
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e));
        SRTlib.send("]},");

  }, _$debug_63 = {};
  function createDebug(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t;
    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if (r.enabled) {
        var e = r, n = +new Date(), i = n - (t || n);
        (e.diff = i, e.prev = t, e.curr = n, t = n);
        for (var o = new Array(arguments.length), s = 0; s < o.length; s++) o[s] = arguments[s];
        (o[0] = _$debug_63.coerce(o[0]), "string" != typeof o[0] && o.unshift("%O"));
        var a = 0;
        (o[0] = o[0].replace(/%([a-zA-Z%])/g, function (t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "o.o.replace", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          if ("%%" === t) {
                        SRTlib.send("]},");

            return t;
          }
          a++;
          var n = _$debug_63.formatters[r];
          if ("function" == typeof n) {
            var i = o[a];
            (t = n.call(e, i), o.splice(a, 1), a--);
          }
                    SRTlib.send("]},");

          return t;
                    SRTlib.send("]},");

        }), _$debug_63.formatArgs.call(e, o), (r.log || _$debug_63.log || console.log.bind(console)).apply(e, o));
      }
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r.namespace = e, r.enabled = _$debug_63.enabled(e), r.useColors = _$debug_63.useColors(), r.color = (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.r.color", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t, r = 0;
      for (t in e) (r = (r << 5) - r + e.charCodeAt(t), r |= 0);
            SRTlib.send("]},");

      return _$debug_63.colors[Math.abs(r) % _$debug_63.colors.length];
            SRTlib.send("]},");

    })(e), r.destroy = destroy, "function" == typeof _$debug_63.init && _$debug_63.init(r), _$debug_63.instances.push(r), r);
        SRTlib.send("]},");

  }
  function destroy() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = _$debug_63.instances.indexOf(this);
        SRTlib.send("]},");

    return -1 !== e && (_$debug_63.instances.splice(e, 1), !0);
        SRTlib.send("]},");

  }
  (_$debug_63 = _$debug_63 = createDebug.debug = createDebug.default = createDebug, _$debug_63.coerce = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_63.coerce", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e instanceof Error ? e.stack || e.message : e;
        SRTlib.send("]},");

  }, _$debug_63.disable = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_63.disable", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    _$debug_63.enable("");
        SRTlib.send("]},");

  }, _$debug_63.enable = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_63.enable", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t;
    (_$debug_63.save(e), _$debug_63.names = [], _$debug_63.skips = []);
    var r = ("string" == typeof e ? e : "").split(/[\s,]+/), n = r.length;
    for (t = 0; t < n; t++) r[t] && ("-" === (e = r[t].replace(/\*/g, ".*?"))[0] ? _$debug_63.skips.push(new RegExp("^" + e.substr(1) + "$")) : _$debug_63.names.push(new RegExp("^" + e + "$")));
    for (t = 0; t < _$debug_63.instances.length; t++) {
      var i = _$debug_63.instances[t];
      i.enabled = _$debug_63.enabled(i.namespace);
    }
        SRTlib.send("]},");

  }, _$debug_63.enabled = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_63.enabled", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("*" === e[e.length - 1]) {
            SRTlib.send("]},");

      return !0;
    }
    var t, r;
    for ((t = 0, r = _$debug_63.skips.length); t < r; t++) if (_$debug_63.skips[t].test(e)) {
            SRTlib.send("]},");

      return !1;
    }
    for ((t = 0, r = _$debug_63.names.length); t < r; t++) if (_$debug_63.names[t].test(e)) {
            SRTlib.send("]},");

      return !0;
    }
        SRTlib.send("]},");

    return !1;
        SRTlib.send("]},");

  }, _$debug_63.humanize = _$ms_64, _$debug_63.instances = [], _$debug_63.names = [], _$debug_63.skips = [], _$debug_63.formatters = {});
  var _$browser_62 = {};
  (function (t) {
        SRTlib.send(`{ "anonymous": true, "function": "call21", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var r;
      try {
        r = _$browser_62.storage.debug;
      } catch (e) {}
            SRTlib.send("]},");

      return (!r && void 0 !== t && ("env" in t) && (r = t.env.DEBUG), r);
            SRTlib.send("]},");

    }
    ((_$browser_62 = _$browser_62 = _$debug_63).log = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.log", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
            SRTlib.send("]},");

    }, _$browser_62.formatArgs = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_62.formatArgs", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.useColors;
      if ((e[0] = (t ? "%c" : "") + this.namespace + (t ? " %c" : " ") + e[0] + (t ? "%c " : " ") + "+" + _$browser_62.humanize(this.diff), t)) {
        var r = "color: " + this.color;
        e.splice(1, 0, r, "color: inherit");
        var n = 0, i = 0;
        (e[0].replace(/%[a-zA-Z%]/g, function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call._$browser_62.formatArgs.e.replace", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          "%%" !== e && (n++, "%c" === e && (i = n));
                    SRTlib.send("]},");

        }), e.splice(i, 0, r));
      }
            SRTlib.send("]},");

    }, _$browser_62.save = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_62.save", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      try {
        null == t ? _$browser_62.storage.removeItem("debug") : _$browser_62.storage.debug = t;
      } catch (e) {}
            SRTlib.send("]},");

    }, _$browser_62.load = r, _$browser_62.useColors = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_62.useColors", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return !("undefined" == typeof window || !window.process || "renderer" !== window.process.type) || ("undefined" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) && ("undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
            SRTlib.send("]},");

    }, _$browser_62.storage = "undefined" != typeof chrome && void 0 !== chrome.storage ? chrome.storage.local : (function () {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_62.storage", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      try {
                SRTlib.send("]},");

        return window.localStorage;
      } catch (e) {}
            SRTlib.send("]},");

    })(), _$browser_62.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], _$browser_62.formatters.j = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_62.formatters.j", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      try {
                SRTlib.send("]},");

        return JSON.stringify(e);
      } catch (err) {
                SRTlib.send("]},");

        return "[UnexpectedJSONParseError]: " + err.message;
      }
            SRTlib.send("]},");

    }, _$browser_62.enable(r()));
        SRTlib.send("]},");

  }).call(this, _$browser_52);
  var debug = _$browser_62("socket.io-client:url"), _$url_60 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$url_60", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = e;
    (t = t || "undefined" != typeof location && location, null == e && (e = t.protocol + "//" + t.host), "string" == typeof e && ("/" === e.charAt(0) && (e = "/" === e.charAt(1) ? t.protocol + e : t.host + e), (/^(https?|wss?):\/\//).test(e) || (debug("protocol-less url %s", e), e = void 0 !== t ? t.protocol + "//" + e : "https://" + e), debug("parse %s", e), r = _$parseuri_49(e)), r.port || ((/^(http|ws)$/).test(r.protocol) ? r.port = "80" : (/^(http|ws)s$/).test(r.protocol) && (r.port = "443")), r.path = r.path || "/");
    var n = -1 !== r.host.indexOf(":") ? "[" + r.host + "]" : r.host;
        SRTlib.send("]},");

    return (r.id = r.protocol + "://" + n + ":" + r.port, r.href = r.protocol + "://" + n + (t && t.port === r.port ? "" : ":" + r.port), r);
        SRTlib.send("]},");

  }, __s_72 = 1e3, __m_72 = 60 * __s_72, __h_72 = 60 * __m_72, __d_72 = 24 * __h_72, __y_72 = 365.25 * __d_72;
  function __plural_72(e, t, r) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    if (!(e < t)) {
            SRTlib.send("]},");

      return e < 1.5 * t ? Math.floor(e / t) + " " + r : Math.ceil(e / t) + " " + r + "s";
    }
        SRTlib.send("]},");

  }
  var _$ms_72 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$ms_72", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    t = t || ({});
    var r, n = typeof e;
    if ("string" === n && e.length > 0) {
            SRTlib.send("]},");

      return (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$ms_72.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (!((e = String(e)).length > 100)) {
          var t = (/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i).exec(e);
          if (t) {
            var r = parseFloat(t[1]);
            switch ((t[2] || "ms").toLowerCase()) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case {
                                    SRTlib.send("]},");

                  return r * __y_72;
                }:
                return r * __y_72;
              case "days":
              case "day":
              case {
                                    SRTlib.send("]},");

                  return r * __d_72;
                }:
                return r * __d_72;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case {
                                    SRTlib.send("]},");

                  return r * __h_72;
                }:
                return r * __h_72;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case {
                                    SRTlib.send("]},");

                  return r * __m_72;
                }:
                return r * __m_72;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case {
                                    SRTlib.send("]},");

                  return r * __s_72;
                }:
                return r * __s_72;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case {
                                    SRTlib.send("]},");

                  return r;
                }:
                return r;
              default:
            }
          }
        }
                SRTlib.send("]},");

      })(e);
    }
    if ("number" === n && !1 === isNaN(e)) {
            SRTlib.send("]},");

      return t.long ? __plural_72(r = e, __d_72, "day") || __plural_72(r, __h_72, "hour") || __plural_72(r, __m_72, "minute") || __plural_72(r, __s_72, "second") || r + " ms" : (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$ms_72.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e >= __d_72 ? Math.round(e / __d_72) + "d" : e >= __h_72 ? Math.round(e / __h_72) + "h" : e >= __m_72 ? Math.round(e / __m_72) + "m" : e >= __s_72 ? Math.round(e / __s_72) + "s" : e + "ms";
                SRTlib.send("]},");

      })(e);
    }
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e));
        SRTlib.send("]},");

  }, _$debug_70 = {};
  function __createDebug_70(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t;
    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if (r.enabled) {
        var e = r, n = +new Date(), i = n - (t || n);
        (e.diff = i, e.prev = t, e.curr = n, t = n);
        for (var o = new Array(arguments.length), s = 0; s < o.length; s++) o[s] = arguments[s];
        (o[0] = _$debug_70.coerce(o[0]), "string" != typeof o[0] && o.unshift("%O"));
        var a = 0;
        (o[0] = o[0].replace(/%([a-zA-Z%])/g, function (t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "o.o.replace2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          if ("%%" === t) {
                        SRTlib.send("]},");

            return t;
          }
          a++;
          var n = _$debug_70.formatters[r];
          if ("function" == typeof n) {
            var i = o[a];
            (t = n.call(e, i), o.splice(a, 1), a--);
          }
                    SRTlib.send("]},");

          return t;
                    SRTlib.send("]},");

        }), _$debug_70.formatArgs.call(e, o), (r.log || _$debug_70.log || console.log.bind(console)).apply(e, o));
      }
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r.namespace = e, r.enabled = _$debug_70.enabled(e), r.useColors = _$debug_70.useColors(), r.color = (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.r.color2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t, r = 0;
      for (t in e) (r = (r << 5) - r + e.charCodeAt(t), r |= 0);
            SRTlib.send("]},");

      return _$debug_70.colors[Math.abs(r) % _$debug_70.colors.length];
            SRTlib.send("]},");

    })(e), r.destroy = __destroy_70, "function" == typeof _$debug_70.init && _$debug_70.init(r), _$debug_70.instances.push(r), r);
        SRTlib.send("]},");

  }
  function __destroy_70() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = _$debug_70.instances.indexOf(this);
        SRTlib.send("]},");

    return -1 !== e && (_$debug_70.instances.splice(e, 1), !0);
        SRTlib.send("]},");

  }
  (_$debug_70 = _$debug_70 = __createDebug_70.debug = __createDebug_70.default = __createDebug_70, _$debug_70.coerce = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_70.coerce", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e instanceof Error ? e.stack || e.message : e;
        SRTlib.send("]},");

  }, _$debug_70.disable = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_70.disable", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    _$debug_70.enable("");
        SRTlib.send("]},");

  }, _$debug_70.enable = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_70.enable", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t;
    (_$debug_70.save(e), _$debug_70.names = [], _$debug_70.skips = []);
    var r = ("string" == typeof e ? e : "").split(/[\s,]+/), n = r.length;
    for (t = 0; t < n; t++) r[t] && ("-" === (e = r[t].replace(/\*/g, ".*?"))[0] ? _$debug_70.skips.push(new RegExp("^" + e.substr(1) + "$")) : _$debug_70.names.push(new RegExp("^" + e + "$")));
    for (t = 0; t < _$debug_70.instances.length; t++) {
      var i = _$debug_70.instances[t];
      i.enabled = _$debug_70.enabled(i.namespace);
    }
        SRTlib.send("]},");

  }, _$debug_70.enabled = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_70.enabled", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("*" === e[e.length - 1]) {
            SRTlib.send("]},");

      return !0;
    }
    var t, r;
    for ((t = 0, r = _$debug_70.skips.length); t < r; t++) if (_$debug_70.skips[t].test(e)) {
            SRTlib.send("]},");

      return !1;
    }
    for ((t = 0, r = _$debug_70.names.length); t < r; t++) if (_$debug_70.names[t].test(e)) {
            SRTlib.send("]},");

      return !0;
    }
        SRTlib.send("]},");

    return !1;
        SRTlib.send("]},");

  }, _$debug_70.humanize = _$ms_72, _$debug_70.instances = [], _$debug_70.names = [], _$debug_70.skips = [], _$debug_70.formatters = {});
  var _$browser_69 = {};
  (function (t) {
        SRTlib.send(`{ "anonymous": true, "function": "call22", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var r;
      try {
        r = _$browser_69.storage.debug;
      } catch (e) {}
            SRTlib.send("]},");

      return (!r && void 0 !== t && ("env" in t) && (r = t.env.DEBUG), r);
            SRTlib.send("]},");

    }
    ((_$browser_69 = _$browser_69 = _$debug_70).log = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.log2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
            SRTlib.send("]},");

    }, _$browser_69.formatArgs = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_69.formatArgs", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.useColors;
      if ((e[0] = (t ? "%c" : "") + this.namespace + (t ? " %c" : " ") + e[0] + (t ? "%c " : " ") + "+" + _$browser_69.humanize(this.diff), t)) {
        var r = "color: " + this.color;
        e.splice(1, 0, r, "color: inherit");
        var n = 0, i = 0;
        (e[0].replace(/%[a-zA-Z%]/g, function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call._$browser_69.formatArgs.e.replace", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          "%%" !== e && (n++, "%c" === e && (i = n));
                    SRTlib.send("]},");

        }), e.splice(i, 0, r));
      }
            SRTlib.send("]},");

    }, _$browser_69.save = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_69.save", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      try {
        null == t ? _$browser_69.storage.removeItem("debug") : _$browser_69.storage.debug = t;
      } catch (e) {}
            SRTlib.send("]},");

    }, _$browser_69.load = r, _$browser_69.useColors = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_69.useColors", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return !("undefined" == typeof window || !window.process || "renderer" !== window.process.type) || ("undefined" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) && ("undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
            SRTlib.send("]},");

    }, _$browser_69.storage = "undefined" != typeof chrome && void 0 !== chrome.storage ? chrome.storage.local : (function () {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_69.storage", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      try {
                SRTlib.send("]},");

        return window.localStorage;
      } catch (e) {}
            SRTlib.send("]},");

    })(), _$browser_69.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], _$browser_69.formatters.j = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_69.formatters.j", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      try {
                SRTlib.send("]},");

        return JSON.stringify(e);
      } catch (err) {
                SRTlib.send("]},");

        return "[UnexpectedJSONParseError]: " + err.message;
      }
            SRTlib.send("]},");

    }, _$browser_69.enable(r()));
        SRTlib.send("]},");

  }).call(this, _$browser_52);
  var _$componentEmitter_68 = {
    exports: {}
  };
  function Emitter(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (e) {
            SRTlib.send("]},");

      return (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement36", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var t in Emitter.prototype) e[t] = Emitter.prototype[t];
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      })(e);
    }
        SRTlib.send("]},");

  }
  (_$componentEmitter_68.exports = Emitter, Emitter.prototype.on = Emitter.prototype.addEventListener = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "Emitter.prototype.on.Emitter.prototype.addEventListener", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (this._callbacks = this._callbacks || ({}), (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this);
        SRTlib.send("]},");

  }, Emitter.prototype.once = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "Emitter.prototype.once", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.off(e, r), t.apply(this, arguments));
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r.fn = t, this.on(e, r), this);
        SRTlib.send("]},");

  }, Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "Emitter.prototype.off.Emitter.prototype.removeListener.Emitter.prototype.removeAllListeners.Emitter.prototype.removeEventListener", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if ((this._callbacks = this._callbacks || ({}), 0 == arguments.length)) {
            SRTlib.send("]},");

      return (this._callbacks = {}, this);
    }
    var r, n = this._callbacks["$" + e];
    if (!n) {
            SRTlib.send("]},");

      return this;
    }
    if (1 == arguments.length) {
            SRTlib.send("]},");

      return (delete this._callbacks["$" + e], this);
    }
    for (var i = 0; i < n.length; i++) if ((r = n[i]) === t || r.fn === t) {
      n.splice(i, 1);
      break;
    }
        SRTlib.send("]},");

    return this;
        SRTlib.send("]},");

  }, Emitter.prototype.emit = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Emitter.prototype.emit", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this._callbacks = this._callbacks || ({});
    var t = [].slice.call(arguments, 1), r = this._callbacks["$" + e];
    if (r) for (var n = 0, i = (r = r.slice(0)).length; n < i; ++n) r[n].apply(this, t);
        SRTlib.send("]},");

    return this;
        SRTlib.send("]},");

  }, Emitter.prototype.listeners = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Emitter.prototype.listeners", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (this._callbacks = this._callbacks || ({}), this._callbacks["$" + e] || []);
        SRTlib.send("]},");

  }, Emitter.prototype.hasListeners = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Emitter.prototype.hasListeners", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return !!this.listeners(e).length;
        SRTlib.send("]},");

  }, _$componentEmitter_68 = _$componentEmitter_68.exports);
  var __toString_71 = ({}).toString, _$isarray_71 = Array.isArray || (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$isarray_71", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return "[object Array]" == __toString_71.call(e);
        SRTlib.send("]},");

  }), _$isBuffer_67 = {};
  (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "call24", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    _$isBuffer_67 = function (i) {
            SRTlib.send(`{ "anonymous": true, "function": "call23", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return t && e.isBuffer(i) || r && (i instanceof ArrayBuffer || n(i));
            SRTlib.send("]},");

    };
    var t = "function" == typeof e && "function" == typeof e.isBuffer, r = "function" == typeof ArrayBuffer, n = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "call.n2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return "function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(e) : e.buffer instanceof ArrayBuffer;
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  }).call(this, _$buffer_8({}).Buffer);
  var _$binary_65 = {}, __toString_65 = Object.prototype.toString, withNativeBlob = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === __toString_65.call(Blob), withNativeFile = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === __toString_65.call(File);
  (_$binary_65.deconstructPacket = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$binary_65.deconstructPacket", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = [], r = e.data, n = e;
        SRTlib.send("]},");

    return (n.data = (function e(t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$binary_65.deconstructPacket.ReturnStatement.n.data.e", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (!t) {
                SRTlib.send("]},");

        return t;
      }
      if (_$isBuffer_67(t)) {
        var n = {
          _placeholder: !0,
          num: r.length
        };
                SRTlib.send("]},");

        return (r.push(t), n);
      }
      if (_$isarray_71(t)) {
        for (var i = new Array(t.length), o = 0; o < t.length; o++) i[o] = e(t[o], r);
                SRTlib.send("]},");

        return i;
      }
      if ("object" == typeof t && !(t instanceof Date)) {
        i = {};
        for (var s in t) i[s] = e(t[s], r);
                SRTlib.send("]},");

        return i;
      }
            SRTlib.send("]},");

      return t;
            SRTlib.send("]},");

    })(r, t), n.attachments = t.length, {
      packet: n,
      buffers: t
    });
        SRTlib.send("]},");

  }, _$binary_65.reconstructPacket = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$binary_65.reconstructPacket", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (e.data = (function e(t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$binary_65.reconstructPacket.ReturnStatement.e.data.e", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (!t) {
                SRTlib.send("]},");

        return t;
      }
      if (t && t._placeholder) {
                SRTlib.send("]},");

        return r[t.num];
      }
      if (_$isarray_71(t)) for (var n = 0; n < t.length; n++) t[n] = e(t[n], r); else if ("object" == typeof t) for (var i in t) t[i] = e(t[i], r);
            SRTlib.send("]},");

      return t;
            SRTlib.send("]},");

    })(e.data, t), e.attachments = void 0, e);
        SRTlib.send("]},");

  }, _$binary_65.removeBlobs = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$binary_65.removeBlobs", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = 0, n = e;
    (!(function e(i, o, s) {
            SRTlib.send(`{ "anonymous": true, "function": "_$binary_65.removeBlobs.e", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      if (!i) {
                SRTlib.send("]},");

        return i;
      }
      if (withNativeBlob && i instanceof Blob || withNativeFile && i instanceof File) {
        r++;
        var a = new FileReader();
        (a.onload = function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$binary_65.removeBlobs.e.a.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          (s ? s[o] = this.result : n = this.result, --r || t(n));
                    SRTlib.send("]},");

        }, a.readAsArrayBuffer(i));
      } else if (_$isarray_71(i)) for (var u = 0; u < i.length; u++) e(i[u], u, i); else if ("object" == typeof i && !_$isBuffer_67(i)) for (var l in i) e(i[l], l, i);
            SRTlib.send("]},");

    })(n), r || t(n));
        SRTlib.send("]},");

  });
  var _$socketIoParser_66 = {}, __debug_66 = _$browser_69("socket.io-parser");
  function Encoder() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

  }
  (_$socketIoParser_66.protocol = 4, _$socketIoParser_66.types = ["CONNECT", "DISCONNECT", "EVENT", "ACK", "ERROR", "BINARY_EVENT", "BINARY_ACK"], _$socketIoParser_66.CONNECT = 0, _$socketIoParser_66.DISCONNECT = 1, _$socketIoParser_66.EVENT = 2, _$socketIoParser_66.ACK = 3, _$socketIoParser_66.ERROR = 4, _$socketIoParser_66.BINARY_EVENT = 5, _$socketIoParser_66.BINARY_ACK = 6, _$socketIoParser_66.Encoder = Encoder, _$socketIoParser_66.Decoder = Decoder);
  var ERROR_PACKET = _$socketIoParser_66.ERROR + '"encode error"';
  function encodeAsString(t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var r = "" + t.type;
    if ((_$socketIoParser_66.BINARY_EVENT !== t.type && _$socketIoParser_66.BINARY_ACK !== t.type || (r += t.attachments + "-"), t.nsp && "/" !== t.nsp && (r += t.nsp + ","), null != t.id && (r += t.id), null != t.data)) {
      var n = (function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "n2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        try {
                    SRTlib.send("]},");

          return JSON.stringify(t);
        } catch (e) {
                    SRTlib.send("]},");

          return !1;
        }
                SRTlib.send("]},");

      })(t.data);
      if (!1 === n) {
                SRTlib.send("]},");

        return ERROR_PACKET;
      }
      r += n;
    }
        SRTlib.send("]},");

    return (__debug_66("encoded %j as %s", t, r), r);
        SRTlib.send("]},");

  }
  function Decoder() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    this.reconstructor = null;
        SRTlib.send("]},");

  }
  function BinaryReconstructor(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (this.reconPack = e, this.buffers = []);
        SRTlib.send("]},");

  }
  function error(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return {
      type: _$socketIoParser_66.ERROR,
      data: "parser error: " + e
    };
        SRTlib.send("]},");

  }
  (Encoder.prototype.encode = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "Encoder.prototype.encode3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    (__debug_66("encoding packet %j", e), _$socketIoParser_66.BINARY_EVENT === e.type || _$socketIoParser_66.BINARY_ACK === e.type ? (function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "Encoder.prototype.encode2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      _$binary_65.removeBlobs(e, function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "Encoder.prototype.encode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = _$binary_65.deconstructPacket(e), n = encodeAsString(r.packet), i = r.buffers;
        (i.unshift(n), t(i));
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    })(e, t) : t([encodeAsString(e)]));
        SRTlib.send("]},");

  }, _$componentEmitter_68(Decoder.prototype), Decoder.prototype.add = function (t) {
        SRTlib.send(`{ "anonymous": true, "function": "Decoder.prototype.add2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var r;
    if ("string" == typeof t) (r = (function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "Decoder.prototype.add", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r = 0, n = {
        type: Number(t.charAt(0))
      };
      if (null == _$socketIoParser_66.types[n.type]) {
                SRTlib.send("]},");

        return error("unknown packet type " + n.type);
      }
      if (_$socketIoParser_66.BINARY_EVENT === n.type || _$socketIoParser_66.BINARY_ACK === n.type) {
        for (var i = ""; "-" !== t.charAt(++r) && (i += t.charAt(r), r != t.length); ) ;
        if (i != Number(i) || "-" !== t.charAt(r)) throw new Error("Illegal attachments");
        n.attachments = Number(i);
      }
      if ("/" === t.charAt(r + 1)) for (n.nsp = ""; ++r; ) {
        if ("," === (s = t.charAt(r))) break;
        if ((n.nsp += s, r === t.length)) break;
      } else n.nsp = "/";
      var o = t.charAt(r + 1);
      if ("" !== o && Number(o) == o) {
        for (n.id = ""; ++r; ) {
          var s;
          if (null == (s = t.charAt(r)) || Number(s) != s) {
            --r;
            break;
          }
          if ((n.id += t.charAt(r), r === t.length)) break;
        }
        n.id = Number(n.id);
      }
      if (t.charAt(++r)) {
        var a = (function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "Decoder.prototype.add.a", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          try {
                        SRTlib.send("]},");

            return JSON.parse(t);
          } catch (e) {
                        SRTlib.send("]},");

            return !1;
          }
                    SRTlib.send("]},");

        })(t.substr(r));
        if (!(!1 !== a && (n.type === _$socketIoParser_66.ERROR || _$isarray_71(a)))) {
                    SRTlib.send("]},");

          return error("invalid payload");
        }
        n.data = a;
      }
            SRTlib.send("]},");

      return (__debug_66("decoded %s as %j", t, n), n);
            SRTlib.send("]},");

    })(t), _$socketIoParser_66.BINARY_EVENT === r.type || _$socketIoParser_66.BINARY_ACK === r.type ? (this.reconstructor = new BinaryReconstructor(r), 0 === this.reconstructor.reconPack.attachments && this.emit("decoded", r)) : this.emit("decoded", r)); else {
      if (!_$isBuffer_67(t) && !t.base64) throw new Error("Unknown type: " + t);
      if (!this.reconstructor) throw new Error("got binary data when not reconstructing a packet");
      (r = this.reconstructor.takeBinaryData(t)) && (this.reconstructor = null, this.emit("decoded", r));
    }
        SRTlib.send("]},");

  }, Decoder.prototype.destroy = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Decoder.prototype.destroy", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    this.reconstructor && this.reconstructor.finishedReconstruction();
        SRTlib.send("]},");

  }, BinaryReconstructor.prototype.takeBinaryData = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "BinaryReconstructor.prototype.takeBinaryData", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ((this.buffers.push(e), this.buffers.length === this.reconPack.attachments)) {
      var t = _$binary_65.reconstructPacket(this.reconPack, this.buffers);
            SRTlib.send("]},");

      return (this.finishedReconstruction(), t);
    }
        SRTlib.send("]},");

    return null;
        SRTlib.send("]},");

  }, BinaryReconstructor.prototype.finishedReconstruction = function () {
        SRTlib.send(`{ "anonymous": true, "function": "BinaryReconstructor.prototype.finishedReconstruction", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (this.reconPack = null, this.buffers = []);
        SRTlib.send("]},");

  });
  var _$componentEmitter_26 = {
    exports: {}
  };
  function __Emitter_26(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (e) {
            SRTlib.send("]},");

      return (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement37", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var t in __Emitter_26.prototype) e[t] = __Emitter_26.prototype[t];
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      })(e);
    }
        SRTlib.send("]},");

  }
  (_$componentEmitter_26.exports = __Emitter_26, __Emitter_26.prototype.on = __Emitter_26.prototype.addEventListener = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_26.prototype.on.__Emitter_26.prototype.addEventListener", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (this._callbacks = this._callbacks || ({}), (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this);
        SRTlib.send("]},");

  }, __Emitter_26.prototype.once = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_26.prototype.once", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.off(e, r), t.apply(this, arguments));
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r.fn = t, this.on(e, r), this);
        SRTlib.send("]},");

  }, __Emitter_26.prototype.off = __Emitter_26.prototype.removeListener = __Emitter_26.prototype.removeAllListeners = __Emitter_26.prototype.removeEventListener = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_26.prototype.off.__Emitter_26.prototype.removeListener.__Emitter_26.prototype.removeAllListeners.__Emitter_26.prototype.removeEventListener", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if ((this._callbacks = this._callbacks || ({}), 0 == arguments.length)) {
            SRTlib.send("]},");

      return (this._callbacks = {}, this);
    }
    var r, n = this._callbacks["$" + e];
    if (!n) {
            SRTlib.send("]},");

      return this;
    }
    if (1 == arguments.length) {
            SRTlib.send("]},");

      return (delete this._callbacks["$" + e], this);
    }
    for (var i = 0; i < n.length; i++) if ((r = n[i]) === t || r.fn === t) {
      n.splice(i, 1);
      break;
    }
        SRTlib.send("]},");

    return this;
        SRTlib.send("]},");

  }, __Emitter_26.prototype.emit = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_26.prototype.emit", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this._callbacks = this._callbacks || ({});
    var t = [].slice.call(arguments, 1), r = this._callbacks["$" + e];
    if (r) for (var n = 0, i = (r = r.slice(0)).length; n < i; ++n) r[n].apply(this, t);
        SRTlib.send("]},");

    return this;
        SRTlib.send("]},");

  }, __Emitter_26.prototype.listeners = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_26.prototype.listeners", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (this._callbacks = this._callbacks || ({}), this._callbacks["$" + e] || []);
        SRTlib.send("]},");

  }, __Emitter_26.prototype.hasListeners = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_26.prototype.hasListeners", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return !!this.listeners(e).length;
        SRTlib.send("]},");

  }, _$componentEmitter_26 = _$componentEmitter_26.exports);
  var __s_29 = 1e3, __m_29 = 60 * __s_29, __h_29 = 60 * __m_29, __d_29 = 24 * __h_29, __y_29 = 365.25 * __d_29;
  function __plural_29(e, t, r) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    if (!(e < t)) {
            SRTlib.send("]},");

      return e < 1.5 * t ? Math.floor(e / t) + " " + r : Math.ceil(e / t) + " " + r + "s";
    }
        SRTlib.send("]},");

  }
  var _$ms_29 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$ms_29", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    t = t || ({});
    var r, n = typeof e;
    if ("string" === n && e.length > 0) {
            SRTlib.send("]},");

      return (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$ms_29.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (!((e = String(e)).length > 100)) {
          var t = (/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i).exec(e);
          if (t) {
            var r = parseFloat(t[1]);
            switch ((t[2] || "ms").toLowerCase()) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case {
                                    SRTlib.send("]},");

                  return r * __y_29;
                }:
                return r * __y_29;
              case "days":
              case "day":
              case {
                                    SRTlib.send("]},");

                  return r * __d_29;
                }:
                return r * __d_29;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case {
                                    SRTlib.send("]},");

                  return r * __h_29;
                }:
                return r * __h_29;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case {
                                    SRTlib.send("]},");

                  return r * __m_29;
                }:
                return r * __m_29;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case {
                                    SRTlib.send("]},");

                  return r * __s_29;
                }:
                return r * __s_29;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case {
                                    SRTlib.send("]},");

                  return r;
                }:
                return r;
              default:
            }
          }
        }
                SRTlib.send("]},");

      })(e);
    }
    if ("number" === n && !1 === isNaN(e)) {
            SRTlib.send("]},");

      return t.long ? __plural_29(r = e, __d_29, "day") || __plural_29(r, __h_29, "hour") || __plural_29(r, __m_29, "minute") || __plural_29(r, __s_29, "second") || r + " ms" : (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$ms_29.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e >= __d_29 ? Math.round(e / __d_29) + "d" : e >= __h_29 ? Math.round(e / __h_29) + "h" : e >= __m_29 ? Math.round(e / __m_29) + "m" : e >= __s_29 ? Math.round(e / __s_29) + "s" : e + "ms";
                SRTlib.send("]},");

      })(e);
    }
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e));
        SRTlib.send("]},");

  }, _$debug_28 = {};
  function __createDebug_28(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t;
    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if (r.enabled) {
        var e = r, n = +new Date(), i = n - (t || n);
        (e.diff = i, e.prev = t, e.curr = n, t = n);
        for (var o = new Array(arguments.length), s = 0; s < o.length; s++) o[s] = arguments[s];
        (o[0] = _$debug_28.coerce(o[0]), "string" != typeof o[0] && o.unshift("%O"));
        var a = 0;
        (o[0] = o[0].replace(/%([a-zA-Z%])/g, function (t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "o.o.replace3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          if ("%%" === t) {
                        SRTlib.send("]},");

            return t;
          }
          a++;
          var n = _$debug_28.formatters[r];
          if ("function" == typeof n) {
            var i = o[a];
            (t = n.call(e, i), o.splice(a, 1), a--);
          }
                    SRTlib.send("]},");

          return t;
                    SRTlib.send("]},");

        }), _$debug_28.formatArgs.call(e, o), (r.log || _$debug_28.log || console.log.bind(console)).apply(e, o));
      }
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r.namespace = e, r.enabled = _$debug_28.enabled(e), r.useColors = _$debug_28.useColors(), r.color = (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.r.color3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t, r = 0;
      for (t in e) (r = (r << 5) - r + e.charCodeAt(t), r |= 0);
            SRTlib.send("]},");

      return _$debug_28.colors[Math.abs(r) % _$debug_28.colors.length];
            SRTlib.send("]},");

    })(e), r.destroy = __destroy_28, "function" == typeof _$debug_28.init && _$debug_28.init(r), _$debug_28.instances.push(r), r);
        SRTlib.send("]},");

  }
  function __destroy_28() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = _$debug_28.instances.indexOf(this);
        SRTlib.send("]},");

    return -1 !== e && (_$debug_28.instances.splice(e, 1), !0);
        SRTlib.send("]},");

  }
  (_$debug_28 = _$debug_28 = __createDebug_28.debug = __createDebug_28.default = __createDebug_28, _$debug_28.coerce = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_28.coerce", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e instanceof Error ? e.stack || e.message : e;
        SRTlib.send("]},");

  }, _$debug_28.disable = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_28.disable", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    _$debug_28.enable("");
        SRTlib.send("]},");

  }, _$debug_28.enable = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_28.enable", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t;
    (_$debug_28.save(e), _$debug_28.names = [], _$debug_28.skips = []);
    var r = ("string" == typeof e ? e : "").split(/[\s,]+/), n = r.length;
    for (t = 0; t < n; t++) r[t] && ("-" === (e = r[t].replace(/\*/g, ".*?"))[0] ? _$debug_28.skips.push(new RegExp("^" + e.substr(1) + "$")) : _$debug_28.names.push(new RegExp("^" + e + "$")));
    for (t = 0; t < _$debug_28.instances.length; t++) {
      var i = _$debug_28.instances[t];
      i.enabled = _$debug_28.enabled(i.namespace);
    }
        SRTlib.send("]},");

  }, _$debug_28.enabled = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$debug_28.enabled", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("*" === e[e.length - 1]) {
            SRTlib.send("]},");

      return !0;
    }
    var t, r;
    for ((t = 0, r = _$debug_28.skips.length); t < r; t++) if (_$debug_28.skips[t].test(e)) {
            SRTlib.send("]},");

      return !1;
    }
    for ((t = 0, r = _$debug_28.names.length); t < r; t++) if (_$debug_28.names[t].test(e)) {
            SRTlib.send("]},");

      return !0;
    }
        SRTlib.send("]},");

    return !1;
        SRTlib.send("]},");

  }, _$debug_28.humanize = _$ms_29, _$debug_28.instances = [], _$debug_28.names = [], _$debug_28.skips = [], _$debug_28.formatters = {});
  var _$browser_27 = {};
  (function (t) {
        SRTlib.send(`{ "anonymous": true, "function": "call25", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var r;
      try {
        r = _$browser_27.storage.debug;
      } catch (e) {}
            SRTlib.send("]},");

      return (!r && void 0 !== t && ("env" in t) && (r = t.env.DEBUG), r);
            SRTlib.send("]},");

    }
    ((_$browser_27 = _$browser_27 = _$debug_28).log = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.log3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
            SRTlib.send("]},");

    }, _$browser_27.formatArgs = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_27.formatArgs", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.useColors;
      if ((e[0] = (t ? "%c" : "") + this.namespace + (t ? " %c" : " ") + e[0] + (t ? "%c " : " ") + "+" + _$browser_27.humanize(this.diff), t)) {
        var r = "color: " + this.color;
        e.splice(1, 0, r, "color: inherit");
        var n = 0, i = 0;
        (e[0].replace(/%[a-zA-Z%]/g, function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "call._$browser_27.formatArgs.e.replace", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          "%%" !== e && (n++, "%c" === e && (i = n));
                    SRTlib.send("]},");

        }), e.splice(i, 0, r));
      }
            SRTlib.send("]},");

    }, _$browser_27.save = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_27.save", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      try {
        null == t ? _$browser_27.storage.removeItem("debug") : _$browser_27.storage.debug = t;
      } catch (e) {}
            SRTlib.send("]},");

    }, _$browser_27.load = r, _$browser_27.useColors = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_27.useColors", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return !("undefined" == typeof window || !window.process || "renderer" !== window.process.type) || ("undefined" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) && ("undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
            SRTlib.send("]},");

    }, _$browser_27.storage = "undefined" != typeof chrome && void 0 !== chrome.storage ? chrome.storage.local : (function () {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_27.storage", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      try {
                SRTlib.send("]},");

        return window.localStorage;
      } catch (e) {}
            SRTlib.send("]},");

    })(), _$browser_27.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], _$browser_27.formatters.j = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "call._$browser_27.formatters.j", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      try {
                SRTlib.send("]},");

        return JSON.stringify(e);
      } catch (err) {
                SRTlib.send("]},");

        return "[UnexpectedJSONParseError]: " + err.message;
      }
            SRTlib.send("]},");

    }, _$browser_27.enable(r()));
        SRTlib.send("]},");

  }).call(this, _$browser_52);
  var indexOf = [].indexOf, _$indexof_39 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$indexof_39", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (indexOf) {
            SRTlib.send("]},");

      return e.indexOf(t);
    }
    for (var r = 0; r < e.length; ++r) if (e[r] === t) {
            SRTlib.send("]},");

      return r;
    }
        SRTlib.send("]},");

    return -1;
        SRTlib.send("]},");

  }, _$parseqs_48 = {
    encode: function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$parseqs_48.encode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = "";
      for (var r in e) e.hasOwnProperty(r) && (t.length && (t += "&"), t += encodeURIComponent(r) + "=" + encodeURIComponent(e[r]));
            SRTlib.send("]},");

      return t;
            SRTlib.send("]},");

    },
    decode: function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$parseqs_48.decode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = {}, r = e.split("&"), n = 0, i = r.length; n < i; n++) {
        var o = r[n].split("=");
        t[decodeURIComponent(o[0])] = decodeURIComponent(o[1]);
      }
            SRTlib.send("]},");

      return t;
            SRTlib.send("]},");

    }
  }, _$keys_31 = Object.keys || (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$keys_31", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = [], r = Object.prototype.hasOwnProperty;
    for (var n in e) r.call(e, n) && t.push(n);
        SRTlib.send("]},");

    return t;
        SRTlib.send("]},");

  }), __toString_36 = ({}).toString, _$isarray_36 = Array.isArray || (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$isarray_36", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return "[object Array]" == __toString_36.call(e);
        SRTlib.send("]},");

  }), _$hasBinary_35 = {};
  (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "call26", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = Object.prototype.toString, r = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === t.call(Blob), n = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === t.call(File);
    _$hasBinary_35 = function t(i) {
            SRTlib.send(`{ "anonymous": true, "function": "call.t2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (!i || "object" != typeof i) {
                SRTlib.send("]},");

        return !1;
      }
      if (_$isarray_36(i)) {
        for (var o = 0, s = i.length; o < s; o++) if (t(i[o])) {
                    SRTlib.send("]},");

          return !0;
        }
                SRTlib.send("]},");

        return !1;
      }
      if ("function" == typeof e && e.isBuffer && e.isBuffer(i) || "function" == typeof ArrayBuffer && i instanceof ArrayBuffer || r && i instanceof Blob || n && i instanceof File) {
                SRTlib.send("]},");

        return !0;
      }
      if (i.toJSON && "function" == typeof i.toJSON && 1 === arguments.length) {
                SRTlib.send("]},");

        return t(i.toJSON(), !0);
      }
      for (var a in i) if (Object.prototype.hasOwnProperty.call(i, a) && t(i[a])) {
                SRTlib.send("]},");

        return !0;
      }
            SRTlib.send("]},");

      return !1;
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  }).call(this, _$buffer_8({}).Buffer);
  var _$arraybufferSlice_2 = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$arraybufferSlice_2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    var n = e.byteLength;
    if ((t = t || 0, r = r || n, e.slice)) {
            SRTlib.send("]},");

      return e.slice(t, r);
    }
    if ((t < 0 && (t += n), r < 0 && (r += n), r > n && (r = n), t >= n || t >= r || 0 === n)) {
            SRTlib.send("]},");

      return new ArrayBuffer(0);
    }
    for (var i = new Uint8Array(e), o = new Uint8Array(r - t), s = t, a = 0; s < r; (s++, a++)) o[a] = i[s];
        SRTlib.send("]},");

    return o.buffer;
        SRTlib.send("]},");

  };
  function __noop_1() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

  }
  var _$after_1 = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$after_1", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    var n = !1;
        SRTlib.send("]},");

    return (r = r || __noop_1, i.count = e, 0 === e ? t() : i);
    function i(e, o) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (i.count <= 0) throw new Error("after called too many times");
      (--i.count, e ? (n = !0, t(e), t = r) : 0 !== i.count || n || t(null, o));
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

  }, byteArray, byteCount, byteIndex, stringFromCharCode = String.fromCharCode;
  function ucs2decode(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    for (var t, r, n = [], i = 0, o = e.length; i < o; ) (t = e.charCodeAt(i++)) >= 55296 && t <= 56319 && i < o ? 56320 == (64512 & (r = e.charCodeAt(i++))) ? n.push(((1023 & t) << 10) + (1023 & r) + 65536) : (n.push(t), i--) : n.push(t);
        SRTlib.send("]},");

    return n;
        SRTlib.send("]},");

  }
  function checkScalarValue(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (e >= 55296 && e <= 57343) {
      if (t) throw Error("Lone surrogate U+" + e.toString(16).toUpperCase() + " is not a scalar value");
            SRTlib.send("]},");

      return !1;
    }
        SRTlib.send("]},");

    return !0;
        SRTlib.send("]},");

  }
  function createByte(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return stringFromCharCode(e >> t & 63 | 128);
        SRTlib.send("]},");

  }
  function encodeCodePoint(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (0 == (4294967168 & e)) {
            SRTlib.send("]},");

      return stringFromCharCode(e);
    }
    var r = "";
        SRTlib.send("]},");

    return (0 == (4294965248 & e) ? r = stringFromCharCode(e >> 6 & 31 | 192) : 0 == (4294901760 & e) ? (checkScalarValue(e, t) || (e = 65533), r = stringFromCharCode(e >> 12 & 15 | 224), r += createByte(e, 6)) : 0 == (4292870144 & e) && (r = stringFromCharCode(e >> 18 & 7 | 240), r += createByte(e, 12), r += createByte(e, 6)), r + stringFromCharCode(63 & e | 128));
        SRTlib.send("]},");

  }
  function readContinuationByte() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    if (byteIndex >= byteCount) throw Error("Invalid byte index");
    var e = 255 & byteArray[byteIndex];
    if ((byteIndex++, 128 == (192 & e))) {
            SRTlib.send("]},");

      return 63 & e;
    }
    throw Error("Invalid continuation byte");
        SRTlib.send("]},");

  }
  function decodeSymbol(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    if (byteIndex > byteCount) throw Error("Invalid byte index");
    if (byteIndex == byteCount) {
            SRTlib.send("]},");

      return !1;
    }
    if ((t = 255 & byteArray[byteIndex], byteIndex++, 0 == (128 & t))) {
            SRTlib.send("]},");

      return t;
    }
    if (192 == (224 & t)) {
      if ((r = (31 & t) << 6 | readContinuationByte()) >= 128) {
                SRTlib.send("]},");

        return r;
      }
      throw Error("Invalid continuation byte");
    }
    if (224 == (240 & t)) {
      if ((r = (15 & t) << 12 | readContinuationByte() << 6 | readContinuationByte()) >= 2048) {
                SRTlib.send("]},");

        return checkScalarValue(r, e) ? r : 65533;
      }
      throw Error("Invalid continuation byte");
    }
    if (240 == (248 & t) && (r = (7 & t) << 18 | readContinuationByte() << 12 | readContinuationByte() << 6 | readContinuationByte()) >= 65536 && r <= 1114111) {
            SRTlib.send("]},");

      return r;
    }
    throw Error("Invalid UTF-8 detected");
        SRTlib.send("]},");

  }
  var _$utf8_32 = {
    encode: function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$utf8_32.encode", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      for (var r = !1 !== (t = t || ({})).strict, n = ucs2decode(e), i = n.length, o = -1, s = ""; ++o < i; ) s += encodeCodePoint(n[o], r);
            SRTlib.send("]},");

      return s;
            SRTlib.send("]},");

    },
    decode: function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$utf8_32.decode", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = !1 !== (t = t || ({})).strict;
      (byteArray = ucs2decode(e), byteCount = byteArray.length, byteIndex = 0);
      for (var n, i = []; !1 !== (n = decodeSymbol(r)); ) i.push(n);
            SRTlib.send("]},");

      return (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$utf8_32.decode.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var t, r = e.length, n = -1, i = ""; ++n < r; ) ((t = e[n]) > 65535 && (i += stringFromCharCode((t -= 65536) >>> 10 & 1023 | 55296), t = 56320 | 1023 & t), i += stringFromCharCode(t));
                SRTlib.send("]},");

        return i;
                SRTlib.send("]},");

      })(i);
            SRTlib.send("]},");

    }
  }, _$base64Arraybuffer_4 = {};
  !(function () {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey32", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    "use strict";
    for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", t = new Uint8Array(256), r = 0; r < e.length; r++) t[e.charCodeAt(r)] = r;
    (_$base64Arraybuffer_4.encode = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$base64Arraybuffer_4.encode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r, n = new Uint8Array(t), i = n.length, o = "";
      for (r = 0; r < i; r += 3) (o += e[n[r] >> 2], o += e[(3 & n[r]) << 4 | n[r + 1] >> 4], o += e[(15 & n[r + 1]) << 2 | n[r + 2] >> 6], o += e[63 & n[r + 2]]);
            SRTlib.send("]},");

      return (i % 3 == 2 ? o = o.substring(0, o.length - 1) + "=" : i % 3 == 1 && (o = o.substring(0, o.length - 2) + "=="), o);
            SRTlib.send("]},");

    }, _$base64Arraybuffer_4.decode = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$base64Arraybuffer_4.decode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r, n, i, o, s, a = .75 * e.length, u = e.length, l = 0;
      "=" === e[e.length - 1] && (a--, "=" === e[e.length - 2] && a--);
      var c = new ArrayBuffer(a), p = new Uint8Array(c);
      for (r = 0; r < u; r += 4) (n = t[e.charCodeAt(r)], i = t[e.charCodeAt(r + 1)], o = t[e.charCodeAt(r + 2)], s = t[e.charCodeAt(r + 3)], p[l++] = n << 2 | i >> 4, p[l++] = (15 & i) << 4 | o >> 2, p[l++] = (3 & o) << 6 | 63 & s);
            SRTlib.send("]},");

      return c;
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  })();
  var _$blob_6 = {}, BlobBuilder = void 0 !== BlobBuilder ? BlobBuilder : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder && MozBlobBuilder, blobSupported = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "blobSupported", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    try {
            SRTlib.send("]},");

      return 2 === new Blob(["hi"]).size;
    } catch (e) {
            SRTlib.send("]},");

      return !1;
    }
        SRTlib.send("]},");

  })(), blobSupportsArrayBufferView = blobSupported && (function () {
        SRTlib.send(`{ "anonymous": true, "function": "blobSupportsArrayBufferView", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    try {
            SRTlib.send("]},");

      return 2 === new Blob([new Uint8Array([1, 2])]).size;
    } catch (e) {
            SRTlib.send("]},");

      return !1;
    }
        SRTlib.send("]},");

  })(), blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;
  function mapArrayBufferViews(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e.map(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement38", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (e.buffer instanceof ArrayBuffer) {
        var t = e.buffer;
        if (e.byteLength !== t.byteLength) {
          var r = new Uint8Array(e.byteLength);
          (r.set(new Uint8Array(t, e.byteOffset, e.byteLength)), t = r.buffer);
        }
                SRTlib.send("]},");

        return t;
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }
  function BlobBuilderConstructor(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    t = t || ({});
    var r = new BlobBuilder();
        SRTlib.send("]},");

    return (mapArrayBufferViews(e).forEach(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.forEach2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      r.append(e);
            SRTlib.send("]},");

    }), t.type ? r.getBlob(t.type) : r.getBlob());
        SRTlib.send("]},");

  }
  function BlobConstructor(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return new Blob(mapArrayBufferViews(e), t || ({}));
        SRTlib.send("]},");

  }
  ("undefined" != typeof Blob && (BlobBuilderConstructor.prototype = Blob.prototype, BlobConstructor.prototype = Blob.prototype), _$blob_6 = blobSupported ? blobSupportsArrayBufferView ? Blob : BlobConstructor : blobBuilderSupported ? BlobBuilderConstructor : void 0);
  var _$browser_30 = {}, base64encoder;
  "undefined" != typeof ArrayBuffer && (base64encoder = _$base64Arraybuffer_4);
  var isAndroid = "undefined" != typeof navigator && (/Android/i).test(navigator.userAgent), isPhantomJS = "undefined" != typeof navigator && (/PhantomJS/i).test(navigator.userAgent), dontSendBlobs = isAndroid || isPhantomJS;
  _$browser_30.protocol = 3;
  var packets = _$browser_30.packets = {
    open: 0,
    close: 1,
    ping: 2,
    pong: 3,
    message: 4,
    upgrade: 5,
    noop: 6
  }, packetslist = _$keys_31(packets), err = {
    type: "error",
    data: "parser error"
  };
  function map(e, t, r) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    for (var n = new Array(e.length), i = _$after_1(e.length, r), o = function (e, r, i) {
            SRTlib.send(`{ "anonymous": true, "function": "o", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      t(r, function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "o.t", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (n[e] = r, i(t, n));
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, s = 0; s < e.length; s++) o(s, e[s], i);
        SRTlib.send("]},");

  }
  (_$browser_30.encodePacket = function (e, t, r, n) {
        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePacket", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

    ("function" == typeof t && (n = t, t = !1), "function" == typeof r && (n = r, r = null));
    var i = void 0 === e.data ? void 0 : e.data.buffer || e.data;
    if ("undefined" != typeof ArrayBuffer && i instanceof ArrayBuffer) {
            SRTlib.send("]},");

      return (function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePacket.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        if (!t) {
                    SRTlib.send("]},");

          return _$browser_30.encodeBase64Packet(e, r);
        }
        var n = e.data, i = new Uint8Array(n), o = new Uint8Array(1 + n.byteLength);
        o[0] = packets[e.type];
        for (var s = 0; s < i.length; s++) o[s + 1] = i[s];
                SRTlib.send("]},");

        return r(o.buffer);
                SRTlib.send("]},");

      })(e, t, n);
    }
    if (void 0 !== _$blob_6 && i instanceof _$blob_6) {
            SRTlib.send("]},");

      return (function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePacket.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        if (!t) {
                    SRTlib.send("]},");

          return _$browser_30.encodeBase64Packet(e, r);
        }
        if (dontSendBlobs) {
                    SRTlib.send("]},");

          return (function (e, t, r) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePacket.ReturnStatement.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

            if (!t) {
                            SRTlib.send("]},");

              return _$browser_30.encodeBase64Packet(e, r);
            }
            var n = new FileReader();
                        SRTlib.send("]},");

            return (n.onload = function () {
                            SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePacket.ReturnStatement.ReturnStatement.ReturnStatement.n.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

              _$browser_30.encodePacket({
                type: e.type,
                data: n.result
              }, t, !0, r);
                            SRTlib.send("]},");

            }, n.readAsArrayBuffer(e.data));
                        SRTlib.send("]},");

          })(e, t, r);
        }
        var n = new Uint8Array(1);
                SRTlib.send("]},");

        return (n[0] = packets[e.type], r(new _$blob_6([n.buffer, e.data])));
                SRTlib.send("]},");

      })(e, t, n);
    }
    if (i && i.base64) {
            SRTlib.send("]},");

      return (function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePacket.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return t("b" + _$browser_30.packets[e.type] + e.data.data);
                SRTlib.send("]},");

      })(e, n);
    }
    var o = packets[e.type];
        SRTlib.send("]},");

    return (void 0 !== e.data && (o += r ? _$utf8_32.encode(String(e.data), {
      strict: !1
    }) : String(e.data)), n("" + o));
        SRTlib.send("]},");

  }, _$browser_30.encodeBase64Packet = function (t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodeBase64Packet", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var n, i = "b" + _$browser_30.packets[t.type];
    if (void 0 !== _$blob_6 && t.data instanceof _$blob_6) {
      var o = new FileReader();
            SRTlib.send("]},");

      return (o.onload = function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodeBase64Packet.ReturnStatement.o.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = o.result.split(",")[1];
        r(i + e);
                SRTlib.send("]},");

      }, o.readAsDataURL(t.data));
    }
    try {
      n = String.fromCharCode.apply(null, new Uint8Array(t.data));
    } catch (e) {
      for (var s = new Uint8Array(t.data), a = new Array(s.length), u = 0; u < s.length; u++) a[u] = s[u];
      n = String.fromCharCode.apply(null, a);
    }
        SRTlib.send("]},");

    return (i += btoa(n), r(i));
        SRTlib.send("]},");

  }, _$browser_30.decodePacket = function (t, r, n) {
        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.decodePacket2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    if (void 0 === t) {
            SRTlib.send("]},");

      return err;
    }
    if ("string" == typeof t) {
      if ("b" === t.charAt(0)) {
                SRTlib.send("]},");

        return _$browser_30.decodeBase64Packet(t.substr(1), r);
      }
      if (n && !1 === (t = (function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.decodePacket", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        try {
          t = _$utf8_32.decode(t, {
            strict: !1
          });
        } catch (e) {
                    SRTlib.send("]},");

          return !1;
        }
                SRTlib.send("]},");

        return t;
                SRTlib.send("]},");

      })(t))) {
                SRTlib.send("]},");

        return err;
      }
      var i = t.charAt(0);
            SRTlib.send("]},");

      return Number(i) == i && packetslist[i] ? t.length > 1 ? {
        type: packetslist[i],
        data: t.substring(1)
      } : {
        type: packetslist[i]
      } : err;
    }
    i = new Uint8Array(t)[0];
    var o = _$arraybufferSlice_2(t, 1);
        SRTlib.send("]},");

    return (_$blob_6 && "blob" === r && (o = new _$blob_6([o])), {
      type: packetslist[i],
      data: o
    });
        SRTlib.send("]},");

  }, _$browser_30.decodeBase64Packet = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.decodeBase64Packet", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = packetslist[e.charAt(0)];
    if (!base64encoder) {
            SRTlib.send("]},");

      return {
        type: r,
        data: {
          base64: !0,
          data: e.substr(1)
        }
      };
    }
    var n = base64encoder.decode(e.substr(1));
        SRTlib.send("]},");

    return ("blob" === t && _$blob_6 && (n = new _$blob_6([n])), {
      type: r,
      data: n
    });
        SRTlib.send("]},");

  }, _$browser_30.encodePayload = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayload", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    "function" == typeof t && (r = t, t = null);
    var n = _$hasBinary_35(e);
        SRTlib.send("]},");

    return t && n ? _$blob_6 && !dontSendBlobs ? _$browser_30.encodePayloadAsBlob(e, r) : _$browser_30.encodePayloadAsArrayBuffer(e, r) : e.length ? void map(e, function (e, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayload.ReturnStatement.map2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      _$browser_30.encodePacket(e, !!n && t, !1, function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayload.ReturnStatement.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        r(null, (function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayload.ReturnStatement.map.r", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return e.length + ":" + e;
                    SRTlib.send("]},");

        })(e));
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayload.ReturnStatement.map3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return r(t.join(""));
            SRTlib.send("]},");

    }) : r("0:");
        SRTlib.send("]},");

  }, _$browser_30.decodePayload = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.decodePayload", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    if ("string" != typeof e) {
            SRTlib.send("]},");

      return _$browser_30.decodePayloadAsBinary(e, t, r);
    }
    var n;
    if (("function" == typeof t && (r = t, t = null), "" === e)) {
            SRTlib.send("]},");

      return r(err, 0, 1);
    }
    for (var i, o, s = "", a = 0, u = e.length; a < u; a++) {
      var l = e.charAt(a);
      if (":" === l) {
        if ("" === s || s != (i = Number(s))) {
                    SRTlib.send("]},");

          return r(err, 0, 1);
        }
        if (s != (o = e.substr(a + 1, i)).length) {
                    SRTlib.send("]},");

          return r(err, 0, 1);
        }
        if (o.length) {
          if ((n = _$browser_30.decodePacket(o, t, !1), err.type === n.type && err.data === n.data)) {
                        SRTlib.send("]},");

            return r(err, 0, 1);
          }
          if (!1 === r(n, a + i, u)) {
                        SRTlib.send("]},");

            return;
          }
        }
        (a += i, s = "");
      } else s += l;
    }
        SRTlib.send("]},");

    return "" !== s ? r(err, 0, 1) : void 0;
        SRTlib.send("]},");

  }, _$browser_30.encodePayloadAsArrayBuffer = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsArrayBuffer", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (!e.length) {
            SRTlib.send("]},");

      return t(new ArrayBuffer(0));
    }
    map(e, function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsArrayBuffer.map2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      _$browser_30.encodePacket(e, !0, !0, function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsArrayBuffer.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t(null, e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, function (e, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsArrayBuffer.map3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n = r.reduce(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsArrayBuffer.map.n", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r;
                SRTlib.send("]},");

        return e + (r = "string" == typeof t ? t.length : t.byteLength).toString().length + r + 2;
                SRTlib.send("]},");

      }, 0), i = new Uint8Array(n), o = 0;
            SRTlib.send("]},");

      return (r.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsArrayBuffer.map.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = "string" == typeof e, r = e;
        if (t) {
          for (var n = new Uint8Array(e.length), s = 0; s < e.length; s++) n[s] = e.charCodeAt(s);
          r = n.buffer;
        }
        i[o++] = t ? 0 : 1;
        var a = r.byteLength.toString();
        for (s = 0; s < a.length; s++) i[o++] = parseInt(a[s]);
        for ((i[o++] = 255, n = new Uint8Array(r), s = 0); s < n.length; s++) i[o++] = n[s];
                SRTlib.send("]},");

      }), t(i.buffer));
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }, _$browser_30.encodePayloadAsBlob = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsBlob", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    map(e, function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsBlob.map2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      _$browser_30.encodePacket(e, !0, !0, function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsBlob.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = new Uint8Array(1);
        if ((r[0] = 1, "string" == typeof e)) {
          for (var n = new Uint8Array(e.length), i = 0; i < e.length; i++) n[i] = e.charCodeAt(i);
          (e = n.buffer, r[0] = 0);
        }
        var o = (e instanceof ArrayBuffer ? e.byteLength : e.size).toString(), s = new Uint8Array(o.length + 1);
        for (i = 0; i < o.length; i++) s[i] = parseInt(o[i]);
        if ((s[o.length] = 255, _$blob_6)) {
          var a = new _$blob_6([r.buffer, s.buffer, e]);
          t(null, a);
        }
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, function (e, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.encodePayloadAsBlob.map3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return t(new _$blob_6(r));
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }, _$browser_30.decodePayloadAsBinary = function (t, r, n) {
        SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.decodePayloadAsBinary2", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    "function" == typeof r && (n = r, r = null);
    for (var i = t, o = []; i.byteLength > 0; ) {
      for (var s = new Uint8Array(i), a = 0 === s[0], u = "", l = 1; 255 !== s[l]; l++) {
        if (u.length > 310) {
                    SRTlib.send("]},");

          return n(err, 0, 1);
        }
        u += s[l];
      }
      (i = _$arraybufferSlice_2(i, 2 + u.length), u = parseInt(u));
      var c = _$arraybufferSlice_2(i, 0, u);
      if (a) try {
        c = String.fromCharCode.apply(null, new Uint8Array(c));
      } catch (e) {
        var p = new Uint8Array(c);
        for ((c = "", l = 0); l < p.length; l++) c += String.fromCharCode(p[l]);
      }
      (o.push(c), i = _$arraybufferSlice_2(i, u));
    }
    var h = o.length;
    o.forEach(function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$browser_30.decodePayloadAsBinary", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      n(_$browser_30.decodePacket(e, r, !0), t, h);
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  });
  var _$transport_19 = {};
  function Transport(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (this.path = e.path, this.hostname = e.hostname, this.port = e.port, this.secure = e.secure, this.query = e.query, this.timestampParam = e.timestampParam, this.timestampRequests = e.timestampRequests, this.readyState = "", this.agent = e.agent || !1, this.socket = e.socket, this.enablesXDR = e.enablesXDR, this.pfx = e.pfx, this.key = e.key, this.passphrase = e.passphrase, this.cert = e.cert, this.ca = e.ca, this.ciphers = e.ciphers, this.rejectUnauthorized = e.rejectUnauthorized, this.forceNode = e.forceNode, this.isReactNative = e.isReactNative, this.extraHeaders = e.extraHeaders, this.localAddress = e.localAddress);
        SRTlib.send("]},");

  }
  (_$transport_19 = Transport, _$componentEmitter_26(Transport.prototype), Transport.prototype.onError = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "Transport.prototype.onError", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = new Error(e);
        SRTlib.send("]},");

    return (r.type = "TransportError", r.description = t, this.emit("error", r), this);
        SRTlib.send("]},");

  }, Transport.prototype.open = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Transport.prototype.open", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return ("closed" !== this.readyState && "" !== this.readyState || (this.readyState = "opening", this.doOpen()), this);
        SRTlib.send("]},");

  }, Transport.prototype.close = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Transport.prototype.close", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return ("opening" !== this.readyState && "open" !== this.readyState || (this.doClose(), this.onClose()), this);
        SRTlib.send("]},");

  }, Transport.prototype.send = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Transport.prototype.send", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("open" !== this.readyState) throw new Error("Transport not open");
    this.write(e);
        SRTlib.send("]},");

  }, Transport.prototype.onOpen = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Transport.prototype.onOpen", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (this.readyState = "open", this.writable = !0, this.emit("open"));
        SRTlib.send("]},");

  }, Transport.prototype.onData = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Transport.prototype.onData", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = _$browser_30.decodePacket(e, this.socket.binaryType);
    this.onPacket(t);
        SRTlib.send("]},");

  }, Transport.prototype.onPacket = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Transport.prototype.onPacket", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this.emit("packet", e);
        SRTlib.send("]},");

  }, Transport.prototype.onClose = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Transport.prototype.onClose", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (this.readyState = "closed", this.emit("close"));
        SRTlib.send("]},");

  });
  var _$hasCors_37 = {};
  try {
    _$hasCors_37 = "undefined" != typeof XMLHttpRequest && ("withCredentials" in new XMLHttpRequest());
  } catch (err) {
    _$hasCors_37 = !1;
  }
  var _$xmlhttprequest_25 = function (t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$xmlhttprequest_25", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var r = t.xdomain, n = t.xscheme, i = t.enablesXDR;
    try {
      if ("undefined" != typeof XMLHttpRequest && (!r || _$hasCors_37)) {
                SRTlib.send("]},");

        return new XMLHttpRequest();
      }
    } catch (e) {}
    try {
      if ("undefined" != typeof XDomainRequest && !n && i) {
                SRTlib.send("]},");

        return new XDomainRequest();
      }
    } catch (e) {}
    if (!r) try {
            SRTlib.send("]},");

      return new self[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
    } catch (e) {}
        SRTlib.send("]},");

  }, _$componentInherit_12 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$componentInherit_12", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$componentInherit_12.r", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    };
    (r.prototype = t.prototype, e.prototype = new r(), e.prototype.constructor = e);
        SRTlib.send("]},");

  }, _$yeast_88 = {}, prev, alphabet = ("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_").split(""), length = 64, __map_88 = {}, seed = 0, __i_88 = 0;
  function encode(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = "";
    do {
      (t = alphabet[e % length] + t, e = Math.floor(e / length));
    } while (e > 0);
        SRTlib.send("]},");

    return t;
        SRTlib.send("]},");

  }
  function yeast() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = encode(+new Date());
        SRTlib.send("]},");

    return e !== prev ? (seed = 0, prev = e) : e + "." + encode(seed++);
        SRTlib.send("]},");

  }
  for (; __i_88 < length; __i_88++) __map_88[alphabet[__i_88]] = __i_88;
  (yeast.encode = encode, yeast.decode = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "yeast.decode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = 0;
    for (__i_88 = 0; __i_88 < e.length; __i_88++) t = t * length + __map_88[e.charAt(__i_88)];
        SRTlib.send("]},");

    return t;
        SRTlib.send("]},");

  }, _$yeast_88 = yeast);
  var __debug_23 = _$browser_27("engine.io-client:polling"), _$Polling_23 = Polling, hasXHR2 = null != new _$xmlhttprequest_25({
    xdomain: !1
  }).responseType;
  function Polling(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e && e.forceBase64;
    (hasXHR2 && !t || (this.supportsBinary = !1), _$transport_19.call(this, e));
        SRTlib.send("]},");

  }
  (_$componentInherit_12(Polling, _$transport_19), Polling.prototype.name = "polling", Polling.prototype.doOpen = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.doOpen", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    this.poll();
        SRTlib.send("]},");

  }, Polling.prototype.pause = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.pause", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = this;
    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (__debug_23("paused"), t.readyState = "paused", e());
            SRTlib.send("]},");

    }
    if ((this.readyState = "pausing", this.polling || !this.writable)) {
      var n = 0;
      (this.polling && (__debug_23("we are currently polling - waiting to pause"), n++, this.once("pollComplete", function () {
                SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.pause.once", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (__debug_23("pre-pause polling complete"), --n || r());
                SRTlib.send("]},");

      })), this.writable || (__debug_23("we are currently writing - waiting to pause"), n++, this.once("drain", function () {
                SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.pause.once2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (__debug_23("pre-pause writing complete"), --n || r());
                SRTlib.send("]},");

      })));
    } else r();
        SRTlib.send("]},");

  }, Polling.prototype.poll = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.poll", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (__debug_23("polling"), this.polling = !0, this.doPoll(), this.emit("poll"));
        SRTlib.send("]},");

  }, Polling.prototype.onData = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.onData2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = this;
    (__debug_23("polling got data %s", e), _$browser_30.decodePayload(e, this.socket.binaryType, function (e, r, n) {
            SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.onData", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      if (("opening" === t.readyState && t.onOpen(), "close" === e.type)) {
                SRTlib.send("]},");

        return (t.onClose(), !1);
      }
      t.onPacket(e);
            SRTlib.send("]},");

    }), "closed" !== this.readyState && (this.polling = !1, this.emit("pollComplete"), "open" === this.readyState ? this.poll() : __debug_23('ignoring poll - transport state "%s"', this.readyState)));
        SRTlib.send("]},");

  }, Polling.prototype.doClose = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.doClose", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = this;
    function t() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (__debug_23("writing close packet"), e.write([{
        type: "close"
      }]));
            SRTlib.send("]},");

    }
    "open" === this.readyState ? (__debug_23("transport open - closing"), t()) : (__debug_23("transport not open - deferring close"), this.once("open", t));
        SRTlib.send("]},");

  }, Polling.prototype.write = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.write2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = this;
    this.writable = !1;
    var r = function () {
            SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.write.r", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (t.writable = !0, t.emit("drain"));
            SRTlib.send("]},");

    };
    _$browser_30.encodePayload(e, this.supportsBinary, function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.write", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t.doWrite(e, r);
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }, Polling.prototype.uri = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Polling.prototype.uri", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = this.query || ({}), t = this.secure ? "https" : "http", r = "";
        SRTlib.send("]},");

    return (!1 !== this.timestampRequests && (e[this.timestampParam] = _$yeast_88()), this.supportsBinary || e.sid || (e.b64 = 1), e = _$parseqs_48.encode(e), this.port && ("https" === t && 443 !== Number(this.port) || "http" === t && 80 !== Number(this.port)) && (r = ":" + this.port), e.length && (e = "?" + e), t + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + r + this.path + e);
        SRTlib.send("]},");

  });
  var _$pollingXhr_22 = {}, __debug_22 = _$browser_27("engine.io-client:polling-xhr");
  function empty() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

  }
  function XHR(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ((_$Polling_23.call(this, e), this.requestTimeout = e.requestTimeout, this.extraHeaders = e.extraHeaders, "undefined" != typeof location)) {
      var t = "https:" === location.protocol, r = location.port;
      (r || (r = t ? 443 : 80), this.xd = "undefined" != typeof location && e.hostname !== location.hostname || r !== e.port, this.xs = e.secure !== t);
    }
        SRTlib.send("]},");

  }
  function Request(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (this.method = e.method || "GET", this.uri = e.uri, this.xd = !!e.xd, this.xs = !!e.xs, this.async = !1 !== e.async, this.data = void 0 !== e.data ? e.data : null, this.agent = e.agent, this.isBinary = e.isBinary, this.supportsBinary = e.supportsBinary, this.enablesXDR = e.enablesXDR, this.requestTimeout = e.requestTimeout, this.pfx = e.pfx, this.key = e.key, this.passphrase = e.passphrase, this.cert = e.cert, this.ca = e.ca, this.ciphers = e.ciphers, this.rejectUnauthorized = e.rejectUnauthorized, this.extraHeaders = e.extraHeaders, this.create());
        SRTlib.send("]},");

  }
  if ((_$pollingXhr_22 = XHR, _$pollingXhr_22.Request = Request, _$componentInherit_12(XHR, _$Polling_23), XHR.prototype.supportsBinary = !0, XHR.prototype.request = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "XHR.prototype.request", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return ((e = e || ({})).uri = this.uri(), e.xd = this.xd, e.xs = this.xs, e.agent = this.agent || !1, e.supportsBinary = this.supportsBinary, e.enablesXDR = this.enablesXDR, e.pfx = this.pfx, e.key = this.key, e.passphrase = this.passphrase, e.cert = this.cert, e.ca = this.ca, e.ciphers = this.ciphers, e.rejectUnauthorized = this.rejectUnauthorized, e.requestTimeout = this.requestTimeout, e.extraHeaders = this.extraHeaders, new Request(e));
        SRTlib.send("]},");

  }, XHR.prototype.doWrite = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "XHR.prototype.doWrite2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = "string" != typeof e && void 0 !== e, n = this.request({
      method: "POST",
      data: e,
      isBinary: r
    }), i = this;
    (n.on("success", t), n.on("error", function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "XHR.prototype.doWrite", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      i.onError("xhr post error", e);
            SRTlib.send("]},");

    }), this.sendXhr = n);
        SRTlib.send("]},");

  }, XHR.prototype.doPoll = function () {
        SRTlib.send(`{ "anonymous": true, "function": "XHR.prototype.doPoll3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    __debug_22("xhr poll");
    var e = this.request(), t = this;
    (e.on("data", function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "XHR.prototype.doPoll", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t.onData(e);
            SRTlib.send("]},");

    }), e.on("error", function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "XHR.prototype.doPoll2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t.onError("xhr poll error", e);
            SRTlib.send("]},");

    }), this.pollXhr = e);
        SRTlib.send("]},");

  }, _$componentEmitter_26(Request.prototype), Request.prototype.create = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.create", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var t = {
      agent: this.agent,
      xdomain: this.xd,
      xscheme: this.xs,
      enablesXDR: this.enablesXDR
    };
    (t.pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized);
    var r = this.xhr = new _$xmlhttprequest_25(t), n = this;
    try {
      (__debug_22("xhr open %s: %s", this.method, this.uri), r.open(this.method, this.uri, this.async));
      try {
        if (this.extraHeaders) for (var i in (r.setDisableHeaderCheck && r.setDisableHeaderCheck(!0), this.extraHeaders)) this.extraHeaders.hasOwnProperty(i) && r.setRequestHeader(i, this.extraHeaders[i]);
      } catch (e) {}
      if ("POST" === this.method) try {
        this.isBinary ? r.setRequestHeader("Content-type", "application/octet-stream") : r.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
      } catch (e) {}
      try {
        r.setRequestHeader("Accept", "*/*");
      } catch (e) {}
      (("withCredentials" in r) && (r.withCredentials = !0), this.requestTimeout && (r.timeout = this.requestTimeout), this.hasXDR() ? (r.onload = function () {
                SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.create.r.onload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        n.onLoad();
                SRTlib.send("]},");

      }, r.onerror = function () {
                SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.create.r.onerror", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        n.onError(r.responseText);
                SRTlib.send("]},");

      }) : r.onreadystatechange = function () {
                SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.create.r.onreadystatechange", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        if (2 === r.readyState) try {
          var t = r.getResponseHeader("Content-Type");
          n.supportsBinary && "application/octet-stream" === t && (r.responseType = "arraybuffer");
        } catch (e) {}
        4 === r.readyState && (200 === r.status || 1223 === r.status ? n.onLoad() : setTimeout(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.create.r.onreadystatechange.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          n.onError(r.status);
                    SRTlib.send("]},");

        }, 0));
                SRTlib.send("]},");

      }, __debug_22("xhr data %s", this.data), r.send(this.data));
    } catch (e) {
            SRTlib.send("]},");

      return void setTimeout(function () {
                SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.create.ReturnStatement.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        n.onError(e);
                SRTlib.send("]},");

      }, 0);
    }
    "undefined" != typeof document && (this.index = Request.requestsCount++, Request.requests[this.index] = this);
        SRTlib.send("]},");

  }, Request.prototype.onSuccess = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.onSuccess", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (this.emit("success"), this.cleanup());
        SRTlib.send("]},");

  }, Request.prototype.onData = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.onData", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (this.emit("data", e), this.onSuccess());
        SRTlib.send("]},");

  }, Request.prototype.onError = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.onError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (this.emit("error", e), this.cleanup(!0));
        SRTlib.send("]},");

  }, Request.prototype.cleanup = function (t) {
        SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.cleanup", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 !== this.xhr && null !== this.xhr) {
      if ((this.hasXDR() ? this.xhr.onload = this.xhr.onerror = empty : this.xhr.onreadystatechange = empty, t)) try {
        this.xhr.abort();
      } catch (e) {}
      ("undefined" != typeof document && delete Request.requests[this.index], this.xhr = null);
    }
        SRTlib.send("]},");

  }, Request.prototype.onLoad = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.onLoad", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var t;
    try {
      var r;
      try {
        r = this.xhr.getResponseHeader("Content-Type");
      } catch (e) {}
      t = "application/octet-stream" === r && this.xhr.response || this.xhr.responseText;
    } catch (e) {
      this.onError(e);
    }
    null != t && this.onData(t);
        SRTlib.send("]},");

  }, Request.prototype.hasXDR = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.hasXDR", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return "undefined" != typeof XDomainRequest && !this.xs && this.enablesXDR;
        SRTlib.send("]},");

  }, Request.prototype.abort = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Request.prototype.abort", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    this.cleanup();
        SRTlib.send("]},");

  }, Request.requestsCount = 0, Request.requests = {}, "undefined" != typeof document)) if ("function" == typeof attachEvent) attachEvent("onunload", unloadHandler); else if ("function" == typeof addEventListener) {
    var terminationEvent = ("onpagehide" in self) ? "pagehide" : "unload";
    addEventListener(terminationEvent, unloadHandler, !1);
  }
  function unloadHandler() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    for (var e in Request.requests) Request.requests.hasOwnProperty(e) && Request.requests[e].abort();
        SRTlib.send("]},");

  }
  var _$JSONPPolling_21 = {};
  (function (t) {
        SRTlib.send(`{ "anonymous": true, "function": "call27", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    _$JSONPPolling_21 = a;
    var r, n = /\n/g, i = /\\n/g;
    function o() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    }
    function s() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== t ? t : {};
            SRTlib.send("]},");

    }
    function a(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if ((_$Polling_23.call(this, e), this.query = this.query || ({}), !r)) {
        var t = s();
        r = t.___eio = t.___eio || [];
      }
      this.index = r.length;
      var n = this;
      (r.push(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey33", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n.onData(e);
                SRTlib.send("]},");

      }), this.query.j = this.index, "function" == typeof addEventListener && addEventListener("beforeunload", function () {
                SRTlib.send(`{ "anonymous": true, "function": "addEventListener", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        n.script && (n.script.onerror = o);
                SRTlib.send("]},");

      }, !1));
            SRTlib.send("]},");

    }
    (_$componentInherit_12(a, _$Polling_23), a.prototype.supportsBinary = !1, a.prototype.doClose = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.a.prototype.doClose", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.script && (this.script.parentNode.removeChild(this.script), this.script = null), this.form && (this.form.parentNode.removeChild(this.form), this.form = null, this.iframe = null), _$Polling_23.prototype.doClose.call(this));
            SRTlib.send("]},");

    }, a.prototype.doPoll = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.a.prototype.doPoll", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this, t = document.createElement("script");
      (this.script && (this.script.parentNode.removeChild(this.script), this.script = null), t.async = !0, t.src = this.uri(), t.onerror = function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.a.prototype.doPoll.t.onerror", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.onError("jsonp poll error", t);
                SRTlib.send("]},");

      });
      var r = document.getElementsByTagName("script")[0];
      (r ? r.parentNode.insertBefore(t, r) : (document.head || document.body).appendChild(t), this.script = t, "undefined" != typeof navigator && (/gecko/i).test(navigator.userAgent) && setTimeout(function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.a.prototype.doPoll.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = document.createElement("iframe");
        (document.body.appendChild(e), document.body.removeChild(e));
                SRTlib.send("]},");

      }, 100));
            SRTlib.send("]},");

    }, a.prototype.doWrite = function (t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "call.a.prototype.doWrite", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var o = this;
      if (!this.form) {
        var s, a = document.createElement("form"), u = document.createElement("textarea"), l = this.iframeId = "eio_iframe_" + this.index;
        (a.className = "socketio", a.style.position = "absolute", a.style.top = "-1000px", a.style.left = "-1000px", a.target = l, a.method = "POST", a.setAttribute("accept-charset", "utf-8"), u.name = "d", a.appendChild(u), document.body.appendChild(a), this.form = a, this.area = u);
      }
      function c() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (p(), r());
                SRTlib.send("]},");

      }
      function p() {
                SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        if (o.iframe) try {
          o.form.removeChild(o.iframe);
        } catch (e) {
          o.onError("jsonp polling iframe removal error", e);
        }
        try {
          var t = '<iframe src="javascript:0" name="' + o.iframeId + '">';
          s = document.createElement(t);
        } catch (e) {
          ((s = document.createElement("iframe")).name = o.iframeId, s.src = "javascript:0");
        }
        (s.id = o.iframeId, o.form.appendChild(s), o.iframe = s);
                SRTlib.send("]},");

      }
      (this.form.action = this.uri(), p(), t = t.replace(i, "\\\n"), this.area.value = t.replace(n, "\\n"));
      try {
        this.form.submit();
      } catch (e) {}
      this.iframe.attachEvent ? this.iframe.onreadystatechange = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.a.prototype.doWrite.iframe.onreadystatechange", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        "complete" === o.iframe.readyState && c();
                SRTlib.send("]},");

      } : this.iframe.onload = c;
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
  var _$websocket_24 = {};
  (function (t) {
        SRTlib.send(`{ "anonymous": true, "function": "call28", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var r, n, i = _$browser_27("engine.io-client:websocket");
    if ("undefined" != typeof WebSocket) r = WebSocket; else if ("undefined" != typeof self) r = self.WebSocket || self.MozWebSocket; else try {
      n = _$empty_7({});
    } catch (e) {}
    var o = r || n;
    function s(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (e && e.forceBase64 && (this.supportsBinary = !1), this.perMessageDeflate = e.perMessageDeflate, this.usingBrowserWebSocket = r && !e.forceNode, this.protocols = e.protocols, this.usingBrowserWebSocket || (o = n), _$transport_19.call(this, e));
            SRTlib.send("]},");

    }
    (_$websocket_24 = s, _$componentInherit_12(s, _$transport_19), s.prototype.name = "websocket", s.prototype.supportsBinary = !0, s.prototype.doOpen = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.doOpen", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if (this.check()) {
        var e = this.uri(), t = this.protocols, r = {
          agent: this.agent,
          perMessageDeflate: this.perMessageDeflate
        };
        (r.pfx = this.pfx, r.key = this.key, r.passphrase = this.passphrase, r.cert = this.cert, r.ca = this.ca, r.ciphers = this.ciphers, r.rejectUnauthorized = this.rejectUnauthorized, this.extraHeaders && (r.headers = this.extraHeaders), this.localAddress && (r.localAddress = this.localAddress));
        try {
          this.ws = this.usingBrowserWebSocket && !this.isReactNative ? t ? new o(e, t) : new o(e) : new o(e, t, r);
        } catch (err) {
                    SRTlib.send("]},");

          return this.emit("error", err);
        }
        (void 0 === this.ws.binaryType && (this.supportsBinary = !1), this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = !0, this.ws.binaryType = "nodebuffer") : this.ws.binaryType = "arraybuffer", this.addEventListeners());
      }
            SRTlib.send("]},");

    }, s.prototype.addEventListeners = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.addEventListeners", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      (this.ws.onopen = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.addEventListeners.ws.onopen", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e.onOpen();
                SRTlib.send("]},");

      }, this.ws.onclose = function () {
                SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.addEventListeners.ws.onclose", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e.onClose();
                SRTlib.send("]},");

      }, this.ws.onmessage = function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.addEventListeners.ws.onmessage", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.onData(t.data);
                SRTlib.send("]},");

      }, this.ws.onerror = function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.addEventListeners.ws.onerror", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.onError("websocket error", t);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, s.prototype.write = function (r) {
            SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.write3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var n = this;
      this.writable = !1;
      for (var o = r.length, s = 0, a = o; s < a; s++) !(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.write2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        _$browser_30.encodePacket(r, n.supportsBinary, function (s) {
                    SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.write", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if (!n.usingBrowserWebSocket) {
            var a = {};
            (r.options && (a.compress = r.options.compress), n.perMessageDeflate && ("string" == typeof s ? t.byteLength(s) : s.length) < n.perMessageDeflate.threshold && (a.compress = !1));
          }
          try {
            n.usingBrowserWebSocket ? n.ws.send(s) : n.ws.send(s, a);
          } catch (e) {
            i("websocket closed before onclose event");
          }
          --o || (n.emit("flush"), setTimeout(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.write.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            (n.writable = !0, n.emit("drain"));
                        SRTlib.send("]},");

          }, 0));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      })(r[s]);
            SRTlib.send("]},");

    }, s.prototype.onClose = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.onClose", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      _$transport_19.prototype.onClose.call(this);
            SRTlib.send("]},");

    }, s.prototype.doClose = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.doClose", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      void 0 !== this.ws && this.ws.close();
            SRTlib.send("]},");

    }, s.prototype.uri = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.uri", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.query || ({}), t = this.secure ? "wss" : "ws", r = "";
            SRTlib.send("]},");

      return (this.port && ("wss" === t && 443 !== Number(this.port) || "ws" === t && 80 !== Number(this.port)) && (r = ":" + this.port), this.timestampRequests && (e[this.timestampParam] = _$yeast_88()), this.supportsBinary || (e.b64 = 1), (e = _$parseqs_48.encode(e)).length && (e = "?" + e), t + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + r + this.path + e);
            SRTlib.send("]},");

    }, s.prototype.check = function () {
            SRTlib.send(`{ "anonymous": true, "function": "call.s.prototype.check", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return !(!o || ("__initialize" in o) && this.name === s.prototype.name);
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }).call(this, _$buffer_8({}).Buffer);
  var _$transports_20 = {
    polling: function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$transports_20.polling", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = !1, r = !1, n = !1 !== e.jsonp;
      if ("undefined" != typeof location) {
        var i = "https:" === location.protocol, o = location.port;
        (o || (o = i ? 443 : 80), t = e.hostname !== location.hostname || o !== e.port, r = e.secure !== i);
      }
      if ((e.xdomain = t, e.xscheme = r, ("open" in new _$xmlhttprequest_25(e)) && !e.forceJSONP)) {
                SRTlib.send("]},");

        return new _$pollingXhr_22(e);
      }
      if (!n) throw new Error("JSONP disabled");
            SRTlib.send("]},");

      return new _$JSONPPolling_21(e);
            SRTlib.send("]},");

    }
  };
  _$transports_20.websocket = _$websocket_24;
  var _$socket_18 = {}, __debug_18 = _$browser_27("engine.io-client:socket");
  function __Socket_18(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (!(this instanceof __Socket_18)) {
            SRTlib.send("]},");

      return new __Socket_18(e, t);
    }
    (t = t || ({}), e && "object" == typeof e && (t = e, e = null), e ? (e = _$parseuri_49(e), t.hostname = e.host, t.secure = "https" === e.protocol || "wss" === e.protocol, t.port = e.port, e.query && (t.query = e.query)) : t.host && (t.hostname = _$parseuri_49(t.host).host), this.secure = null != t.secure ? t.secure : "undefined" != typeof location && "https:" === location.protocol, t.hostname && !t.port && (t.port = this.secure ? "443" : "80"), this.agent = t.agent || !1, this.hostname = t.hostname || ("undefined" != typeof location ? location.hostname : "localhost"), this.port = t.port || ("undefined" != typeof location && location.port ? location.port : this.secure ? 443 : 80), this.query = t.query || ({}), "string" == typeof this.query && (this.query = _$parseqs_48.decode(this.query)), this.upgrade = !1 !== t.upgrade, this.path = (t.path || "/engine.io").replace(/\/$/, "") + "/", this.forceJSONP = !!t.forceJSONP, this.jsonp = !1 !== t.jsonp, this.forceBase64 = !!t.forceBase64, this.enablesXDR = !!t.enablesXDR, this.timestampParam = t.timestampParam || "t", this.timestampRequests = t.timestampRequests, this.transports = t.transports || ["polling", "websocket"], this.transportOptions = t.transportOptions || ({}), this.readyState = "", this.writeBuffer = [], this.prevBufferLen = 0, this.policyPort = t.policyPort || 843, this.rememberUpgrade = t.rememberUpgrade || !1, this.binaryType = null, this.onlyBinaryUpgrades = t.onlyBinaryUpgrades, this.perMessageDeflate = !1 !== t.perMessageDeflate && (t.perMessageDeflate || ({})), !0 === this.perMessageDeflate && (this.perMessageDeflate = {}), this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024), this.pfx = t.pfx || null, this.key = t.key || null, this.passphrase = t.passphrase || null, this.cert = t.cert || null, this.ca = t.ca || null, this.ciphers = t.ciphers || null, this.rejectUnauthorized = void 0 === t.rejectUnauthorized || t.rejectUnauthorized, this.forceNode = !!t.forceNode, this.isReactNative = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase(), ("undefined" == typeof self || this.isReactNative) && (t.extraHeaders && Object.keys(t.extraHeaders).length > 0 && (this.extraHeaders = t.extraHeaders), t.localAddress && (this.localAddress = t.localAddress)), this.id = null, this.upgrades = null, this.pingInterval = null, this.pingTimeout = null, this.pingIntervalTimer = null, this.pingTimeoutTimer = null, this.open());
        SRTlib.send("]},");

  }
  (_$socket_18 = __Socket_18, __Socket_18.priorWebsocketSuccess = !1, _$componentEmitter_26(__Socket_18.prototype), __Socket_18.protocol = _$browser_30.protocol, __Socket_18.Socket = __Socket_18, __Socket_18.Transport = _$transport_19, __Socket_18.transports = _$transports_20, __Socket_18.parser = _$browser_30, __Socket_18.prototype.createTransport = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.createTransport", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    __debug_18('creating transport "%s"', e);
    var t = (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.createTransport.t", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = {};
      for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r]);
            SRTlib.send("]},");

      return t;
            SRTlib.send("]},");

    })(this.query);
    (t.EIO = _$browser_30.protocol, t.transport = e);
    var r = this.transportOptions[e] || ({});
        SRTlib.send("]},");

    return (this.id && (t.sid = this.id), new _$transports_20[e]({
      query: t,
      socket: this,
      agent: r.agent || this.agent,
      hostname: r.hostname || this.hostname,
      port: r.port || this.port,
      secure: r.secure || this.secure,
      path: r.path || this.path,
      forceJSONP: r.forceJSONP || this.forceJSONP,
      jsonp: r.jsonp || this.jsonp,
      forceBase64: r.forceBase64 || this.forceBase64,
      enablesXDR: r.enablesXDR || this.enablesXDR,
      timestampRequests: r.timestampRequests || this.timestampRequests,
      timestampParam: r.timestampParam || this.timestampParam,
      policyPort: r.policyPort || this.policyPort,
      pfx: r.pfx || this.pfx,
      key: r.key || this.key,
      passphrase: r.passphrase || this.passphrase,
      cert: r.cert || this.cert,
      ca: r.ca || this.ca,
      ciphers: r.ciphers || this.ciphers,
      rejectUnauthorized: r.rejectUnauthorized || this.rejectUnauthorized,
      perMessageDeflate: r.perMessageDeflate || this.perMessageDeflate,
      extraHeaders: r.extraHeaders || this.extraHeaders,
      forceNode: r.forceNode || this.forceNode,
      localAddress: r.localAddress || this.localAddress,
      requestTimeout: r.requestTimeout || this.requestTimeout,
      protocols: r.protocols || void 0,
      isReactNative: this.isReactNative
    }));
        SRTlib.send("]},");

  }, __Socket_18.prototype.open = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.open", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var t;
    if (this.rememberUpgrade && __Socket_18.priorWebsocketSuccess && -1 !== this.transports.indexOf("websocket")) t = "websocket"; else {
      if (0 === this.transports.length) {
        var r = this;
                SRTlib.send("]},");

        return void setTimeout(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.open.ReturnStatement.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          r.emit("error", "No transports available");
                    SRTlib.send("]},");

        }, 0);
      }
      t = this.transports[0];
    }
    this.readyState = "opening";
    try {
      t = this.createTransport(t);
    } catch (e) {
            SRTlib.send("]},");

      return (this.transports.shift(), void this.open());
    }
    (t.open(), this.setTransport(t));
        SRTlib.send("]},");

  }, __Socket_18.prototype.setTransport = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.setTransport", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    __debug_18("setting transport %s", e.name);
    var t = this;
    (this.transport && (__debug_18("clearing existing transport %s", this.transport.name), this.transport.removeAllListeners()), this.transport = e, e.on("drain", function () {
            SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.setTransport.on.on.on.on.on.on", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      t.onDrain();
            SRTlib.send("]},");

    }).on("packet", function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.setTransport.on.on.on.on.on.on2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t.onPacket(e);
            SRTlib.send("]},");

    }).on("error", function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.setTransport.on.on.on.on.on", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t.onError(e);
            SRTlib.send("]},");

    }).on("close", function () {
            SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.setTransport.on.on.on", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      t.onClose("transport close");
            SRTlib.send("]},");

    }));
        SRTlib.send("]},");

  }, __Socket_18.prototype.probe = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.probe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    __debug_18('probing transport "%s"', e);
    var t = this.createTransport(e, {
      probe: 1
    }), r = !1, n = this;
    function i() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if (n.onlyBinaryUpgrades) {
        var i = !this.supportsBinary && n.transport.supportsBinary;
        r = r || i;
      }
      r || (__debug_18('probe transport "%s" opened', e), t.send([{
        type: "ping",
        data: "probe"
      }]), t.once("packet", function (i) {
                SRTlib.send(`{ "anonymous": true, "function": "emptyKey34", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (!r) if ("pong" === i.type && "probe" === i.data) {
          if ((__debug_18('probe transport "%s" pong', e), n.upgrading = !0, n.emit("upgrading", t), !t)) {
                        SRTlib.send("]},");

            return;
          }
          (__Socket_18.priorWebsocketSuccess = "websocket" === t.name, __debug_18('pausing current transport "%s"', n.transport.name), n.transport.pause(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "n.transport.pause", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            r || "closed" !== n.readyState && (__debug_18("changing transport and sending upgrade packet"), c(), n.setTransport(t), t.send([{
              type: "upgrade"
            }]), n.emit("upgrade", t), t = null, n.upgrading = !1, n.flush());
                        SRTlib.send("]},");

          }));
        } else {
          __debug_18('probe transport "%s" failed', e);
          var o = new Error("probe error");
          (o.transport = t.name, n.emit("upgradeError", o));
        }
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }
    function o() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      r || (r = !0, c(), t.close(), t = null);
            SRTlib.send("]},");

    }
    function s(r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var i = new Error("probe error: " + r);
      (i.transport = t.name, o(), __debug_18('probe transport "%s" failed because of error: %s', e, r), n.emit("upgradeError", i));
            SRTlib.send("]},");

    }
    function a() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      s("transport closed");
            SRTlib.send("]},");

    }
    function u() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      s("socket closed");
            SRTlib.send("]},");

    }
    function l(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      t && e.name !== t.name && (__debug_18('"%s" works - aborting "%s"', e.name, t.name), o());
            SRTlib.send("]},");

    }
    function c() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (t.removeListener("open", i), t.removeListener("error", s), t.removeListener("close", a), n.removeListener("close", u), n.removeListener("upgrading", l));
            SRTlib.send("]},");

    }
    (__Socket_18.priorWebsocketSuccess = !1, t.once("open", i), t.once("error", s), t.once("close", a), this.once("close", u), this.once("upgrading", l), t.open());
        SRTlib.send("]},");

  }, __Socket_18.prototype.onOpen = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.onOpen", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    if ((__debug_18("socket open"), this.readyState = "open", __Socket_18.priorWebsocketSuccess = "websocket" === this.transport.name, this.emit("open"), this.flush(), "open" === this.readyState && this.upgrade && this.transport.pause)) {
      __debug_18("starting upgrade probes");
      for (var e = 0, t = this.upgrades.length; e < t; e++) this.probe(this.upgrades[e]);
    }
        SRTlib.send("]},");

  }, __Socket_18.prototype.onPacket = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.onPacket", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) switch ((__debug_18('socket receive: type "%s", data "%s"', e.type, e.data), this.emit("packet", e), this.emit("heartbeat"), e.type)) {
      case "open":
        this.onHandshake(JSON.parse(e.data));
        break;
      case "pong":
        (this.setPing(), this.emit("pong"));
        break;
      case "error":
        var t = new Error("server error");
        (t.code = e.data, this.onError(t));
        break;
      case "message":
        (this.emit("data", e.data), this.emit("message", e.data));
    } else __debug_18('packet received with socket readyState "%s"', this.readyState);
        SRTlib.send("]},");

  }, __Socket_18.prototype.onHandshake = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.onHandshake", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (this.emit("handshake", e), this.id = e.sid, this.transport.query.sid = e.sid, this.upgrades = this.filterUpgrades(e.upgrades), this.pingInterval = e.pingInterval, this.pingTimeout = e.pingTimeout, this.onOpen(), "closed" !== this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat)));
        SRTlib.send("]},");

  }, __Socket_18.prototype.onHeartbeat = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.onHeartbeat", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    clearTimeout(this.pingTimeoutTimer);
    var t = this;
    t.pingTimeoutTimer = setTimeout(function () {
            SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.onHeartbeat.t.pingTimeoutTimer.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      "closed" !== t.readyState && t.onClose("ping timeout");
            SRTlib.send("]},");

    }, e || t.pingInterval + t.pingTimeout);
        SRTlib.send("]},");

  }, __Socket_18.prototype.setPing = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.setPing", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = this;
    (clearTimeout(e.pingIntervalTimer), e.pingIntervalTimer = setTimeout(function () {
            SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.setPing.e.pingIntervalTimer.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (__debug_18("writing ping packet - expecting pong within %sms", e.pingTimeout), e.ping(), e.onHeartbeat(e.pingTimeout));
            SRTlib.send("]},");

    }, e.pingInterval));
        SRTlib.send("]},");

  }, __Socket_18.prototype.ping = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.ping", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = this;
    this.sendPacket("ping", function () {
            SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.ping.sendPacket", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      e.emit("ping");
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }, __Socket_18.prototype.onDrain = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.onDrain", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, 0 === this.writeBuffer.length ? this.emit("drain") : this.flush());
        SRTlib.send("]},");

  }, __Socket_18.prototype.flush = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.flush", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    "closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (__debug_18("flushing %d packets in socket", this.writeBuffer.length), this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"));
        SRTlib.send("]},");

  }, __Socket_18.prototype.write = __Socket_18.prototype.send = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.write.__Socket_18.prototype.send", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        SRTlib.send("]},");

    return (this.sendPacket("message", e, t, r), this);
        SRTlib.send("]},");

  }, __Socket_18.prototype.sendPacket = function (e, t, r, n) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.sendPacket", "fileName": "${__filename}", "paramsNumber": 4, "calls" : [`);

    if (("function" == typeof t && (n = t, t = void 0), "function" == typeof r && (n = r, r = null), "closing" !== this.readyState && "closed" !== this.readyState)) {
      (r = r || ({})).compress = !1 !== r.compress;
      var i = {
        type: e,
        data: t,
        options: r
      };
      (this.emit("packetCreate", i), this.writeBuffer.push(i), n && this.once("flush", n), this.flush());
    }
        SRTlib.send("]},");

  }, __Socket_18.prototype.close = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.close", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    if ("opening" === this.readyState || "open" === this.readyState) {
      this.readyState = "closing";
      var e = this;
      this.writeBuffer.length ? this.once("drain", function () {
                SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.close.once", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        this.upgrading ? n() : t();
                SRTlib.send("]},");

      }) : this.upgrading ? n() : t();
    }
    function t() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (e.onClose("forced close"), __debug_18("socket closing - telling transport to close"), e.transport.close());
            SRTlib.send("]},");

    }
    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (e.removeListener("upgrade", r), e.removeListener("upgradeError", r), t());
            SRTlib.send("]},");

    }
    function n() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (e.once("upgrade", r), e.once("upgradeError", r));
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return this;
        SRTlib.send("]},");

  }, __Socket_18.prototype.onError = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.onError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (__debug_18("socket error %j", e), __Socket_18.priorWebsocketSuccess = !1, this.emit("error", e), this.onClose("transport error", e));
        SRTlib.send("]},");

  }, __Socket_18.prototype.onClose = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.onClose", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    "opening" !== this.readyState && "open" !== this.readyState && "closing" !== this.readyState || (__debug_18('socket close with reason: "%s"', e), clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", e, t), this.writeBuffer = [], this.prevBufferLen = 0);
        SRTlib.send("]},");

  }, __Socket_18.prototype.filterUpgrades = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_18.prototype.filterUpgrades", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    for (var t = [], r = 0, n = e.length; r < n; r++) ~_$indexof_39(this.transports, e[r]) && t.push(e[r]);
        SRTlib.send("]},");

    return t;
        SRTlib.send("]},");

  });
  var _$lib_17 = {};
  (_$lib_17 = _$socket_18, _$lib_17.parser = _$browser_30);
  var _$componentEmitter_61 = {
    exports: {}
  };
  function __Emitter_61(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (e) {
            SRTlib.send("]},");

      return (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement39", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var t in __Emitter_61.prototype) e[t] = __Emitter_61.prototype[t];
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      })(e);
    }
        SRTlib.send("]},");

  }
  (_$componentEmitter_61.exports = __Emitter_61, __Emitter_61.prototype.on = __Emitter_61.prototype.addEventListener = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_61.prototype.on.__Emitter_61.prototype.addEventListener", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (this._callbacks = this._callbacks || ({}), (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this);
        SRTlib.send("]},");

  }, __Emitter_61.prototype.once = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_61.prototype.once", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.off(e, r), t.apply(this, arguments));
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r.fn = t, this.on(e, r), this);
        SRTlib.send("]},");

  }, __Emitter_61.prototype.off = __Emitter_61.prototype.removeListener = __Emitter_61.prototype.removeAllListeners = __Emitter_61.prototype.removeEventListener = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_61.prototype.off.__Emitter_61.prototype.removeListener.__Emitter_61.prototype.removeAllListeners.__Emitter_61.prototype.removeEventListener", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if ((this._callbacks = this._callbacks || ({}), 0 == arguments.length)) {
            SRTlib.send("]},");

      return (this._callbacks = {}, this);
    }
    var r, n = this._callbacks["$" + e];
    if (!n) {
            SRTlib.send("]},");

      return this;
    }
    if (1 == arguments.length) {
            SRTlib.send("]},");

      return (delete this._callbacks["$" + e], this);
    }
    for (var i = 0; i < n.length; i++) if ((r = n[i]) === t || r.fn === t) {
      n.splice(i, 1);
      break;
    }
        SRTlib.send("]},");

    return this;
        SRTlib.send("]},");

  }, __Emitter_61.prototype.emit = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_61.prototype.emit", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this._callbacks = this._callbacks || ({});
    var t = [].slice.call(arguments, 1), r = this._callbacks["$" + e];
    if (r) for (var n = 0, i = (r = r.slice(0)).length; n < i; ++n) r[n].apply(this, t);
        SRTlib.send("]},");

    return this;
        SRTlib.send("]},");

  }, __Emitter_61.prototype.listeners = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_61.prototype.listeners", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (this._callbacks = this._callbacks || ({}), this._callbacks["$" + e] || []);
        SRTlib.send("]},");

  }, __Emitter_61.prototype.hasListeners = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_61.prototype.hasListeners", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return !!this.listeners(e).length;
        SRTlib.send("]},");

  }, _$componentEmitter_61 = _$componentEmitter_61.exports);
  var _$toArray_73 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$toArray_73", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    for (var r = [], n = (t = t || 0) || 0; n < e.length; n++) r[n - t] = e[n];
        SRTlib.send("]},");

    return r;
        SRTlib.send("]},");

  }, _$on_58 = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$on_58", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        SRTlib.send("]},");

    return (e.on(t, r), {
      destroy: function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$on_58.ReturnStatement.destroy", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e.removeListener(t, r);
                SRTlib.send("]},");

      }
    });
        SRTlib.send("]},");

  }, __slice_10 = [].slice, _$componentBind_10 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$componentBind_10", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (("string" == typeof t && (t = e[t]), "function" != typeof t)) throw new Error("bind() requires a function");
    var r = __slice_10.call(arguments, 2);
        SRTlib.send("]},");

    return function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$componentBind_10.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return t.apply(e, r.concat(__slice_10.call(arguments)));
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  }, _$socket_59 = {}, __debug_59 = _$browser_62("socket.io-client:socket");
  _$socket_59 = _$socket_59 = __Socket_59;
  var events = {
    connect: 1,
    connect_error: 1,
    connect_timeout: 1,
    connecting: 1,
    disconnect: 1,
    error: 1,
    reconnect: 1,
    reconnect_attempt: 1,
    reconnect_failed: 1,
    reconnect_error: 1,
    reconnecting: 1,
    ping: 1,
    pong: 1
  }, emit = _$componentEmitter_61.prototype.emit;
  function __Socket_59(e, t, r) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    (this.io = e, this.nsp = t, this.json = this, this.ids = 0, this.acks = {}, this.receiveBuffer = [], this.sendBuffer = [], this.connected = !1, this.disconnected = !0, this.flags = {}, r && r.query && (this.query = r.query), this.io.autoConnect && this.open());
        SRTlib.send("]},");

  }
  (_$componentEmitter_61(__Socket_59.prototype), __Socket_59.prototype.subEvents = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.subEvents", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    if (!this.subs) {
      var e = this.io;
      this.subs = [_$on_58(e, "open", _$componentBind_10(this, "onopen")), _$on_58(e, "packet", _$componentBind_10(this, "onpacket")), _$on_58(e, "close", _$componentBind_10(this, "onclose"))];
    }
        SRTlib.send("]},");

  }, __Socket_59.prototype.open = __Socket_59.prototype.connect = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.open.__Socket_59.prototype.connect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return this.connected ? this : (this.subEvents(), this.io.open(), "open" === this.io.readyState && this.onopen(), this.emit("connecting"), this);
        SRTlib.send("]},");

  }, __Socket_59.prototype.send = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.send", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = _$toArray_73(arguments);
        SRTlib.send("]},");

    return (e.unshift("message"), this.emit.apply(this, e), this);
        SRTlib.send("]},");

  }, __Socket_59.prototype.emit = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.emit", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (events.hasOwnProperty(e)) {
            SRTlib.send("]},");

      return (emit.apply(this, arguments), this);
    }
    var t = _$toArray_73(arguments), r = {
      type: (void 0 !== this.flags.binary ? this.flags.binary : _$hasBinary_35(t)) ? _$socketIoParser_66.BINARY_EVENT : _$socketIoParser_66.EVENT,
      data: t,
      options: {}
    };
        SRTlib.send("]},");

    return (r.options.compress = !this.flags || !1 !== this.flags.compress, "function" == typeof t[t.length - 1] && (__debug_59("emitting packet with ack id %d", this.ids), this.acks[this.ids] = t.pop(), r.id = this.ids++), this.connected ? this.packet(r) : this.sendBuffer.push(r), this.flags = {}, this);
        SRTlib.send("]},");

  }, __Socket_59.prototype.packet = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.packet", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (e.nsp = this.nsp, this.io.packet(e));
        SRTlib.send("]},");

  }, __Socket_59.prototype.onopen = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.onopen", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    if ((__debug_59("transport is open - connecting"), "/" !== this.nsp)) if (this.query) {
      var e = "object" == typeof this.query ? _$parseqs_48.encode(this.query) : this.query;
      (__debug_59("sending connect packet with query %s", e), this.packet({
        type: _$socketIoParser_66.CONNECT,
        query: e
      }));
    } else this.packet({
      type: _$socketIoParser_66.CONNECT
    });
        SRTlib.send("]},");

  }, __Socket_59.prototype.onclose = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.onclose", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (__debug_59("close (%s)", e), this.connected = !1, this.disconnected = !0, delete this.id, this.emit("disconnect", e));
        SRTlib.send("]},");

  }, __Socket_59.prototype.onpacket = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.onpacket", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.nsp === this.nsp, r = e.type === _$socketIoParser_66.ERROR && "/" === e.nsp;
    if (t || r) switch (e.type) {
      case _$socketIoParser_66.CONNECT:
        this.onconnect();
        break;
      case _$socketIoParser_66.EVENT:
      case _$socketIoParser_66.BINARY_EVENT:
        this.onevent(e);
        break;
      case _$socketIoParser_66.ACK:
      case _$socketIoParser_66.BINARY_ACK:
        this.onack(e);
        break;
      case _$socketIoParser_66.DISCONNECT:
        this.ondisconnect();
        break;
      case _$socketIoParser_66.ERROR:
        this.emit("error", e.data);
    }
        SRTlib.send("]},");

  }, __Socket_59.prototype.onevent = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.onevent", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.data || [];
    (__debug_59("emitting event %j", t), null != e.id && (__debug_59("attaching ack callback to event"), t.push(this.ack(e.id))), this.connected ? emit.apply(this, t) : this.receiveBuffer.push(t));
        SRTlib.send("]},");

  }, __Socket_59.prototype.ack = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.ack", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = this, r = !1;
        SRTlib.send("]},");

    return function () {
            SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.ack.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      if (!r) {
        r = !0;
        var n = _$toArray_73(arguments);
        (__debug_59("sending ack %j", n), t.packet({
          type: _$hasBinary_35(n) ? _$socketIoParser_66.BINARY_ACK : _$socketIoParser_66.ACK,
          id: e,
          data: n
        }));
      }
            SRTlib.send("]},");

    };
        SRTlib.send("]},");

  }, __Socket_59.prototype.onack = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.onack", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = this.acks[e.id];
    "function" == typeof t ? (__debug_59("calling ack %s with %j", e.id, e.data), t.apply(this, e.data), delete this.acks[e.id]) : __debug_59("bad ack %s", e.id);
        SRTlib.send("]},");

  }, __Socket_59.prototype.onconnect = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.onconnect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (this.connected = !0, this.disconnected = !1, this.emit("connect"), this.emitBuffered());
        SRTlib.send("]},");

  }, __Socket_59.prototype.emitBuffered = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.emitBuffered", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e;
    for (e = 0; e < this.receiveBuffer.length; e++) emit.apply(this, this.receiveBuffer[e]);
    for ((this.receiveBuffer = [], e = 0); e < this.sendBuffer.length; e++) this.packet(this.sendBuffer[e]);
    this.sendBuffer = [];
        SRTlib.send("]},");

  }, __Socket_59.prototype.ondisconnect = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.ondisconnect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (__debug_59("server disconnect (%s)", this.nsp), this.destroy(), this.onclose("io server disconnect"));
        SRTlib.send("]},");

  }, __Socket_59.prototype.destroy = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.destroy", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    if (this.subs) {
      for (var e = 0; e < this.subs.length; e++) this.subs[e].destroy();
      this.subs = null;
    }
    this.io.destroy(this);
        SRTlib.send("]},");

  }, __Socket_59.prototype.close = __Socket_59.prototype.disconnect = function () {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.close.__Socket_59.prototype.disconnect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (this.connected && (__debug_59("performing disconnect (%s)", this.nsp), this.packet({
      type: _$socketIoParser_66.DISCONNECT
    })), this.destroy(), this.connected && this.onclose("io client disconnect"), this);
        SRTlib.send("]},");

  }, __Socket_59.prototype.compress = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.compress", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (this.flags.compress = e, this);
        SRTlib.send("]},");

  }, __Socket_59.prototype.binary = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Socket_59.prototype.binary", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (this.flags.binary = e, this);
        SRTlib.send("]},");

  });
  var _$backo2_3 = {};
  function Backoff(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (e = e || ({}), this.ms = e.min || 100, this.max = e.max || 1e4, this.factor = e.factor || 2, this.jitter = e.jitter > 0 && e.jitter <= 1 ? e.jitter : 0, this.attempts = 0);
        SRTlib.send("]},");

  }
  (_$backo2_3 = Backoff, Backoff.prototype.duration = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Backoff.prototype.duration", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = this.ms * Math.pow(this.factor, this.attempts++);
    if (this.jitter) {
      var t = Math.random(), r = Math.floor(t * this.jitter * e);
      e = 0 == (1 & Math.floor(10 * t)) ? e - r : e + r;
    }
        SRTlib.send("]},");

    return 0 | Math.min(e, this.max);
        SRTlib.send("]},");

  }, Backoff.prototype.reset = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Backoff.prototype.reset", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    this.attempts = 0;
        SRTlib.send("]},");

  }, Backoff.prototype.setMin = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Backoff.prototype.setMin", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this.ms = e;
        SRTlib.send("]},");

  }, Backoff.prototype.setMax = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Backoff.prototype.setMax", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this.max = e;
        SRTlib.send("]},");

  }, Backoff.prototype.setJitter = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Backoff.prototype.setJitter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this.jitter = e;
        SRTlib.send("]},");

  });
  var _$manager_57 = {}, __debug_57 = _$browser_62("socket.io-client:manager"), __has_57 = Object.prototype.hasOwnProperty;
  function Manager(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (!(this instanceof Manager)) {
            SRTlib.send("]},");

      return new Manager(e, t);
    }
    (e && "object" == typeof e && (t = e, e = void 0), (t = t || ({})).path = t.path || "/socket.io", this.nsps = {}, this.subs = [], this.opts = t, this.reconnection(!1 !== t.reconnection), this.reconnectionAttempts(t.reconnectionAttempts || 1 / 0), this.reconnectionDelay(t.reconnectionDelay || 1e3), this.reconnectionDelayMax(t.reconnectionDelayMax || 5e3), this.randomizationFactor(t.randomizationFactor || .5), this.backoff = new _$backo2_3({
      min: this.reconnectionDelay(),
      max: this.reconnectionDelayMax(),
      jitter: this.randomizationFactor()
    }), this.timeout(null == t.timeout ? 2e4 : t.timeout), this.readyState = "closed", this.uri = e, this.connecting = [], this.lastPing = null, this.encoding = !1, this.packetBuffer = []);
    var r = t.parser || _$socketIoParser_66;
    (this.encoder = new r.Encoder(), this.decoder = new r.Decoder(), this.autoConnect = !1 !== t.autoConnect, this.autoConnect && this.open());
        SRTlib.send("]},");

  }
  (_$manager_57 = Manager, Manager.prototype.emitAll = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.emitAll", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    for (var e in (this.emit.apply(this, arguments), this.nsps)) __has_57.call(this.nsps, e) && this.nsps[e].emit.apply(this.nsps[e], arguments);
        SRTlib.send("]},");

  }, Manager.prototype.updateSocketIds = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.updateSocketIds", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    for (var e in this.nsps) __has_57.call(this.nsps, e) && (this.nsps[e].id = this.generateId(e));
        SRTlib.send("]},");

  }, Manager.prototype.generateId = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.generateId", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return ("/" === e ? "" : e + "#") + this.engine.id;
        SRTlib.send("]},");

  }, _$componentEmitter_61(Manager.prototype), Manager.prototype.reconnection = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.reconnection", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return arguments.length ? (this._reconnection = !!e, this) : this._reconnection;
        SRTlib.send("]},");

  }, Manager.prototype.reconnectionAttempts = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.reconnectionAttempts", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return arguments.length ? (this._reconnectionAttempts = e, this) : this._reconnectionAttempts;
        SRTlib.send("]},");

  }, Manager.prototype.reconnectionDelay = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.reconnectionDelay", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return arguments.length ? (this._reconnectionDelay = e, this.backoff && this.backoff.setMin(e), this) : this._reconnectionDelay;
        SRTlib.send("]},");

  }, Manager.prototype.randomizationFactor = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.randomizationFactor", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return arguments.length ? (this._randomizationFactor = e, this.backoff && this.backoff.setJitter(e), this) : this._randomizationFactor;
        SRTlib.send("]},");

  }, Manager.prototype.reconnectionDelayMax = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.reconnectionDelayMax", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return arguments.length ? (this._reconnectionDelayMax = e, this.backoff && this.backoff.setMax(e), this) : this._reconnectionDelayMax;
        SRTlib.send("]},");

  }, Manager.prototype.timeout = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.timeout", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return arguments.length ? (this._timeout = e, this) : this._timeout;
        SRTlib.send("]},");

  }, Manager.prototype.maybeReconnectOnOpen = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.maybeReconnectOnOpen", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    !this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect();
        SRTlib.send("]},");

  }, Manager.prototype.open = Manager.prototype.connect = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.open.Manager.prototype.connect", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if ((__debug_57("readyState %s", this.readyState), ~this.readyState.indexOf("open"))) {
            SRTlib.send("]},");

      return this;
    }
    (__debug_57("opening %s", this.uri), this.engine = _$lib_17(this.uri, this.opts));
    var r = this.engine, n = this;
    (this.readyState = "opening", this.skipReconnect = !1);
    var i = _$on_58(r, "open", function () {
            SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.open.Manager.prototype.connect.i._$on_58", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (n.onopen(), e && e());
            SRTlib.send("]},");

    }), o = _$on_58(r, "error", function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.open.Manager.prototype.connect.o._$on_58", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if ((__debug_57("connect_error"), n.cleanup(), n.readyState = "closed", n.emitAll("connect_error", t), e)) {
        var r = new Error("Connection error");
        (r.data = t, e(r));
      } else n.maybeReconnectOnOpen();
            SRTlib.send("]},");

    });
    if (!1 !== this._timeout) {
      var s = this._timeout;
      __debug_57("connect attempt will timeout after %d", s);
      var a = setTimeout(function () {
                SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.open.Manager.prototype.connect.a.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (__debug_57("connect attempt timed out after %d", s), i.destroy(), r.close(), r.emit("error", "timeout"), n.emitAll("connect_timeout", s));
                SRTlib.send("]},");

      }, s);
      this.subs.push({
        destroy: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.open.Manager.prototype.connect.subs.push.destroy", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          clearTimeout(a);
                    SRTlib.send("]},");

        }
      });
    }
        SRTlib.send("]},");

    return (this.subs.push(i), this.subs.push(o), this);
        SRTlib.send("]},");

  }, Manager.prototype.onopen = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.onopen", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (__debug_57("open"), this.cleanup(), this.readyState = "open", this.emit("open"));
    var e = this.engine;
    (this.subs.push(_$on_58(e, "data", _$componentBind_10(this, "ondata"))), this.subs.push(_$on_58(e, "ping", _$componentBind_10(this, "onping"))), this.subs.push(_$on_58(e, "pong", _$componentBind_10(this, "onpong"))), this.subs.push(_$on_58(e, "error", _$componentBind_10(this, "onerror"))), this.subs.push(_$on_58(e, "close", _$componentBind_10(this, "onclose"))), this.subs.push(_$on_58(this.decoder, "decoded", _$componentBind_10(this, "ondecoded"))));
        SRTlib.send("]},");

  }, Manager.prototype.onping = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.onping", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (this.lastPing = new Date(), this.emitAll("ping"));
        SRTlib.send("]},");

  }, Manager.prototype.onpong = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.onpong", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    this.emitAll("pong", new Date() - this.lastPing);
        SRTlib.send("]},");

  }, Manager.prototype.ondata = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.ondata", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this.decoder.add(e);
        SRTlib.send("]},");

  }, Manager.prototype.ondecoded = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.ondecoded", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this.emit("packet", e);
        SRTlib.send("]},");

  }, Manager.prototype.onerror = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.onerror", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (__debug_57("error", e), this.emitAll("error", e));
        SRTlib.send("]},");

  }, Manager.prototype.socket = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.socket2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = this.nsps[e];
    if (!r) {
      (r = new _$socket_59(this, e, t), this.nsps[e] = r);
      var n = this;
      (r.on("connecting", i), r.on("connect", function () {
                SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.socket", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        r.id = n.generateId(e);
                SRTlib.send("]},");

      }), this.autoConnect && i());
    }
    function i() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      ~_$indexof_39(n.connecting, r) || n.connecting.push(r);
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return r;
        SRTlib.send("]},");

  }, Manager.prototype.destroy = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.destroy", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = _$indexof_39(this.connecting, e);
    (~t && this.connecting.splice(t, 1), this.connecting.length || this.close());
        SRTlib.send("]},");

  }, Manager.prototype.packet = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.packet", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    __debug_57("writing packet %j", e);
    var t = this;
    (e.query && 0 === e.type && (e.nsp += "?" + e.query), t.encoding ? t.packetBuffer.push(e) : (t.encoding = !0, this.encoder.encode(e, function (r) {
            SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.packet.encoder.encode", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var n = 0; n < r.length; n++) t.engine.write(r[n], e.options);
      (t.encoding = !1, t.processPacketQueue());
            SRTlib.send("]},");

    })));
        SRTlib.send("]},");

  }, Manager.prototype.processPacketQueue = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.processPacketQueue", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    if (this.packetBuffer.length > 0 && !this.encoding) {
      var e = this.packetBuffer.shift();
      this.packet(e);
    }
        SRTlib.send("]},");

  }, Manager.prototype.cleanup = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.cleanup", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    __debug_57("cleanup");
    for (var e = this.subs.length, t = 0; t < e; t++) this.subs.shift().destroy();
    (this.packetBuffer = [], this.encoding = !1, this.lastPing = null, this.decoder.destroy());
        SRTlib.send("]},");

  }, Manager.prototype.close = Manager.prototype.disconnect = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.close.Manager.prototype.disconnect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    (__debug_57("disconnect"), this.skipReconnect = !0, this.reconnecting = !1, "opening" === this.readyState && this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.engine && this.engine.close());
        SRTlib.send("]},");

  }, Manager.prototype.onclose = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.onclose", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    (__debug_57("onclose"), this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.emit("close", e), this._reconnection && !this.skipReconnect && this.reconnect());
        SRTlib.send("]},");

  }, Manager.prototype.reconnect = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.reconnect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    if (this.reconnecting || this.skipReconnect) {
            SRTlib.send("]},");

      return this;
    }
    var e = this;
    if (this.backoff.attempts >= this._reconnectionAttempts) (__debug_57("reconnect failed"), this.backoff.reset(), this.emitAll("reconnect_failed"), this.reconnecting = !1); else {
      var t = this.backoff.duration();
      (__debug_57("will wait %dms before reconnect attempt", t), this.reconnecting = !0);
      var r = setTimeout(function () {
                SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.reconnect.r.setTimeout2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e.skipReconnect || (__debug_57("attempting reconnect"), e.emitAll("reconnect_attempt", e.backoff.attempts), e.emitAll("reconnecting", e.backoff.attempts), e.skipReconnect || e.open(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.reconnect.r.setTimeout", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          t ? (__debug_57("reconnect attempt error"), e.reconnecting = !1, e.reconnect(), e.emitAll("reconnect_error", t.data)) : (__debug_57("reconnect success"), e.onreconnect());
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      }, t);
      this.subs.push({
        destroy: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.reconnect.subs.push.destroy", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          clearTimeout(r);
                    SRTlib.send("]},");

        }
      });
    }
        SRTlib.send("]},");

  }, Manager.prototype.onreconnect = function () {
        SRTlib.send(`{ "anonymous": true, "function": "Manager.prototype.onreconnect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    var e = this.backoff.attempts;
    (this.reconnecting = !1, this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", e));
        SRTlib.send("]},");

  });
  var _$componentEmitter_11 = {
    exports: {}
  };
  function __Emitter_11(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (e) {
            SRTlib.send("]},");

      return (function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement40", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        for (var t in __Emitter_11.prototype) e[t] = __Emitter_11.prototype[t];
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      })(e);
    }
        SRTlib.send("]},");

  }
  (_$componentEmitter_11.exports = __Emitter_11, __Emitter_11.prototype.on = __Emitter_11.prototype.addEventListener = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_11.prototype.on.__Emitter_11.prototype.addEventListener", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return (this._callbacks = this._callbacks || ({}), (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this);
        SRTlib.send("]},");

  }, __Emitter_11.prototype.once = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_11.prototype.once", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    function r() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.off(e, r), t.apply(this, arguments));
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r.fn = t, this.on(e, r), this);
        SRTlib.send("]},");

  }, __Emitter_11.prototype.off = __Emitter_11.prototype.removeListener = __Emitter_11.prototype.removeAllListeners = __Emitter_11.prototype.removeEventListener = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_11.prototype.off.__Emitter_11.prototype.removeListener.__Emitter_11.prototype.removeAllListeners.__Emitter_11.prototype.removeEventListener", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if ((this._callbacks = this._callbacks || ({}), 0 == arguments.length)) {
            SRTlib.send("]},");

      return (this._callbacks = {}, this);
    }
    var r, n = this._callbacks["$" + e];
    if (!n) {
            SRTlib.send("]},");

      return this;
    }
    if (1 == arguments.length) {
            SRTlib.send("]},");

      return (delete this._callbacks["$" + e], this);
    }
    for (var i = 0; i < n.length; i++) if ((r = n[i]) === t || r.fn === t) {
      n.splice(i, 1);
      break;
    }
        SRTlib.send("]},");

    return (0 === n.length && delete this._callbacks["$" + e], this);
        SRTlib.send("]},");

  }, __Emitter_11.prototype.emit = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_11.prototype.emit", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    this._callbacks = this._callbacks || ({});
    for (var t = new Array(arguments.length - 1), r = this._callbacks["$" + e], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
    if (r) {
      n = 0;
      for (var i = (r = r.slice(0)).length; n < i; ++n) r[n].apply(this, t);
    }
        SRTlib.send("]},");

    return this;
        SRTlib.send("]},");

  }, __Emitter_11.prototype.listeners = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_11.prototype.listeners", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (this._callbacks = this._callbacks || ({}), this._callbacks["$" + e] || []);
        SRTlib.send("]},");

  }, __Emitter_11.prototype.hasListeners = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "__Emitter_11.prototype.hasListeners", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return !!this.listeners(e).length;
        SRTlib.send("]},");

  }, _$componentEmitter_11 = _$componentEmitter_11.exports);
  var _$parseUrl_187 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$parseUrl_187", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = (/^\w+:\/\//).exec(e), r = 0;
    t && (r = t[0].length + 1);
    var n = e.indexOf("/", r);
        SRTlib.send("]},");

    return -1 === n ? {
      origin: e,
      pathname: "/"
    } : {
      origin: e.slice(0, n),
      pathname: e.slice(n)
    };
        SRTlib.send("]},");

  };
  function ___extends_182() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_182 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply27", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var socketIo, io = function () {
        SRTlib.send(`{ "anonymous": true, "function": "io", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (socketIo || (socketIo = _$lib_56({})), socketIo);
        SRTlib.send("]},");

  }, statusOrder = ["ASSEMBLY_UPLOADING", "ASSEMBLY_EXECUTING", "ASSEMBLY_COMPLETED"];
  function isStatus(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return statusOrder.indexOf(e) >= statusOrder.indexOf(t);
        SRTlib.send("]},");

  }
  var TransloaditAssembly = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r;
            SRTlib.send("]},");

      return ((r = e.call(this) || this).status = t, r.socket = null, r.pollInterval = null, r.closed = !1, r);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.connect = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i.connect", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this._connectSocket(), this._beginPolling());
            SRTlib.send("]},");

    }, i._onFinished = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._onFinished", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.emit("finished"), this.close());
            SRTlib.send("]},");

    }, i._connectSocket = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._connectSocket9", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this, t = _$parseUrl_187(this.status.websocket_url), r = io().connect(t.origin, {
        transports: ["websocket"],
        path: t.pathname
      });
      (r.on("connect", function () {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._connectSocket", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (r.emit("assembly_connect", {
          id: e.status.assembly_id
        }), e.emit("connect"));
                SRTlib.send("]},");

      }), r.on("error", function () {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._connectSocket2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (r.disconnect(), e.socket = null);
                SRTlib.send("]},");

      }), r.on("assembly_finished", function () {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._connectSocket3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e._onFinished();
                SRTlib.send("]},");

      }), r.on("assembly_upload_finished", function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._connectSocket4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e.emit("upload", t), e.status.uploads.push(t));
                SRTlib.send("]},");

      }), r.on("assembly_uploading_finished", function () {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._connectSocket5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e.emit("executing");
                SRTlib.send("]},");

      }), r.on("assembly_upload_meta_data_extracted", function () {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._connectSocket6", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (e.emit("metadata"), e._fetchStatus({
          diff: !1
        }));
                SRTlib.send("]},");

      }), r.on("assembly_result_finished", function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._connectSocket7", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (e.emit("result", t, r), e.status.results[t] || (e.status.results[t] = []), e.status.results[t].push(r));
                SRTlib.send("]},");

      }), r.on("assembly_error", function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._connectSocket8", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (e._onError(t), e._fetchStatus({
          diff: !1
        }));
                SRTlib.send("]},");

      }), this.socket = r);
            SRTlib.send("]},");

    }, i._onError = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._onError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this.emit("error", ___extends_182(new Error(e.message), e));
            SRTlib.send("]},");

    }, i._beginPolling = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._beginPolling", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      this.pollInterval = setInterval(function () {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._beginPolling.pollInterval.setInterval", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e.socket && e.socket.connected || e._fetchStatus();
                SRTlib.send("]},");

      }, 2e3);
            SRTlib.send("]},");

    }, i._fetchStatus = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._fetchStatus", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = (void 0 === e ? {} : e).diff, n = void 0 === r || r;
            SRTlib.send("]},");

      return fetch(this.status.assembly_ssl_url).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._fetchStatus.ReturnStatement.then.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.json();
                SRTlib.send("]},");

      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._fetchStatus.ReturnStatement.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t.closed || (t.emit("status", e), n ? t.updateStatus(e) : t.status = e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.update = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i.update", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this._fetchStatus({
        diff: !0
      });
            SRTlib.send("]},");

    }, i.updateStatus = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i.updateStatus", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this._diffStatus(this.status, e), this.status = e);
            SRTlib.send("]},");

    }, i._diffStatus = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._diffStatus", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this, n = e.ok, i = t.ok;
      if (t.error && !e.error) {
                SRTlib.send("]},");

        return this._onError(t);
      }
      var o = isStatus(i, "ASSEMBLY_EXECUTING") && !isStatus(n, "ASSEMBLY_EXECUTING");
      (o && this.emit("executing"), Object.keys(t.uploads).filter(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._diffStatus.filter.map.forEach.filter.map.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return !_$hasProperty_219(e.uploads, t);
                SRTlib.send("]},");

      }).map(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._diffStatus.filter.map.forEach.filter.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t.uploads[e];
                SRTlib.send("]},");

      }).forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._diffStatus.filter.map.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        r.emit("upload", e);
                SRTlib.send("]},");

      }), o && this.emit("metadata"), Object.keys(t.results).forEach(function (n) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._diffStatus.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var i = t.results[n], o = e.results[n];
        i.filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._diffStatus.forEach.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return !o || !o.some(function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._diffStatus.forEach.forEach.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return t.id === e.id;
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        }).forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i._diffStatus.forEach.forEach2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          r.emit("result", n, e);
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), isStatus(i, "ASSEMBLY_COMPLETED") && !isStatus(n, "ASSEMBLY_COMPLETED") && this.emit("finished"));
            SRTlib.send("]},");

    }, i.close = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssembly.ReturnStatement.i.close", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.closed = !0, this.socket && (this.socket.disconnect(), this.socket = null), clearInterval(this.pollInterval));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(_$componentEmitter_11), _$TransloaditAssembly_182 = TransloaditAssembly, _$Client_185 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$Client_185", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (void 0 === e && (e = {}), this.opts = e, this._reportError = this._reportError.bind(this), this._headers = {
        "Transloadit-Client": this.opts.client
      });
            SRTlib.send("]},");

    }
    var t = e.prototype;
        SRTlib.send("]},");

    return (t.createAssembly = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.createAssembly", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = (e.templateId, e.params), n = e.fields, i = e.signature, o = e.expectedFiles, s = new FormData();
      (s.append("params", "string" == typeof r ? r : JSON.stringify(r)), i && s.append("signature", i), Object.keys(n).forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.createAssembly.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        s.append(e, n[e]);
                SRTlib.send("]},");

      }), s.append("num_expected_upload_files", o));
      var a = this.opts.service + "/assemblies";
            SRTlib.send("]},");

      return fetch(a, {
        method: "post",
        headers: this._headers,
        body: s
      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.createAssembly.ReturnStatement.then.then.catch.then.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.json();
                SRTlib.send("]},");

      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.createAssembly.ReturnStatement.then.then.catch.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e.error) {
          var t = new Error(e.error);
          throw (t.details = e.message, t.assembly = e, e.assembly_id && (t.details += " Assembly ID: " + e.assembly_id), t);
        }
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      }).catch(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.createAssembly.ReturnStatement.then.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t._reportError(e, {
          url: a,
          type: "API_ERROR"
        });
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t.reserveFile = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.reserveFile", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this, n = encodeURIComponent(t.size), i = e.assembly_ssl_url + "/reserve_file?size=" + n;
            SRTlib.send("]},");

      return fetch(i, {
        method: "post",
        headers: this._headers
      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.reserveFile.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.json();
                SRTlib.send("]},");

      }).catch(function (n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.reserveFile.ReturnStatement.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return r._reportError(n, {
          assembly: e,
          file: t,
          url: i,
          type: "API_ERROR"
        });
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t.addFile = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.addFile", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
      if (!t.uploadURL) {
                SRTlib.send("]},");

        return Promise.reject(new Error("File does not have an `uploadURL`."));
      }
      var n = encodeURIComponent(t.size), i = encodeURIComponent(t.uploadURL), o = "size=" + n + "&filename=" + encodeURIComponent(t.name) + "&fieldname=file&s3Url=" + i, s = e.assembly_ssl_url + "/add_file?" + o;
            SRTlib.send("]},");

      return fetch(s, {
        method: "post",
        headers: this._headers
      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.addFile.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.json();
                SRTlib.send("]},");

      }).catch(function (n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.addFile.ReturnStatement.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return r._reportError(n, {
          assembly: e,
          file: t,
          url: s,
          type: "API_ERROR"
        });
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t.cancelAssembly = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.cancelAssembly", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = e.assembly_ssl_url;
            SRTlib.send("]},");

      return fetch(r, {
        method: "delete",
        headers: this._headers
      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.cancelAssembly.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.json();
                SRTlib.send("]},");

      }).catch(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.cancelAssembly.ReturnStatement.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t._reportError(e, {
          url: r,
          type: "API_ERROR"
        });
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t.getAssemblyStatus = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.getAssemblyStatus", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return fetch(e, {
        headers: this._headers
      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.getAssemblyStatus.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.json();
                SRTlib.send("]},");

      }).catch(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.getAssemblyStatus.ReturnStatement.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t._reportError(r, {
          url: e,
          type: "STATUS_ERROR"
        });
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t.submitError = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.submitError", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = t.endpoint, n = t.instance, i = t.assembly, o = e.details ? e.message + " (" + e.details + ")" : e.message;
            SRTlib.send("]},");

      return fetch("https://status.transloadit.com/client_error", {
        method: "post",
        body: JSON.stringify({
          endpoint: r,
          instance: n,
          assembly_id: i,
          agent: "undefined" != typeof navigator ? navigator.userAgent : "",
          client: this.opts.client,
          error: o
        })
      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t.submitError.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.json();
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t._reportError = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t._reportError", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (!1 === this.opts.errorReporting) throw e;
      var r = {
        type: t.type
      };
      throw (t.assembly && (r.assembly = t.assembly.assembly_id, r.instance = t.assembly.instance), t.url && (r.endpoint = t.url), this.submitError(e, r).catch(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$Client_185.ReturnStatement.t._reportError.submitError.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

      }), e);
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  })(), _$AssemblyOptions_183 = {};
  function validateParams(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (!e) throw new Error("Transloadit: The `params` option is required.");
    if ("string" == typeof e) try {
      e = JSON.parse(e);
    } catch (err) {
      throw (err.message = "Transloadit: The `params` option is a malformed JSON string: " + err.message, err);
    }
    if (!e.auth || !e.auth.key) throw new Error("Transloadit: The `params.auth.key` option is required. You can find your Transloadit API key at https://transloadit.com/account/api-settings.");
        SRTlib.send("]},");

  }
  var AssemblyOptions = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (this.files = e, this.opts = t);
            SRTlib.send("]},");

    }
    var t = e.prototype;
        SRTlib.send("]},");

    return (t._normalizeAssemblyOptions = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t._normalizeAssemblyOptions2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      if (Array.isArray(t.fields)) {
        var r = t.fields;
        (t.fields = {}, r.forEach(function (r) {
                    SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t._normalizeAssemblyOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          t.fields[r] = e.meta[r];
                    SRTlib.send("]},");

        }));
      }
            SRTlib.send("]},");

      return (t.fields || (t.fields = {}), t);
            SRTlib.send("]},");

    }, t._getAssemblyOptions = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t._getAssemblyOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = this.opts;
            SRTlib.send("]},");

      return Promise.resolve().then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t._getAssemblyOptions.ReturnStatement.then.then.then.then.then.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return r.getAssemblyOptions(e, r);
                SRTlib.send("]},");

      }).then(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t._getAssemblyOptions.ReturnStatement.then.then.then.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t._normalizeAssemblyOptions(e, r);
                SRTlib.send("]},");

      }).then(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t._getAssemblyOptions.ReturnStatement.then.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return (validateParams(t.params), {
          fileIDs: [e.id],
          options: t
        });
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t._dedupe = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t._dedupe", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = Object.create(null);
            SRTlib.send("]},");

      return (e.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t._dedupe.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r, n = e.fileIDs, i = e.options, o = JSON.stringify(i);
        t[o] ? (r = t[o].fileIDs).push.apply(r, n) : t[o] = {
          options: i,
          fileIDs: [].concat(n)
        };
                SRTlib.send("]},");

      }), Object.keys(t).map(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t._dedupe.ReturnStatement.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t[e];
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, t.build = function () {
            SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t.build", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this, t = this.opts;
            SRTlib.send("]},");

      return this.files.length > 0 ? Promise.all(this.files.map(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t.build.ReturnStatement.then.files.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e._getAssemblyOptions(t);
                SRTlib.send("]},");

      })).then(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t.build.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e._dedupe(t);
                SRTlib.send("]},");

      }) : t.alwaysRunAssembly ? Promise.resolve(t.getAssemblyOptions(null, t)).then(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t.build.ReturnStatement.then2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return (validateParams(t.params), [{
          fileIDs: e.files.map(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "AssemblyOptions.ReturnStatement.t.build.ReturnStatement.then.ReturnStatement.fileIDs.e.files.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return e.id;
                        SRTlib.send("]},");

          }),
          options: t
        }]);
                SRTlib.send("]},");

      }) : Promise.resolve([]);
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  })();
  function ___assertThisInitialized_184(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  (_$AssemblyOptions_183 = AssemblyOptions, _$AssemblyOptions_183.validateParams = validateParams);
  var TransloaditAssemblyWatcher = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssemblyWatcher", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this) || this)._uppy = t, n._assemblyIDs = r, n._remaining = r.length, n.promise = new Promise(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n.promise", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (n._resolve = e, n._reject = t);
                SRTlib.send("]},");

      }), n._onAssemblyComplete = n._onAssemblyComplete.bind(___assertThisInitialized_184(n)), n._onAssemblyCancel = n._onAssemblyCancel.bind(___assertThisInitialized_184(n)), n._onAssemblyError = n._onAssemblyError.bind(___assertThisInitialized_184(n)), n._onImportError = n._onImportError.bind(___assertThisInitialized_184(n)), n._addListeners(), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i._watching = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssemblyWatcher.ReturnStatement.i._watching", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return -1 !== this._assemblyIDs.indexOf(e);
            SRTlib.send("]},");

    }, i._onAssemblyComplete = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssemblyWatcher.ReturnStatement.i._onAssemblyComplete", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this._watching(e.assembly_id) && (this._uppy.log("[Transloadit] AssemblyWatcher: Got Assembly finish " + e.assembly_id), this.emit("assembly-complete", e.assembly_id), this._checkAllComplete());
            SRTlib.send("]},");

    }, i._onAssemblyCancel = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssemblyWatcher.ReturnStatement.i._onAssemblyCancel", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      this._watching(e.assembly_id) && this._checkAllComplete();
            SRTlib.send("]},");

    }, i._onAssemblyError = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssemblyWatcher.ReturnStatement.i._onAssemblyError", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      this._watching(e.assembly_id) && (this._uppy.log("[Transloadit] AssemblyWatcher: Got Assembly error " + e.assembly_id), this._uppy.log(t), this.emit("assembly-error", e.assembly_id, t), this._checkAllComplete());
            SRTlib.send("]},");

    }, i._onImportError = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssemblyWatcher.ReturnStatement.i._onImportError", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      this._watching(e.assembly_id) && this._onAssemblyError(e, r);
            SRTlib.send("]},");

    }, i._checkAllComplete = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssemblyWatcher.ReturnStatement.i._checkAllComplete", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this._remaining -= 1, 0 === this._remaining && (this._removeListeners(), this._resolve()));
            SRTlib.send("]},");

    }, i._removeListeners = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssemblyWatcher.ReturnStatement.i._removeListeners", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this._uppy.off("transloadit:complete", this._onAssemblyComplete), this._uppy.off("transloadit:assembly-cancel", this._onAssemblyCancel), this._uppy.off("transloadit:assembly-error", this._onAssemblyError), this._uppy.off("transloadit:import-error", this._onImportError));
            SRTlib.send("]},");

    }, i._addListeners = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditAssemblyWatcher.ReturnStatement.i._addListeners", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this._uppy.on("transloadit:complete", this._onAssemblyComplete), this._uppy.on("transloadit:assembly-cancel", this._onAssemblyCancel), this._uppy.on("transloadit:assembly-error", this._onAssemblyError), this._uppy.on("transloadit:import-error", this._onImportError));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(_$componentEmitter_11), _$TransloaditAssemblyWatcher_184 = TransloaditAssemblyWatcher, _$package_188 = {
    version: "1.5.11"
  }, _$lib_186 = {}, ___class_186, ___temp_186;
  function ___extends_186() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_186 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply28", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  function ___assertThisInitialized_186(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_186 = _$lib_97.Plugin;
  function defaultGetAssemblyOptions(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return {
      params: t.params,
      signature: t.signature,
      fields: t.fields
    };
        SRTlib.send("]},");

  }
  var COMPANION = "https://api2.transloadit.com/companion", TL_COMPANION = /https?:\/\/api2(?:-\w+)?\.transloadit\.com\/companion/, TL_UPPY_SERVER = /https?:\/\/api2(?:-\w+)?\.transloadit\.com\/uppy-server/;
  function ___extends_159() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_159 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply29", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  (___temp_186 = ___class_186 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "emptyKey35", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
      ((n = e.call(this, t, r) || this).type = "uploader", n.id = n.opts.id || "Transloadit", n.title = "Transloadit", n.defaultLocale = {
        strings: {
          creatingAssembly: "Preparing upload...",
          creatingAssemblyFailed: "Transloadit: Could not create Assembly",
          encoding: "Encoding..."
        }
      });
      var i = {
        service: "https://api2.transloadit.com",
        errorReporting: !0,
        waitForEncoding: !1,
        waitForMetadata: !1,
        alwaysRunAssembly: !1,
        importFromUploadURLs: !1,
        signature: null,
        params: null,
        fields: {},
        getAssemblyOptions: defaultGetAssemblyOptions,
        limit: 0
      };
      (n.opts = ___extends_186({}, i, {}, r), n.i18nInit(), n._prepareUpload = n._prepareUpload.bind(___assertThisInitialized_186(n)), n._afterUpload = n._afterUpload.bind(___assertThisInitialized_186(n)), n._onError = n._onError.bind(___assertThisInitialized_186(n)), n._onTusError = n._onTusError.bind(___assertThisInitialized_186(n)), n._onCancelAll = n._onCancelAll.bind(___assertThisInitialized_186(n)), n._onFileUploadURLAvailable = n._onFileUploadURLAvailable.bind(___assertThisInitialized_186(n)), n._onRestored = n._onRestored.bind(___assertThisInitialized_186(n)), n._getPersistentData = n._getPersistentData.bind(___assertThisInitialized_186(n)));
      var o = n.opts.getAssemblyOptions !== i.getAssemblyOptions;
            SRTlib.send("]},");

      return (n.opts.params ? _$AssemblyOptions_183.validateParams(n.opts.params) : o || _$AssemblyOptions_183.validateParams(null), n.client = new _$Client_185({
        service: n.opts.service,
        client: n._getClientVersion(),
        errorReporting: n.opts.errorReporting
      }), n.activeAssemblies = {}, n.assemblyWatchers = {}, n.completedFiles = Object.create(null), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.setOptions = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i.setOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (e.prototype.setOptions.call(this, t), this.i18nInit());
            SRTlib.send("]},");

    }, i.i18nInit = function () {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i.i18nInit", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.translator = new _$Translator_200([this.defaultLocale, this.uppy.locale, this.opts.locale]), this.i18n = this.translator.translate.bind(this.translator), this.i18nArray = this.translator.translateArray.bind(this.translator), this.setPluginState());
            SRTlib.send("]},");

    }, i._getClientVersion = function () {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._getClientVersion", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this, t = ["uppy-core:" + this.uppy.constructor.VERSION, "uppy-transloadit:" + this.constructor.VERSION, "uppy-tus:" + _$lib_190.VERSION], r = function (r, n) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._getClientVersion.r", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var i = e.uppy.getPlugin(r);
        i && t.push(n + ":" + i.constructor.VERSION);
                SRTlib.send("]},");

      };
            SRTlib.send("]},");

      return (this.opts.importFromUploadURLs && (r("XHRUpload", "uppy-xhr-upload"), r("AwsS3", "uppy-aws-s3"), r("AwsS3Multipart", "uppy-aws-s3-multipart")), r("Dropbox", "uppy-dropbox"), r("Facebook", "uppy-facebook"), r("GoogleDrive", "uppy-google-drive"), r("Instagram", "uppy-instagram"), r("OneDrive", "uppy-onedrive"), r("Url", "uppy-url"), t.join(","));
            SRTlib.send("]},");

    }, i._attachAssemblyMetadata = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._attachAssemblyMetadata", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = ___extends_186({}, e.meta, {
        assembly_url: t.assembly_url,
        filename: e.name,
        fieldname: "file"
      }), n = ___extends_186({}, e.tus, {
        endpoint: t.tus_url
      }), i = e.remote;
      if (e.remote && TL_UPPY_SERVER.test(e.remote.companionUrl)) {
        var o = new Error("The https://api2.transloadit.com/uppy-server endpoint was renamed to https://api2.transloadit.com/companion, please update your `companionUrl` options accordingly.");
        throw (this.uppy.log(o), o);
      }
      if (e.remote && TL_COMPANION.test(e.remote.companionUrl)) {
        var s = t.companion_url.replace(/\/$/, ""), a = e.remote.url.replace(e.remote.companionUrl, "").replace(/^\//, "");
        i = ___extends_186({}, e.remote, {
          companionUrl: s,
          url: s + "/" + a
        });
      }
      var u = ___extends_186({}, e, {
        transloadit: {
          assembly: t.assembly_id
        }
      });
            SRTlib.send("]},");

      return (this.opts.importFromUploadURLs || ___extends_186(u, {
        meta: r,
        tus: n,
        remote: i
      }), u);
            SRTlib.send("]},");

    }, i._createAssembly = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._createAssembly", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = this;
            SRTlib.send("]},");

      return (this.uppy.log("[Transloadit] Create Assembly"), this.client.createAssembly({
        params: r.params,
        fields: r.fields,
        expectedFiles: e.length,
        signature: r.signature
      }).then(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._createAssembly.ReturnStatement.client.createAssembly.then.catch.client.createAssembly.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var i, o, s = new _$TransloaditAssembly_182(r), a = s.status, u = a.assembly_id, l = n.getPluginState(), c = l.assemblies, p = l.uploadsAssemblies;
        n.setPluginState({
          assemblies: ___extends_186({}, c, (i = {}, i[u] = a, i)),
          uploadsAssemblies: ___extends_186({}, p, (o = {}, o[t] = [].concat(p[t], [u]), o))
        });
        var h = n.uppy.getState().files, d = {};
                SRTlib.send("]},");

        return (e.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._createAssembly.ReturnStatement.client.createAssembly.then.catch.client.createAssembly.then.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          d[e] = n._attachAssemblyMetadata(n.uppy.getFile(e), a);
                    SRTlib.send("]},");

        }), n.uppy.setState({
          files: ___extends_186({}, h, {}, d)
        }), n.uppy.emit("transloadit:assembly-created", a, e), n.uppy.log("[Transloadit] Created Assembly " + u), s);
                SRTlib.send("]},");

      }).catch(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._createAssembly.ReturnStatement.client.createAssembly.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        throw (e.message = n.i18n("creatingAssemblyFailed") + ": " + e.message, e);
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, i._createAssemblyWatcher = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._createAssemblyWatcher3", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = this, i = new _$TransloaditAssemblyWatcher_184(this.uppy, e);
      (i.on("assembly-complete", function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._createAssemblyWatcher", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        n.getAssemblyFiles(e).forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._createAssemblyWatcher.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (n.completedFiles[e.id] = !0, n.uppy.emit("postprocess-complete", e));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), i.on("assembly-error", function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._createAssemblyWatcher2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        n.getAssemblyFiles(e).forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._createAssemblyWatcher.forEach2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (n.uppy.emit("upload-error", e, t), n.uppy.emit("postprocess-complete", e));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), this.assemblyWatchers[r] = i);
            SRTlib.send("]},");

    }, i._shouldWaitAfterUpload = function () {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._shouldWaitAfterUpload", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.opts.waitForEncoding || this.opts.waitForMetadata;
            SRTlib.send("]},");

    }, i._reserveFiles = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._reserveFiles", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
            SRTlib.send("]},");

      return Promise.all(t.map(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._reserveFiles.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var n = r.uppy.getFile(t);
                SRTlib.send("]},");

        return r.client.reserveFile(e, n);
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, i._onFileUploadURLAvailable = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onFileUploadURLAvailable", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      if (e && e.transloadit && e.transloadit.assembly) {
        var r = this.getPluginState().assemblies[e.transloadit.assembly];
        this.client.addFile(r, e).catch(function (n) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onFileUploadURLAvailable.client.addFile.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (t.uppy.log(n), t.uppy.emit("transloadit:import-error", r, e.id, n));
                    SRTlib.send("]},");

        });
      }
            SRTlib.send("]},");

    }, i._findFile = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._findFile", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = this.uppy.getFiles(), r = 0; r < t.length; r++) {
        var n = t[r];
        if (n.uploadURL === e.tus_upload_url) {
                    SRTlib.send("]},");

          return n;
        }
        if (n.tus && n.tus.uploadUrl === e.tus_upload_url) {
                    SRTlib.send("]},");

          return n;
        }
        if (!e.is_tus_file && n.name === e.name && n.size === e.size) {
                    SRTlib.send("]},");

          return n;
        }
      }
            SRTlib.send("]},");

    }, i._onFileUploadComplete = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onFileUploadComplete", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r, n = this.getPluginState(), i = this._findFile(t);
      i ? (this.setPluginState({
        files: ___extends_186({}, n.files, (r = {}, r[t.id] = {
          assembly: e,
          id: i.id,
          uploadedFile: t
        }, r))
      }), this.uppy.emit("transloadit:upload", t, this.getAssembly(e))) : this.uppy.log("[Transloadit] Couldn\u2019t file the file, it was likely removed in the process");
            SRTlib.send("]},");

    }, i._onResult = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onResult", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = this.getPluginState(), i = n.files[r.original_id];
      r.localId = i ? i.id : null;
      var o = {
        result: r,
        stepName: t,
        id: r.id,
        assembly: e
      };
      (this.setPluginState({
        results: [].concat(n.results, [o])
      }), this.uppy.emit("transloadit:result", t, r, this.getAssembly(e)));
            SRTlib.send("]},");

    }, i._onAssemblyFinished = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onAssemblyFinished", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = e.assembly_ssl_url;
      this.client.getAssemblyStatus(r).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onAssemblyFinished.client.getAssemblyStatus.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r, n = e.assembly_id, i = t.getPluginState();
        (t.setPluginState({
          assemblies: ___extends_186({}, i.assemblies, (r = {}, r[n] = e, r))
        }), t.uppy.emit("transloadit:complete", e));
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i._cancelAssembly = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._cancelAssembly", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return this.client.cancelAssembly(e).then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._cancelAssembly.ReturnStatement.client.cancelAssembly.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        t.uppy.emit("transloadit:assembly-cancelled", e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i._onCancelAll = function () {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onCancelAll", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this, t = this.getPluginState().uploadsAssemblies, r = Object.keys(t).reduce(function (e, r) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onCancelAll.r.reduce.map.reduce", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return (e.push.apply(e, t[r]), e);
                SRTlib.send("]},");

      }, []).map(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onCancelAll.r.reduce.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = e.getAssembly(t);
                SRTlib.send("]},");

        return e._cancelAssembly(r);
                SRTlib.send("]},");

      });
      Promise.all(r).catch(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onCancelAll.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.uppy.log(t);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i._getPersistentData = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._getPersistentData", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t, r = this.getPluginState(), n = r.assemblies, i = r.uploadsAssemblies;
      e(((t = {})[this.id] = {
        assemblies: n,
        uploadsAssemblies: i
      }, t));
            SRTlib.send("]},");

    }, i._onRestored = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = e && e[this.id] ? e[this.id] : {}, n = r.assemblies || ({}), i = r.uploadsAssemblies || ({});
      0 !== Object.keys(i).length && (this.restored = Promise.resolve().then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e, r, o;
                SRTlib.send("]},");

        return (e = n, r = {}, o = [], Object.keys(e).forEach(function (n) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var i = e[n];
          i.uploads.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement.forEach.i.uploads.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var i = t._findFile(e);
            r[e.id] = {
              id: i.id,
              assembly: n,
              uploadedFile: e
            };
                        SRTlib.send("]},");

          });
          var s = t.getPluginState();
          Object.keys(i.results).forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement.forEach.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            i.results[e].forEach(function (t) {
                            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement.forEach.forEach.i.results.e.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

              var r = s.files[t.original_id];
              (t.localId = r ? r.id : null, o.push({
                id: t.id,
                result: t,
                stepName: e,
                assembly: n
              }));
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        }), t.setPluginState({
          assemblies: e,
          files: r,
          results: o,
          uploadsAssemblies: i
        }), (function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e = t.getPluginState(), r = e.assemblies, n = e.uploadsAssemblies;
          (Object.keys(n).forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement.forEach2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var r = n[e], i = r.reduce(function (e, r) {
                            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement.forEach.i", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

              var n = t.getAssemblyFiles(r).map(function (e) {
                                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement.forEach.i.n.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                                SRTlib.send("]},");

                return e.id;
                                SRTlib.send("]},");

              });
                            SRTlib.send("]},");

              return (e.push.apply(e, n), e);
                            SRTlib.send("]},");

            }, []);
            t._createAssemblyWatcher(r, i, e);
                        SRTlib.send("]},");

          }), Object.keys(r).forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement.forEach3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var n = new _$TransloaditAssembly_182(r[e]);
            t._connectAssembly(n);
                        SRTlib.send("]},");

          }));
                    SRTlib.send("]},");

        })(), (function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          var e = t.getPluginState().assemblies;
                    SRTlib.send("]},");

          return Promise.all(Object.keys(e).map(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then.ReturnStatement.ReturnStatement.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return t.activeAssemblies[e].update();
                        SRTlib.send("]},");

          }));
                    SRTlib.send("]},");

        })());
                SRTlib.send("]},");

      }), this.restored.then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onRestored.restored.then2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        t.restored = null;
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, i._connectAssembly = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = e.status.assembly_id;
            SRTlib.send("]},");

      return (this.activeAssemblies[r] = e, e.on("status", function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var n, i = t.getPluginState().assemblies;
        t.setPluginState({
          assemblies: ___extends_186({}, i, (n = {}, n[r] = e, n))
        });
                SRTlib.send("]},");

      }), e.on("upload", function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly.ReturnStatement2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t._onFileUploadComplete(r, e);
                SRTlib.send("]},");

      }), e.on("error", function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly.ReturnStatement3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (r.assembly = e.status, t.uppy.emit("transloadit:assembly-error", e.status, r));
                SRTlib.send("]},");

      }), e.on("executing", function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly.ReturnStatement4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        t.uppy.emit("transloadit:assembly-executing", e.status);
                SRTlib.send("]},");

      }), this.opts.waitForEncoding && e.on("result", function (e, n) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly.ReturnStatement5", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        t._onResult(r, e, n);
                SRTlib.send("]},");

      }), this.opts.waitForEncoding ? e.on("finished", function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly.ReturnStatement6", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        t._onAssemblyFinished(e.status);
                SRTlib.send("]},");

      }) : this.opts.waitForMetadata && e.on("metadata", function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly.ReturnStatement7", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        t._onAssemblyFinished(e.status);
                SRTlib.send("]},");

      }), "ASSEMBLY_COMPLETE" === e.ok ? e : (new Promise(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (e.once("connect", t), e.once("status", t), e.once("error", r));
                SRTlib.send("]},");

      }).then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._connectAssembly.ReturnStatement.then2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        t.uppy.log("[Transloadit] Socket is ready");
                SRTlib.send("]},");

      }), e.connect(), e));
            SRTlib.send("]},");

    }, i._prepareUpload = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r, n = this;
      (e = e.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return !e.error;
                SRTlib.send("]},");

      })).forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.forEach2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var t = n.uppy.getFile(e);
        n.uppy.emit("preprocess-progress", t, {
          mode: "indeterminate",
          message: n.i18n("creatingAssembly")
        });
                SRTlib.send("]},");

      });
      var i = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.i", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r, i = e.fileIDs, o = e.options;
                SRTlib.send("]},");

        return n._createAssembly(i, t, o).then(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.i.ReturnStatement.then.then.catch.then.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          if ((r = e, n.opts.importFromUploadURLs)) {
                        SRTlib.send("]},");

            return n._reserveFiles(e, i);
          }
                    SRTlib.send("]},");

        }).then(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.i.ReturnStatement.then.then.catch.then.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return (i.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.i.ReturnStatement.then.then.catch.then.then.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var t = n.uppy.getFile(e);
            n.uppy.emit("preprocess-complete", t);
                        SRTlib.send("]},");

          }), r);
                    SRTlib.send("]},");

        }).catch(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.i.ReturnStatement.then.then.catch2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          throw (i.forEach(function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.i.ReturnStatement.then.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            var r = n.uppy.getFile(t);
            (n.uppy.emit("preprocess-complete", r), n.uppy.emit("upload-error", r, e));
                        SRTlib.send("]},");

          }), e);
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }, o = this.getPluginState().uploadsAssemblies;
      this.setPluginState({
        uploadsAssemblies: ___extends_186({}, o, (r = {}, r[t] = [], r))
      });
      var s = e.map(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.s", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return n.uppy.getFile(e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

      return new _$AssemblyOptions_183(s, this.opts).build().then(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.ReturnStatement.build.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return Promise.all(r.map(i)).then(function (r) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.ReturnStatement.build.then.ReturnStatement.then2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var i = r.map(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.ReturnStatement.build.then.ReturnStatement.then.i", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return e.status.assembly_id;
                        SRTlib.send("]},");

          });
          (n._createAssemblyWatcher(i, e, t), r.map(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.ReturnStatement.build.then.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return n._connectAssembly(e);
                        SRTlib.send("]},");

          }));
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }, function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.ReturnStatement.build.then3", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        throw (e.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._prepareUpload.ReturnStatement.build.then2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          var r = n.uppy.getFile(e);
          (n.uppy.emit("preprocess-complete", r), n.uppy.emit("upload-error", r, t));
                    SRTlib.send("]},");

        }), t);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i._afterUpload = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this, n = e.map(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload.n", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return r.uppy.getFile(e);
                SRTlib.send("]},");

      });
      e = n.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return !e.error;
                SRTlib.send("]},");

      }).map(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload.map2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.id;
                SRTlib.send("]},");

      });
      var i = this.getPluginState();
      if (this.restored) {
                SRTlib.send("]},");

        return this.restored.then(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload.ReturnStatement.restored.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return r._afterUpload(e, t);
                    SRTlib.send("]},");

        });
      }
      var o = i.uploadsAssemblies[t];
      if (!this._shouldWaitAfterUpload()) {
        o.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (r.activeAssemblies[e].close(), delete r.activeAssemblies[e]);
                    SRTlib.send("]},");

        });
        var s = o.map(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload.s", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return r.getAssembly(e);
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

        return (this.uppy.addResultData(t, {
          transloadit: s
        }), Promise.resolve());
      }
            SRTlib.send("]},");

      return 0 === o.length ? (this.uppy.addResultData(t, {
        transloadit: []
      }), Promise.resolve()) : (n.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return !_$hasProperty_219(r.completedFiles, e.id);
                SRTlib.send("]},");

      }).forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload.ReturnStatement.forEach2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        r.uppy.emit("postprocess-progress", e, {
          mode: "indeterminate",
          message: r.i18n("encoding")
        });
                SRTlib.send("]},");

      }), this.assemblyWatchers[t].promise.then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload.ReturnStatement.assemblyWatchers.t.promise.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var e = o.map(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._afterUpload.ReturnStatement.assemblyWatchers.t.promise.then.e", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return r.getAssembly(e);
                    SRTlib.send("]},");

        }), n = ___extends_186({}, r.getPluginState().uploadsAssemblies);
        (delete n[t], r.setPluginState({
          uploadsAssemblies: n
        }), r.uppy.addResultData(t, {
          transloadit: e
        }));
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, i._onError = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onError", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
      (void 0 === e && (e = null), this.getPluginState().uploadsAssemblies[t].forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onError.uploadsAssemblies.t.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        r.activeAssemblies[e] && r.activeAssemblies[e].close();
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, i._onTusError = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onTusError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (e && (/^tus: /).test(e.message)) {
        var t = e.originalRequest && e.originalRequest.responseURL ? e.originalRequest.responseURL : null;
        this.client.submitError(e, {
          url: t,
          type: "TUS_ERROR"
        }).then(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i._onTusError.client.submitError.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

        });
      }
            SRTlib.send("]},");

    }, i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.uppy.addPreProcessor(this._prepareUpload), this.uppy.addPostProcessor(this._afterUpload), this.uppy.on("error", this._onError), this.uppy.on("cancel-all", this._onCancelAll), this.uppy.on("upload-error", this._onTusError), this.opts.importFromUploadURLs ? this.uppy.on("upload-success", this._onFileUploadURLAvailable) : this.uppy.use(_$lib_190, {
        resume: !1,
        useFastRemoteRetry: !1,
        metaFields: ["assembly_url", "filename", "fieldname"],
        limit: this.opts.limit
      }), this.uppy.on("restore:get-data", this._getPersistentData), this.uppy.on("restored", this._onRestored), this.setPluginState({
        assemblies: {},
        uploadsAssemblies: {},
        files: {},
        results: []
      }));
      var e = this.uppy.getState().capabilities;
      this.uppy.setState({
        capabilities: ___extends_186({}, e, {
          individualCancellation: !1
        })
      });
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.uppy.removePreProcessor(this._prepareUpload), this.uppy.removePostProcessor(this._afterUpload), this.uppy.off("error", this._onError), this.opts.importFromUploadURLs && this.uppy.off("upload-success", this._onFileUploadURLAvailable));
      var e = this.uppy.getState().capabilities;
      this.uppy.setState({
        capabilities: ___extends_186({}, e, {
          individualCancellation: !0
        })
      });
            SRTlib.send("]},");

    }, i.getAssembly = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i.getAssembly", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.getPluginState().assemblies[e];
            SRTlib.send("]},");

    }, i.getAssemblyFiles = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i.getAssemblyFiles", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.uppy.getFiles().filter(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.i.getAssemblyFiles.ReturnStatement.uppy.getFiles.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t && t.transloadit && t.transloadit.assembly === e;
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_186), ___class_186.VERSION = _$package_188.version, _$lib_186 = ___temp_186, _$lib_186.COMPANION = COMPANION, _$lib_186.UPPY_SERVER = COMPANION, _$lib_186.COMPANION_PATTERN = /\.transloadit\.com$/);
  var TransloaditResultsPlugin = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "TransloaditResultsPlugin", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).type = "modifier", n.id = n.opts.id || "TransloaditResultsPlugin", n._afterUpload = n._afterUpload.bind((function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n._afterUpload.n._afterUpload.bind", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      })(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditResultsPlugin.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.uppy.addPostProcessor(this._afterUpload);
            SRTlib.send("]},");

    }, i._afterUpload = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "TransloaditResultsPlugin.ReturnStatement.i._afterUpload2", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this.uppy.getState().currentUploads[t].result, n = r && Array.isArray(r.transloadit) ? r.transloadit : [], i = [];
      (n.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "TransloaditResultsPlugin.ReturnStatement.i._afterUpload", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        Object.keys(e.results).forEach(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "TransloaditResultsPlugin.ReturnStatement.i._afterUpload.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e.results[t].forEach(function (r) {
                        SRTlib.send(`{ "anonymous": true, "function": "TransloaditResultsPlugin.ReturnStatement.i._afterUpload.forEach.e.results.t.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            i.push(___extends_159({}, r, {
              assemblyId: e.assembly_id,
              stepName: t
            }));
                        SRTlib.send("]},");

          });
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }), this.uppy.addResultData(t, {
        results: i
      }));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(_$lib_97.Plugin), _$TransloaditResultsPlugin_159 = TransloaditResultsPlugin, transloaditOptionNames = ["service", "waitForEncoding", "waitForMetadata", "alwaysRunAssembly", "importFromUploadURLs", "signature", "params", "fields", "getAssemblyOptions"], _$addTransloaditPlugin_162 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$addTransloaditPlugin_1622", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    var r = {};
    (transloaditOptionNames.forEach(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$addTransloaditPlugin_162", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      _$hasProperty_219(t, e) && (r[e] = t[e]);
            SRTlib.send("]},");

    }), e.use(_$lib_186, r), r.waitForEncoding && e.use(_$TransloaditResultsPlugin_159));
        SRTlib.send("]},");

  }, __h_143 = _$preact_51.h, AuthView = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "AuthView", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return e.apply(this, arguments) || this;
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r, n.prototype.render = function () {
            SRTlib.send(`{ "anonymous": true, "function": "AuthView.ReturnStatement.n.prototype.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = __h_143("span", {
        class: "uppy-Provider-authTitleName"
      }, this.props.pluginName, __h_143("br", null));
            SRTlib.send("]},");

      return __h_143("div", {
        class: "uppy-Provider-auth"
      }, __h_143("div", {
        class: "uppy-Provider-authIcon"
      }, this.props.pluginIcon()), __h_143("div", {
        class: "uppy-Provider-authTitle"
      }, this.props.i18nArray("authenticateWithTitle", {
        pluginName: e
      })), __h_143("button", {
        type: "button",
        class: "uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Provider-authBtn",
        onclick: this.props.handleAuth,
        "data-uppy-super-focusable": !0
      }, this.props.i18nArray("authenticateWith", {
        pluginName: this.props.pluginName
      })));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(_$preact_51.Component), _$AuthView_143 = AuthView, __h_144 = _$preact_51.h, Breadcrumb = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "Breadcrumb", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_144("span", null, __h_144("button", {
      type: "button",
      class: "uppy-u-reset",
      onclick: e.getFolder
    }, e.title), e.isLast ? "" : " / ");
        SRTlib.send("]},");

  }, _$Breadcrumbs_144 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$Breadcrumbs_144", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_144("div", {
      class: "uppy-Provider-breadcrumbs"
    }, __h_144("div", {
      class: "uppy-Provider-breadcrumbsIcon"
    }, e.breadcrumbsIcon), e.directories.map(function (t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Breadcrumbs_144.ReturnStatement.__h_144.e.directories.map", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

            SRTlib.send("]},");

      return __h_144(Breadcrumb, {
        key: t.id,
        getFolder: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$Breadcrumbs_144.ReturnStatement.__h_144.e.directories.map.ReturnStatement.__h_144.getFolder", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return e.getFolder(t.id);
                    SRTlib.send("]},");

        },
        title: 0 === r ? e.title : t.title,
        isLast: r + 1 === e.directories.length
      });
            SRTlib.send("]},");

    }));
        SRTlib.send("]},");

  }, __h_146 = _$preact_51.h, __Component_146 = _$preact_51.Component, _$Filter_146 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$Filter_146", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r;
            SRTlib.send("]},");

      return ((r = e.call(this, t) || this).preventEnterPress = r.preventEnterPress.bind((function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.preventEnterPress.r.preventEnterPress.bind", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      })(r)), r);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.preventEnterPress = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$Filter_146.ReturnStatement.i.preventEnterPress", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      13 === e.keyCode && (e.stopPropagation(), e.preventDefault());
            SRTlib.send("]},");

    }, i.render = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$Filter_146.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
            SRTlib.send("]},");

      return __h_146("div", {
        class: "uppy-ProviderBrowser-search"
      }, __h_146("input", {
        class: "uppy-u-reset uppy-ProviderBrowser-searchInput",
        type: "text",
        placeholder: this.props.i18n("filter"),
        "aria-label": this.props.i18n("filter"),
        onkeyup: this.preventEnterPress,
        onkeydown: this.preventEnterPress,
        onkeypress: this.preventEnterPress,
        oninput: function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$Filter_146.ReturnStatement.i.render.ReturnStatement.__h_146.__h_146.oninput", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return e.props.filterQuery(t);
                    SRTlib.send("]},");

        },
        value: this.props.filterInput
      }), __h_146("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon uppy-ProviderBrowser-searchIcon",
        width: "12",
        height: "12",
        viewBox: "0 0 12 12"
      }, __h_146("path", {
        d: "M8.638 7.99l3.172 3.172a.492.492 0 1 1-.697.697L7.91 8.656a4.977 4.977 0 0 1-2.983.983C2.206 9.639 0 7.481 0 4.819 0 2.158 2.206 0 4.927 0c2.721 0 4.927 2.158 4.927 4.82a4.74 4.74 0 0 1-1.216 3.17zm-3.71.685c2.176 0 3.94-1.726 3.94-3.856 0-2.129-1.764-3.855-3.94-3.855C2.75.964.984 2.69.984 4.819c0 2.13 1.765 3.856 3.942 3.856z"
      })), this.props.filterInput && __h_146("button", {
        class: "uppy-u-reset uppy-ProviderBrowser-searchClose",
        type: "button",
        "aria-label": this.props.i18n("resetFilter"),
        title: this.props.i18n("resetFilter"),
        onclick: this.props.filterQuery
      }, __h_146("svg", {
        "aria-hidden": "true",
        focusable: "false",
        class: "UppyIcon",
        viewBox: "0 0 19 19"
      }, __h_146("path", {
        d: "M17.318 17.232L9.94 9.854 9.586 9.5l-.354.354-7.378 7.378h.707l-.62-.62v.706L9.318 9.94l.354-.354-.354-.354L1.94 1.854v.707l.62-.62h-.706l7.378 7.378.354.354.354-.354 7.378-7.378h-.707l.622.62v-.706L9.854 9.232l-.354.354.354.354 7.378 7.378.708-.707-7.38-7.378v.708l7.38-7.38.353-.353-.353-.353-.622-.622-.353-.353-.354.352-7.378 7.38h.708L2.56 1.23 2.208.88l-.353.353-.622.62-.353.355.352.353 7.38 7.38v-.708l-7.38 7.38-.353.353.352.353.622.622.353.353.354-.353 7.38-7.38h-.708l7.38 7.38z"
      }))));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Component_146), __h_149 = _$preact_51.h;
  function FileIcon() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return __h_149("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "UppyIcon",
      width: 11,
      height: 14.5,
      viewBox: "0 0 44 58"
    }, __h_149("path", {
      d: "M27.437.517a1 1 0 0 0-.094.03H4.25C2.037.548.217 2.368.217 4.58v48.405c0 2.212 1.82 4.03 4.03 4.03H39.03c2.21 0 4.03-1.818 4.03-4.03V15.61a1 1 0 0 0-.03-.28 1 1 0 0 0 0-.093 1 1 0 0 0-.03-.032 1 1 0 0 0 0-.03 1 1 0 0 0-.032-.063 1 1 0 0 0-.03-.063 1 1 0 0 0-.032 0 1 1 0 0 0-.03-.063 1 1 0 0 0-.032-.03 1 1 0 0 0-.03-.063 1 1 0 0 0-.063-.062l-14.593-14a1 1 0 0 0-.062-.062A1 1 0 0 0 28 .708a1 1 0 0 0-.374-.157 1 1 0 0 0-.156 0 1 1 0 0 0-.03-.03l-.003-.003zM4.25 2.547h22.218v9.97c0 2.21 1.82 4.03 4.03 4.03h10.564v36.438a2.02 2.02 0 0 1-2.032 2.032H4.25c-1.13 0-2.032-.9-2.032-2.032V4.58c0-1.13.902-2.032 2.03-2.032zm24.218 1.345l10.375 9.937.75.718H30.5c-1.13 0-2.032-.9-2.032-2.03V3.89z"
    }));
        SRTlib.send("]},");

  }
  function FolderIcon() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return __h_149("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "UppyIcon",
      style: {
        width: 16,
        marginRight: 3
      },
      viewBox: "0 0 276.157 276.157"
    }, __h_149("path", {
      d: "M273.08 101.378c-3.3-4.65-8.86-7.32-15.254-7.32h-24.34V67.59c0-10.2-8.3-18.5-18.5-18.5h-85.322c-3.63 0-9.295-2.875-11.436-5.805l-6.386-8.735c-4.982-6.814-15.104-11.954-23.546-11.954H58.73c-9.292 0-18.638 6.608-21.737 15.372l-2.033 5.752c-.958 2.71-4.72 5.37-7.596 5.37H18.5C8.3 49.09 0 57.39 0 67.59v167.07c0 .886.16 1.73.443 2.52.152 3.306 1.18 6.424 3.053 9.064 3.3 4.652 8.86 7.32 15.255 7.32h188.487c11.395 0 23.27-8.425 27.035-19.18l40.677-116.188c2.11-6.035 1.43-12.164-1.87-16.816zM18.5 64.088h8.864c9.295 0 18.64-6.607 21.738-15.37l2.032-5.75c.96-2.712 4.722-5.373 7.597-5.373h29.565c3.63 0 9.295 2.876 11.437 5.806l6.386 8.735c4.982 6.815 15.104 11.954 23.546 11.954h85.322c1.898 0 3.5 1.602 3.5 3.5v26.47H69.34c-11.395 0-23.27 8.423-27.035 19.178L15 191.23V67.59c0-1.898 1.603-3.5 3.5-3.5zm242.29 49.15l-40.676 116.188c-1.674 4.78-7.812 9.135-12.877 9.135H18.75c-1.447 0-2.576-.372-3.02-.997-.442-.625-.422-1.814.057-3.18l40.677-116.19c1.674-4.78 7.812-9.134 12.877-9.134h188.487c1.448 0 2.577.372 3.02.997.443.625.423 1.814-.056 3.18z"
    }));
        SRTlib.send("]},");

  }
  function VideoIcon() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return __h_149("svg", {
      "aria-hidden": "true",
      focusable: "false",
      viewBox: "0 0 58 58"
    }, __h_149("path", {
      d: "M36.537 28.156l-11-7a1.005 1.005 0 0 0-1.02-.033C24.2 21.3 24 21.635 24 22v14a1 1 0 0 0 1.537.844l11-7a1.002 1.002 0 0 0 0-1.688zM26 34.18V23.82L34.137 29 26 34.18z"
    }), __h_149("path", {
      d: "M57 6H1a1 1 0 0 0-1 1v44a1 1 0 0 0 1 1h56a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1zM10 28H2v-9h8v9zm-8 2h8v9H2v-9zm10 10V8h34v42H12V40zm44-12h-8v-9h8v9zm-8 2h8v9h-8v-9zm8-22v9h-8V8h8zM2 8h8v9H2V8zm0 42v-9h8v9H2zm54 0h-8v-9h8v9z"
    }));
        SRTlib.send("]},");

  }
  var _$ItemIcon_149 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$ItemIcon_149", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (null !== e.itemIconString) switch (e.itemIconString) {
      case {
                    SRTlib.send("]},");

          return __h_149(FileIcon, null);
        }:
        return __h_149(FileIcon, null);
      case {
                    SRTlib.send("]},");

          return __h_149(FolderIcon, null);
        }:
        return __h_149(FolderIcon, null);
      case {
                    SRTlib.send("]},");

          return __h_149(VideoIcon, null);
        }:
        return __h_149(VideoIcon, null);
      default:
    }
        SRTlib.send("]},");

  }, __h_148 = _$preact_51.h, _$GridLi_148 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$GridLi_148", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_148("li", {
      class: e.className
    }, __h_148("div", {
      "aria-hidden": !0,
      class: "uppy-ProviderBrowserItem-fakeCheckbox " + (e.isChecked ? "uppy-ProviderBrowserItem-fakeCheckbox--is-checked" : "")
    }), __h_148("button", {
      type: "button",
      class: "uppy-u-reset uppy-ProviderBrowserItem-inner",
      onclick: e.toggleCheckbox,
      role: "option",
      "aria-label": e.isChecked ? e.i18n("unselectFileNamed", {
        name: e.title
      }) : e.i18n("selectFileNamed", {
        name: e.title
      }),
      "aria-selected": e.isChecked,
      "aria-disabled": e.isDisabled,
      "data-uppy-super-focusable": !0
    }, e.itemIconEl, e.showTitles && e.title));
        SRTlib.send("]},");

  }, __h_150 = _$preact_51.h, getAriaLabelOfCheckbox = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "getAriaLabelOfCheckbox", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return "folder" === e.type ? e.isChecked ? e.i18n("unselectAllFilesFromFolderNamed", {
      name: e.title
    }) : e.i18n("selectAllFilesFromFolderNamed", {
      name: e.title
    }) : e.isChecked ? e.i18n("unselectFileNamed", {
      name: e.title
    }) : e.i18n("selectFileNamed", {
      name: e.title
    });
        SRTlib.send("]},");

  }, _$ListLi_150 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$ListLi_150", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_150("li", {
      class: e.className
    }, __h_150("button", {
      type: "button",
      class: "uppy-u-reset uppy-ProviderBrowserItem-fakeCheckbox " + (e.isChecked ? "uppy-ProviderBrowserItem-fakeCheckbox--is-checked" : ""),
      onClick: e.toggleCheckbox,
      id: e.id,
      role: "option",
      "aria-label": getAriaLabelOfCheckbox(e),
      "aria-selected": e.isChecked,
      "aria-disabled": e.isDisabled,
      "data-uppy-super-focusable": !0
    }), "file" === e.type ? __h_150("label", {
      for: e.id,
      className: "uppy-u-reset uppy-ProviderBrowserItem-inner"
    }, e.itemIconEl, e.showTitles && e.title) : __h_150("button", {
      type: "button",
      class: "uppy-u-reset uppy-ProviderBrowserItem-inner",
      onclick: e.handleFolderClick,
      "aria-label": e.i18n("openFolderNamed", {
        name: e.title
      })
    }, e.itemIconEl, e.showTitles && e.title));
        SRTlib.send("]},");

  };
  function ___extends_151() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_151 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply30", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var __h_151 = _$preact_51.h, _$Item_151 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$Item_151", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.getItemIcon(), r = _$classnames_9("uppy-ProviderBrowserItem", {
      "uppy-ProviderBrowserItem--selected": e.isChecked
    }, {
      "uppy-ProviderBrowserItem--noPreview": "video" === t
    }), n = __h_151(_$ItemIcon_149, {
      itemIconString: t
    });
    switch (e.viewType) {
      case {
                    SRTlib.send("]},");

          return __h_151(_$GridLi_148, ___extends_151({}, e, {
            className: r,
            itemIconEl: n
          }));
        }:
        return __h_151(_$GridLi_148, ___extends_151({}, e, {
          className: r,
          itemIconEl: n
        }));
      case {
                    SRTlib.send("]},");

          return __h_151(_$ListLi_150, ___extends_151({}, e, {
            className: r,
            itemIconEl: n
          }));
        }:
        return __h_151(_$ListLi_150, ___extends_151({}, e, {
          className: r,
          itemIconEl: n
        }));
      default:
        throw new Error("There is no such type " + e.viewType);
    }
        SRTlib.send("]},");

  };
  function ___extends_152() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_152 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply31", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var __h_152 = _$preact_51.h, getSharedProps = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "getSharedProps", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return {
      id: e.id,
      title: e.name,
      getItemIcon: function () {
                SRTlib.send(`{ "anonymous": true, "function": "getSharedProps.ReturnStatement.getItemIcon", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return e.icon;
                SRTlib.send("]},");

      },
      isChecked: t.isChecked(e),
      toggleCheckbox: function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "getSharedProps.ReturnStatement.toggleCheckbox", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t.toggleCheckbox(r, e);
                SRTlib.send("]},");

      },
      columns: t.columns,
      showTitles: t.showTitles,
      viewType: t.viewType,
      i18n: t.i18n
    };
        SRTlib.send("]},");

  }, _$ItemList_152 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$ItemList_152", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return e.folders.length || e.files.length ? __h_152("div", {
      class: "uppy-ProviderBrowser-body"
    }, __h_152("ul", {
      class: "uppy-ProviderBrowser-list",
      onscroll: e.handleScroll,
      role: "listbox",
      tabindex: "-1"
    }, e.folders.map(function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$ItemList_152.ReturnStatement.__h_152.__h_152.e.folders.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return _$Item_151(___extends_152({}, getSharedProps(t, e), {
        type: "folder",
        isDisabled: !!e.isChecked(t) && e.isChecked(t).loading,
        handleFolderClick: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$ItemList_152.ReturnStatement.__h_152.__h_152.e.folders.map.ReturnStatement._$Item_151.___extends_152.handleFolderClick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return e.handleFolderClick(t);
                    SRTlib.send("]},");

        }
      }));
            SRTlib.send("]},");

    }), e.files.map(function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$ItemList_152.ReturnStatement.__h_152.__h_152.e.files.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return _$Item_151(___extends_152({}, getSharedProps(t, e), {
        type: "file",
        isDisabled: !1
      }));
            SRTlib.send("]},");

    }))) : __h_152("div", {
      class: "uppy-Provider-empty"
    }, e.i18n("noFilesFound"));
        SRTlib.send("]},");

  }, __h_147 = _$preact_51.h, _$FooterActions_147 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$FooterActions_147", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_147("div", {
      class: "uppy-ProviderBrowser-footer"
    }, __h_147("button", {
      class: "uppy-u-reset uppy-c-btn uppy-c-btn-primary",
      onclick: e.done
    }, e.i18n("selectX", {
      smart_count: e.selected
    })), __h_147("button", {
      class: "uppy-u-reset uppy-c-btn uppy-c-btn-link",
      onclick: e.cancel
    }, e.i18n("cancel")));
        SRTlib.send("]},");

  };
  function ___extends_145() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_145 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply32", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var __h_145 = _$preact_51.h, _$Browser_145 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$Browser_145", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.folders, r = e.files;
    "" !== e.filterInput && (t = e.filterItems(e.folders), r = e.filterItems(e.files));
    var n = e.currentSelection.length;
        SRTlib.send("]},");

    return __h_145("div", {
      class: _$classnames_9("uppy-ProviderBrowser", "uppy-ProviderBrowser-viewType--" + e.viewType)
    }, __h_145("div", {
      class: "uppy-ProviderBrowser-header"
    }, __h_145("div", {
      class: _$classnames_9("uppy-ProviderBrowser-headerBar", !e.showBreadcrumbs && "uppy-ProviderBrowser-headerBar--simple")
    }, e.showBreadcrumbs && _$Breadcrumbs_144({
      getFolder: e.getFolder,
      directories: e.directories,
      breadcrumbsIcon: e.pluginIcon && e.pluginIcon(),
      title: e.title
    }), __h_145("span", {
      class: "uppy-ProviderBrowser-user"
    }, e.username), __h_145("button", {
      type: "button",
      onclick: e.logout,
      class: "uppy-u-reset uppy-ProviderBrowser-userLogout"
    }, e.i18n("logOut")))), e.showFilter && __h_145(_$Filter_146, e), __h_145(_$ItemList_152, {
      columns: [{
        name: "Name",
        key: "title"
      }],
      folders: t,
      files: r,
      activeRow: e.isActiveRow,
      sortByTitle: e.sortByTitle,
      sortByDate: e.sortByDate,
      isChecked: e.isChecked,
      handleFolderClick: e.getNextFolder,
      toggleCheckbox: e.toggleCheckbox,
      handleScroll: e.handleScroll,
      title: e.title,
      showTitles: e.showTitles,
      i18n: e.i18n,
      viewType: e.viewType
    }), n > 0 && __h_145(_$FooterActions_147, ___extends_145({
      selected: n
    }, e)));
        SRTlib.send("]},");

  }, __h_153 = _$preact_51.h, _$Loader_153 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$Loader_153", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_153("div", {
      class: "uppy-Provider-loading"
    }, __h_153("span", null, e.i18n("loading")));
        SRTlib.send("]},");

  }, _$package_155 = {
    version: "1.6.6"
  }, ___class_154, ___temp_154;
  function ___extends_154() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_154 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply33", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var __h_154 = _$preact_51.h, __Component_154 = _$preact_51.Component, CloseWrapper = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "CloseWrapper", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return e.apply(this, arguments) || this;
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.componentWillUnmount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "CloseWrapper.ReturnStatement.i.componentWillUnmount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.props.onUnmount();
            SRTlib.send("]},");

    }, i.render = function () {
            SRTlib.send(`{ "anonymous": true, "function": "CloseWrapper.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.props.children[0];
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Component_154), _$lib_154 = (___temp_154 = ___class_154 = (function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_154", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

    function e(e, t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (this.plugin = e, this.provider = t.provider, this.opts = ___extends_154({}, {
        viewType: "list",
        showTitles: !0,
        showFilter: !0,
        showBreadcrumbs: !0
      }, {}, t), this.addFile = this.addFile.bind(this), this.filterItems = this.filterItems.bind(this), this.filterQuery = this.filterQuery.bind(this), this.toggleSearch = this.toggleSearch.bind(this), this.getFolder = this.getFolder.bind(this), this.getNextFolder = this.getNextFolder.bind(this), this.logout = this.logout.bind(this), this.preFirstRender = this.preFirstRender.bind(this), this.handleAuth = this.handleAuth.bind(this), this.sortByTitle = this.sortByTitle.bind(this), this.sortByDate = this.sortByDate.bind(this), this.isActiveRow = this.isActiveRow.bind(this), this.isChecked = this.isChecked.bind(this), this.toggleCheckbox = this.toggleCheckbox.bind(this), this.handleError = this.handleError.bind(this), this.handleScroll = this.handleScroll.bind(this), this.listAllFiles = this.listAllFiles.bind(this), this.donePicking = this.donePicking.bind(this), this.cancelPicking = this.cancelPicking.bind(this), this.clearSelection = this.clearSelection.bind(this), this.render = this.render.bind(this), this.clearSelection());
            SRTlib.send("]},");

    }
    var t = e.prototype;
        SRTlib.send("]},");

    return (t.tearDown = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.tearDown", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

    }, t._updateFilesAndFolders = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t._updateFilesAndFolders", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      (this.nextPagePath = e.nextPagePath, e.items.forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t._updateFilesAndFolders.e.items.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.isFolder ? r.push(e) : t.push(e);
                SRTlib.send("]},");

      }), this.plugin.setPluginState({
        folders: r,
        files: t
      }));
            SRTlib.send("]},");

    }, t.preFirstRender = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.preFirstRender", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.plugin.setPluginState({
        didFirstRender: !0
      }), this.plugin.onFirstRender());
            SRTlib.send("]},");

    }, t.getFolder = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.getFolder", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
            SRTlib.send("]},");

      return this._loaderWrapper(this.provider.list(e), function (n) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.getFolder.ReturnStatement._loaderWrapper", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var i, o = r.plugin.getPluginState(), s = (function (t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.getFolder.ReturnStatement._loaderWrapper.s", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          for (var n = 0; n < t.length; n++) if ((i = t[n], e === i.id)) {
                        SRTlib.send("]},");

            return n;
          }
          var i;
                    SRTlib.send("]},");

          return -1;
                    SRTlib.send("]},");

        })(o.directories);
        (i = -1 !== s ? o.directories.slice(0, s + 1) : o.directories.concat([{
          id: e,
          title: t
        }]), r.username = r.username ? r.username : n.username, r._updateFilesAndFolders(n, [], []), r.plugin.setPluginState({
          directories: i
        }));
                SRTlib.send("]},");

      }, this.handleError);
            SRTlib.send("]},");

    }, t.getNextFolder = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.getNextFolder", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (this.getFolder(e.requestPath, e.name), this.lastCheckbox = void 0);
            SRTlib.send("]},");

    }, t.addFile = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.addFile", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = {
        id: this.providerFileToId(e),
        source: this.plugin.id,
        data: e,
        name: e.name || e.id,
        type: e.mimeType,
        isRemote: !0,
        body: {
          fileId: e.id
        },
        remote: {
          companionUrl: this.plugin.opts.companionUrl,
          url: "" + this.provider.fileUrl(e.requestPath),
          body: {
            fileId: e.id
          },
          providerOptions: this.provider.opts
        }
      }, r = _$getFileType_214(t);
      (r && _$isPreviewSupported_224(r) && (t.preview = e.thumbnail), this.plugin.uppy.log("Adding remote file"));
      try {
        this.plugin.uppy.addFile(t);
      } catch (err) {
        err.isRestriction || this.plugin.uppy.log(err);
      }
            SRTlib.send("]},");

    }, t.removeFile = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.removeFile", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.plugin.getPluginState().currentSelection;
      this.plugin.setPluginState({
        currentSelection: t.filter(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.removeFile.plugin.setPluginState.currentSelection", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return t.id !== e;
                    SRTlib.send("]},");

        })
      });
            SRTlib.send("]},");

    }, t.logout = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.logout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      this.provider.logout().then(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.logout.provider.logout.then.catch.provider.logout.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (t.ok) {
          if (!t.revoked) {
            var r = e.plugin.uppy.i18n("companionUnauthorizeHint", {
              provider: e.plugin.title,
              url: t.manual_revoke_url
            });
            e.plugin.uppy.info(r, "info", 7e3);
          }
          e.plugin.setPluginState({
            authenticated: !1,
            files: [],
            folders: [],
            directories: []
          });
        }
                SRTlib.send("]},");

      }).catch(this.handleError);
            SRTlib.send("]},");

    }, t.filterQuery = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.filterQuery", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.plugin.getPluginState();
      this.plugin.setPluginState(___extends_154({}, t, {
        filterInput: e ? e.target.value : ""
      }));
            SRTlib.send("]},");

    }, t.toggleSearch = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.toggleSearch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.plugin.getPluginState();
      this.plugin.setPluginState({
        isSearchVisible: !t.isSearchVisible,
        filterInput: ""
      });
            SRTlib.send("]},");

    }, t.filterItems = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.filterItems", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.plugin.getPluginState();
            SRTlib.send("]},");

      return t.filterInput && "" !== t.filterInput ? e.filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.filterItems.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return -1 !== e.name.toLowerCase().indexOf(t.filterInput.toLowerCase());
                SRTlib.send("]},");

      }) : e;
            SRTlib.send("]},");

    }, t.sortByTitle = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.sortByTitle", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = ___extends_154({}, this.plugin.getPluginState()), t = e.files, r = e.folders, n = e.sorting, i = t.sort(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.sortByTitle.i", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return "titleDescending" === n ? t.name.localeCompare(e.name) : e.name.localeCompare(t.name);
                SRTlib.send("]},");

      }), o = r.sort(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.sortByTitle.o", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                SRTlib.send("]},");

        return "titleDescending" === n ? t.name.localeCompare(e.name) : e.name.localeCompare(t.name);
                SRTlib.send("]},");

      });
      this.plugin.setPluginState(___extends_154({}, e, {
        files: i,
        folders: o,
        sorting: "titleDescending" === n ? "titleAscending" : "titleDescending"
      }));
            SRTlib.send("]},");

    }, t.sortByDate = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.sortByDate", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = ___extends_154({}, this.plugin.getPluginState()), t = e.files, r = e.folders, n = e.sorting, i = t.sort(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.sortByDate.i", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = new Date(e.modifiedDate), i = new Date(t.modifiedDate);
                SRTlib.send("]},");

        return "dateDescending" === n ? r > i ? -1 : r < i ? 1 : 0 : r > i ? 1 : r < i ? -1 : 0;
                SRTlib.send("]},");

      }), o = r.sort(function (e, t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.sortByDate.o", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var r = new Date(e.modifiedDate), i = new Date(t.modifiedDate);
                SRTlib.send("]},");

        return "dateDescending" === n ? r > i ? -1 : r < i ? 1 : 0 : r > i ? 1 : r < i ? -1 : 0;
                SRTlib.send("]},");

      });
      this.plugin.setPluginState(___extends_154({}, e, {
        files: i,
        folders: o,
        sorting: "dateDescending" === n ? "dateAscending" : "dateDescending"
      }));
            SRTlib.send("]},");

    }, t.sortBySize = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.sortBySize", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = ___extends_154({}, this.plugin.getPluginState()), t = e.files, r = e.sorting;
      if (t.length && this.plugin.getItemData(t[0]).size) {
        var n = t.sort(function (e, t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.sortBySize.n", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

          var n = e.size, i = t.size;
                    SRTlib.send("]},");

          return "sizeDescending" === r ? n > i ? -1 : n < i ? 1 : 0 : n > i ? 1 : n < i ? -1 : 0;
                    SRTlib.send("]},");

        });
        this.plugin.setPluginState(___extends_154({}, e, {
          files: n,
          sorting: "sizeDescending" === r ? "sizeAscending" : "sizeDescending"
        }));
      }
            SRTlib.send("]},");

    }, t.isActiveRow = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.isActiveRow", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.plugin.getPluginState().activeRow === this.plugin.getItemId(e);
            SRTlib.send("]},");

    }, t.isChecked = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.isChecked", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.plugin.getPluginState().currentSelection.some(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.isChecked.ReturnStatement.currentSelection.some", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t.id === e.id;
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t.addFolder = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.addFolder", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = this.providerFileToId(e), n = this.plugin.getPluginState(), i = n.selectedFolders || ({});
      if (!((r in i) && i[r].loading)) {
                SRTlib.send("]},");

        return (i[r] = {
          loading: !0,
          files: []
        }, this.plugin.setPluginState({
          selectedFolders: i
        }), this.listAllFiles(e.requestPath).then(function (o) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.addFolder.ReturnStatement.listAllFiles.then.catch.listAllFiles.then2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          o.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.addFolder.ReturnStatement.listAllFiles.then.catch.listAllFiles.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            t.addFile(e);
                        SRTlib.send("]},");

          });
          var s, a = o.map(t.providerFileToId);
          ((n = t.plugin.getPluginState()).selectedFolders[r] = {
            loading: !1,
            files: a
          }, t.plugin.setPluginState({
            selectedFolders: i
          }), s = o.length ? t.plugin.uppy.i18n("folderAdded", {
            smart_count: o.length,
            folder: e.name
          }) : t.plugin.uppy.i18n("emptyFolderAdded"), t.plugin.uppy.info(s));
                    SRTlib.send("]},");

        }).catch(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.addFolder.ReturnStatement.listAllFiles.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (delete (n = t.plugin.getPluginState()).selectedFolders[r], t.plugin.setPluginState({
            selectedFolders: n.selectedFolders
          }), t.handleError(e));
                    SRTlib.send("]},");

        }));
      }
            SRTlib.send("]},");

    }, t.toggleCheckbox = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.toggleCheckbox", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (e.stopPropagation(), e.preventDefault(), e.currentTarget.focus());
      var r = this.plugin.getPluginState(), n = r.folders, i = r.files, o = this.filterItems(n.concat(i));
      if (this.lastCheckbox && e.shiftKey) {
        var s, a = o.indexOf(this.lastCheckbox), u = o.indexOf(t);
                SRTlib.send("]},");

        return (s = a < u ? o.slice(a, u + 1) : o.slice(u, a + 1), void this.plugin.setPluginState({
          currentSelection: s
        }));
      }
      this.lastCheckbox = t;
      var l = this.plugin.getPluginState().currentSelection;
      this.isChecked(t) ? this.plugin.setPluginState({
        currentSelection: l.filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.toggleCheckbox.plugin.setPluginState.currentSelection", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return e.id !== t.id;
                    SRTlib.send("]},");

        })
      }) : this.plugin.setPluginState({
        currentSelection: l.concat([t])
      });
            SRTlib.send("]},");

    }, t.providerFileToId = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.providerFileToId", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return _$generateFileID_206({
        data: e,
        name: e.name || e.id,
        type: e.mimeType
      });
            SRTlib.send("]},");

    }, t.handleAuth = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.handleAuth", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var t = this, r = btoa(JSON.stringify({
        origin: ("origin" in location) ? location.origin : location.protocol + "//" + location.hostname + (location.port ? ":" + location.port : "")
      })), n = encodeURIComponent("@uppy/provider-views=" + e.VERSION), i = this.provider.authUrl() + "?state=" + r + "&uppyVersions=" + n, o = window.open(i, "_blank");
      window.addEventListener("message", function e(r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.handleAuth.e", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (t._isOriginAllowed(r.origin, t.plugin.opts.companionAllowedHosts) && r.source === o) {
          var n = "string" == typeof r.data ? JSON.parse(r.data) : r.data;
          n.token ? (o.close(), window.removeEventListener("message", e), t.provider.setAuthToken(n.token), t.preFirstRender()) : t.plugin.uppy.log("did not receive token from auth window");
        } else t.plugin.uppy.log("rejecting event from " + r.origin + " vs allowed pattern " + t.plugin.opts.companionAllowedHosts);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t._isOriginAllowed = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t._isOriginAllowed", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t._isOriginAllowed.r", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return "string" == typeof e ? new RegExp("^" + e + "$") : e instanceof RegExp ? e : void 0;
                SRTlib.send("]},");

      };
            SRTlib.send("]},");

      return (Array.isArray(t) ? t.map(r) : [r(t)]).filter(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t._isOriginAllowed.ReturnStatement.filter.some.filter", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return null != e;
                SRTlib.send("]},");

      }).some(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t._isOriginAllowed.ReturnStatement.filter.some", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t.test(e) || t.test(e + "/");
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t.handleError = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.handleError", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this.plugin.uppy;
      if ((t.log(e.toString()), !e.isAuthError)) {
        var r = t.i18n("companionError");
        t.info({
          message: r,
          details: e.toString()
        }, "error", 5e3);
      }
            SRTlib.send("]},");

    }, t.handleScroll = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.handleScroll", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this, r = e.target.scrollHeight - (e.target.scrollTop + e.target.offsetHeight), n = this.nextPagePath || null;
      r < 50 && n && !this._isHandlingScroll && (this.provider.list(n).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.handleScroll.provider.list.then.catch.then.provider.list.then.catch.provider.list.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = t.plugin.getPluginState(), n = r.files, i = r.folders;
        t._updateFilesAndFolders(e, n, i);
                SRTlib.send("]},");

      }).catch(this.handleError).then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.handleScroll.provider.list.then.catch.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        t._isHandlingScroll = !1;
                SRTlib.send("]},");

      }), this._isHandlingScroll = !0);
            SRTlib.send("]},");

    }, t.listAllFiles = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.listAllFiles", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var r = this;
            SRTlib.send("]},");

      return (void 0 === t && (t = null), t = t || [], new Promise(function (n, i) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.listAllFiles.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        r.provider.list(e).then(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.listAllFiles.ReturnStatement.r.provider.list.then.catch.r.provider.list.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e.items.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.listAllFiles.ReturnStatement.r.provider.list.then.catch.r.provider.list.then.e.items.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            e.isFolder || t.push(e);
                        SRTlib.send("]},");

          });
          var o = e.nextPagePath || null;
                    SRTlib.send("]},");

          return o ? r.listAllFiles(o, t).then(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.listAllFiles.ReturnStatement.r.provider.list.then.catch.r.provider.list.then.ReturnStatement.then.catch.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return n(e);
                        SRTlib.send("]},");

          }).catch(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.listAllFiles.ReturnStatement.r.provider.list.then.catch.r.provider.list.then.ReturnStatement.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return i(e);
                        SRTlib.send("]},");

          }) : n(t);
                    SRTlib.send("]},");

        }).catch(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.listAllFiles.ReturnStatement.r.provider.list.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return i(e);
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, t.donePicking = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.donePicking", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this, t = this.plugin.getPluginState().currentSelection.map(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.donePicking.t.currentSelection.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return t.isFolder ? e.addFolder(t) : e.addFile(t);
                SRTlib.send("]},");

      });
      this._loaderWrapper(Promise.all(t), function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.donePicking._loaderWrapper", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e.clearSelection();
                SRTlib.send("]},");

      }, function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.donePicking._loaderWrapper2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, t.cancelPicking = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.cancelPicking", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.clearSelection();
      var e = this.plugin.uppy.getPlugin("Dashboard");
      e && e.hideAllPanels();
            SRTlib.send("]},");

    }, t.clearSelection = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.clearSelection", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.plugin.setPluginState({
        currentSelection: []
      });
            SRTlib.send("]},");

    }, t._loaderWrapper = function (e, t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t._loaderWrapper", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

      var n = this;
      (e.then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t._loaderWrapper.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (n.plugin.setPluginState({
          loading: !1
        }), t(e));
                SRTlib.send("]},");

      }).catch(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t._loaderWrapper.catch2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (n.plugin.setPluginState({
          loading: !1
        }), r(e));
                SRTlib.send("]},");

      }), this.plugin.setPluginState({
        loading: !0
      }));
            SRTlib.send("]},");

    }, t.render = function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_154.ReturnStatement.t.render", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      void 0 === t && (t = {});
      var r = this.plugin.getPluginState(), n = r.authenticated;
      if ((r.didFirstRender || this.preFirstRender(), this.plugin.getPluginState().loading)) {
                SRTlib.send("]},");

        return __h_154(CloseWrapper, {
          onUnmount: this.clearSelection
        }, __h_154(_$Loader_153, {
          i18n: this.plugin.uppy.i18n
        }));
      }
      if (!n) {
                SRTlib.send("]},");

        return __h_154(CloseWrapper, {
          onUnmount: this.clearSelection
        }, __h_154(_$AuthView_143, {
          pluginName: this.plugin.title,
          pluginIcon: this.plugin.icon,
          handleAuth: this.handleAuth,
          i18n: this.plugin.uppy.i18n,
          i18nArray: this.plugin.uppy.i18nArray
        }));
      }
      var i = ___extends_154({}, this.opts, {}, t), o = ___extends_154({}, this.plugin.getPluginState(), {
        username: this.username,
        getNextFolder: this.getNextFolder,
        getFolder: this.getFolder,
        filterItems: this.filterItems,
        filterQuery: this.filterQuery,
        toggleSearch: this.toggleSearch,
        sortByTitle: this.sortByTitle,
        sortByDate: this.sortByDate,
        logout: this.logout,
        isActiveRow: this.isActiveRow,
        isChecked: this.isChecked,
        toggleCheckbox: this.toggleCheckbox,
        handleScroll: this.handleScroll,
        listAllFiles: this.listAllFiles,
        done: this.donePicking,
        cancel: this.cancelPicking,
        title: this.plugin.title,
        viewType: i.viewType,
        showTitles: i.showTitles,
        showFilter: i.showFilter,
        showBreadcrumbs: i.showBreadcrumbs,
        pluginIcon: this.plugin.icon,
        i18n: this.plugin.uppy.i18n
      });
            SRTlib.send("]},");

      return __h_154(CloseWrapper, {
        onUnmount: this.clearSelection
      }, __h_154(_$Browser_145, o));
            SRTlib.send("]},");

    }, e);
        SRTlib.send("]},");

  })(), ___class_154.VERSION = _$package_155.version, ___temp_154), _$package_129 = {
    version: "1.4.6"
  }, ___class_128, ___temp_128;
  function ___assertThisInitialized_128(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_128 = _$lib_97.Plugin, __Provider_128 = _$lib_93.Provider, __h_128 = _$preact_51.h, _$lib_128 = (___temp_128 = ___class_128 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_128", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).id = n.opts.id || "Dropbox", __Provider_128.initPlugin(___assertThisInitialized_128(n), r), n.title = n.opts.title || "Dropbox", n.icon = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n.icon", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_128("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "32",
          height: "32",
          viewBox: "0 0 32 32",
          xmlns: "http://www.w3.org/2000/svg"
        }, __h_128("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, __h_128("rect", {
          fill: "#0D2481",
          width: "32",
          height: "32",
          rx: "16"
        }), __h_128("path", {
          d: "M11 8l5 3.185-5 3.186-5-3.186L11 8zm10 0l5 3.185-5 3.186-5-3.186L21 8zM6 17.556l5-3.185 5 3.185-5 3.186-5-3.186zm15-3.185l5 3.185-5 3.186-5-3.186 5-3.185zm-10 7.432l5-3.185 5 3.185-5 3.186-5-3.186z",
          fill: "#FFF",
          "fill-rule": "nonzero"
        })));
                SRTlib.send("]},");

      }, n.provider = new __Provider_128(t, {
        companionUrl: n.opts.companionUrl,
        companionHeaders: n.opts.companionHeaders || n.opts.serverHeaders,
        provider: "dropbox",
        pluginId: n.id
      }), n.onFirstRender = n.onFirstRender.bind(___assertThisInitialized_128(n)), n.render = n.render.bind(___assertThisInitialized_128(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_128.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view = new _$lib_154(this, {
        provider: this.provider
      }), this.setPluginState({
        authenticated: !1,
        files: [],
        folders: [],
        directories: [],
        activeRow: -1,
        filterInput: "",
        isSearchVisible: !1
      }));
      var e = this.opts.target;
      e && this.mount(e, this);
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_128.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view.tearDown(), this.unmount());
            SRTlib.send("]},");

    }, i.onFirstRender = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_128.ReturnStatement.i.onFirstRender", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.view.getFolder();
            SRTlib.send("]},");

    }, i.render = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_128.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.view.render(e);
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_128), ___class_128.VERSION = _$package_129.version, ___temp_128), _$DriveProviderViews_134 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$DriveProviderViews_134", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return e.apply(this, arguments) || this;
            SRTlib.send("]},");

    }
        SRTlib.send("]},");

    return (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r, n.prototype.toggleCheckbox = function (t, r) {
            SRTlib.send(`{ "anonymous": true, "function": "_$DriveProviderViews_134.ReturnStatement.n.prototype.toggleCheckbox", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (t.stopPropagation(), t.preventDefault(), r.custom.isTeamDrive || r.custom.isSharedDrive || e.prototype.toggleCheckbox.call(this, t, r));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(_$lib_154), _$package_136 = {
    version: "1.5.6"
  }, ___class_135, ___temp_135;
  function ___assertThisInitialized_135(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_135 = _$lib_97.Plugin, __Provider_135 = _$lib_93.Provider, __h_135 = _$preact_51.h, _$lib_135 = (___temp_135 = ___class_135 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_135", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).id = n.opts.id || "GoogleDrive", n.title = n.opts.title || "Google Drive", __Provider_135.initPlugin(___assertThisInitialized_135(n), r), n.title = n.opts.title || "Google Drive", n.icon = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n.icon2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_135("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "32",
          height: "32",
          viewBox: "0 0 32 32",
          xmlns: "http://www.w3.org/2000/svg"
        }, __h_135("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, __h_135("rect", {
          fill: "#4285F4",
          width: "32",
          height: "32",
          rx: "16"
        }), __h_135("path", {
          d: "M10.324 23.3l3-5.1H25l-3 5.1H10.324zM13 18.2l-3 5.1-3-5.1 5.839-9.924 2.999 5.1L13 18.2zm11.838-.276h-6L13 8h6l5.84 9.924h-.002z",
          fill: "#FFF"
        })));
                SRTlib.send("]},");

      }, n.provider = new __Provider_135(t, {
        companionUrl: n.opts.companionUrl,
        companionHeaders: n.opts.companionHeaders || n.opts.serverHeaders,
        provider: "drive",
        authProvider: "google",
        pluginId: n.id
      }), n.onFirstRender = n.onFirstRender.bind(___assertThisInitialized_135(n)), n.render = n.render.bind(___assertThisInitialized_135(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_135.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view = new _$DriveProviderViews_134(this, {
        provider: this.provider
      }), this.setPluginState({
        authenticated: !1,
        files: [],
        folders: [],
        directories: [],
        activeRow: -1,
        filterInput: "",
        isSearchVisible: !1,
        hasTeamDrives: !1,
        teamDrives: [],
        teamDriveId: ""
      }));
      var e = this.opts.target;
      e && this.mount(e, this);
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_135.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view.tearDown(), this.unmount());
            SRTlib.send("]},");

    }, i.onFirstRender = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_135.ReturnStatement.i.onFirstRender", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.view.getFolder("root", "/");
            SRTlib.send("]},");

    }, i.render = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_135.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.view.render(e);
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_135), ___class_135.VERSION = _$package_136.version, ___temp_135), _$package_140 = {
    version: "1.4.6"
  }, ___class_139, ___temp_139;
  function ___assertThisInitialized_139(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_139 = _$lib_97.Plugin, __Provider_139 = _$lib_93.Provider, __h_139 = _$preact_51.h, _$lib_139 = (___temp_139 = ___class_139 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_139", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).id = n.opts.id || "Instagram", __Provider_139.initPlugin(___assertThisInitialized_139(n), r), n.title = n.opts.title || "Instagram", n.icon = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n.icon3", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_139("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "32",
          height: "32",
          viewBox: "0 0 32 32",
          xmlns: "http://www.w3.org/2000/svg"
        }, __h_139("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, __h_139("rect", {
          fill: "#E1306C",
          width: "32",
          height: "32",
          rx: "16"
        }), __h_139("path", {
          d: "M16 8.622c2.403 0 2.688.009 3.637.052.877.04 1.354.187 1.67.31.392.144.745.374 1.036.673.299.29.529.644.673 1.035.123.317.27.794.31 1.671.043.95.052 1.234.052 3.637s-.009 2.688-.052 3.637c-.04.877-.187 1.354-.31 1.671a2.98 2.98 0 0 1-1.708 1.708c-.317.123-.794.27-1.671.31-.95.043-1.234.053-3.637.053s-2.688-.01-3.637-.053c-.877-.04-1.354-.187-1.671-.31a2.788 2.788 0 0 1-1.035-.673 2.788 2.788 0 0 1-.673-1.035c-.123-.317-.27-.794-.31-1.671-.043-.949-.052-1.234-.052-3.637s.009-2.688.052-3.637c.04-.877.187-1.354.31-1.67.144-.392.374-.745.673-1.036.29-.299.644-.529 1.035-.673.317-.123.794-.27 1.671-.31.95-.043 1.234-.052 3.637-.052zM16 7c-2.444 0-2.75.01-3.71.054-.959.044-1.613.196-2.185.419-.6.225-1.145.58-1.594 1.038-.458.45-.813.993-1.039 1.594-.222.572-.374 1.226-.418 2.184C7.01 13.25 7 13.556 7 16s.01 2.75.054 3.71c.044.959.196 1.613.419 2.185.226.6.58 1.145 1.038 1.594.45.458.993.813 1.594 1.038.572.223 1.227.375 2.184.419.96.044 1.267.054 3.711.054s2.75-.01 3.71-.054c.959-.044 1.613-.196 2.185-.419a4.602 4.602 0 0 0 2.632-2.632c.223-.572.375-1.226.419-2.184.044-.96.054-1.267.054-3.711s-.01-2.75-.054-3.71c-.044-.959-.196-1.613-.419-2.185A4.412 4.412 0 0 0 23.49 8.51a4.412 4.412 0 0 0-1.594-1.039c-.572-.222-1.226-.374-2.184-.418C18.75 7.01 18.444 7 16 7zm0 4.5a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9zm0 7.421a2.921 2.921 0 1 1 0-5.842 2.921 2.921 0 0 1 0 5.842zm4.875-6.671a1.125 1.125 0 1 1 0-2.25 1.125 1.125 0 0 1 0 2.25z",
          fill: "#FFF"
        })));
                SRTlib.send("]},");

      }, n.provider = new __Provider_139(t, {
        companionUrl: n.opts.companionUrl,
        companionHeaders: n.opts.companionHeaders || n.opts.serverHeaders,
        provider: "instagram",
        authProvider: "instagram",
        pluginId: n.id
      }), n.onFirstRender = n.onFirstRender.bind(___assertThisInitialized_139(n)), n.render = n.render.bind(___assertThisInitialized_139(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_139.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view = new _$lib_154(this, {
        provider: this.provider,
        viewType: "grid",
        showTitles: !1,
        showFilter: !1,
        showBreadcrumbs: !1
      }), this.setPluginState({
        authenticated: !1,
        files: [],
        folders: [],
        directories: [],
        activeRow: -1,
        filterInput: "",
        isSearchVisible: !1
      }));
      var e = this.opts.target;
      e && this.mount(e, this);
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_139.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view.tearDown(), this.unmount());
            SRTlib.send("]},");

    }, i.onFirstRender = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_139.ReturnStatement.i.onFirstRender", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.view.getFolder("recent");
            SRTlib.send("]},");

    }, i.render = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_139.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.view.render(e);
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_139), ___class_139.VERSION = _$package_140.version, ___temp_139), _$package_131 = {
    version: "1.1.6"
  }, ___class_130, ___temp_130;
  function ___assertThisInitialized_130(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_130 = _$lib_97.Plugin, __Provider_130 = _$lib_93.Provider, __h_130 = _$preact_51.h, _$lib_130 = (___temp_130 = ___class_130 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_130", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).id = n.opts.id || "Facebook", __Provider_130.initPlugin(___assertThisInitialized_130(n), r), n.title = n.opts.title || "Facebook", n.icon = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n.icon4", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_130("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "32",
          height: "32",
          viewBox: "0 0 32 32",
          xmlns: "http://www.w3.org/2000/svg"
        }, __h_130("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, __h_130("rect", {
          width: "32",
          height: "32",
          rx: "16",
          fill: "#3C5A99"
        }), __h_130("path", {
          d: "M17.842 26v-8.667h2.653l.398-3.377h-3.051v-2.157c0-.978.248-1.644 1.527-1.644H21V7.132A19.914 19.914 0 0 0 18.623 7c-2.352 0-3.963 1.574-3.963 4.465v2.49H12v3.378h2.66V26h3.182z",
          fill: "#FFF",
          "fill-rule": "nonzero"
        })));
                SRTlib.send("]},");

      }, n.provider = new __Provider_130(t, {
        companionUrl: n.opts.companionUrl,
        companionHeaders: n.opts.companionHeaders || n.opts.serverHeaders,
        provider: "facebook",
        pluginId: n.id
      }), n.onFirstRender = n.onFirstRender.bind(___assertThisInitialized_130(n)), n.render = n.render.bind(___assertThisInitialized_130(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_130.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view = new _$lib_154(this, {
        provider: this.provider
      }), this.setPluginState({
        authenticated: !1,
        files: [],
        folders: [],
        directories: [],
        activeRow: -1,
        filterInput: "",
        isSearchVisible: !1
      }));
      var e = this.opts.target;
      e && this.mount(e, this);
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_130.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view.tearDown(), this.unmount());
            SRTlib.send("]},");

    }, i.onFirstRender = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_130.ReturnStatement.i.onFirstRender", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.view.getFolder();
            SRTlib.send("]},");

    }, i.render = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_130.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = {};
            SRTlib.send("]},");

      return (this.getPluginState().files.length && !this.getPluginState().folders.length && (t.viewType = "grid", t.showFilter = !1, t.showTitles = !1), this.view.render(e, t));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_130), ___class_130.VERSION = _$package_131.version, ___temp_130), _$package_142 = {
    version: "1.1.6"
  }, ___class_141, ___temp_141;
  function ___assertThisInitialized_141(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_141 = _$lib_97.Plugin, __Provider_141 = _$lib_93.Provider, __h_141 = _$preact_51.h, _$lib_141 = (___temp_141 = ___class_141 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_141", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
            SRTlib.send("]},");

      return ((n = e.call(this, t, r) || this).id = n.opts.id || "OneDrive", __Provider_141.initPlugin(___assertThisInitialized_141(n), r), n.title = n.opts.title || "OneDrive", n.icon = function () {
                SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.n.icon5", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_141("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "32",
          height: "32",
          viewBox: "0 0 32 32",
          xmlns: "http://www.w3.org/2000/svg"
        }, __h_141("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, __h_141("rect", {
          width: "32",
          height: "32",
          rx: "16",
          fill: "#0262C0"
        }), __h_141("g", {
          fill: "#FFF",
          "fill-rule": "nonzero"
        }, __h_141("path", {
          d: "M24.157 22s1.492-.205 1.79-1.655a2.624 2.624 0 0 0 .03-.878c-.22-1.64-1.988-2.01-1.988-2.01s.307-1.765-1.312-2.69c-1.62-.925-3.1 0-3.1 0S18.711 13 16.366 13c-3.016 0-3.519 3.448-3.519 3.448S10 16.618 10 19.14c0 2.523 2.597 2.86 2.597 2.86h11.56z"
        }), __h_141("path", {
          d: "M9.421 19.246c0-2.197 1.606-3.159 2.871-3.472.44-1.477 1.654-3.439 4.135-3.439H16.445c1.721 0 2.79.823 3.368 1.476a3.99 3.99 0 0 1 1.147-.171h.01l.03.002C21.017 13.5 20.691 10 16.757 10c-2.69 0-3.639 2.345-3.639 2.345s-1.95-1.482-3.955.567c-1.028 1.052-.79 2.669-.79 2.669S6 15.824 6 18.412C6 20.757 8.452 21 8.452 21h1.372a3.77 3.77 0 0 1-.403-1.754z"
        }))));
                SRTlib.send("]},");

      }, n.provider = new __Provider_141(t, {
        companionUrl: n.opts.companionUrl,
        companionHeaders: n.opts.companionHeaders || n.opts.serverHeaders,
        provider: "onedrive",
        pluginId: n.id
      }), n.onFirstRender = n.onFirstRender.bind(___assertThisInitialized_141(n)), n.render = n.render.bind(___assertThisInitialized_141(n)), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_141.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view = new _$lib_154(this, {
        provider: this.provider
      }), this.setPluginState({
        authenticated: !1,
        files: [],
        folders: [],
        directories: [],
        activeRow: -1,
        filterInput: "",
        isSearchVisible: !1
      }));
      var e = this.opts.target;
      e && this.mount(e, this);
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_141.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.view.tearDown(), this.unmount());
            SRTlib.send("]},");

    }, i.onFirstRender = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_141.ReturnStatement.i.onFirstRender", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.view.getFolder();
            SRTlib.send("]},");

    }, i.render = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_141.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return this.view.render(e);
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_141), ___class_141.VERSION = _$package_142.version, ___temp_141);
  function ___assertThisInitialized_192(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __h_192 = _$preact_51.h, UrlUI = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "UrlUI", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r;
            SRTlib.send("]},");

      return ((r = e.call(this, t) || this).handleKeyPress = r.handleKeyPress.bind(___assertThisInitialized_192(r)), r.handleClick = r.handleClick.bind(___assertThisInitialized_192(r)), r);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.componentDidMount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "UrlUI.ReturnStatement.i.componentDidMount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.input.value = "";
            SRTlib.send("]},");

    }, i.handleKeyPress = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "UrlUI.ReturnStatement.i.handleKeyPress", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      13 === e.keyCode && this.props.addFile(this.input.value);
            SRTlib.send("]},");

    }, i.handleClick = function () {
            SRTlib.send(`{ "anonymous": true, "function": "UrlUI.ReturnStatement.i.handleClick", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.props.addFile(this.input.value);
            SRTlib.send("]},");

    }, i.render = function () {
            SRTlib.send(`{ "anonymous": true, "function": "UrlUI.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
            SRTlib.send("]},");

      return __h_192("div", {
        class: "uppy-Url"
      }, __h_192("input", {
        class: "uppy-u-reset uppy-c-textInput uppy-Url-input",
        type: "text",
        "aria-label": this.props.i18n("enterUrlToImport"),
        placeholder: this.props.i18n("enterUrlToImport"),
        onkeyup: this.handleKeyPress,
        ref: function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "UrlUI.ReturnStatement.i.render.ReturnStatement.__h_192.__h_192.ref", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e.input = t;
                    SRTlib.send("]},");

        },
        "data-uppy-super-focusable": !0
      }), __h_192("button", {
        class: "uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Url-importButton",
        type: "button",
        onclick: this.handleClick
      }, this.props.i18n("import")));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(_$preact_51.Component), _$UrlUI_192 = UrlUI, _$forEachDroppedOrPastedUrl_194 = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$forEachDroppedOrPastedUrl_1946", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    var n, i = _$toArray_229(e.items);
    switch (t) {
      case "paste":
        if (i.some(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$forEachDroppedOrPastedUrl_194", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return "file" === e.kind;
                    SRTlib.send("]},");

        })) {
                    SRTlib.send("]},");

          return;
        }
        n = i.filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$forEachDroppedOrPastedUrl_1942", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return "string" === e.kind && "text/plain" === e.type;
                    SRTlib.send("]},");

        });
        break;
      case "drop":
        n = i.filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$forEachDroppedOrPastedUrl_1943", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return "string" === e.kind && "text/uri-list" === e.type;
                    SRTlib.send("]},");

        });
        break;
      default:
        throw new Error("isDropOrPaste must be either 'drop' or 'paste', but it's " + t);
    }
    n.forEach(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$forEachDroppedOrPastedUrl_1945", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      e.getAsString(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$forEachDroppedOrPastedUrl_1944", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return r(e);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }, _$package_195 = {
    version: "1.5.6"
  }, ___class_193, ___temp_193;
  function ___extends_193() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_193 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply34", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  function ___assertThisInitialized_193(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __Plugin_193 = _$lib_97.Plugin, __h_193 = _$preact_51.h, __RequestClient_193 = _$lib_93.RequestClient;
  function UrlIcon() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return __h_193("svg", {
      "aria-hidden": "true",
      focusable: "false",
      width: "32",
      height: "32",
      viewBox: "0 0 32 32",
      xmlns: "http://www.w3.org/2000/svg"
    }, __h_193("g", {
      fill: "none",
      "fill-rule": "evenodd"
    }, __h_193("rect", {
      fill: "#FF753E",
      width: "32",
      height: "32",
      rx: "16"
    }), __h_193("path", {
      d: "M22.788 15.389l-2.199 2.19a3.184 3.184 0 0 1-.513.437c-.806.584-1.686.876-2.638.876a4.378 4.378 0 0 1-3.519-1.752c-.22-.292-.146-.802.147-1.021.293-.22.806-.146 1.026.146.953 1.313 2.785 1.532 4.105.583a.571.571 0 0 0 .293-.292l2.199-2.189c1.1-1.167 1.1-2.992-.073-4.086a2.976 2.976 0 0 0-4.105 0l-1.246 1.24a.71.71 0 0 1-1.026 0 .703.703 0 0 1 0-1.022l1.246-1.24a4.305 4.305 0 0 1 6.083 0c1.833 1.605 1.906 4.451.22 6.13zm-7.183 5.035l-1.246 1.24a2.976 2.976 0 0 1-4.105 0c-1.172-1.094-1.172-2.991-.073-4.086l2.2-2.19.292-.291c.66-.438 1.393-.657 2.2-.584.805.146 1.465.51 1.905 1.168.22.292.733.365 1.026.146.293-.22.367-.73.147-1.022-.733-.949-1.76-1.532-2.859-1.678-1.1-.22-2.272.073-3.225.802l-.44.438-2.199 2.19c-1.686 1.75-1.612 4.524.074 6.202.88.803 1.979 1.241 3.078 1.241 1.1 0 2.199-.438 3.079-1.24l1.246-1.241a.703.703 0 0 0 0-1.022c-.294-.292-.807-.365-1.1-.073z",
      fill: "#FFF",
      "fill-rule": "nonzero"
    })));
        SRTlib.send("]},");

  }
  var _$lib_193 = (___temp_193 = ___class_193 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_193", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
      if (((n = e.call(this, t, r) || this).id = n.opts.id || "Url", n.title = n.opts.title || "Link", n.type = "acquirer", n.icon = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.icon", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_193(UrlIcon, null);
                SRTlib.send("]},");

      }, n.defaultLocale = {
        strings: {
          import: "Import",
          enterUrlToImport: "Enter URL to import a file",
          failedToFetch: "Companion failed to fetch this URL, please make sure it\u2019s correct",
          enterCorrectUrl: "Incorrect URL: Please make sure you are entering a direct link to a file"
        }
      }, n.opts = ___extends_193({}, {}, {}, r), n.i18nInit(), n.hostname = n.opts.companionUrl, !n.hostname)) throw new Error("Companion hostname is required, please consult https://uppy.io/docs/companion");
            SRTlib.send("]},");

      return (n.getMeta = n.getMeta.bind(___assertThisInitialized_193(n)), n.addFile = n.addFile.bind(___assertThisInitialized_193(n)), n.handleRootDrop = n.handleRootDrop.bind(___assertThisInitialized_193(n)), n.handleRootPaste = n.handleRootPaste.bind(___assertThisInitialized_193(n)), n.client = new __RequestClient_193(t, {
        companionUrl: n.opts.companionUrl,
        companionHeaders: n.opts.companionHeaders || n.opts.serverHeaders
      }), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.setOptions = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.setOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (e.prototype.setOptions.call(this, t), this.i18nInit());
            SRTlib.send("]},");

    }, i.i18nInit = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.i18nInit", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.translator = new _$Translator_200([this.defaultLocale, this.uppy.locale, this.opts.locale]), this.i18n = this.translator.translate.bind(this.translator), this.i18nArray = this.translator.translateArray.bind(this.translator), this.setPluginState());
            SRTlib.send("]},");

    }, i.getFileNameFromUrl = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.getFileNameFromUrl", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e.substring(e.lastIndexOf("/") + 1);
            SRTlib.send("]},");

    }, i.checkIfCorrectURL = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.checkIfCorrectURL", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (!e) {
                SRTlib.send("]},");

        return !1;
      }
      var t = e.match(/^([a-z0-9]+):\/\//)[1];
            SRTlib.send("]},");

      return "http" === t || "https" === t;
            SRTlib.send("]},");

    }, i.addProtocolToURL = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.addProtocolToURL", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return (/^[a-z0-9]+:\/\//).test(e) ? e : "http://" + e;
            SRTlib.send("]},");

    }, i.getMeta = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.getMeta", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return this.client.post("url/meta", {
        url: e
      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.getMeta.ReturnStatement.client.post.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        if (e.error) throw (t.uppy.log("[URL] Error:"), t.uppy.log(e.error), new Error("Failed to fetch the file"));
                SRTlib.send("]},");

        return e;
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.addFile = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.addFile", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
            SRTlib.send("]},");

      return (e = this.addProtocolToURL(e), this.checkIfCorrectURL(e) ? this.getMeta(e).then(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.addFile.ReturnStatement.getMeta.then.then.catch.getMeta.then.then.getMeta.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return {
          source: t.id,
          name: t.getFileNameFromUrl(e),
          type: r.type,
          data: {
            size: r.size
          },
          isRemote: !0,
          body: {
            url: e
          },
          remote: {
            companionUrl: t.opts.companionUrl,
            url: t.hostname + "/url/get",
            body: {
              fileId: e,
              url: e
            },
            providerOptions: t.client.opts
          }
        };
                SRTlib.send("]},");

      }).then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.addFile.ReturnStatement.getMeta.then.then.catch.getMeta.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        t.uppy.log("[Url] Adding remote file");
        try {
          t.uppy.addFile(e);
        } catch (err) {
          err.isRestriction || t.uppy.log(err);
        }
                SRTlib.send("]},");

      }).catch(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.addFile.ReturnStatement.getMeta.then.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (t.uppy.log(e), t.uppy.info({
          message: t.i18n("failedToFetch"),
          details: e
        }, "error", 4e3));
                SRTlib.send("]},");

      }) : (this.uppy.log("[URL] Incorrect URL entered: " + e), void this.uppy.info(this.i18n("enterCorrectUrl"), "error", 4e3)));
            SRTlib.send("]},");

    }, i.handleRootDrop = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.handleRootDrop", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      _$forEachDroppedOrPastedUrl_194(e.dataTransfer, "drop", function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.handleRootDrop._$forEachDroppedOrPastedUrl_194", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (t.uppy.log("[URL] Adding file from dropped url: " + e), t.addFile(e));
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.handleRootPaste = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.handleRootPaste", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var t = this;
      _$forEachDroppedOrPastedUrl_194(e.clipboardData, "paste", function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.handleRootPaste._$forEachDroppedOrPastedUrl_194", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        (t.uppy.log("[URL] Adding file from pasted url: " + e), t.addFile(e));
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.render = function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return __h_193(_$UrlUI_192, {
        i18n: this.i18n,
        addFile: this.addFile
      });
            SRTlib.send("]},");

    }, i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.opts.target;
      e && this.mount(e, this);
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_193.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.unmount();
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_193), ___class_193.VERSION = _$package_195.version, ___temp_193), mimeToExtensions = {
    "audio/mp3": "mp3",
    "audio/ogg": "ogg",
    "audio/webm": "webm",
    "image/gif": "gif",
    "image/heic": "heic",
    "image/heif": "heif",
    "image/jpeg": "jpg",
    "image/png": "png",
    "image/svg+xml": "svg",
    "video/mp4": "mp4",
    "video/ogg": "ogv",
    "video/quicktime": "mov",
    "video/webm": "webm",
    "video/x-matroska": "mkv",
    "video/x-msvideo": "avi"
  }, _$getFileTypeExtension_215 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$getFileTypeExtension_215", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (e = e.replace(/;.*$/, ""), mimeToExtensions[e] || null);
        SRTlib.send("]},");

  }, _$canvasToBlob_201 = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$canvasToBlob_201", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        SRTlib.send("]},");

    return e.toBlob ? new Promise(function (n) {
            SRTlib.send(`{ "anonymous": true, "function": "_$canvasToBlob_201.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      e.toBlob(n, t, r);
            SRTlib.send("]},");

    }) : Promise.resolve().then(function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$canvasToBlob_201.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return _$dataURItoBlob_202(e.toDataURL(t, r), {});
            SRTlib.send("]},");

    });
        SRTlib.send("]},");

  }, _$supportsMediaRecorder_238 = function () {
        SRTlib.send(`{ "anonymous": true, "function": "_$supportsMediaRecorder_238", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return "function" == typeof MediaRecorder && !!MediaRecorder.prototype && "function" == typeof MediaRecorder.prototype.start;
        SRTlib.send("]},");

  }, __h_230 = _$preact_51.h, _$CameraIcon_230 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$CameraIcon_230", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_230("svg", {
      "aria-hidden": "true",
      focusable: "false",
      fill: "#0097DC",
      width: "66",
      height: "55",
      viewBox: "0 0 66 55"
    }, __h_230("path", {
      d: "M57.3 8.433c4.59 0 8.1 3.51 8.1 8.1v29.7c0 4.59-3.51 8.1-8.1 8.1H8.7c-4.59 0-8.1-3.51-8.1-8.1v-29.7c0-4.59 3.51-8.1 8.1-8.1h9.45l4.59-7.02c.54-.54 1.35-1.08 2.16-1.08h16.2c.81 0 1.62.54 2.16 1.08l4.59 7.02h9.45zM33 14.64c-8.62 0-15.393 6.773-15.393 15.393 0 8.62 6.773 15.393 15.393 15.393 8.62 0 15.393-6.773 15.393-15.393 0-8.62-6.773-15.393-15.393-15.393zM33 40c-5.648 0-9.966-4.319-9.966-9.967 0-5.647 4.318-9.966 9.966-9.966s9.966 4.319 9.966 9.966C42.966 35.681 38.648 40 33 40z",
      "fill-rule": "evenodd"
    }));
        SRTlib.send("]},");

  }, __h_235 = _$preact_51.h, _$SnapshotButton_235 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$SnapshotButton_235", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.onSnapshot, r = e.i18n;
        SRTlib.send("]},");

    return __h_235("button", {
      class: "uppy-u-reset uppy-c-btn uppy-Webcam-button uppy-Webcam-button--picture",
      type: "button",
      title: r("takePicture"),
      "aria-label": r("takePicture"),
      onclick: t,
      "data-uppy-super-focusable": !0
    }, _$CameraIcon_230());
        SRTlib.send("]},");

  }, __h_233 = _$preact_51.h, _$RecordButton_233 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$RecordButton_233", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.recording, r = e.onStartRecording, n = e.onStopRecording, i = e.i18n;
        SRTlib.send("]},");

    return t ? __h_233("button", {
      class: "uppy-u-reset uppy-c-btn uppy-Webcam-button uppy-Webcam-button--video",
      type: "button",
      title: i("stopRecording"),
      "aria-label": i("stopRecording"),
      onclick: n,
      "data-uppy-super-focusable": !0
    }, __h_233("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "UppyIcon",
      width: "100",
      height: "100",
      viewBox: "0 0 100 100"
    }, __h_233("rect", {
      x: "15",
      y: "15",
      width: "70",
      height: "70"
    }))) : __h_233("button", {
      class: "uppy-u-reset uppy-c-btn uppy-Webcam-button uppy-Webcam-button--video",
      type: "button",
      title: i("startRecording"),
      "aria-label": i("startRecording"),
      onclick: r,
      "data-uppy-super-focusable": !0
    }, __h_233("svg", {
      "aria-hidden": "true",
      focusable: "false",
      class: "UppyIcon",
      width: "100",
      height: "100",
      viewBox: "0 0 100 100"
    }, __h_233("circle", {
      cx: "50",
      cy: "50",
      r: "40"
    })));
        SRTlib.send("]},");

  }, _$formatSeconds_236 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$formatSeconds_236", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return Math.floor(e / 60) + ":" + String(e % 60).padStart(2, 0);
        SRTlib.send("]},");

  }, __h_234 = _$preact_51.h, _$RecordingLength_234 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$RecordingLength_234", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t = e.recordingLengthSeconds, r = e.i18n, n = _$formatSeconds_236(t);
        SRTlib.send("]},");

    return __h_234("div", {
      class: "uppy-Webcam-recordingLength",
      "aria-label": r("recordingLength", {
        recording_length: n
      })
    }, n);
        SRTlib.send("]},");

  }, __h_231 = _$preact_51.h, __Component_231 = _$preact_51.Component;
  function isModeAvailable(e, t) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        SRTlib.send("]},");

    return -1 !== e.indexOf(t);
        SRTlib.send("]},");

  }
  var CameraScreen = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "CameraScreen", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n() {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return e.apply(this, arguments) || this;
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.componentDidMount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "CameraScreen.ReturnStatement.i.componentDidMount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.props.onFocus();
            SRTlib.send("]},");

    }, i.componentWillUnmount = function () {
            SRTlib.send(`{ "anonymous": true, "function": "CameraScreen.ReturnStatement.i.componentWillUnmount", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.props.onStop();
            SRTlib.send("]},");

    }, i.render = function () {
            SRTlib.send(`{ "anonymous": true, "function": "CameraScreen.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.props.supportsRecording && (isModeAvailable(this.props.modes, "video-only") || isModeAvailable(this.props.modes, "audio-only") || isModeAvailable(this.props.modes, "video-audio")), t = isModeAvailable(this.props.modes, "picture"), r = this.props.supportsRecording && this.props.showRecordingLength;
            SRTlib.send("]},");

      return __h_231("div", {
        class: "uppy uppy-Webcam-container"
      }, __h_231("div", {
        class: "uppy-Webcam-videoContainer"
      }, __h_231("video", {
        class: "uppy-Webcam-video  " + (this.props.mirror ? "uppy-Webcam-video--mirrored" : ""),
        autoplay: !0,
        muted: !0,
        playsinline: !0,
        srcObject: this.props.src || ""
      })), __h_231("div", {
        class: "uppy-Webcam-buttonContainer"
      }, r ? _$RecordingLength_234(this.props) : null, " ", t ? _$SnapshotButton_235(this.props) : null, " ", e ? _$RecordButton_233(this.props) : null));
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Component_231), _$CameraScreen_231 = CameraScreen, __h_232 = _$preact_51.h, _$PermissionsScreen_232 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$PermissionsScreen_232", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return __h_232("div", {
      class: "uppy-Webcam-permissons"
    }, __h_232("div", {
      class: "uppy-Webcam-permissonsIcon"
    }, e.icon()), __h_232("h1", {
      class: "uppy-Webcam-title"
    }, e.hasCamera ? e.i18n("allowAccessTitle") : e.i18n("noCameraTitle")), __h_232("p", null, e.hasCamera ? e.i18n("allowAccessDescription") : e.i18n("noCameraDescription")));
        SRTlib.send("]},");

  }, _$package_239 = {
    version: "1.6.6"
  }, ___class_237, ___temp_237;
  function ___extends_237() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_237 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply35", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  function ___assertThisInitialized_237(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        SRTlib.send("]},");

    return e;
        SRTlib.send("]},");

  }
  var __h_237 = _$preact_51.h, __Plugin_237 = _$lib_97.Plugin;
  function toMimeType(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return "." === e[0] ? _$mimeTypes_225[e.slice(1)] : e;
        SRTlib.send("]},");

  }
  function isVideoMimeType(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (/^video\/[^*]+$/).test(e);
        SRTlib.send("]},");

  }
  function isImageMimeType(e) {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        SRTlib.send("]},");

    return (/^image\/[^*]+$/).test(e);
        SRTlib.send("]},");

  }
  var _$lib_237 = (___temp_237 = ___class_237 = (function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$lib_237", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    var t, r;
    function n(t, r) {
            SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      var n;
      ((n = e.call(this, t, r) || this).mediaDevices = (function () {
                SRTlib.send(`{ "anonymous": true, "function": "mediaDevices", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                    SRTlib.send("]},");

          return navigator.mediaDevices;
        }
        var e = navigator.mozGetUserMedia || navigator.webkitGetUserMedia;
                SRTlib.send("]},");

        return e ? {
          getUserMedia: function (t) {
                        SRTlib.send(`{ "anonymous": true, "function": "mediaDevices.ReturnStatement.getUserMedia", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return new Promise(function (r, n) {
                            SRTlib.send(`{ "anonymous": true, "function": "mediaDevices.ReturnStatement.getUserMedia.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

              e.call(navigator, t, r, n);
                            SRTlib.send("]},");

            });
                        SRTlib.send("]},");

          }
        } : null;
                SRTlib.send("]},");

      })(), n.supportsUserMedia = !!n.mediaDevices, n.protocol = location.protocol.match(/https/i) ? "https" : "http", n.id = n.opts.id || "Webcam", n.title = n.opts.title || "Camera", n.type = "acquirer", n.icon = function () {
                SRTlib.send(`{ "anonymous": true, "function": "n.icon2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return __h_237("svg", {
          "aria-hidden": "true",
          focusable: "false",
          width: "32",
          height: "32",
          viewBox: "0 0 32 32",
          xmlns: "http://www.w3.org/2000/svg"
        }, __h_237("g", {
          fill: "none",
          "fill-rule": "evenodd"
        }, __h_237("rect", {
          fill: "#03BFEF",
          width: "32",
          height: "32",
          rx: "16"
        }), __h_237("path", {
          d: "M22 11c1.133 0 2 .867 2 2v7.333c0 1.134-.867 2-2 2H10c-1.133 0-2-.866-2-2V13c0-1.133.867-2 2-2h2.333l1.134-1.733C13.6 9.133 13.8 9 14 9h4c.2 0 .4.133.533.267L19.667 11H22zm-6 1.533a3.764 3.764 0 0 0-3.8 3.8c0 2.129 1.672 3.801 3.8 3.801s3.8-1.672 3.8-3.8c0-2.13-1.672-3.801-3.8-3.801zm0 6.261c-1.395 0-2.46-1.066-2.46-2.46 0-1.395 1.065-2.461 2.46-2.461s2.46 1.066 2.46 2.46c0 1.395-1.065 2.461-2.46 2.461z",
          fill: "#FFF",
          "fill-rule": "nonzero"
        })));
                SRTlib.send("]},");

      }, n.defaultLocale = {
        strings: {
          smile: "Smile!",
          takePicture: "Take a picture",
          startRecording: "Begin video recording",
          stopRecording: "Stop video recording",
          allowAccessTitle: "Please allow access to your camera",
          allowAccessDescription: "In order to take pictures or record video with your camera, please allow camera access for this site.",
          noCameraTitle: "Camera Not Available",
          noCameraDescription: "In order to take pictures or record video, please connect a camera device",
          recordingStoppedMaxSize: "Recording stopped because the file size is about to exceed the limit",
          recordingLength: "Recording length %{recording_length}"
        }
      });
      var i = {
        onBeforeSnapshot: function () {
                    SRTlib.send(`{ "anonymous": true, "function": "i.onBeforeSnapshot", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                    SRTlib.send("]},");

          return Promise.resolve();
                    SRTlib.send("]},");

        },
        countdown: !1,
        modes: ["video-audio", "video-only", "audio-only", "picture"],
        mirror: !0,
        facingMode: "user",
        preferredImageMimeType: null,
        preferredVideoMimeType: null,
        showRecordingLength: !1
      };
            SRTlib.send("]},");

      return (n.opts = ___extends_237({}, i, {}, r), n.i18nInit(), n.install = n.install.bind(___assertThisInitialized_237(n)), n.setPluginState = n.setPluginState.bind(___assertThisInitialized_237(n)), n.render = n.render.bind(___assertThisInitialized_237(n)), n._start = n._start.bind(___assertThisInitialized_237(n)), n._stop = n._stop.bind(___assertThisInitialized_237(n)), n._takeSnapshot = n._takeSnapshot.bind(___assertThisInitialized_237(n)), n._startRecording = n._startRecording.bind(___assertThisInitialized_237(n)), n._stopRecording = n._stopRecording.bind(___assertThisInitialized_237(n)), n._oneTwoThreeSmile = n._oneTwoThreeSmile.bind(___assertThisInitialized_237(n)), n._focus = n._focus.bind(___assertThisInitialized_237(n)), n.webcamActive = !1, n.opts.countdown && (n.opts.onBeforeSnapshot = n._oneTwoThreeSmile), n);
            SRTlib.send("]},");

    }
    (r = e, (t = n).prototype = Object.create(r.prototype), t.prototype.constructor = t, t.__proto__ = r);
    var i = n.prototype;
        SRTlib.send("]},");

    return (i.setOptions = function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.setOptions", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      (e.prototype.setOptions.call(this, t), this.i18nInit());
            SRTlib.send("]},");

    }, i.i18nInit = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.i18nInit", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.translator = new _$Translator_200([this.defaultLocale, this.uppy.locale, this.opts.locale]), this.i18n = this.translator.translate.bind(this.translator), this.i18nArray = this.translator.translateArray.bind(this.translator), this.setPluginState());
            SRTlib.send("]},");

    }, i.hasCameraCheck = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.hasCameraCheck", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.mediaDevices ? this.mediaDevices.enumerateDevices().then(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.hasCameraCheck.ReturnStatement.mediaDevices.enumerateDevices.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return e.some(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.hasCameraCheck.ReturnStatement.mediaDevices.enumerateDevices.then.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return "videoinput" === e.kind;
                    SRTlib.send("]},");

        });
                SRTlib.send("]},");

      }) : Promise.resolve(!1);
            SRTlib.send("]},");

    }, i.getConstraints = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.getConstraints", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return {
        audio: -1 !== this.opts.modes.indexOf("video-audio") || -1 !== this.opts.modes.indexOf("audio-only"),
        video: !(-1 === this.opts.modes.indexOf("video-audio") && -1 === this.opts.modes.indexOf("video-only") && -1 === this.opts.modes.indexOf("picture")) && ({
          facingMode: this.opts.facingMode
        })
      };
            SRTlib.send("]},");

    }, i._start = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._start", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      if (!this.supportsUserMedia) {
                SRTlib.send("]},");

        return Promise.reject(new Error("Webcam access not supported"));
      }
      this.webcamActive = !0;
      var t = this.getConstraints();
      this.hasCameraCheck().then(function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._start.hasCameraCheck.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return (e.setPluginState({
          hasCamera: r
        }), e.mediaDevices.getUserMedia(t).then(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._start.hasCameraCheck.then.ReturnStatement.e.mediaDevices.getUserMedia.then.catch.e.mediaDevices.getUserMedia.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          (e.stream = t, e.setPluginState({
            cameraReady: !0
          }));
                    SRTlib.send("]},");

        }).catch(function (t) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._start.hasCameraCheck.then.ReturnStatement.e.mediaDevices.getUserMedia.then.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          e.setPluginState({
            cameraError: t
          });
                    SRTlib.send("]},");

        }));
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i._getMediaRecorderOptions = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._getMediaRecorderOptions", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = {};
      if (MediaRecorder.isTypeSupported) {
        var t = this.uppy.opts.restrictions, r = [];
        this.opts.preferredVideoMimeType ? r = [this.opts.preferredVideoMimeType] : t.allowedFileTypes && (r = t.allowedFileTypes.map(toMimeType).filter(isVideoMimeType));
        var n = r.filter(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._getMediaRecorderOptions.n", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                    SRTlib.send("]},");

          return MediaRecorder.isTypeSupported(e) && _$getFileTypeExtension_215(e);
                    SRTlib.send("]},");

        });
        n.length > 0 && (e.mimeType = n[0]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    }, i._startRecording = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._startRecording", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      (this.recorder = new MediaRecorder(this.stream, this._getMediaRecorderOptions()), this.recordingChunks = []);
      var t = !1;
      (this.recorder.addEventListener("dataavailable", function (r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._startRecording.recorder.addEventListener", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.recordingChunks.push(r.data);
        var n = e.uppy.opts.restrictions;
        if (e.recordingChunks.length > 1 && null != n.maxFileSize && !t) {
          var i = e.recordingChunks.reduce(function (e, t) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._startRecording.recorder.addEventListener.i.e.recordingChunks.reduce", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

                        SRTlib.send("]},");

            return e + t.size;
                        SRTlib.send("]},");

          }, 0), o = (i - e.recordingChunks[0].size) / (e.recordingChunks.length - 1) * 3;
          i > Math.max(0, n.maxFileSize - o) && (t = !0, e.uppy.info(e.i18n("recordingStoppedMaxSize"), "warning", 4e3), e._stopRecording());
        }
                SRTlib.send("]},");

      }), this.recorder.start(500), this.opts.showRecordingLength && (this.recordingLengthTimer = setInterval(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._startRecording.recordingLengthTimer.setInterval", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        var t = e.getPluginState().recordingLengthSeconds;
        e.setPluginState({
          recordingLengthSeconds: t + 1
        });
                SRTlib.send("]},");

      }, 1e3)), this.setPluginState({
        isRecording: !0
      }));
            SRTlib.send("]},");

    }, i._stopRecording = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stopRecording", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
            SRTlib.send("]},");

      return new Promise(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stopRecording.ReturnStatement.then.then.then.then.then.then", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        (e.recorder.addEventListener("stop", function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stopRecording.ReturnStatement.then.then.then.then.then.then.e.recorder.addEventListener", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          t();
                    SRTlib.send("]},");

        }), e.recorder.stop(), e.opts.showRecordingLength && (clearInterval(e.recordingLengthTimer), e.setPluginState({
          recordingLengthSeconds: 0
        })));
                SRTlib.send("]},");

      }).then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stopRecording.ReturnStatement.then.then.then.then.then.then2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return (e.setPluginState({
          isRecording: !1
        }), e.getVideo());
                SRTlib.send("]},");

      }).then(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stopRecording.ReturnStatement.then.then.then.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        try {
          e.uppy.addFile(t);
        } catch (err) {
          err.isRestriction || e.uppy.log(err);
        }
                SRTlib.send("]},");

      }).then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stopRecording.ReturnStatement.then.then.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        (e.recordingChunks = null, e.recorder = null);
                SRTlib.send("]},");

      }, function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stopRecording.ReturnStatement.then.then.then2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        throw (e.recordingChunks = null, e.recorder = null, t);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i._stop = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stop", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.stream.getAudioTracks().forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stop.stream.getAudioTracks.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.stop();
                SRTlib.send("]},");

      }), this.stream.getVideoTracks().forEach(function (e) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._stop.stream.getVideoTracks.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.stop();
                SRTlib.send("]},");

      }), this.webcamActive = !1, this.stream = null);
            SRTlib.send("]},");

    }, i._getVideoElement = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._getVideoElement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

            SRTlib.send("]},");

      return this.el.querySelector(".uppy-Webcam-video");
            SRTlib.send("]},");

    }, i._oneTwoThreeSmile = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._oneTwoThreeSmile", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
            SRTlib.send("]},");

      return new Promise(function (t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._oneTwoThreeSmile.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

        var n = e.opts.countdown, i = setInterval(function () {
                    SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._oneTwoThreeSmile.ReturnStatement.i.setInterval", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

          if (!e.webcamActive) {
                        SRTlib.send("]},");

            return (clearInterval(i), e.captureInProgress = !1, r(new Error("Webcam is not active")));
          }
          n > 0 ? (e.uppy.info(n + "...", "warning", 800), n--) : (clearInterval(i), e.uppy.info(e.i18n("smile"), "success", 1500), setTimeout(function () {
                        SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._oneTwoThreeSmile.ReturnStatement.i.setInterval.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                        SRTlib.send("]},");

            return t();
                        SRTlib.send("]},");

          }, 1500));
                    SRTlib.send("]},");

        }, 1e3);
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i._takeSnapshot = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._takeSnapshot", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      this.captureInProgress || (this.captureInProgress = !0, this.opts.onBeforeSnapshot().catch(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._takeSnapshot.opts.onBeforeSnapshot.catch.then.then.opts.onBeforeSnapshot.catch.then.opts.onBeforeSnapshot.catch", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        var r = "object" == typeof t ? t.message : t;
                SRTlib.send("]},");

        return (e.uppy.info(r, "error", 5e3), Promise.reject(new Error("onBeforeSnapshot: " + r)));
                SRTlib.send("]},");

      }).then(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._takeSnapshot.opts.onBeforeSnapshot.catch.then.then.opts.onBeforeSnapshot.catch.then", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return e._getImage();
                SRTlib.send("]},");

      }).then(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._takeSnapshot.opts.onBeforeSnapshot.catch.then.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        e.captureInProgress = !1;
        try {
          e.uppy.addFile(t);
        } catch (err) {
          err.isRestriction || e.uppy.log(err);
        }
                SRTlib.send("]},");

      }, function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._takeSnapshot.opts.onBeforeSnapshot.catch.then.then2", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        throw (e.captureInProgress = !1, t);
                SRTlib.send("]},");

      }));
            SRTlib.send("]},");

    }, i._getImage = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._getImage", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this, t = this._getVideoElement();
      if (!t) {
                SRTlib.send("]},");

        return Promise.reject(new Error("No video element found, likely due to the Webcam tab being closed."));
      }
      var r = t.videoWidth, n = t.videoHeight, i = document.createElement("canvas");
      (i.width = r, i.height = n, i.getContext("2d").drawImage(t, 0, 0));
      var o = this.uppy.opts.restrictions, s = [];
      this.opts.preferredImageMimeType ? s = [this.opts.preferredImageMimeType] : o.allowedFileTypes && (s = o.allowedFileTypes.map(toMimeType).filter(isImageMimeType));
      var a = s[0] || "image/jpeg", u = _$getFileTypeExtension_215(a) || "jpg", l = "cam-" + Date.now() + "." + u;
            SRTlib.send("]},");

      return _$canvasToBlob_201(i, a).then(function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._getImage.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                SRTlib.send("]},");

        return {
          source: e.id,
          name: l,
          data: new Blob([t], {
            type: a
          }),
          type: a
        };
                SRTlib.send("]},");

      });
            SRTlib.send("]},");

    }, i.getVideo = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.getVideo", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this.recordingChunks[0].type, t = _$getFileTypeExtension_215(e);
      if (!t) {
                SRTlib.send("]},");

        return Promise.reject(new Error('Could not retrieve recording: Unsupported media type "' + e + '"'));
      }
      var r = "webcam-" + Date.now() + "." + t, n = new Blob(this.recordingChunks, {
        type: e
      }), i = {
        source: this.id,
        name: r,
        data: new Blob([n], {
          type: e
        }),
        type: e
      };
            SRTlib.send("]},");

      return Promise.resolve(i);
            SRTlib.send("]},");

    }, i._focus = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._focus", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var e = this;
      this.opts.countdown && setTimeout(function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i._focus.setTimeout", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        e.uppy.info(e.i18n("smile"), "success", 1500);
                SRTlib.send("]},");

      }, 1e3);
            SRTlib.send("]},");

    }, i.render = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.render", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.webcamActive || this._start();
      var e = this.getPluginState();
            SRTlib.send("]},");

      return e.cameraReady && e.hasCamera ? __h_237(_$CameraScreen_231, ___extends_237({}, e, {
        onSnapshot: this._takeSnapshot,
        onStartRecording: this._startRecording,
        onStopRecording: this._stopRecording,
        onFocus: this._focus,
        onStop: this._stop,
        i18n: this.i18n,
        modes: this.opts.modes,
        showRecordingLength: this.opts.showRecordingLength,
        supportsRecording: _$supportsMediaRecorder_238(),
        recording: e.isRecording,
        mirror: this.opts.mirror,
        src: this.stream
      })) : __h_237(_$PermissionsScreen_232, {
        icon: _$CameraIcon_230,
        i18n: this.i18n,
        hasCamera: e.hasCamera
      });
            SRTlib.send("]},");

    }, i.install = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.install", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      this.setPluginState({
        cameraReady: !1,
        recordingLengthSeconds: 0
      });
      var e = this.opts.target;
      e && this.mount(e, this);
            SRTlib.send("]},");

    }, i.uninstall = function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$lib_237.ReturnStatement.i.uninstall", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      (this.stream && this._stop(), this.unmount());
            SRTlib.send("]},");

    }, n);
        SRTlib.send("]},");

  })(__Plugin_237), ___class_237.VERSION = _$package_239.version, ___temp_237);
  function ___extends_161() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_161 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply36", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var remoteProviders = {
    dropbox: _$lib_128,
    "google-drive": _$lib_135,
    instagram: _$lib_139,
    facebook: _$lib_130,
    onedrive: _$lib_141,
    url: _$lib_193
  }, localProviders = {
    webcam: _$lib_237
  }, remoteProviderOptionNames = ["companionUrl", "companionAllowedHosts", "companionHeaders", "serverHeaders", "target"], localProviderOptionNames = ["target"], _$addProviders_161 = function (e, t, r) {
        SRTlib.send(`{ "anonymous": true, "function": "_$addProviders_1616", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

    (void 0 === r && (r = {}), t.forEach(function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$addProviders_1615", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (_$hasProperty_219(remoteProviders, t)) !(function (e, t, r) {
                SRTlib.send(`{ "anonymous": true, "function": "_$addProviders_1612", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

        var n = remoteProviders[t], i = {
          companionUrl: _$lib_186.COMPANION,
          companionAllowedHosts: _$lib_186.COMPANION_PATTERN
        };
        (remoteProviderOptionNames.forEach(function (e) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$addProviders_161", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

          _$hasProperty_219(r, e) && (i[e] = r[e]);
                    SRTlib.send("]},");

        }), "object" == typeof r[t] && ___extends_161(i, r[t]), e.use(n, i));
                SRTlib.send("]},");

      })(e, t, r); else {
        if (!_$hasProperty_219(localProviders, t)) {
          var n = [].concat(Object.keys(remoteProviders), Object.keys(localProviders)).sort().map(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$addProviders_161.n.concat.sort.map.join.concat.sort.map", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

                        SRTlib.send("]},");

            return "'" + e + "'";
                        SRTlib.send("]},");

          }).join(", ");
          throw new Error("Unexpected provider '" + t + "', expected one of [" + n + "]");
        }
        !(function (e, t, r) {
                    SRTlib.send(`{ "anonymous": true, "function": "_$addProviders_1614", "fileName": "${__filename}", "paramsNumber": 3, "calls" : [`);

          var n = localProviders[t], i = {};
          (localProviderOptionNames.forEach(function (e) {
                        SRTlib.send(`{ "anonymous": true, "function": "_$addProviders_1613", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            _$hasProperty_219(r, e) && (i[e] = r[e]);
                        SRTlib.send("]},");

          }), "object" == typeof r[t] && ___extends_161(i, r[t]), e.use(n, i));
                    SRTlib.send("]},");

        })(e, t, r);
      }
            SRTlib.send("]},");

    }));
        SRTlib.send("]},");

  };
  function ___extends_165() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_165 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply37", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var defaultLocaleStrings = {
    chooseFiles: "Choose files"
  }, _$form_165 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$form_165", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    if (!t) throw new TypeError("robodog.form: must provide an options object");
    var r, n;
    t = ___extends_165({}, t, {
      locale: (r = defaultLocaleStrings, n = t.locale, void 0 === n && (n = {}), ___extends_165({}, n, {
        strings: ___extends_165({}, r, {}, n.strings || ({}))
      }))
    });
    var i = _$lib_97(t);
    (_$addTransloaditPlugin_162(i, t), i.use(_$TransloaditFormResult_158, {
      target: e,
      transloaditPluginId: "Transloadit",
      name: "transloadit"
    }));
    var o = !0;
    _$hasProperty_219(t, "submitOnSuccess") && (o = !!t.submitOnSuccess);
    var s = {
      target: e,
      triggerUploadOnSubmit: !0,
      submitOnSuccess: o,
      addResultToForm: !1
    };
    if ((_$hasProperty_219(t, "triggerUploadOnSubmit") && (s.triggerUploadOnSubmit = t.triggerUploadOnSubmit), i.use(_$lib_132, s), t.dashboard || t.modal)) {
      var a = {
        id: "form:Dashboard",
        target: _$findDOMElement_205(t.dashboard) || document.body
      };
      if (t.modal) {
        var u = document.createElement("button");
        (u.textContent = i.i18n("chooseFiles"), u.type = "button");
        var l = _$findDOMElement_205('input[type="file"]', _$findDOMElement_205(e));
        (l.parentNode.replaceChild(u, l), a.inline = !1, a.trigger = u);
      } else (a.inline = !0, a.hideUploadButton = !0);
      (_$addDashboardPlugin_160(i, t, a), Array.isArray(t.providers) && _$addProviders_161(i, t.providers, ___extends_165({}, t, {
        target: i.getPlugin("form:Dashboard")
      })));
    } else i.use(_$AttachFileInputs_157, {
      target: e
    });
        SRTlib.send("]},");

    return (t.statusBar && i.use(_$lib_174, {
      target: t.statusBar,
      hideUploadButton: !0,
      hideAfterFinish: !0,
      hideRetryButton: !0,
      hidePauseResumeButtons: !0,
      hideCancelButtons: !0
    }), i);
        SRTlib.send("]},");

  };
  function ___extends_163() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_163 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply38", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var eventNames = {
    onFileAdded: "file-added",
    onFileRemoved: "file-removed",
    onImportError: "transloadit:import-error",
    onAssemblyCreated: "transloadit:assembly-created",
    onAssemblyExecuting: "transloadit:assembly-executing",
    onAssemblyError: "transloadit:assembly-error",
    onAssemblyComplete: "transloadit:complete",
    onResult: "transloadit:result",
    onStart: "upload",
    onPause: "pause-all",
    onFilePause: "upload-pause",
    onCancel: "cancel-all",
    onError: "error",
    onFileCancel: "upload-cancel",
    onFileProgress: "upload-progress",
    onFileError: "upload-error",
    onUploaded: "transloadit:upload",
    onComplete: "complete"
  }, uppyOptionNames = ["autoProceed", "restrictions", "meta", "onBeforeFileAdded", "onBeforeUpload", "debug"], _$createUppy_163 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$createUppy_1632", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    void 0 === t && (t = {});
    var r = {};
    (uppyOptionNames.forEach(function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$createUppy_163", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      _$hasProperty_219(e, t) && (r[t] = e[t]);
            SRTlib.send("]},");

    }), ___extends_163(r, t));
    var n = _$lib_97(r);
        SRTlib.send("]},");

    return (Object.keys(eventNames).forEach(function (t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$createUppy_163.ReturnStatement.forEach", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      var r = eventNames[t];
      "function" == typeof e[t] && n.on(r, e[t]);
            SRTlib.send("]},");

    }), "function" == typeof e.onProgress && n.on("upload-progress", function () {
            SRTlib.send(`{ "anonymous": true, "function": "_$createUppy_163.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

      var t = n.getState().totalProgress;
      e.onProgress.call(n, t);
            SRTlib.send("]},");

    }), n);
        SRTlib.send("]},");

  };
  function ___extends_164() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_164 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply39", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var _$dashboard_164 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$dashboard_164", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    void 0 === t && (t = {});
    var r = null == t.inline || t.inline, n = _$createUppy_163(t);
        SRTlib.send("]},");

    return (_$addTransloaditPlugin_162(n, t), _$addDashboardPlugin_160(n, t, {
      id: "Dashboard",
      inline: r,
      target: e,
      closeAfterFinish: !1
    }), Array.isArray(t.providers) && _$addProviders_161(n, t.providers, ___extends_164({}, t, {
      target: n.getPlugin("Dashboard")
    })), n);
        SRTlib.send("]},");

  };
  function ___extends_167() {
        SRTlib.send(`{ "anonymous": false, "function": "${arguments.callee.name}", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

        SRTlib.send("]},");

    return (___extends_167 = Object.assign || (function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "ReturnStatement.apply40", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    })).apply(this, arguments);
        SRTlib.send("]},");

  }
  var CANCEL = {}, _$pick_167 = function (e) {
        SRTlib.send(`{ "anonymous": true, "function": "_$pick_167", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

    void 0 === e && (e = {});
    var t = e.target || document.body, r = _$createUppy_163(e, {
      allowMultipleUploads: !1
    });
        SRTlib.send("]},");

    return (_$addTransloaditPlugin_162(r, e), _$addDashboardPlugin_160(r, e, {
      id: "pick",
      target: t,
      closeAfterFinish: !0
    }), Array.isArray(e.providers) && _$addProviders_161(r, e.providers, ___extends_167({}, e, {
      target: r.getPlugin("pick")
    })), new Promise(function (e, t) {
            SRTlib.send(`{ "anonymous": true, "function": "_$pick_167.ReturnStatement.then3", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

      (r.on("complete", function (t) {
                SRTlib.send(`{ "anonymous": true, "function": "_$pick_167.ReturnStatement.then", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

        0 === t.failed.length && e(t);
                SRTlib.send("]},");

      }), r.on("error", t), r.on("cancel-all", function () {
                SRTlib.send(`{ "anonymous": true, "function": "_$pick_167.ReturnStatement.then2", "fileName": "${__filename}", "paramsNumber": 0, "calls" : [`);

                SRTlib.send("]},");

        return t(CANCEL);
                SRTlib.send("]},");

      }), r.getPlugin("pick").openModal());
            SRTlib.send("]},");

    }).then(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$pick_167.ReturnStatement.then4", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

            SRTlib.send("]},");

      return e;
            SRTlib.send("]},");

    }, function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$pick_167.ReturnStatement.then5", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      if (e === CANCEL) {
                SRTlib.send("]},");

        return (r.getPlugin("pick").requestCloseModal(), null);
      }
      throw e;
            SRTlib.send("]},");

    }));
        SRTlib.send("]},");

  }, _$upload_168 = function (e, t) {
        SRTlib.send(`{ "anonymous": true, "function": "_$upload_168", "fileName": "${__filename}", "paramsNumber": 2, "calls" : [`);

    (void 0 === t && (t = {}), Array.isArray(e) || "number" != typeof e.length || (e = _$toArray_229(e)));
    var r = _$createUppy_163(t, {
      allowMultipleUploads: !1
    });
        SRTlib.send("]},");

    return (_$addTransloaditPlugin_162(r, t), e.forEach(function (e) {
            SRTlib.send(`{ "anonymous": true, "function": "_$upload_168.ReturnStatement", "fileName": "${__filename}", "paramsNumber": 1, "calls" : [`);

      r.addFile({
        data: e,
        type: e.type,
        name: e.name,
        meta: e.meta || ({})
      });
            SRTlib.send("]},");

    }), r.upload());
        SRTlib.send("]},");

  }, _$package_171 = {
    version: "1.6.7"
  }, _$lib_166 = {
    dashboard: _$dashboard_164,
    form: _$form_165,
    pick: _$pick_167,
    upload: _$upload_168,
    VERSION: _$package_171.version
  }, _$bundle_156 = {};
    SRTlib.send("]},");

  return (_$bundle_156 = _$lib_166, _$bundle_156);
    SRTlib.send("]},");

});
